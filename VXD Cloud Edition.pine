Script Name: VXD Cloud Edition
Author: Vvaz_
Description: VXD Cloud Edition.
to overcome sideways market conditions this cloud configured for  low timeframe.
every TA is same as VXD Supercycle but show as cloud.

 Symbols on chart show Premium and Discount Prices
    X-Cross = Engulfing Candle with weak volume .
    O-circle - Engulfing Candle with strong volume .

 Pivot point and Rejected Block
    Pivot show...
PineScript code:

Pine Script™ strategy
VXD Cloud Edition
//  ©  Vvaz_
//@version=5
//This  Strategy  Combined  the  following  indicators  and  conditioning  by  me
//ATR  ,  RSI  ,  EMA  ,  SMA  ,  Linear  regression  curve  and  Andean  Oscillator
strategy("VXD  Cloud",  "VXD",  overlay=true  ,  initial_capital=100  ,currency  =  currency.USD  ,  pyramiding  =  1  ,  process_orders_on_close=true  ,calc_on_every_tick=  false)
//  INPUT  BACKTEST  RANGE
var  string  BTR1                  =  '════════  INPUT  BACKTEST  TIME  RANGE  ════════'
i_startTime                          =  input.time(defval  =  timestamp("01  Jan  1945  00:00  +0000"),  title  =  "Start",  inline="timestart",  group=BTR1)
i_endTime                              =  input.time(defval  =  timestamp("01  Jan  2074  23:59  +0000"),  title  =  "End",  inline="timeend",  group=BTR1)
timeCond                                =  (time  >  i_startTime)  and  (time  <  i_endTime)
//  Strategy  Setting
leverage                                =  input.bool(title="Use  Leverage?",  defval  =  true  ,  group='═  Strategy  Setting  ═',  tooltip  =  'If  use  "Position  size"  can  be  larger  than  Equity')
riskPer                                  =  input.int(10,  "Risk",  minval  =  1,  group='═  Strategy  Setting  ═',  tooltip  =  'Lost  per  trade',inline='risk')
risktype                                =  input.string('$',  "",  options=['$','%']  ,group='═  Strategy  Setting  ═',inline='risk')
cond0                                      =  'Break  Cloud  +  Pivot'  ,  cond1  =  'Break  Cloud  +  Pivot  +  Subhag  Filter'  ,  cond2  =  'Cloud-MA(New)'
conditype                              =  input.string(cond2,  "Order  Condition",  options=[cond0,cond1,  cond2]  ,group='═  Strategy  Setting  ═')
uselong                                  =  input.bool(title="Open  Buy?",  defval  =  true  ,  group='═  Strategy  Setting  ═')
useshort                                =  input.bool(title="Open  Sell?",  defval  =  true  ,  group='═  Strategy  Setting  ═')
useSL                                      =  input.bool(title="Use  Take  Profit/StopLoss?",  defval  =  true  ,  group='═  Strategy  Setting  ═',inline='Set')
useSLbox                                      =  input.bool(title="Show  Profit/StopLoss  Box?",  defval  =  false  ,  group='═  Strategy  Setting  ═')
useSLcl                                  =  input.color(defval=color.new(color.orange,0),  title='Color',  inline='Set',  group='═  Strategy  Setting  ═')
rrPer                                      =  input.float(3.00,  "Risk:Reward  TP1",  minval  =  1,  step=0.1,  group='═  Strategy  Setting  ═',inline='rr')
rrPer2                                    =  input.float(4.00,  "TP2",  minval  =  1,  step=0.1,  group='═  Strategy  Setting  ═',inline='rr')
TPper                                      =  input.int(50,  "Equity  %  Take  Profit  TP1",  minval  =  0  ,maxval  =  100,  step=5,  group='═  Strategy  Setting  ═',  tooltip='Take  a  snack  and  let  profit  run.',inline='tp%')
TPper2                                    =  input.int(100,  "TP2",  minval  =  0  ,maxval  =  100,  step=5,  group='═  Strategy  Setting  ═',inline='tp%')
/////////////////////////    ATR    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Periods                                  =  input.int(title="ATR  Period",  defval=12  ,group='═  ATR  Setting  ═')
Multiplier                            =  input.float(title="ATR  Multiplier",  step=0.1,  defval=1.6,group='═  ATR  Setting  ═')
ATR                                          =  ta.sma(ta.tr,Periods)
downT                                      =  high  +  ATR  *  Multiplier
upT                                          =  low    -  ATR  *  Multiplier
[supertrend,  direction]  =  ta.supertrend(Multiplier,  Periods)
/////////////////////////    RSI    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
LengthRSI                              =  input.int(25,'RSI',  minval=1,  group='═  RSI  Setting  ═')
rsibb                                      =  ta.rsi(close,LengthRSI)
/////////////////////////    Andean  Oscillator      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
LengthAO                              =  input.int(30,'Length',  minval=1,  group='═  Andean  Oscillator  Setting  ═')
var  alpha  =  2/(LengthAO+1)
var  up1  =  0.,var  up2  =  0.
var  dn1  =  0.,var  dn2  =  0.
C  =  close  ,  O  =  open
up1  :=  nz(math.max(C,  O,  up1[1]  -  (up1[1]  -  C)  *  alpha),  C)
up2  :=  nz(math.max(C  *  C,  O  *  O,  up2[1]  -  (up2[1]  -  C  *  C)  *  alpha),  C  *  C)
dn1  :=  nz(math.min(C,  O,  dn1[1]  +  (C  -  dn1[1])  *  alpha),  C)
dn2  :=  nz(math.min(C  *  C,  O  *  O,  dn2[1]  +  (C  *  C  -  dn2[1])  *  alpha),  C  *  C)
//Components
bull  =  math.sqrt(dn2  -  dn1  *  dn1)
bear  =  math.sqrt(up2  -  up1  *  up1)
/////////////////////////    MA    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
LengthMA                                =  input.int(30,'EMA  fast',  minval=1,  group='═  MA  Setting  ═',  tooltip  =  'Act  as  Trend  line')
sma2cl                                    =  input.color(defval=color.new(color.purple,0),  title='EMA  Slow',  group='═  MA  Setting  ═'  ,inline  =  'sma200')
LengthMA2                              =  input.int(200,'Period',  minval=1,  group='═  MA  Setting  ═',inline  =  'sma200')
float  MA_1                            =  ta.ema(close,  LengthMA)
MA_2                                        =  ta.ema(close,  LengthMA2)
//////////////////////////  Linear  regression  curve    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
length      =input.int(30,minval=1,group='═SubhagSetting═')
smoothing=input.int(30,minval=1,group='═SubhagSetting═')
linreg=ta.ema(ta.linreg(close,length,0),smoothing)
isUplinreg=ta.rising(linreg,2),isDnlinreg=ta.falling(linreg,2)
hullColor=isUplinreg?color.green:isDnlinreg?color.red:color.yellow
/////////////////////////PivotSetting/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
plotPVT=input.bool(defval=true,title='PlotPivots',group='═Pivots═')
pivotLookup=input.int(defval=5,minval=1,maxval=8,title='PivotLookup',group='═Pivots═',tooltip='Minimum=1,Maximum=8')
pivotsizing=input.int(defval=50,minval=1,maxval=100,title='Pivotbarsbackforsizing',group='═Pivots═',tooltip='Minimum=1,Maximum=100')
plotInThePast=input(false,"PlotWhenPivotisDetected",group='═Pivots═')
pvtTopColor=input.color(defval=color.new(#76b579,10),title='PivotTopColor',group='═Pivots═',inline='PVTTopColor')
pvtBottomColor=input.color(defval=color.new(#d85884,10),title='PivotBottomColor',group='═Pivots═',inline='PVTTopColor')
////////////////////////////////////HighVolumeBarsSetting//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
plotHVB=input.bool(defval=true,title='PlotHVB',group='═HighVolumeBar═',tooltip='Acandlewheretheaveragevolumeishigherthanlastfewbars.')
hvbBullColor=input.color(defval=color.new(color.green,0),title='BullishHVBColor',inline='SetCustomColor',group='═HighVolumeBar═')
hvbBearColor=input.color(defval=color.new(color.orange,0),title='BearishHVBColor',inline='SetCustomColor',group='═HighVolumeBar═')
hvbEMAPeriod=input.int(defval=6,minval=1,title='VolumeEMAPeriod',group='═HighVolumeBar═')
hvbMultiplier=input.float(defval=1.2,title='VolumeMultiplier',minval=1,maxval=100,group='═HighVolumeBar═')
////////////////////////////////////CloudSetting//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
showcloud=input.bool(title="ShowCloud?",defval=true,group='═CloudSetting═')
clhicl=input.color(defval=color.new(color.green,100),title='CloudHighColor',group='═CloudSetting═')
cllocl=input.color(defval=color.new(color.red,100),title='CloudLowColor',group='═CloudSetting═')
clbgclbull=input.color(defval=color.green,title='BullCloudColor',group='═CloudSetting═')
clbgclbear=input.color(defval=color.red,title='BearCloudColor',group='═CloudSetting═')
clbgclsway=input.color(defval=color.yellow,title='SidewayCloudColor',group='═CloudSetting═')
cltranpl=input.int(defval=80,title='Cloudtransparent',group='═CloudSetting═')
///////////////////////////////definetrend/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
AlphaTrend=0.0,CloudMA=0.0,cloudtrend=0,zonecl=color.white,ATcl=color.new(color.yellow,0)
//cloud
AlphaTrend:=conditype==cond2?(rsibb>=50?upT<nz(AlphaTrend[1])?nz(AlphaTrend[1]):upT:downT>nz(AlphaTrend[1])?nz(AlphaTrend[1]):downT):supertrend
fastl=ta.ema(close,2)
clohi=math.max(MA_1,linreg,AlphaTrend[2])
clolo=math.min(MA_1,linreg,AlphaTrend[2])
greenzone=close>clohi
redzone=close<clolo
greenzoneB=(close>clohi)andisUplinreg
redzoneB=(close<clolo)andisDnlinreg
//CloudMA
CloudMA:=(bull>bear)?clolo<nz(CloudMA[1])?nz(CloudMA[1]):clolo:(bear>bull)?clohi>nz(CloudMA[1])?nz(CloudMA[1]):clohi:nz(CloudMA[1])
ATisup=ta.rising(CloudMA,2)
ATisdn=ta.falling(CloudMA,2)
cloudtrend:=ATisup?1:ATisdn?-1:cloudtrend[1]
ATcl:=ATisup?clbgclbull:ATisdn?clbgclbear:CloudMA[1]==CloudMA?clbgclsway:ATcl[1]
//plotcloud
kline=plot(CloudMA,color=color.new(ATcl,0),linewidth=2)
zonecl:=greenzoneBand(conditype==cond1)?color.new(clbgclbull,cltranpl):redzoneBand(conditype==cond1)?color.new(clbgclbear,cltranpl):greenzoneand(conditype==cond0)?color.new(clbgclbull,cltranpl):redzoneand(conditype==cond0)?color.new(clbgclbear,cltranpl):(conditype==cond2)?color.new(ATcl,cltranpl):zonecl[1]
main1=plot(clohi,title="CloudHigh",color=clhicl,linewidth=1)
main2=plot(clolo,title="Cloudlow",color=cllocl,linewidth=1)
fill(main1,main2,showcloud?zonecl:na)
main3=plot(MA_2,title="SMA",color=sma2cl,linewidth=2)
////////////////////Pivots////////////////////
hih=ta.pivothigh(high,pivotLookup,pivotLookup)
lol=ta.pivotlow(low,pivotLookup,pivotLookup)
top=ta.valuewhen(hih,high[pivotLookup],0)
bottom=ta.valuewhen(lol,low[pivotLookup],0)
pvtop=plot(top,offset=plotInThePast?0:-pivotLookup,linewidth=1,color=(top!=top[1]?na:(plotPVT?pvtTopColor:na)),title="PivotTop")
pvdow=plot(bottom,offset=plotInThePast?0:-pivotLookup,linewidth=1,color=(bottom!=bottom[1]?na:(plotPVT?pvtBottomColor:na)),title="PivotBottom")
//////////////////HighVolumeBars//////////////////
volEma=ta.sma(volume,hvbEMAPeriod)
isHighVolume=volume>(hvbMultiplier*volEma)
//Functions
isUp(index)=>
close[index]>open[index]
isDown(index)=>
close[index]<open[index]
barcolor(plotHVBandisUp(0)andisHighVolume?hvbBullColor:na,title="BullishHVB")
barcolor(plotHVBandisDown(0)andisHighVolume?hvbBearColor:na,title="BearishHVB")
//////////////////////////////////Strategycondition////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
position_size=strategy.position_size,Eqty=strategy.equity,lotsize=0.0,RR0=0.0,RR1=0.0,SLbuy=0.0,SLsell=0.0
openoncel=strategy.opentrades==0or(position_size<=0)
openonces=strategy.opentrades==0or(position_size>=0)
exitshort=(conditype==cond2)?(ta.change(cloudtrend)andcloudtrend==1):(close>clohi)and(close>top)
exitlong=(conditype==cond2)?(ta.change(cloudtrend)andcloudtrend==-1):(close<clolo)and(close<bottom)
//sizingbyswinghighandlow
highest=ta.highest(top,pivotsizing)
lowest=ta.lowest(bottom,pivotsizing)
percentrisk=risktype=='%'?(riskPer/100)*Eqty:riskPer
////condition
LongCondition=openonceland(close>top)andgreenzoneandtimeCond
LongConditionB=openonceland(close>top)andgreenzoneBandtimeCond
ShortCondition=openoncesand(close<bottom)andredzoneandtimeCond
ShortConditionB=openoncesand(close<bottom)andredzoneBandtimeCond
LongConditionC=(cloudtrend>0)andopenoncelandgreenzoneandtimeCond
ShortConditionC=(cloudtrend<0)andopenoncesandredzoneandtimeCond
actionbull=(conditype==cond1)?(LongConditionB):(conditype==cond0)?(LongCondition):(conditype==cond2)?(LongConditionC):false
actionbear=(conditype==cond1)?(ShortConditionB):(conditype==cond0)?(ShortCondition):(conditype==cond2)?(ShortConditionC):false
changetbull=ta.change(actionbull),changetbear=ta.change(actionbear),buyprice=0.0,sellprice=0.0,mapast=0.0,openprice=strategy.opentrades.entry_price(0),TPbear=0.0,TPbull=0.0,onebuy=0,onesell=0,TPbull2=0.0,TPbear2=0.0,stat_H=0.0,stat_L=0.0
lotsize:=changetbull?math.abs((percentrisk)/(close-lowest)):changetbear?math.abs((percentrisk)/(highest-close)):lotsize[1]
whilenotleverageand(lotsize*close)>Eqty
lotsize:=lotsize/2
lotsize
buyprice:=position_size>=0?changetbull?openprice:buyprice[1]:na
sellprice:=position_size<=0?changetbear?openprice:sellprice[1]:na
RR1:=changetbull?buyprice*(1+(((openprice-lowest)/openprice))*1):changetbear?sellprice*(1-(((highest-openprice)/openprice))*1):RR1[1]
TPbull:=changetbull?buyprice*(1+(((openprice-lowest)/openprice))*rrPer):(position_size>0)?TPbull[1]:(position_size<0)?0.0:0.0
TPbull2:=changetbull?buyprice*(1+(((openprice-lowest)/openprice))*rrPer2):(position_size>0)?TPbull2[1]:(position_size<0)?0.0:0.0
TPbear:=changetbear?sellprice*(1-(((highest-openprice)/openprice))*rrPer):(position_size<0)?TPbear[1]:(position_size>0)?0.0:0.0
TPbear2:=changetbear?sellprice*(1-(((highest-openprice)/openprice))*rrPer2):(position_size<0)?TPbear2[1]:(position_size>0)?0.0:0.0
//stat
stat_H:=(position_size!=0)?high>high[1]?high:stat_H[1]:high
stat_L:=(position_size!=0)?low<low[1]?low:stat_L[1]:low
SLbuy:=exitshort?lowest:(position_size>0)and(stat_H>RR1)?buyprice:SLbuy[1]
SLsell:=exitlong?highest:(position_size<0)and(stat_L<RR1)?sellprice:SLsell[1]
isslbuy=ta.crossunder(stat_L,SLbuy),isslsell=ta.crossover(stat_H,SLsell)
onebuy:=(cloudtrend[1]!=1)and(cloudtrend==1)?1:isslbuy?0:(position_size>0)?1:(cloudtrend==-1)?0:onebuy[1]
onesell:=(cloudtrend[1]!=-1)and(cloudtrend==-1)?1:isslsell?0:(position_size<0)?1:(cloudtrend==1)?0:onesell[1]
//plot
linetp=plot(useSLbox?(useSLand(position_size>0)?TPbull:useSLand(position_size<0)?TPbear:na):useSLandchangetbull?TPbull:useSLandchangetbear?TPbear:na,'TP',useSLbox?color.green:useSLcl,style=plot.style_linebr,linewidth=1)
linetp2=plot(useSLbox?(useSLand(position_size>0)?TPbull2:useSLand(position_size<0)?TPbear2:na):useSLandchangetbull?TPbull2:useSLandchangetbear?TPbear2:na,'TP2',useSLbox?color.green:useSLcl,style=plot.style_linebr,linewidth=1)
lintsl=plot(useSLbox?(useSLand(position_size>0)?SLbuy:useSLand(position_size<0)?SLsell:na):useSLandchangetbull?SLbuy:useSLandchangetbear?SLsell:na,'SL',useSLbox?color.red:useSLcl,style=plot.style_linebr,linewidth=1)
lineentry=plot(useSLboxand(position_size>0)?buyprice:useSLboxand(position_size<0)?sellprice:na,'Entry',color.white,style=plot.style_linebr,linewidth=1)
fill(lineentry,linetp2,color.new(color.green,80))
fill(lineentry,lintsl,color.new(color.red,80))
//stringmessagethankto@chaiyapruekr
//passphrase='xxxx'
stringAlert_OpenLong='LongEntry!on{{ticker}}\nBuy@{{strategy.order.price}}\nSize={{strategy.order.contracts}}\nSL@'+str.tostring(SLbuy)
stringAlert_OpenShort='ShortEntry!on{{ticker}}\nSell@{{strategy.order.price}}\nSize={{strategy.order.contracts}}\nSL@'+str.tostring(SLsell)
stringAlert_LongTP='TP/SLLongon{{ticker}}\n@{{strategy.order.price}}\nSize={{strategy.order.contracts}}'
stringAlert_ShortTP='TP/SLShorton{{ticker}}\n@{{strategy.order.price}}\nSize={{strategy.order.contracts}}'
varmessage_closelong='TailingStopLong!!!on{{ticker}}\n@{{strategy.order.price}}'
varmessage_closeshort='TailingStopShort!!!on{{ticker}}\n@{{strategy.order.price}}'
stringAlert_StopLosslong='StopLossLong!on{{ticker}}\n@{{strategy.order.price}}'
stringAlert_StopLossshort='StopLossShort!on{{ticker}}\n@{{strategy.order.price}}'
//exitorder
if(exitlong==true)
strategy.close('long2',comment='TailingStop-L',alert_message=message_closelong)
if(exitshort==true)
strategy.close('Short2',comment='TailingStop-S',alert_message=message_closeshort)
//long
if(uselong==true)andchangetbulland(onebuy[1]==0)
strategy.entry('long2',strategy.long,qty=lotsize,comment='Long',alert_message=Alert_OpenLong)
//Short
if(useshort==true)andchangetbearand(onesell[1]==0)
strategy.entry('Short2',strategy.short,qty=lotsize,comment='Short',alert_message=Alert_OpenShort)
//TPSL
if(position_size>0)anduseSL
strategy.exit('TP1','long2',comment='SL/TP1',limit=TPbull,alert_message=Alert_LongTP,qty_percent=TPper,stop=SLbuy)
strategy.exit('TP2','long2',comment='SL/TP2',limit=TPbull2,alert_message=Alert_LongTP,qty_percent=TPper2,stop=SLbuy)
strategy.exit('SL','long2',comment='SL',stop=SLbuy,alert_message=Alert_StopLosslong)
if(position_size<0)anduseSL
strategy.exit('STP1','Short2',comment='SL/TP1',limit=TPbear,alert_message=Alert_ShortTP,qty_percent=TPper,stop=SLsell)
strategy.exit('STP2','Short2',comment='SL/TP2',limit=TPbear2,alert_message=Alert_ShortTP,qty_percent=TPper2,stop=SLsell)
strategy.exit('SSL','Short2',comment='SL',stop=SLsell,alert_message=Alert_StopLossshort)
//////////////////////////////////DATAWINDOW////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
importNaruephat/Cayoshi_Library/1asfuLi
show_Net=input.bool(true,'ShowNet',inline='Lnet')
position_=input.string('top_right','Position',options=['top_right','middle_right','bottom_right','top_center','middle_center','bottom_center','middle_left','bottom_left'],inline='Lnet')
size_i=input.string('normal','size',options=['auto','tiny','small','normal'],inline='Lnet')
color_Net=input.color(color.blue,"",inline='Lnet')
fuLi.NetProfit_Show(show_Net,position_,size_i,color_Net)
//////////////////////////////////ByVvaz_////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Expand (206 lines)
