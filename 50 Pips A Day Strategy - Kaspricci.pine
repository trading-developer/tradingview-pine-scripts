Script Name: 50 Pips A Day Strategy - Kaspricci
Author: Kaspricci
Description: 50 Pips A Day Strategy

This strategy is designed to work on 1 hour timeframe. It is designed to capture the early market move of major forex pairs like EURUSD or GBPUSD. It takes the high and low of the first candle (7 a.m. GMT, London Stock Exchange opens) and places to pending orders at these prices levels.


  High + additional gap in pips = buy stop pending...
PineScript code:

Pine Script™ strategy
50 Pips A Day Strategy - Kaspricci
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  Kaspricci
//@version=5
strategy("50  Pips  A  Day  Strategy  -  Kaspricci",  overlay=true,  initial_capital  =  1000,  currency  =currency.USD,default_qty_type=strategy.percent_of_equity,default_qty_value=100,margin_long=0,margin_short=0,calc_on_every_tick=true,calc_on_order_fills=false,slippage=0,close_entries_rule="ANY")
headlineEntry="EntrySeettings"
tooltipTF="CombinedtimeframeofLondonandNewYorkStockExchangeopeninghoursfrom7:00-15:30GMTand13:30-20:00GMT"
openingSession=input.session(defval="0700-0800:23456",title="OpeningTime",group=headlineEntry,tooltip="GMTtimezone")
openingTime=time(timeframe.period,openingSession,"GMT")
tradingSession=input.session(defval="0800-2000:23456",title="TradingTime",group=headlineEntry,tooltip=tooltipTF)
tradingTime=time(timeframe.period,tradingSession,"GMT")
buyStopSource=input.source(defval=high,title="SourceforBuyStoporder",inline="B",group=headlineEntry)
buyStopGap=input.float(defval=2.0,minval=0,step=0.1,title="+Pips:",inline="B",group=headlineEntry)
sellStopSource=input.source(defval=low,title="SourceforSellStoporder",inline="S",group=headlineEntry)
sellStopGap=input.float(defval=2.0,minval=0,step=0.1,title="-Pips:",inline="S",group=headlineEntry)
closePending=input.bool(defval=true,group=headlineEntry,title="Cancelpendingorderwhennewtradeentered?",tooltip="Thiswillcancelthereamainingorder,oncethefirsttradehasbeenentered.")
headlineTrade="TradeSeettings"
stopLossType=input.string(defval="FIX",title="StopLossType",options=["ATR","FIX"],group=headlineTrade)
atrLength=input.int(defval=14,title="ATR:Length",inline="ATR",group=headlineTrade,minval=1)
atrFactor=input.float(defval=2.0,title="Factor",inline="ATR",group=headlineTrade,tooltip="multiplierforATRvalue",minval=0,step=0.05)
takeProfitRatio=input.float(defval=2.0,title="TPRation",group=headlineTrade,tooltip="MultiplierforTakeProfitcalculation",minval=0,step=0.05)
fixStopLoss=input.float(defval=15.0,title="FIX:StopLoss",inline="FIX",group=headlineTrade,minval=0,step=0.5)*10//needthisinticks
fixTakeProfit=input.float(defval=50.0,title="TakeProfit",inline="FIX",group=headlineTrade,tooltip="inpips",minval=0,step=0.5)*10//needthisinticks
useRiskMagmt=input.bool(title="",defval=false,group=headlineTrade,inline="RM")
riskPercent=input.float(title="Riskin%",defval=1.0,minval=0.0,step=0.5,group=headlineTrade,inline="RM",tooltip="Thiswilloverwritequantityfromstartegysettingsandcalculatethetradesizebasedonstoplossandriskpercent")/100
rsikCapital=input.string(defval="Balance",group=headlineTrade,inline="RM",title="",options=["Balance","Initial"],tooltip="Thiswilloverwritequantityfromstartegysettingsandcalculatethetradesizebasedonstoplossandriskpercent")
applyLotSizing=input.bool(defval=true,title="ApplyLotsizing",tooltip="Whenenabled,thequantitywillberoundedtotheminimumlotsizeof1000(0.01lots)")
stopLoss=switchstopLossType
"ATR"=>math.round(ta.atr(atrLength)*atrFactor/syminfo.mintick,0)
"FIX"=>fixStopLoss
takeProfit=switchstopLossType
"ATR"=>math.round(stopLoss*takeProfitRatio,0)
"FIX"=>fixTakeProfit
//calculatequantity
baseCapital=switchrsikCapital
"Balance"=>strategy.initial_capital+strategy.netprofit
"Initial"=>strategy.initial_capital
riskAmount=strategy.convert_to_symbol(baseCapital*riskPercent)
tickValue=syminfo.pointvalue*syminfo.mintick
riskBasedQty=riskAmount/stopLoss/tickValue
riskBasedQty:=applyLotSizing?math.round(riskBasedQty/100000,2)*100000:riskBasedQty
quantity=useRiskMagmt?riskBasedQty:na//ifNaNthedefaultfromstrategysettingswillbeused
inTradingTime=notna(tradingTime)
inOpeningTime=notna(openingTime)
varfloatbuyStopPrice=na
varfloatsellStopPrice=na
plot(inTradingTime?buyStopPrice:na,title="BuyStopPrice",color=color.green,style=plot.style_linebr)
plot(inTradingTime?sellStopPrice:na,title="SellStopPrice",color=color.red,style=plot.style_linebr)
///////////////////////////////////////////////////////////////////////////////
//apibotvalues
longSL=buyStopPrice-stopLoss*syminfo.mintick
longTP1=buyStopPrice+takeProfit*syminfo.mintick*0.5//50%oftotaltakeprofit
longTP2=buyStopPrice+takeProfit*syminfo.mintick//sameasfull
longTPFull=buyStopPrice+takeProfit*syminfo.mintick
shortSL=sellStopPrice+stopLoss*syminfo.mintick
shortTP1=sellStopPrice-takeProfit*syminfo.mintick*0.5//50%oftotaltakeprofit
shortTP2=sellStopPrice-takeProfit*syminfo.mintick
shortTPFull=sellStopPrice-takeProfit*syminfo.mintick
takeAmount1=riskPercent/2
takeAmount2=riskPercent
takeAmountFull=riskPercent
headlineAlerts="AlertSettings"
i_apiEnterLong=input.text_area('EnterLong-3commas,alerteronetc','APIEntry-Long',group=headlineAlerts)
i_apiExitLong=input.text_area('ExitLong-3commas,alerteronetc','APIExit-Long',group=headlineAlerts)
i_apiEnterShort=input.text_area('EnterShort-3commas,alerteronetc','APIEntry-Short',group=headlineAlerts)
i_apiExitShort=input.text_area('ExitShort-3commas,alerteronetc','APIExit-Short',group=headlineAlerts)
//#nl#=>Newline
//#side#=>BuyorSell(LongorShort)
//#symbol#=>Thetickere.g.BTCUSDT
f_replaceKeys(_str)=>
_value=_str
_value:=str.replace_all(_value,"#nl#","\n")
//_value:=str.replace_all(_value,"#side#","\n")//doesnotmakesensetome...
_value:=str.replace_all(_value,"#symbol#",syminfo.ticker)
//#LongSL#=>LongStoploss
//#LongTP1#=>LongTakeProfit1
//#LongTP2#=>LongTakeProfit2
//#LongTPFULL#=>LongTakeProfitinFULL
//#TakeAmount1#=>PercenttoremovefromtradeonhittingTP1
//#TakeAmount2#=>PercenttoremovefromtradeonhittingTP2
//#TakeAmountFULL#=>PercenttoremovefromtradeonhittingTP3(shouldbe100%)
f_replaceLongTokens(_str,_sl,_tp1,_tp2,_tpFull,_ta1,_ta2,_taFull)=>
_value=_str
_value:=str.replace_all(_value,"#LongSL#",str.tostring(_sl))
_value:=str.replace_all(_value,"#LongTP1#",str.tostring(_tp1))
_value:=str.replace_all(_value,"#LongTP2#",str.tostring(_tp2))
_value:=str.replace_all(_value,"#LongTPFULL#",str.tostring(_tpFull))
_value:=str.replace_all(_value,"#TakeAmount1#",str.tostring(_ta1))
_value:=str.replace_all(_value,"#TakeAmount2#",str.tostring(_ta2))
_value:=str.replace_all(_value,"#TakeAmountFULL#",str.tostring(_taFull))
//#ShortSL#=>ShortStoploss
//#ShortTP1#=>ShortTakeProfit1
//#ShortTP2#=>ShortTakeProfit2
//#ShortTPFULL#=>ShortTakeProfitinFULL
//#TakeAmount1#=>PercenttoremovefromtradeonhittingTP1
//#TakeAmount2#=>PercenttoremovefromtradeonhittingTP2
//#TakeAmountFULL#=>PercenttoremovefromtradeonhittingTP3(shouldbe100%)
f_replaceShortTokens(_str,_sl,_tp1,_tp2,_tpFull,_ta1,_ta2,_taFull)=>
_value=_str
_value:=str.replace_all(_value,"#ShortSL#",str.tostring(_sl))
_value:=str.replace_all(_value,"#ShortTP1#",str.tostring(_tp1))
_value:=str.replace_all(_value,"#ShortTP2#",str.tostring(_tp2))
_value:=str.replace_all(_value,"#ShortTPFULL#",str.tostring(_tpFull))
_value:=str.replace_all(_value,"#TakeAmount1#",str.tostring(_ta1))
_value:=str.replace_all(_value,"#TakeAmount2#",str.tostring(_ta2))
_value:=str.replace_all(_value,"#TakeAmountFULL#",str.tostring(_taFull))
i_apiEnterLong:=f_replaceKeys(i_apiEnterLong)
i_apiEnterLong:=f_replaceLongTokens(i_apiEnterLong,longSL,longTP1,longTP2,longTPFull,takeAmount1,takeAmount2,takeAmountFull)
i_apiExitLong:=f_replaceKeys(i_apiExitLong)
i_apiExitLong:=f_replaceLongTokens(i_apiExitLong,longSL,longTP1,longTP2,longTPFull,takeAmount1,takeAmount2,takeAmountFull)
i_apiEnterShort:=f_replaceKeys(i_apiEnterShort)
i_apiEnterShort:=f_replaceShortTokens(i_apiEnterShort,shortSL,shortTP1,shortTP2,shortTPFull,takeAmount1,takeAmount2,takeAmountFull)
i_apiExitShort:=f_replaceKeys(i_apiExitShort)
i_apiExitShort:=f_replaceShortTokens(i_apiExitShort,shortSL,shortTP1,shortTP2,shortTPFull,takeAmount1,takeAmount2,takeAmountFull)
//-----handlinetradeentriesandexits--------------------------------------------------------------------------------------------------------------------------
varfloatopeningHigh=na
varfloatopeningLow=na
//determinehighandlowdruingopeningsession
ifbarstate.isconfirmedandinOpeningTime
openingHigh:=math.max(buyStopSource,nz(openingHigh[1],buyStopSource))
openingLow:=math.min(sellStopSource,nz(openingLow[1],sellStopSource))
buyStopPrice:=openingHigh+buyStopGap*10*syminfo.mintick
sellStopPrice:=openingLow-sellStopGap*10*syminfo.mintick
//assoonasthetradingsessionstartscalculatestoppricesbasedonhigh/lowoffirstclosingcandle,creatependingorders
ifbarstate.isconfirmedandinTradingTimeandnotinTradingTime[1]
tradeID=str.tostring(strategy.closedtrades+strategy.opentrades+1)
strategy.entry(tradeID+"L",strategy.long,qty=quantity,stop=buyStopPrice,comment="Long:"+tradeID,alert_message=i_apiEnterLong)
strategy.exit(tradeID+"SL",tradeID+"L",profit=takeProfit,loss=stopLoss,comment_loss="SL",comment_profit="TP",alert_message=i_apiExitLong)
strategy.entry(tradeID+"S",strategy.short,qty=quantity,stop=sellStopPrice,comment="Short:"+tradeID,alert_message=i_apiEnterShort)
strategy.exit(tradeID+"SL",tradeID+"S",profit=takeProfit,loss=stopLoss,comment_loss="SL",comment_profit="TP",alert_message=i_apiExitShort)
//oncethesessionisgone,resetpricesandcancelallremainingpendingorders,closeopenorders
ifbarstate.isconfirmedandnotinTradingTimeandinTradingTime[1]
buyStopPrice:=na
sellStopPrice:=na
openingHigh:=na
openingLow:=na
strategy.cancel_all()
currentTradeID=str.tostring(strategy.closedtrades+strategy.opentrades)
strategy.close(currentTradeID+"L",immediately=true,comment="L:sessionend",alert_message=i_apiExitLong)
strategy.close(currentTradeID+"S",immediately=true,comment="S:sessionend",alert_message=i_apiExitShort)
//assoonasthefirstpendingorderhasbeenenteredtheremaingpendingordershallbecancelled
ifstrategy.opentrades>0andclosePending
currentTradeID=str.tostring(strategy.closedtrades+strategy.opentrades)
strategy.cancel(currentTradeID+"L")
strategy.cancel(currentTradeID+"S")
Expand (196 lines)
