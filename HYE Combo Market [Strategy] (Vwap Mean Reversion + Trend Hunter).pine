Script Name: HYE Combo Market [Strategy] (Vwap Mean Reversion + Trend Hunter)
Author: HYE0619
Description: In this strategy, I used a combination of trend hunter and vwap mean reversion strategies that I published before.

Trend Hunter Strategy:



Mean Reversion Vwap Strategy:



The results are quite impressive, especially for bitcoin.

While the hodl return for bitcoin was 13419%, the strategy's return in the same period was about 5 times (65000%) of this.

...
PineScript code:

Pine Scriptâ„¢ strategy
HYE Combo Market [Strategy] (Vwap Mean Reversion + Trend Hunter)
//  @version=4
//  Credits
//  "Vwap  with  period"  code  which  used  in  this  strategy  to  calculate  the  leadLine  was  written  by  "neolao"  active  on  https://tr.tradingview.com/u/neolao/
//  "TSV"  code  which  used  in  this  strategy  was  written  by  "liw0"  active  on  https://www.tradingview.com/u/liw0.  The  code  is  corrected  by  "vitelot"  December  2018.
//  "Vidya"  code  which  used  in  this  strategy  was  written  by  "everget"  active  on  https://tr.tradingview.com/u/everget/
strategy("HYE  Combo  Market  [Strategy]  (Vwap  Mean  Reversion  +  Trend  Hunter)",  overlay  =  true,  initial_capital  =  1000,  default_qty_value  =  100,  default_qty_type  =  strategy.percent_of_equity,  commission_value  =  0.025)

//Strategy  inputs
source  =  input(title  =  "Source",  defval  =  close,  group  =  "Mean  Reversion  Strategy  Inputs")
smallcumulativePeriod  =  input(title  =  "Small  VWAP",  defval  =  8,  group  =  "Mean  Reversion  Strategy  Inputs")
bigcumulativePeriod  =  input(title  =  "Big  VWAP",  defval  =  10,  group  =  "Mean  Reversion  Strategy  Inputs")
meancumulativePeriod  =  input(title  =  "Mean  VWAP",  defval  =  50,  group  =  "Mean  Reversion  Strategy  Inputs")
percentBelowToBuy  =  input(title  =  "Percent  below  to  buy  %",  defval  =  2,  group  =  "Mean  Reversion  Strategy  Inputs")
rsiPeriod  =  input(title  =  "Rsi  Period",  defval  =  2,  group  =  "Mean  Reversion  Strategy  Inputs")
rsiEmaPeriod  =  input(title  =  "Rsi  Ema  Period",  defval  =  5,  group  =  "Mean  Reversion  Strategy  Inputs")
rsiLevelforBuy  =  input(title  =  "Maximum  Rsi  Level  for  Buy",  defval  =  30,  group  =  "Mean  Reversion  Strategy  Inputs")
slowtenkansenPeriod  =  input(9,  minval=1,  title="Slow  Tenkan  Sen  VWAP  Line  Length",  group  =  "Trend  Hunter  Strategy  Inputs")
slowkijunsenPeriod  =  input(13,  minval=1,  title="Slow  Kijun  Sen  VWAP  Line  Length",  group  =  "Trend  Hunter  Strategy  Inputs")
fasttenkansenPeriod  =  input(3,  minval=1,  title="Fast  Tenkan  Sen  VWAP  Line  Length",  group  =  "Trend  Hunter  Strategy  Inputs")
fastkijunsenPeriod  =  input(7,  minval=1,  title="Fast  Kijun  Sen  VWAP  Line  Length",  group  =  "Trend  Hunter  Strategy  Inputs")
BBlength  =  input(20,  minval=1,  title=  "Bollinger  Band  Length",  group  =  "Trend  Hunter  Strategy  Inputs")
BBmult  =  input(2.0,  minval=0.001,  maxval=50,  title="Bollinger  Band  StdDev",  group  =  "Trend  Hunter  Strategy  Inputs")
tsvlength    =  input(20,  minval=1,  title="TSV  Length",  group  =  "Trend  Hunter  Strategy  Inputs")
tsvemaperiod  =  input(7,  minval=1,  title="TSV  Ema  Length",  group  =  "Trend  Hunter  Strategy  Inputs")
length  =  input(title="Vidya  Length",  type=input.integer,  defval=20,  group  =  "Trend  Hunter  Strategy  Inputs")
src  =  input(title="Vidya  Source",  type=input.source,  defval=  hl2  ,  group  =  "Trend  Hunter  Strategy  Inputs")
//  Vidya  Calculation
getCMO(src,  length)  =>
        mom  =  change(src)
        upSum  =  sum(max(mom,  0),  length)
        downSum  =  sum(-min(mom,  0),  length)
        out  =  (upSum  -  downSum)  /  (upSum  +  downSum)
        out
cmo  =  abs(getCMO(src,  length))
alpha  =  2  /(length+1)
vidya=0.0
vidya:=src*alpha*cmo+nz(vidya[1])*(1-alpha*cmo)
//Makeinputoptionsthatconfigurebacktestdaterange
startDate=input(title="StartDate",type=input.integer,
defval=1,minval=1,maxval=31,group="StrategyDateRange")
startMonth=input(title="StartMonth",type=input.integer,
defval=1,minval=1,maxval=12,group="StrategyDateRange")
startYear=input(title="StartYear",type=input.integer,
defval=2000,minval=1800,maxval=2100,group="StrategyDateRange")
endDate=input(title="EndDate",type=input.integer,
defval=31,minval=1,maxval=31,group="StrategyDateRange")
endMonth=input(title="EndMonth",type=input.integer,
defval=12,minval=1,maxval=12,group="StrategyDateRange")
endYear=input(title="EndYear",type=input.integer,
defval=2021,minval=1800,maxval=2100,group="StrategyDateRange")

inDateRange=(time>=timestamp(syminfo.timezone,startYear,
startMonth,startDate,0,0))and
(time<timestamp(syminfo.timezone,endYear,endMonth,endDate,0,0))

//MeanReversionStrategyCalculation
typicalPriceS=(high+low+close)/3
typicalPriceVolumeS=typicalPriceS*volume
cumulativeTypicalPriceVolumeS=sum(typicalPriceVolumeS,smallcumulativePeriod)
cumulativeVolumeS=sum(volume,smallcumulativePeriod)
smallvwapValue=cumulativeTypicalPriceVolumeS/cumulativeVolumeS
typicalPriceB=(high+low+close)/3
typicalPriceVolumeB=typicalPriceB*volume
cumulativeTypicalPriceVolumeB=sum(typicalPriceVolumeB,bigcumulativePeriod)
cumulativeVolumeB=sum(volume,bigcumulativePeriod)
bigvwapValue=cumulativeTypicalPriceVolumeB/cumulativeVolumeB
typicalPriceM=(high+low+close)/3
typicalPriceVolumeM=typicalPriceM*volume
cumulativeTypicalPriceVolumeM=sum(typicalPriceVolumeM,meancumulativePeriod)
cumulativeVolumeM=sum(volume,meancumulativePeriod)
meanvwapValue=cumulativeTypicalPriceVolumeM/cumulativeVolumeM
rsiValue=rsi(source,rsiPeriod)
rsiEMA=ema(rsiValue,rsiEmaPeriod)
buyMA=((100-percentBelowToBuy)/100)*bigvwapValue[0]
inTrade=strategy.position_size>0
notInTrade=strategy.position_size<=0
if(crossunder(smallvwapValue,buyMA)andrsiEMA<rsiLevelforBuyandclose<meanvwapValueandinDateRangeandnotInTrade)
strategy.entry("BUY-M",strategy.long)
if(close>meanvwapValueornotinDateRange)
strategy.close("BUY-M")

//TrendHunterStrategyCalculation
//SlowTenkanSenCalculation
typicalPriceTS=(high+low+close)/3
typicalPriceVolumeTS=typicalPriceTS*volume
cumulativeTypicalPriceVolumeTS=sum(typicalPriceVolumeTS,slowtenkansenPeriod)
cumulativeVolumeTS=sum(volume,slowtenkansenPeriod)
slowtenkansenvwapValue=cumulativeTypicalPriceVolumeTS/cumulativeVolumeTS
//SlowKijunSenCalculation
typicalPriceKS=(high+low+close)/3
typicalPriceVolumeKS=typicalPriceKS*volume
cumulativeTypicalPriceVolumeKS=sum(typicalPriceVolumeKS,slowkijunsenPeriod)
cumulativeVolumeKS=sum(volume,slowkijunsenPeriod)
slowkijunsenvwapValue=cumulativeTypicalPriceVolumeKS/cumulativeVolumeKS
//FastTenkanSenCalculation
typicalPriceTF=(high+low+close)/3
typicalPriceVolumeTF=typicalPriceTF*volume
cumulativeTypicalPriceVolumeTF=sum(typicalPriceVolumeTF,fasttenkansenPeriod)
cumulativeVolumeTF=sum(volume,fasttenkansenPeriod)
fasttenkansenvwapValue=cumulativeTypicalPriceVolumeTF/cumulativeVolumeTF
//FastKijunSenCalculation
typicalPriceKF=(high+low+close)/3
typicalPriceVolumeKF=typicalPriceKS*volume
cumulativeTypicalPriceVolumeKF=sum(typicalPriceVolumeKF,fastkijunsenPeriod)
cumulativeVolumeKF=sum(volume,fastkijunsenPeriod)
fastkijunsenvwapValue=cumulativeTypicalPriceVolumeKF/cumulativeVolumeKF
//SlowLeadLineCalculation

lowesttenkansen_s=lowest(slowtenkansenvwapValue,slowtenkansenPeriod)
highesttenkansen_s=highest(slowtenkansenvwapValue,slowtenkansenPeriod)
lowestkijunsen_s=lowest(slowkijunsenvwapValue,slowkijunsenPeriod)
highestkijunsen_s=highest(slowkijunsenvwapValue,slowkijunsenPeriod)
slowtenkansen=avg(lowesttenkansen_s,highesttenkansen_s)
slowkijunsen=avg(lowestkijunsen_s,highestkijunsen_s)
slowleadLine=avg(slowtenkansen,slowkijunsen)
//FastLeadLineCalculation

lowesttenkansen_f=lowest(fasttenkansenvwapValue,fasttenkansenPeriod)
highesttenkansen_f=highest(fasttenkansenvwapValue,fasttenkansenPeriod)
lowestkijunsen_f=lowest(fastkijunsenvwapValue,fastkijunsenPeriod)
highestkijunsen_f=highest(fastkijunsenvwapValue,fastkijunsenPeriod)
fasttenkansen=avg(lowesttenkansen_f,highesttenkansen_f)
fastkijunsen=avg(lowestkijunsen_f,highestkijunsen_f)
fastleadLine=avg(fasttenkansen,fastkijunsen)
//BBleadLineCalculation

BBleadLine=avg(fastleadLine,slowleadLine)
//BollingerBandCalculation

basis=sma(BBleadLine,BBlength)
dev=BBmult*stdev(BBleadLine,BBlength)
upper=basis+dev
lower=basis-dev
//TSVCalculation
tsv=sum(close>close[1]?volume*(close-close[1]):close<close[1]?volume*(close-close[1]):0,tsvlength)
tsvema=ema(tsv,tsvemaperiod)
//RulesforEntry&Exit
if(fastleadLine>fastleadLine[1]andslowleadLine>slowleadLine[1]andtsv>0andtsv>tsvemaandclose>upperandclose>vidyaandinDateRangeandnotInTrade)
strategy.entry("BUY-T",strategy.long)

if((fastleadLine<fastleadLine[1]andslowleadLine<slowleadLine[1])ornotinDateRange)
strategy.close("BUY-T")
//Plots
plot(meanvwapValue,title="MEANVWAP",linewidth=2,color=color.yellow)
//plot(vidya,title="VIDYA",linewidth=2,color=color.green)
//colorsettingS=input(title="SolidColorSlowLeadline",defval=false,type=input.bool)
//plot(slowleadLine,title="SlowLeadLine",color=colorsettingS?color.aqua:slowleadLine>slowleadLine[1]?color.green:color.red,linewidth=3)
//colorsettingF=input(title="SolidColorFastLeadline",defval=false,type=input.bool)
//plot(fastleadLine,title="FastLeadLine",color=colorsettingF?color.orange:fastleadLine>fastleadLine[1]?color.green:color.red,linewidth=3)
//p1=plot(upper,"UpperBB",color=#2962FF)
//p2=plot(lower,"LowerBB",color=#2962FF)
//fill(p1,p2,title="Background",color=color.blue)
//plot(smallvwapValue,color=#13C425,linewidth=2)
//plot(bigvwapValue,color=#CA1435,linewidth=2)
Expand (201 lines)
