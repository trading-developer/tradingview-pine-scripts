Script Name: BEST Strategy Template w- Custom SL-TP Size - Educational
Author: Daveatt
Description: Hello traders

I'm getting this question at least once per week: "how to define a custom exit quantity for my stop loss and a different one for my take profit"
Instead of answering every day the same question in my DMs, I've decided to publish an educational strategy template script using this

 Features

- Select to use or not the SL and/or TP
- Define how many...
PineScript code:

Pine Script™ strategy
BEST Strategy Template w/ Custom SL/TP Size - Educational
//@version=5
VERSION  =  "V1"
SCRIPT_NAME  =  "BEST  Strategy  Template  Custom  SL/TP  Qty  "  +  VERSION
//  #  =========================================================================  #
//  #                                      |      STRATEGY    |
//  #  =========================================================================  #
//  These  values  are  used  both  in  the  strategy()  header  and  in  the  script's  relevant  inputs  as  default  values  so  they  match.
//  Unless  these  values  match  in  the  script's  Inputs  and  the  TV  backtesting  Properties,  results  between  them  cannot  be  compared.
InitCapital  =  1000000
InitPosition  =  100.0
InitCommission  =  0.075
InitPyramidMax  =  1
CalcOnorderFills  =  false
ProcessOrdersOnClose  =  true
CalcOnEveryTick  =  false
CloseEntriesRule  =  "FIFO"
strategy(title=SCRIPT_NAME,  shorttitle=SCRIPT_NAME,
  overlay=true,  pyramiding=InitPyramidMax,  initial_capital=InitCapital,  default_qty_type=strategy.fixed,  process_orders_on_close=ProcessOrdersOnClose,
  default_qty_value=InitPosition,  commission_type=strategy.commission.percent,  commission_value=InitCommission,  calc_on_order_fills=CalcOnorderFills,
  calc_on_every_tick=CalcOnEveryTick,  close_entries_rule  =  CloseEntriesRule,
  precision=6,  max_lines_count=500,  max_labels_count=500)
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #                                      |      Input  fields  |
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #                                      ||      Alerts    ||
//  #  =========================================================================  #
//  #  =========================================================================  #
i_alert_txt_entry_long  =  input.text_area(defval  =  "",  title  =  "Long  Entry  Message",  group  =  "Alerts")
i_alert_txt_entry_short  =  input.text_area(defval  =  "",  title  =  "Short  Entry  Message",  group  =  "Alerts")
i_alert_txt_exit_long  =  input.text_area(defval  =  "",  title  =  "Long  Exit  Message",  group  =  "Alerts")
i_alert_txt_exit_short  =  input.text_area(defval  =  "",  title  =  "Short  Exit  Message",  group  =  "Alerts")
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #                                      ||      Dates  Range  Filtering    ||
//  #  =========================================================================  #
//  #  =========================================================================  #
DateFilter  =  input(false,  "Date  Range  Filtering",  group="Date")
//  —————  Syntax  coming  from  https://www.tradingview.com/blog/en/new-parameter-for-date-input-added-to-pine-21812/
i_startTime  =  input.time(defval  =  timestamp("01  Jan  2019  13:30  +0000"),  title  =  "Start  Time",  group="Date")
i_endTime  =  input.time(defval  =  timestamp("30  Dec  2021  23:30  +0000"),  title  =  "End  Time",  group="Date")
TradeDateIsAllowed()  =>  DateFilter  ?  time  >=  i_startTime  and  time  <=  i_endTime:true
//#=========================================================================#
//#|General|
//#=========================================================================#
show_consecutive=input.bool(defval=true,title="Showconsecutivesignals?",group="General")
OpenDirection=input.string(defval="ALL",title="Direction",options=["ALL","LONG","SHORT"],group="General")
clrBars=input.bool(true,title="ColourCandlestoTradeOrderstate",group="General")
nb_contracts=input.int(100,title="DefaultNbContractsperTrade",group="General")
//#=========================================================================#
//#|DonchianTrendRibbon|
//#=========================================================================#
dlen=input.int(defval=20,title="Period",minval=10,group="DonchianChannel")
//#=========================================================================#
//#|StopLoss|
//#=========================================================================#
use_sl=input.bool(false,title="UseStopLoss?",group="InitialStopLoss")
sl_input_pips=input.float(30,minval=0,title="StopLoss(pips)",group="InitialStopLoss")
sl_qty=input.float(100,minval=0,maxval=100,title="CloseX%atSL",group="InitialStopLoss")
//#=========================================================================#
//#|TakeProfit|
//#=========================================================================#
use_tp=input.bool(false,title="UseTakeProfit?",group="TakeProfit")
tp_input_pips=input.float(30,minval=0,title="TakeProfit(pips)",group="TakeProfit")
tp_qty=input.float(50,minval=0,maxval=100,title="CloseX%atTP",group="TakeProfit")
//#=========================================================================#
//#|StopLoss/TakeProfit|
//#=========================================================================#
//sl_tp_qty=input.float(50,minval=0,maxval=100,title="CloseX%atSL/TP",group="SL/TPExitSize")
//#=========================================================================#
//#|TrailingStopLoss|
//#=========================================================================#
use_trailing=input.bool(false,title="UseTrailingStopLoss?",group="TrailingStopLoss")
tsl_input_pips=input.float(10,minval=0,title="TrailingStopLoss(pips)",group="TrailingStopLoss")
//#=========================================================================#
//#|DonchianTrendRibbon|
//#=========================================================================#
dchannel(len)=>
floathh=ta.highest(len)
floatll=ta.lowest(len)

inttrend=0
trend:=close>hh[1]?1:close<ll[1]?-1:nz(trend[1])

dchannelalt(len,maintrend)=>
floathh=ta.highest(len)
floatll=ta.lowest(len)

inttrend=0
trend:=close>hh[1]?1:close<ll[1]?-1:nz(trend[1])
maintrend==1?trend==1?#00FF00ff:#00FF009f:
maintrend==-1?trend==-1?#FF0000ff:#FF00009f:
na
dc_maintrend=dchannel(dlen)
bull_dc=dc_maintrend==1
bear_dc=dc_maintrend==-1
plotshape(
series=bull_dcandnotbull_dc[1],
title="BullDonchianChannel",
style=shape.diamond,
location=location.bottom,
color=color.new(color=color.purple,transp=0),
size=size.normal
)
plotshape(
series=bear_dcandnotbear_dc[1],
title="BearDonchianChannel",
style=shape.diamond,
location=location.top,
color=color.new(color=color.orange,transp=0),
size=size.normal
)
//#=========================================================================#
//#|ConsolidatedSignals|
//#=========================================================================#
T1_posUp=bull_dc
T1_posDn=bear_dc
varfloatcount_signals=1.
T1_conditionUP=bull_dc
T1_conditionDN=bear_dc
//#=========================================================================#
//#||GlobalTrendVariables||
//#=========================================================================#
T1_sinceUP=ta.barssince(T1_conditionUP)
T1_sinceDN=ta.barssince(T1_conditionDN)
bull=show_consecutive?T1_conditionUP:ta.crossunder(T1_sinceUP,T1_sinceDN)
bear=show_consecutive?T1_conditionDN:ta.crossover(T1_sinceUP,T1_sinceDN)
T1_sinceNUP=ta.barssince(bull)
T1_sinceNDN=ta.barssince(bear)
T1_BuyTrend=T1_sinceNDN>T1_sinceNUP
T1_SellTrend=T1_sinceNDN<T1_sinceNUP
T1_SellToBuy=T1_BuyTrendandT1_SellTrend[1]
T1_BuyToSell=T1_SellTrendandT1_BuyTrend[1]
T1_ChangeTrend=T1_BuyToSellorT1_SellToBuy
ifT1_ChangeTrendorstrategy.position_size==0
count_signals:=1
plotshape(
series=bullandnotbull[1],
title="BuySignal",
style=shape.triangleup,
location=location.bottom,
color=color.new(color=color.green,transp=0),
size=size.normal,
display=display.none
)
plotshape(
series=bearandnotbear[1],
title="SellSignal",
style=shape.triangledown,
location=location.top,
color=color.new(color=color.red,transp=0),
size=size.normal,
display=display.none
)
//#=========================================================================#
//#|EntryPrice|
//#=========================================================================#
entry_long_price=ta.valuewhen(condition=bullandstrategy.position_size[1]<=0,source=close,occurrence=0)
entry_short_price=ta.valuewhen(condition=bearandstrategy.position_size[1]>=0,source=close,occurrence=0)
//#=========================================================================#
//#|StopLoss|
//#=========================================================================#
pip()=>1//syminfo.mintick*(syminfo.type=="forex"?10:1)
varfloatfinal_SL_Long=0.
varfloatfinal_SL_Short=0.
final_SL_Long:=strategy.position_avg_price-(sl_input_pips*pip())
final_SL_Short:=strategy.position_avg_price+(sl_input_pips*pip())
//#=========================================================================#
//#|TakeProfit|
//#=========================================================================#
varfloatfinal_TP_Long=0.
varfloatfinal_TP_Short=0.
final_TP_Long:=strategy.position_avg_price+(tp_input_pips*pip())
final_TP_Short:=strategy.position_avg_price-(tp_input_pips*pip())
plot(strategy.position_size>0anduse_tp?final_TP_Long:na,title="TPLong",color=color.orange,linewidth=2,style=plot.style_linebr)
plot(strategy.position_size<0anduse_tp?final_TP_Short:na,title="TPShort",color=color.orange,linewidth=2,style=plot.style_linebr)
//#=========================================================================#
//#|TrailingStopLoss|
//#=========================================================================#
signal_candle=bearorbull
varMaxReached=0.0
varboolis_TP1_reached=false
ifsignal_candle[1]
MaxReached:=strategy.position_size>0?high:low
MaxReached:=strategy.position_size>0
?math.max(nz(MaxReached,high),high)
:strategy.position_size<0?math.min(nz(MaxReached,low),low):na
if(strategy.position_size>0andMaxReached>=final_TP_Long)
or(strategy.position_size<0andMaxReached<=final_TP_Short)
is_TP1_reached:=true
ifuse_trailingandis_TP1_reachedanduse_sl
ifstrategy.position_size>0
stopValue=MaxReached-(tsl_input_pips*pip())
final_SL_Long:=math.max(stopValue,final_SL_Long[1])
elseifstrategy.position_size<0
stopValue=MaxReached+(tsl_input_pips*pip())
final_SL_Short:=math.min(stopValue,final_SL_Short[1])
plot(strategy.position_size>0anduse_sl?final_SL_Long:na,title="SLLong",color=color.fuchsia,linewidth=2,style=plot.style_linebr)
plot(strategy.position_size<0anduse_sl?final_SL_Short:na,title="SLShort",color=color.fuchsia,linewidth=2,style=plot.style_linebr)
//#=========================================================================#
//#|StrategyCalls|
//#=========================================================================#
open_all=OpenDirection=="ALL"
open_all_longs=OpenDirection!="SHORT"
open_all_shorts=OpenDirection!="LONG"
//final_sl_qty=nb_contracts*(1-(1-sl_qty))
//final_tp_qty=nb_contracts*(1-(1-tp_qty))
//Golong
longCondition=bull//andnotbull[1]
if(longConditionandopen_all_longsandTradeDateIsAllowed())//andnot(strategy.position_size[1]>0))
strategy.entry("Long",strategy.long,alert_message=i_alert_txt_entry_long,qty=nb_contracts)
alert(i_alert_txt_entry_long,alert.freq_once_per_bar_close)

//GoShort
shortCondition=bear//andnotbear[1]
if(shortConditionandopen_all_shortsandTradeDateIsAllowed())//andnot(strategy.position_size[1]<0))
strategy.entry("Short",strategy.short,alert_message=i_alert_txt_entry_short,qty=nb_contracts)
alert(i_alert_txt_entry_short,alert.freq_once_per_bar_close)
varboolboth_sl_tp_100=false
ifuse_slanduse_tpandsl_qty==100andtp_qty==100
both_sl_tp_100:=true
if(strategy.position_size[1]>0)
ifboth_sl_tp_100
strategy.exit(id="ExitLongSL",from_entry="Long",stop=final_SL_Long,limit=final_TP_Long,comment_loss="LongExitSL",alert_loss="LongExitSL",comment_profit="LongExitTP",alert_profit="LongExitTP")
else
ifuse_slandlow<=final_SL_Long
strategy.exit(id="ExitLongSL",from_entry="Long",stop=use_sl?final_SL_Long:na,comment_loss="LongExitSL",qty_percent=sl_qty,alert_loss="LongExitSL")
ifuse_tpandhigh>=final_TP_Long
strategy.exit(id="ExitLongTP",from_entry="Long",limit=use_tp?final_TP_Long:na,comment_profit="LongExitTP",qty_percent=tp_qty,alert_profit="LongExittp")
if(strategy.position_size[1]<0)
ifboth_sl_tp_100
strategy.exit(id="ExitShortSL",from_entry="Short",stop=final_SL_Short,limit=final_TP_Short,comment_loss="ShortExitSL",alert_loss="ShortExitSL",comment_profit="ShortExitTP",alert_profit="ShortExitTP")
else
ifuse_slandhigh>=final_SL_Short
strategy.exit(id="ExitShortSL",from_entry="Short",stop=use_sl?final_SL_Short:na,qty_percent=sl_qty,comment_loss="ShortExitSL",alert_loss="ShortExitSL")
ifuse_tpandlow<=final_TP_Short
strategy.exit(id="ExitShortTP",from_entry="Short",limit=use_tp?final_TP_Short:na,qty_percent=tp_qty,comment_profit="ShortExitTP",alert_profit="ShortExitTP")
//#=========================================================================#
//#|BarsColoring|
//#=========================================================================#
//Colourcodethecandles
bclr=notclrBars?na:strategy.position_size==0?#dbd5d5:
T1_BuyTrend?color.lime:
T1_SellTrend?color.red:color.gray
barcolor(bclr,title="TradeStateBarColouring")
//#=========================================================================#
//#|ResetVariables|
//#=========================================================================#
ifstrategy.position_size==0orT1_ChangeTrend
is_TP1_reached:=false
Expand (339 lines)
