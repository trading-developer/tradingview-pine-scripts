Script Name: Divergence for Many [Dimkud - v5]
Author: dimkud
Description: Strategy is based on "Divergence for Many Indicators v4 ST" strategy by CannyTolany01
which is based on "Divergence for Many Indicator" indicator by LonesomeTheBlue

This strategy is searching for divergences on 18 indicators which you can select and optimise one by one.
Additionally you can connect any other External Indicator value. (just add this indicator the...
PineScript code:

Pine Scriptâ„¢ strategy
Divergence for Many [Dimkud - v5]
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  Strategy  based  on  "Divergence  for  Many  Indicators  v4  ST"  by  CannyTolany01
//  which  is  based  on  "Divergence  for  Many  Indicator"  indicator  by  LonesomeTheBlue
//@version=5
strategy('Divergence  for  Many  [Dimkud  -  v5]',  overlay=true,  calc_on_order_fills=true,    commission_type=strategy.commission.percent,  commission_value=0.04,  default_qty_type=strategy.cash,  default_qty_value=200,  initial_capital=1000)
//  DIMAK    Static  SL/TP  -  Begin
GRUPO_statSLTP  =  'Static  SL/TP'
USEdisplTPSL  =    input(defval=false,  title='Display  Visualisation  for  TP/SL  ?',  group  =  GRUPO_statSLTP)
enable_long_strategy  =  input.bool(false,  title='Use  Long  ?',  group=GRUPO_statSLTP,  inline='11')
enable_short_strategy  =  input.bool(true,  title='Use  Short  ?',  group=GRUPO_statSLTP,  inline='11')
SLsameTP  =  input.bool(false,  'SL  =  TP  ?',  group=GRUPO_statSLTP)
USE_SignSL  =  input.bool(false,  'Use  Opposite  Signal  SL  ?',  group=GRUPO_statSLTP)
USEorderOnSL  =    input(defval=false,  title='New  Opposite-Order  after  SL  ?',  group  =  GRUPO_statSLTP,  tooltip  =  'After  SL  -  create  new  order  with  with  opposite  direction')
longProfitPerc  =  input.float(defval=0.9,  title='Take  Profit  (%)',  group=GRUPO_statSLTP,  minval=0.0,  step=0.1)  /  100
longSLPerc  =  input.float(defval=0.9,  title='Stop  Loss  (%)',  group=GRUPO_statSLTP,  minval=0.0,  step=0.1)  /  100
longSLPerc  :=  SLsameTP  ?  longProfitPerc  :  longSLPerc
shortProfitPerc  =  longProfitPerc
shortSLPerc  =  longSLPerc
longExitPrice  =  strategy.position_avg_price  *  (1  +  longProfitPerc)
shortExitPrice  =  strategy.position_avg_price  *  (1  -  shortProfitPerc)
longSLExitPrice  =  strategy.position_avg_price  *  (1  -  longSLPerc)
shortSLExitPrice  =  strategy.position_avg_price  *  (1  +  shortSLPerc)
//  use  such:  limit=shortExitPrice,  stop=shortSLExitPrice
//  DIMAK    Static  SL/TP  -  END
//  ===================================================================================================
//  DIMAK  -  TimeFrame  request.security  -  Repaint-Non  Repaint
f_security(_sym,  _res,  _src,  _rep)  =>
        request.security(_sym,  _res,  _src[not  _rep  and  barstate.isrealtime  ?  1  :  0])[_rep  or  barstate.isrealtime  ?  0  :  1]
//  DIMAK  -  TimeFrame  request.security  -  Repaint-Non  Repaint
//  Time  filter  =================================
grTIMEset  =  "Testing  Period"
testPeriod()  =>
        //  Testing  Start  dates
        testStartYear  =  input.int(2022,  'Start  Year',  inline='date1',  group=grTIMEset)
        testStartMonth  =  input.int(5,  '',  inline='date1',  group=grTIMEset)
        testStartDay  =  input.int(1,  '',  inline='date1',  group=grTIMEset)
        testPeriodStart  =  timestamp(testStartYear,  testStartMonth,  testStartDay,  0,  0)
        //Stop  date  if  you  want  to  use  a  specific  range  of  dates
        testStopYear  =  input.int(2030,  'Stop  Year',  inline='date2',  group=grTIMEset)
        testStopMonth  =  input.int(12,  '',  inline='date2',  group=grTIMEset)
        testStopDay  =  input.int(30,  '',  inline='date2',  group=grTIMEset)
        testPeriodStop  =  timestamp(testStopYear,  testStopMonth,  testStopDay,  0,  0)
        time  >=  testPeriodStart  and  time  <  testPeriodStop  ?  true  :  false
        //  pass  some  date
        //testPeriodStop2  =    timestamp(2022,6,14,0,0)
        //testPeriodStop3  =    timestamp(2022,6,16,0,0)
        //(time  >=  testPeriodStart)  and  (time  <  testPeriodStop)  and  ((time  <  testPeriodStop2)  or  (time  >  testPeriodStop3))  ?  true  :  false
//  Time  filter  =================================
grMAINset  =  "Main  Divergence  Settings"
prd  =  input.int(defval=9,  title='Pivot  Period(9)',  minval=1,  maxval=50,  group  =  grMAINset)
source  =  input.string(defval='Close',  title='Source  for  Pivot  Points',  options=['Close',  'High/Low'],  group  =  grMAINset)
//searchdiv  =  input.string(defval='Regular',  title='Divergence  Type',  options=['Regular',  'Hidden',  'Regular/Hidden'],  group  =  grMAINset)
//  works  only  Regular
searchdiv  =  'Regular'
showindis  =  input.string(defval='Don\'t  Show',  title='Show  Indicator  Names',  options=['Full',  'First  Letter',  'Don\'t  Show'],  group  =  grMAINset)
//showlimit  =  input.int(1,  title='Minimum  Number  of  Divergence',  minval=1,  maxval=11)
//  not  good  results  and  not  work  now
showlimit  =  1
maxpp  =  input.int(defval=10,  title='Maximum  Pivot  Points  to  Check',  minval=10,  maxval=20,  group  =  grMAINset)
maxbars  =  input.int(defval=100,  title='Maximum  Bars  to  Check',  minval=100,  maxval=200,  group  =  grMAINset)
shownum  =  input(defval=true,  title='Show  Divergence  Number',  group  =  grMAINset)
showlast  =  input(defval=false,  title='Show  Only  Last  Divergence',  group  =  grMAINset)
dontconfirm  =  input(defval=false,  title='Don\'t  Wait  for  Confirmation',  group  =  grMAINset)
showlines  =  input(defval=false,  title='Show  Divergence  Lines',  group  =  grMAINset)
showpivot  =  input(defval=false,  title='Show  Pivot  Points',  group  =  grMAINset)
//  declaration
macd  =  0.0
deltamacd  =  0.0
rsi  =  0.0
stk  =  0.0
cci  =  0.0
moment  =  0.0
Obv  =  0.0
vwmacd  =  0.0
cmf  =  0.0
Mfi  =  0.0
aStDev  =  0.0
wvf  =  0.0
StochRSIk  =  0.0
oscSMIO  =  0.0
dmVWMACD_LB  =  0.0
BBPower  =  0.0
SmootherBOP  =  0.0
rviMA  =  0.0
//  declaration
calcmacd  =  input(defval=true,  title='MACD')
dimmacdFast  =  input.int(defval=12,  title='Fast(12):',  minval=1,  maxval=70,  inline='223')
dimmacdSlow  =  input.int(defval=26,  title='Slow(26):',  minval=1,  maxval=70,  inline='223')
dimmacdSignal  =  input.int(defval=9,  title='Sign(9):',  minval=1,  maxval=70,  inline='223')
calcmacda  =  input(defval=true,  title='MACD  Histogram')
if  calcmacd  or  calcmacda
        //[macd,  signal,  deltamacd]  =  macd(close,  12,  26,  9)  //  MACD
        [macd2,  signal,  deltamacd2]  =  ta.macd(close,  dimmacdFast,  dimmacdSlow,  dimmacdSignal)    //  MACD
        macd  :=  macd2
        deltamacd  :=  deltamacd2
        deltamacd
calcrsi  =  input(defval=true,  title='RSI')
dimRSI  =  input.int(defval=14,  title='RSI  period  (14):',  minval=1,  maxval=70)
if  calcrsi
        //rsi  =  rsi(close,  14)  //  RSI
        rsi  :=  ta.rsi(close,  dimRSI)    //  RSI
        rsi
calcstoc  =  input(defval=true,  title='Stochastic')
dimSTOCHlength  =  input.int(defval=14,  title='STOCH  Length(14):',  minval=1,  maxval=70)
if  calcstoc
        //stk  =  sma(stoch(close,  high,  low,  14),  3)  //  Stoch
        stk  :=  ta.sma(ta.stoch(close,  high,  low,  dimSTOCHlength),  3)    //  Stoch
        stk
calccci  =  input(defval=true,  title='CCI')
dimCCIL  =  input.int(defval=10,  title='CCI  Length(10)',  minval=1,  maxval=70,  inline='')
if  calccci
        //cci  =  cci(close,  10)  //  CCI
        cci  :=  ta.cci(close,  dimCCIL)    //  CCI
        cci
calcmom  =  input(defval=true,  title='Momentum')
dimmomentL  =  input.int(defval=10,  title='Momentum  Length(10)',  minval=1,  maxval=70,  inline='')
if  calcmom
        //moment  =  mom(close,  10)  //  Momentum
        moment  :=  ta.mom(close,  dimmomentL)    //  Momentum
        moment
calcobv  =  input(defval=true,  title='OBV')
if  calcobv
        Obv  :=  ta.obv    //  OBV
        Obv
calcvwmacd  =  input(true,  title='VWmacd')
dimmaFast  =  input.int(defval=12,  title='Volume  Weighted  Macd.  Fast(12)',  minval=1,  maxval=70,  inline='112')
dimmaSlow  =  input.int(defval=26,  title='Slow(26)',  minval=1,  maxval=70,  inline='112')
if  calcvwmacd
        //maFast  =  vwma(close,  12),  maSlow  =  vwma(close,  26),  vwmacd  =  maFast  -  maSlow  //  volume  weighted  macd
        maFast  =  ta.vwma(close,  dimmaFast)
        maSlow  =  ta.vwma(close,  dimmaSlow)
        vwmacd  :=  maFast  -  maSlow    //  volume  weighted  macd
        vwmacd
calccmf  =  input(true,  title='Chaikin  Money  Flow')
dimCMFperiod  =  input.int(defval=21,  title='CMF  period(21)',  minval=1,  maxval=70,  inline='')
if  calccmf
        //Cmfm  =  ((close-low)  -  (high-close))  /  (high  -  low),  Cmfv  =  Cmfm  *  volume,  cmf  =  sma(Cmfv,  21)  /  sma(volume,21)  //  Chaikin  money  flow
        Cmfm  =  (close  -  low  -  (high  -  close))  /  (high  -  low)
        Cmfv  =  Cmfm  *  volume
        cmf  :=  ta.sma(Cmfv,  dimCMFperiod)  /  ta.sma(volume,  dimCMFperiod)    //  Chaikin  money  flow
        cmf
calcmfi  =  input(true,  title='Money  Flow  Index')
dimMfilength  =  input.int(defval=14,  title='Mfi  length(14)',  minval=1,  maxval=70,  inline='')
if  calcmfi
        //Mfi  =  mfi(close,  14)  //  Moneyt  Flow  Index
        Mfi  :=  ta.mfi(close,  dimMfilength)    //  Moneyt  Flow  Index
        Mfi
//==================================================================================
calcWVIX  =  input(true,  title='Williams_Vix_Fix')
pd  =  input(21,  title='Williams_Vix_Fix  Period(21)')
if  calcWVIX
        wvf  :=  (ta.highest(close,  pd)  -  low)  /  ta.highest(close,  pd)  *  -100
        wvf
//==================================================================================
calcStochRSI  =  input.bool(true,  title='Use  Stochastic  RSI  ?',  group='Stochastic  RSI')
smoothK  =  input.int(3,  'Stochastic  K(3)',  minval=1,  group='Stochastic  RSI')
lengthSTRSI  =  input.int(14,  'RSI  Length(14)',  minval=1,  group='Stochastic  RSI')
lengthStoch  =  input.int(14,  'Stochastic  Length(14)',  minval=1,  group='Stochastic  RSI')
if  calcStochRSI
        rsi1  =  ta.rsi(close,  lengthSTRSI)
        StochRSIk  :=  ta.sma(ta.stoch(rsi1,  rsi1,  rsi1,  lengthStoch),  smoothK)
        StochRSIk
//==================================================================================
calcSMIO  =  input.bool(true,  title='Use  SMIO  ?',  group='SMI  Ergodic  Oscillator')
longlenSMIO  =  input.int(20,  minval=1,  title='Long  Length(20)',  group='SMI  Ergodic  Oscillator')
shortlenSMIO  =  input.int(5,  minval=1,  title='Short  Length(5)',  group='SMI  Ergodic  Oscillator')
siglenSMIO  =  input.int(5,  minval=1,  title='Signal  Line  Length(5)',  group='SMI  Ergodic  Oscillator')
if  calcSMIO
        ergSMIO  =  ta.tsi(close,  shortlenSMIO,  longlenSMIO)
        sigSMIO  =  ta.ema(ergSMIO,  siglenSMIO)
        oscSMIO  :=  ergSMIO  -  sigSMIO
        oscSMIO
//==================================================================================
calcVWMACD_LB  =  input.bool(true,  title='Use  VWMACD_LB  ?',  group='Volume  Weighted  MACD  [LazyBear]')
slowVWMACD_LB  =  input.int(12,  'Short  period(12)',  minval=1)
fastVWMACD_LB  =  input.int(26,  'Long  period(26)',  minval=1)
signalVWMACD_LB  =  input.int(9,  'Smoothing  period(9)',  minval=1)
if  calcVWMACD_LB
        maFastVWMACD_LB  =  ta.ema(volume  *  close,  fastVWMACD_LB)  /  ta.ema(volume,  fastVWMACD_LB)
        maSlowVWMACD_LB  =  ta.ema(volume  *  close,  slowVWMACD_LB)  /  ta.ema(volume,  slowVWMACD_LB)
        dVWMACD_LB  =  maSlowVWMACD_LB  -  maFastVWMACD_LB
        maSignalVWMACD_LB  =  ta.ema(dVWMACD_LB,  signalVWMACD_LB)
        dmVWMACD_LB  :=  dVWMACD_LB  -  maSignalVWMACD_LB
        dmVWMACD_LB
//==================================================================================
calcBBP  =  input.bool(true,  title='Use  BBP',  group='Bull  Bear  Power')
lengthInputBBP  =  input.int(13,  title='BBP  Length(13)',  minval=1,  group='Bull  Bear  Power')
if  calcBBP
        bullPowerBBP  =  high  -  ta.ema(close,  lengthInputBBP)
        bearPowerBBP  =  low  -  ta.ema(close,  lengthInputBBP)
        BBPower  :=  bullPowerBBP  +  bearPowerBBP
        BBPower
//==================================================================================
calcBOP  =  input.bool(true,  title='Use  BOP',  group='Balance  of  Power')
EMA  =  input.int(20,  'BOP  Smooth  Length(20)',  minval=1,  group='Balance  of  Power')
TEMA  =  input.int(20,  'TRIPLE  Smooth  Length(20)',  minval=1,  group='Balance  of  Power')
if  calcBOP
        THL  =  high  !=  low  ?  high  -  low  :  0.01
        BullOpen  =  (high  -  open)  /  THL
        BearOpen  =  (open  -  low)  /  THL
        BullClose  =  (close  -  low)  /  THL
BearClose=(high-close)/THL
BullOC=close>open?(close-open)/THL:0
BearOC=open>close?(open-close)/THL:0
BullReward=(BullOpen+BullClose+BullOC)/3
BearReward=(BearOpen+BearClose+BearOC)/3
BOP=BullReward-BearReward
SmoothBOP=ta.ema(BOP,EMA)
xEMA1=ta.ema(SmoothBOP,TEMA)
xEMA2=ta.ema(xEMA1,TEMA)
xEMA3=ta.ema(xEMA2,TEMA)
nRes=3*xEMA1-3*xEMA2+xEMA3
SmootherBOP:=nRes
SmootherBOP
//==================================================================================
calcRVI=input.bool(true,title='UseRVI',group='RelativeVolatilityIndex')
lengthRVI=input.int(10,title='RVIlength(10)',minval=1,group='RelativeVolatilityIndex')
maTypeInput=input.string('WMA',title='MAType',options=['SMA','EMA','SMMA(RMA)','WMA','VWMA'],group='RelativeVolatilityIndex')
maLengthInput=input.int(14,title='MALength(14)',group='RelativeVolatilityIndex')
ifcalcRVI
stddevRVI=ta.stdev(close,lengthRVI)
upperRVI=ta.ema(ta.change(close)<=0?0:stddevRVI,14)
lowerRVI=ta.ema(ta.change(close)>0?0:stddevRVI,14)
rviRVI=upperRVI/(upperRVI+lowerRVI)*100
rviMA:=maTypeInput=='SMA'?ta.sma(rviRVI,maLengthInput):maTypeInput=='EMA'?ta.ema(rviRVI,maLengthInput):maTypeInput=='SMMA(RMA)'?ta.rma(rviRVI,maLengthInput):maTypeInput=='WMA'?ta.wma(rviRVI,maLengthInput):maTypeInput=='VWMA'?ta.vwma(rviRVI,maLengthInput):ta.wma(rviRVI,maLengthInput)
rviMA
//==================================================================================
//LogisticDominance
calcLD=input.bool(true,title='LogisticDominance',group='LogisticSettings')
source2=close
length=input.int(13,'MapLength(13)',minval=1,inline='LOG',group='LogisticSettings')
lenLD=input.int(5,'Dominance(5)',minval=1,inline='LOG',group='LogisticSettings')
f_logmap(_s,_r,_l)=>
_r*_s/ta.highest(_l)*(1-_s/ta.highest(_l))
f_map(_s,_r,_v)=>
mapeq=f_logmap(_s,_r,length)
lmap=mapeq
fori=0to29by1
array.push(_v,lmap)
lmap:=_r*math.abs(mapeq[i])*(1-mapeq[i])
lmap
lmap
ifcalcLD
r=-f_logmap(-source2,ta.change(source2,lenLD)/source2[lenLD],lenLD)-f_logmap(source2,ta.change(source2,lenLD)/source2[lenLD],lenLD)
varv=array.new_float(0)
val=f_map(source2,r,v)
array.remove(v,0)
aStDev:=math.sign(array.avg(v))*array.stdev(v)
array.clear(v)
//LogisticDominance
//==================================================================================
calcext=input(false,title='CheckExternalIndicator')
externalindi=input(defval=close,title='ExternalIndicator')
pos_reg_div_col=input(defval=color.yellow,title='PositiveRegularDivergence')
neg_reg_div_col=input(defval=color.navy,title='NegativeRegularDivergence')
pos_hid_div_col=input(defval=color.lime,title='PositiveHiddenDivergence')
neg_hid_div_col=input(defval=color.red,title='NegativeHiddenDivergence')
pos_div_text_col=input(defval=color.black,title='PositiveDivergenceTextColor')
neg_div_text_col=input(defval=color.white,title='NegativeDivergenceTextColor')
reg_div_l_style_=input.string(defval='Solid',title='RegularDivergenceLineStyle',options=['Solid','Dashed','Dotted'])
hid_div_l_style_=input.string(defval='Dashed',title='HddenDivergenceLineStyle',options=['Solid','Dashed','Dotted'])
reg_div_l_width=input.int(defval=2,title='RegularDivergenceLineWidth',minval=1,maxval=5)
hid_div_l_width=input.int(defval=1,title='HiddenDivergenceLineWidth',minval=1,maxval=5)
showmas=input.bool(defval=false,title='ShowMAs50&200',inline='ma12')
cma1col=input.color(defval=color.lime,title='',inline='ma12')
cma2col=input.color(defval=color.red,title='',inline='ma12')
plot(showmas?ta.sma(close,50):na,color=showmas?cma1col:na)
plot(showmas?ta.sma(close,200):na,color=showmas?cma2col:na)
//setlinestyles
varreg_div_l_style=reg_div_l_style_=='Solid'?line.style_solid:reg_div_l_style_=='Dashed'?line.style_dashed:line.style_dotted
varhid_div_l_style=hid_div_l_style_=='Solid'?line.style_solid:hid_div_l_style_=='Dashed'?line.style_dashed:line.style_dotted
//keepindicatorsnamesandcolorsinarrays
//!!!!!!!!DIMAK-addnumofIndicators+1
varindicators_name=array.new_string(19)
vardiv_colors=array.new_color(4)
ifbarstate.isfirst
//names
array.set(indicators_name,0,showindis=='Full'?'MACD':'M')
array.set(indicators_name,1,showindis=='Full'?'Hist':'H')
array.set(indicators_name,2,showindis=='Full'?'RSI':'E')
array.set(indicators_name,3,showindis=='Full'?'Stoch':'S')
array.set(indicators_name,4,showindis=='Full'?'CCI':'C')
array.set(indicators_name,5,showindis=='Full'?'MOM':'M')
array.set(indicators_name,6,showindis=='Full'?'OBV':'O')
array.set(indicators_name,7,showindis=='Full'?'VWMACD':'V')
array.set(indicators_name,8,showindis=='Full'?'CMF':'C')
array.set(indicators_name,9,showindis=='Full'?'MFI':'M')
array.set(indicators_name,10,showindis=='Full'?'Extrn':'X')
array.set(indicators_name,11,showindis=='Full'?'Logist':'L')
array.set(indicators_name,12,showindis=='Full'?'WVIX':'VIX')
array.set(indicators_name,13,showindis=='Full'?'StochRSI':'SR')
array.set(indicators_name,14,showindis=='Full'?'calcSMIO':'SM')
array.set(indicators_name,15,showindis=='Full'?'VWMACD_LB':'VWM')
array.set(indicators_name,16,showindis=='Full'?'BBP':'BBP')
array.set(indicators_name,17,showindis=='Full'?'BOP':'BOP')
array.set(indicators_name,18,showindis=='Full'?'RVI':'RVI')
//!!!!!!!!!!!DIMAK-numofInd+1
//colors
array.set(div_colors,0,pos_reg_div_col)
array.set(div_colors,1,neg_reg_div_col)
array.set(div_colors,2,pos_hid_div_col)
array.set(div_colors,3,neg_hid_div_col)
//CheckifwegetnewPivotHighOrPivotLow
floatph=ta.pivothigh(source=='Close'?close:high,prd,prd)
floatpl=ta.pivotlow(source=='Close'?close:low,prd,prd)
plotshape(phandshowpivot,text='H',style=shape.labeldown,color=color.new(color.white,100),textcolor=color.new(color.red,0),location=location.abovebar,offset=-prd)
plotshape(plandshowpivot,text='L',style=shape.labelup,color=color.new(color.white,100),textcolor=color.new(color.lime,0),location=location.belowbar,offset=-prd)
//keepvaluesandpositionsofPivotHighs/Lowsinthearrays
varintmaxarraysize=20
varph_positions=array.new_int(maxarraysize,0)
varpl_positions=array.new_int(maxarraysize,0)
varph_vals=array.new_float(maxarraysize,0.)
varpl_vals=array.new_float(maxarraysize,0.)
//addPHstothearray
ifph
array.unshift(ph_positions,bar_index)
array.unshift(ph_vals,ph)
ifarray.size(ph_positions)>maxarraysize
array.pop(ph_positions)
array.pop(ph_vals)
//addPLstothearray
ifpl
array.unshift(pl_positions,bar_index)
array.unshift(pl_vals,pl)
ifarray.size(pl_positions)>maxarraysize
array.pop(pl_positions)
array.pop(pl_vals)
//functionstocheckRegularDivergencesandHiddenDivergences
//functiontocheckpositiveregularornegativehiddendivergence
//cond==1=>positive_regular,cond==2=>negative_hidden
positive_regular_positive_hidden_divergence(src,cond)=>
divlen=0
prsc=source=='Close'?close:low
//ifindicatorshigherthanlastvalueandclosepriceishigherthanlasclose
ifdontconfirmorsrc>src[1]orclose>close[1]
startpoint=dontconfirm?0:1//don'tchecklastcandle
//wesearchlast15PPs
forx=0tomaxpp-1by1
len=bar_index-array.get(pl_positions,x)+prd
//ifwereachnonvaluedarrayelementorarrived101.orpreviousbarsthenwedon'tsearchmore
ifarray.get(pl_positions,x)==0orlen>maxbars
break
iflen>5and(cond==1andsrc[startpoint]>src[len]andprsc[startpoint]<nz(array.get(pl_vals,x))orcond==2andsrc[startpoint]<src[len]andprsc[startpoint]>nz(array.get(pl_vals,x)))
slope1=(src[startpoint]-src[len])/(len-startpoint)
virtual_line1=src[startpoint]-slope1
slope2=(close[startpoint]-close[len])/(len-startpoint)
virtual_line2=close[startpoint]-slope2
arrived=true
fory=1+startpointtolen-1by1
ifsrc[y]<virtual_line1ornz(close[y])<virtual_line2
arrived:=false
break
virtual_line1-=slope1
virtual_line2-=slope2
virtual_line2
ifarrived
divlen:=len
break
divlen
//functiontochecknegativeregularorpositivehiddendivergence
//cond==1=>negative_regular,cond==2=>positive_hidden
negative_regular_negative_hidden_divergence(src,cond)=>
divlen=0
prsc=source=='Close'?close:high
//ifindicatorshigherthanlastvalueandclosepriceishigherthanlasclose
ifdontconfirmorsrc<src[1]orclose<close[1]
startpoint=dontconfirm?0:1//don'tchecklastcandle
//wesearchlast15PPs
forx=0tomaxpp-1by1
len=bar_index-array.get(ph_positions,x)+prd
//ifwereachnonvaluedarrayelementorarrived101.orpreviousbarsthenwedon'tsearchmore
ifarray.get(ph_positions,x)==0orlen>maxbars
break
iflen>5and(cond==1andsrc[startpoint]<src[len]andprsc[startpoint]>nz(array.get(ph_vals,x))orcond==2andsrc[startpoint]>src[len]andprsc[startpoint]<nz(array.get(ph_vals,x)))
slope1=(src[startpoint]-src[len])/(len-startpoint)
virtual_line1=src[startpoint]-slope1
slope2=(close[startpoint]-nz(close[len]))/(len-startpoint)
virtual_line2=close[startpoint]-slope2
arrived=true
fory=1+startpointtolen-1by1
ifsrc[y]>virtual_line1ornz(close[y])>virtual_line2
arrived:=false
break
virtual_line1-=slope1
virtual_line2-=slope2
virtual_line2
ifarrived
divlen:=len
break
divlen
//calculate4typesofdivergenceifenabledintheoptionsandreturndivergencesinanarray
calculate_divs(cond,indicator_1)=>
divs=array.new_int(4,0)
array.set(divs,0,condand(searchdiv=='Regular'orsearchdiv=='Regular/Hidden')?positive_regular_positive_hidden_divergence(indicator_1,1):0)
array.set(divs,1,condand(searchdiv=='Regular'orsearchdiv=='Regular/Hidden')?negative_regular_negative_hidden_divergence(indicator_1,1):0)
array.set(divs,2,condand(searchdiv=='Hidden'orsearchdiv=='Regular/Hidden')?positive_regular_positive_hidden_divergence(indicator_1,2):0)
array.set(divs,3,condand(searchdiv=='Hidden'orsearchdiv=='Regular/Hidden')?negative_regular_negative_hidden_divergence(indicator_1,2):0)
divs
//arraytokeepalldivergences
//!!!!!!!!!!DIMAK-addnumofIndicators*4
varall_divergences=array.new_int(76)//11indicators*4divergence=44elements
//setrelatedarrayelements
array_set_divs(div_pointer,index)=>
forx=0to3by1
array.set(all_divergences,index*4+x,array.get(div_pointer,x))
//setdivergencesarray
ifcalcmacd
array_set_divs(calculate_divs(calcmacd,macd),0)
ifcalcmacda
array_set_divs(calculate_divs(calcmacda,deltamacd),1)
ifcalcrsi
array_set_divs(calculate_divs(calcrsi,rsi),2)
ifcalcstoc
array_set_divs(calculate_divs(calcstoc,stk),3)
ifcalccci
array_set_divs(calculate_divs(calccci,cci),4)
ifcalcmom
array_set_divs(calculate_divs(calcmom,moment),5)
ifcalcobv
array_set_divs(calculate_divs(calcobv,Obv),6)
ifcalcvwmacd
array_set_divs(calculate_divs(calcvwmacd,vwmacd),7)
ifcalccmf
array_set_divs(calculate_divs(calccmf,cmf),8)
ifcalcmfi
array_set_divs(calculate_divs(calcmfi,Mfi),9)
ifcalcext
array_set_divs(calculate_divs(calcext,externalindi),10)
ifcalcLD
array_set_divs(calculate_divs(calcLD,aStDev),11)
ifcalcWVIX
array_set_divs(calculate_divs(calcWVIX,wvf),12)
ifcalcStochRSI
array_set_divs(calculate_divs(calcStochRSI,StochRSIk),13)
ifcalcSMIO
array_set_divs(calculate_divs(calcSMIO,oscSMIO),14)
ifcalcVWMACD_LB
array_set_divs(calculate_divs(calcVWMACD_LB,dmVWMACD_LB),15)
ifcalcBBP
array_set_divs(calculate_divs(calcBBP,BBPower),16)
ifcalcBOP
array_set_divs(calculate_divs(calcBOP,SmootherBOP),17)
ifcalcRVI
array_set_divs(calculate_divs(calcRVI,rviMA),18)
//!!!!!!!DIMAK-addnumofIndicators
//checkminimumnumberofdivergence,iflessthanshowlimitthendeletealldivergence
total_div=0
forx=0toarray.size(all_divergences)-1by1
total_div+=math.round(math.sign(array.get(all_divergences,x)))
iftotal_div<showlimit
array.fill(all_divergences,0)
//keeplineinanarray
varpos_div_lines=array.new_line(0)
varneg_div_lines=array.new_line(0)
varpos_div_labels=array.new_label(0)
varneg_div_labels=array.new_label(0)
//removeoldlinesandlabelsifshowlastoptionisenabled
delete_old_pos_div_lines()=>
ifarray.size(pos_div_lines)>0
forj=0toarray.size(pos_div_lines)-1by1
line.delete(array.get(pos_div_lines,j))
1
array.clear(pos_div_lines)
delete_old_neg_div_lines()=>
ifarray.size(neg_div_lines)>0
forj=0toarray.size(neg_div_lines)-1by1
line.delete(array.get(neg_div_lines,j))
1
array.clear(neg_div_lines)
delete_old_pos_div_labels()=>
ifarray.size(pos_div_labels)>0
forj=0toarray.size(pos_div_labels)-1by1
label.delete(array.get(pos_div_labels,j))
array.clear(pos_div_labels)
delete_old_neg_div_labels()=>
ifarray.size(neg_div_labels)>0
forj=0toarray.size(neg_div_labels)-1by1
label.delete(array.get(neg_div_labels,j))
array.clear(neg_div_labels)
//deletelastcretedlinesandlabelsuntilwemetnewPH/PV
delete_last_pos_div_lines_label(n)=>
ifn>0andarray.size(pos_div_lines)>=n
asz=array.size(pos_div_lines)
forj=1tonby1
line.delete(array.get(pos_div_lines,asz-j))
array.pop(pos_div_lines)
ifarray.size(pos_div_labels)>0
label.delete(array.get(pos_div_labels,array.size(pos_div_labels)-1))
array.pop(pos_div_labels)
delete_last_neg_div_lines_label(n)=>
ifn>0andarray.size(neg_div_lines)>=n
asz=array.size(neg_div_lines)
forj=1tonby1
line.delete(array.get(neg_div_lines,asz-j))
array.pop(neg_div_lines)
ifarray.size(neg_div_labels)>0
label.delete(array.get(neg_div_labels,array.size(neg_div_labels)-1))
array.pop(neg_div_labels)
//variablesforAlerts
pos_reg_div_detected=false
neg_reg_div_detected=false
pos_hid_div_detected=false
neg_hid_div_detected=false
//toremovelines/labelsuntilwemetnew//PH/PL
varlast_pos_div_lines=0
varlast_neg_div_lines=0
varremove_last_pos_divs=false
varremove_last_neg_divs=false
ifpl
remove_last_pos_divs:=false
last_pos_div_lines:=0
last_pos_div_lines
ifph
remove_last_neg_divs:=false
last_neg_div_lines:=0
last_neg_div_lines
//drawdivergenceslinesandlabels
divergence_text_top=''
divergence_text_bottom=''
distances=array.new_int(0)
dnumdiv_top=0
dnumdiv_bottom=0
top_label_col=color.white
bottom_label_col=color.white
old_pos_divs_can_be_removed=true
old_neg_divs_can_be_removed=true
startpoint=dontconfirm?0:1//usedfordon'tconfirmoption
//!!!!!!!!!!!!DIMAK-addnumofIndicators
forx=0to18by1
div_type=-1
fory=0to3by1
ifarray.get(all_divergences,x*4+y)>0//anydivergence?
div_type:=y
ify%2==1
dnumdiv_top+=1
top_label_col:=array.get(div_colors,y)
top_label_col
ify%2==0
dnumdiv_bottom+=1
bottom_label_col:=array.get(div_colors,y)
bottom_label_col
ifnotarray.includes(distances,array.get(all_divergences,x*4+y))//linenotexist?
array.push(distances,array.get(all_divergences,x*4+y))
new_line=showlines?line.new(x1=bar_index-array.get(all_divergences,x*4+y),y1=source=='Close'?close[array.get(all_divergences,x*4+y)]:y%2==0?low[array.get(all_divergences,x*4+y)]:high[array.get(all_divergences,x*4+y)],x2=bar_index-startpoint,y2=source=='Close'?close[startpoint]:y%2==0?low[startpoint]:high[startpoint],color=array.get(div_colors,y),style=y<2?reg_div_l_style:hid_div_l_style,width=y<2?reg_div_l_width:hid_div_l_width):na
ify%2==0
ifold_pos_divs_can_be_removed
old_pos_divs_can_be_removed:=false
ifnotshowlastandremove_last_pos_divs
delete_last_pos_div_lines_label(last_pos_div_lines)
last_pos_div_lines:=0
last_pos_div_lines
ifshowlast
delete_old_pos_div_lines()
array.push(pos_div_lines,new_line)
last_pos_div_lines+=1
remove_last_pos_divs:=true
remove_last_pos_divs
ify%2==1
ifold_neg_divs_can_be_removed
old_neg_divs_can_be_removed:=false
ifnotshowlastandremove_last_neg_divs
delete_last_neg_div_lines_label(last_neg_div_lines)
last_neg_div_lines:=0
last_neg_div_lines
ifshowlast
delete_old_neg_div_lines()
array.push(neg_div_lines,new_line)
last_neg_div_lines+=1
remove_last_neg_divs:=true
remove_last_neg_divs
//setvariablesforalerts
ify==0
pos_reg_div_detected:=true
pos_reg_div_detected
ify==1
neg_reg_div_detected:=true
neg_reg_div_detected
ify==2
pos_hid_div_detected:=true
pos_hid_div_detected
ify==3
neg_hid_div_detected:=true
neg_hid_div_detected
//gettextforlabels
ifdiv_type>=0
divergence_text_top+=(div_type%2==1?showindis!='Don\'tShow'?array.get(indicators_name,x)+'\n':'':'')
divergence_text_bottom+=(div_type%2==0?showindis!='Don\'tShow'?array.get(indicators_name,x)+'\n':'':'')
divergence_text_bottom
//drawlabels
ifshowindis!='Don\'tShow'orshownum
ifshownumanddnumdiv_top>0
divergence_text_top+=str.tostring(dnumdiv_top)
divergence_text_top
ifshownumanddnumdiv_bottom>0
divergence_text_bottom+=str.tostring(dnumdiv_bottom)
divergence_text_bottom
ifdivergence_text_top!=''
ifshowlast
delete_old_neg_div_labels()
array.push(neg_div_labels,label.new(x=bar_index,y=math.max(high,high[1]),text=divergence_text_top,color=top_label_col,textcolor=neg_div_text_col,style=label.style_label_down))
ifdivergence_text_bottom!=''
ifshowlast
delete_old_pos_div_labels()
array.push(pos_div_labels,label.new(x=bar_index,y=math.min(low,low[1]),text=divergence_text_bottom,color=bottom_label_col,textcolor=pos_div_text_col,style=label.style_label_up))
//alertcondition(pos_reg_div_detected,title='PositiveRegularDivergenceDetected',message='PositiveRegularDivergenceDetected')
//alertcondition(neg_reg_div_detected,title='NegativeRegularDivergenceDetected',message='NegativeRegularDivergenceDetected')
//alertcondition(pos_hid_div_detected,title='PositiveHiddenDivergenceDetected',message='PositiveHiddenDivergenceDetected')
//alertcondition(neg_hid_div_detected,title='NegativeHiddenDivergenceDetected',message='NegativeHiddenDivergenceDetected')
//alertcondition(pos_reg_div_detectedorpos_hid_div_detected,title='PositiveDivergenceDetected',message='PositiveDivergenceDetected')
//alertcondition(neg_reg_div_detectedorneg_hid_div_detected,title='NegativeDivergenceDetected',message='NegativeDivergenceDetected')
//===================================================================================================
GRUPO_KC='KeltnerChannel'
use_KC=input.bool(false,'UseChannel?',group=GRUPO_KC)
P_indicador=input.string('KeltnerChannel','ChanneltoUse:',options=['KeltnerChannel','BollingerBands'],group=GRUPO_KC)
P_cond_entrada=input.string('Wickoutofband','EnterConditions',options=['Wickoutofband','Wickoutofthebandthenclosein','Out-of-bandclosure','Closeoutofthebandthenclosein'],group=GRUPO_KC)
KC_length=input.int(title='KeltnerLong.',group=GRUPO_KC,defval=14,minval=1,inline='kc')
KC_mult=input.float(title='KeltnerMult.',group=GRUPO_KC,defval=1.5,minval=0.01,step=0.05,inline='kc')
[KC_mid,KC_upper,KC_lower]=ta.kc(close,KC_length,KC_mult)
GRUPO_BB='BollingerBandsFilter'
BB_length=input.int(title='BBLong.',group=GRUPO_KC,defval=20,minval=1,inline='bb')
BB_dev=input.float(title='BBDeviation(Desv.)',group=GRUPO_KC,defval=2.0,minval=0.01,step=0.1,inline='bb')
[BB_mid,BB_upper,BB_lower]=ta.bb(close,BB_length,BB_dev)
Kanal_upper=KC_upper
Kanal_mid=KC_mid
Kanal_lower=KC_lower
ifP_indicador=='BollingerBands'
Kanal_upper:=BB_upper
Kanal_mid:=BB_mid
Kanal_lower:=BB_lower
//Kanal_lower
//displ=display.none
displ=use_KC?display.all:display.none
plot(Kanal_upper,'UP',color.new(color.aqua,0),display=displ)
plot(Kanal_mid,'Mid',color.new(color.orange,0),display=displ)
plot(Kanal_lower,'DOWN',color.new(color.aqua,0),display=displ)
longCondition2=true
shortCondition2=true
ifuse_KC
longCondition2:=false
shortCondition2:=false
ifP_cond_entrada=='Wickoutofband'
longCondition2:=low<Kanal_lower
shortCondition2:=high>Kanal_upper
shortCondition2
elseifP_cond_entrada=='Wickoutofthebandthenclosein'
longCondition2:=low[1]<Kanal_lowerandclose>Kanal_lower
shortCondition2:=high[1]>Kanal_upperandclose<Kanal_upper
shortCondition2
elseifP_cond_entrada=='Out-of-bandclosure'
longCondition2:=close<Kanal_lower
shortCondition2:=close>Kanal_upper
shortCondition2
else
//Closeoutofthebandthenclosein
longCondition2:=close[1]<Kanal_lowerandclose>Kanal_lower
shortCondition2:=close[1]>Kanal_upperandclose<Kanal_upper
shortCondition2
else
longCondition2:=true
shortCondition2:=true
shortCondition2
//===================================================================================================
//=======================dimakRSItimeframeBegin1111111====================
GRUPO_RSI_TF="==========RSIFILTER============"
lengthRSI=input.int(title="RSITFLong(14):",group=GRUPO_RSI_TF,defval=14,minval=1)
tf_rsi_indicator=input.timeframe("",title="RSITimeFrame:",group=GRUPO_RSI_TF)
useRSITFoverSold=input.bool(false,'UseRSILONGRange',group=GRUPO_RSI_TF)
overSoldRSITF=input.int(title='(LONG)RSIisMore',group=GRUPO_RSI_TF,defval=30,step=5,minval=1,inline='22')
overSold2RSITF=input.int(title='&RSILess',group=GRUPO_RSI_TF,defval=70,minval=1,maxval=100,step=5,inline='22')
useRSITFFoverBought=input.bool(false,'UseRSISHORTRange',group=GRUPO_RSI_TF)
overBoughtRSITF=input.int(title='(SHORT)RSIisLess',group=GRUPO_RSI_TF,defval=70,step=5,minval=1,maxval=100,inline='33')
overBought2RSITF=input.int(title='&RSIMore',group=GRUPO_RSI_TF,defval=30,minval=1,step=5,inline='33')
//rsi_tf1=request.security(syminfo.tickerid,tf_rsi_indicator,ta.rsi(close,lengthRSI),barmerge.gaps_off)
rsi_tf1=f_security(syminfo.tickerid,tf_rsi_indicator,ta.rsi(close,lengthRSI),false)//Repaint=false
//=====================================================
longCondition8=true
shortCondition8=true
ifuseRSITFoverSoldoruseRSITFFoverBought
longCondition8:=false
shortCondition8:=false
ifuseRSITFoverSoldand(rsi_tf1>=overSoldRSITF)and(rsi_tf1<=overSold2RSITF)
longCondition8:=true

ifuseRSITFFoverBoughtand(rsi_tf1<=overBoughtRSITF)and(rsi_tf1>=overBought2RSITF)
shortCondition8:=true
else
longCondition8:=true
shortCondition8:=true
//dimakRSItimeframeEND
//=====================================================
//=======================dimakRSItimeframeBegin22222222====================
GRUPO_RSI_TF2="=======RSIFILTER-MultiTimeFrame[2]======="
lengthRSI2=input.int(title="RSITFLong(14):[2]",group=GRUPO_RSI_TF2,defval=14,minval=1)
tf_rsi_indicator2=input.timeframe("",title="RSITimeFrame:[2]",group=GRUPO_RSI_TF2)
useRSITFoverSold2=input.bool(false,'UseRSILONGRange[2]',group=GRUPO_RSI_TF2)
overSoldRSITF2=input.int(title='(LONG)RSIisMore[2]',group=GRUPO_RSI_TF2,defval=30,step=5,minval=1,inline='22')
overSold2RSITF2=input.int(title='&RSILess[2]',group=GRUPO_RSI_TF2,defval=70,minval=1,maxval=100,step=5,inline='22')
useRSITFFoverBought2=input.bool(false,'UseRSISHORTRange[2]',group=GRUPO_RSI_TF2)
overBoughtRSITF2=input.int(title='(SHORT)RSIisLess[2]',group=GRUPO_RSI_TF2,defval=70,maxval=100,step=5,minval=1,inline='33')
overBought2RSITF2=input.int(title='&RSIMore[2]',group=GRUPO_RSI_TF2,defval=30,minval=1,step=5,inline='33')
//rsi_tf2=request.security(syminfo.tickerid,tf_rsi_indicator2,ta.rsi(close,lengthRSI2),barmerge.gaps_off)
rsi_tf2=f_security(syminfo.tickerid,tf_rsi_indicator2,ta.rsi(close,lengthRSI2),false)//Repaint=false
//=====================================================
longCondition10=true
shortCondition10=true
ifuseRSITFoverSold2oruseRSITFFoverBought2andnotna(rsi_tf2)
longCondition10:=false
shortCondition10:=false
ifuseRSITFoverSold2and(rsi_tf2>=overSoldRSITF2)and(rsi_tf2<=overSold2RSITF2)
longCondition10:=true

ifuseRSITFFoverBought2and(rsi_tf2<=overBoughtRSITF2)and(rsi_tf2>=overBought2RSITF2)
shortCondition10:=true
else
longCondition10:=true
shortCondition10:=true
//dimakRSItimeframeEND
//=====================================================
//============dimak"MoneyFlowIndex"FilterTimeframe[111]=============
GRUPO_MFI_TF='===========MFIFILTER==========='
lengthMFI=input.int(title='MFITFLong:',group=GRUPO_MFI_TF,defval=14,minval=1)
tf_mfi_indicator=input.timeframe('',title='MFITimeFrame:',group=GRUPO_MFI_TF)
useMFITFoverSold=input.bool(false,'UseMFILONGRange',group=GRUPO_MFI_TF)
overSold=input.int(title='(LONG)MFIisMore',group=GRUPO_MFI_TF,defval=10,step=5,minval=1,inline='22')
overSold2=input.int(title='&MFILess',group=GRUPO_MFI_TF,defval=60,maxval=100,step=5,minval=1,inline='22')
useMFITFoverBought=input.bool(false,'UseMFISHORTRange',group=GRUPO_MFI_TF)
overBought=input.int(title='(SHORT)MFIisLess',group=GRUPO_MFI_TF,defval=95,maxval=100,step=5,minval=1,inline='33')
overBought2=input.int(title='&MFIMore',group=GRUPO_MFI_TF,defval=50,maxval=100,step=5,minval=1,inline='33')
mfi_tf1=f_security(syminfo.tickerid,tf_mfi_indicator,ta.mfi(hlc3,lengthMFI),true)//Repaint=false
//mfi_tf1=request.security(syminfo.tickerid,tf_mfi_indicator,ta.mfi(hlc3,lengthMFI),barmerge.gaps_off)
//=====================================================
longCondition4=true
shortCondition4=true

ifuseMFITFoverSoldoruseMFITFoverBought
longCondition4:=false
shortCondition4:=false
ifuseMFITFoverSoldand(mfi_tf1>overSold)and(mfi_tf1<overSold2)
longCondition4:=true

ifuseMFITFoverBoughtand(mfi_tf1<overBought)and(mfi_tf1>overBought2)
shortCondition4:=true

else
longCondition4:=true
shortCondition4:=true

//dimakMFItimeframe[111]END
//=====================================================
use_mfi_tf1_rising=input.bool(false,'UseMFITFRising?',group=GRUPO_MFI_TF)
mfi_tf1_rising_len=input.int(3,title='MFITFRisingLengh:',group=GRUPO_MFI_TF,minval=0,maxval=20)
use_mfi_tf1_falling=input.bool(false,'UseMFITFFalling?',group=GRUPO_MFI_TF)
mfi_tf1_falling_len=input.int(3,title='MFITFFallingLengh:',group=GRUPO_MFI_TF,minval=0,maxval=20)
mfi_tf1_falling=ta.falling(mfi_tf1,mfi_tf1_falling_len)
mfi_tf1_rising=ta.rising(mfi_tf1,mfi_tf1_rising_len)
//mfi_tf1_falling_tf=request.security(syminfo.tickerid,tf_mfi_indicator,mfi_tf1_falling,barmerge.gaps_off)
//mfi_tf1_rising_tf=request.security(syminfo.tickerid,tf_mfi_indicator,mfi_tf1_rising,barmerge.gaps_off)
mfi_tf1_falling_tf=f_security(syminfo.tickerid,tf_mfi_indicator,mfi_tf1_falling,true)//Repaint=false
mfi_tf1_rising_tf=f_security(syminfo.tickerid,tf_mfi_indicator,mfi_tf1_rising,true)//Repaint=false

longCondition12=true
shortCondition12=true

ifuse_mfi_tf1_fallingoruse_mfi_tf1_rising

longCondition12:=false
shortCondition12:=false

if(use_mfi_tf1_fallingandmfi_tf1_falling_tf)or(use_mfi_tf1_risingandmfi_tf1_rising_tf)
shortCondition12:=true
longCondition12:=true

else
longCondition12:=true
shortCondition12:=true

//dimakMFItimeframeEND
//=====================================================
//=====================================================
//TwoATR(VolatilityCheck)
grDATR="=======TwoATR(VolatilityCheck)BaseSettings========="
//useDATR=input(defval=false,title='UseTwoATR(VolatilityCheck)?',group=grDATR)
lengthDATR=input.int(title='ATRlength1(20)(5)',defval=20,minval=1,group=grDATR)
length2DATR=input.int(title='ATRlength2(100)(20)',defval=100,minval=1,group=grDATR)
smoothingDATR=input.string(title='ATRSmoothing',defval='WMA',options=['RMA','SMA','EMA','WMA'],group=grDATR)
DATR_ma_function(sourceDATR,lengthDATR1)=>
ifsmoothingDATR=='RMA'
ta.rma(sourceDATR,lengthDATR1)
else
ifsmoothingDATR=='SMA'
ta.sma(sourceDATR,lengthDATR1)
else
ifsmoothingDATR=='EMA'
ta.ema(sourceDATR,lengthDATR1)
else//WMA
ta.wma(sourceDATR,lengthDATR1)
datr1=DATR_ma_function(ta.tr(true),lengthDATR)
datr2=DATR_ma_function(ta.tr(true),length2DATR)
//ATRHistograme
datr_hist=datr1-datr2
//plot(datr1+0.4,title='ATR',color=color.new(#77C5E1,0))
//plot(datr2+0.4,title='ATR',color=color.new(#FF5252,0))
//plot(datr_hist,color=color.red,style=plot.style_histogram)
//blockforfilters"ATR1<ATR2"BEGIN
//"ATR1<ATR2-VolatilityisSmallinlastbars,ATR1>ATR2-VolatilityisHighinlastbars"
//grATR1ATR2="===============TwoATR(ATR1<>ATR2)=============="
use_atr1toart2_more_less=input(defval=false,title='UseATR1<>ATR2?',group=grDATR)
atr1toart2_more_less=input.string(title='ATR1toATR2',defval='ATR1<ATR2',options=['ATR1<ATR2','ATR1>ATR2'],group=grDATR,tooltip="ATR1<ATR2-VolatilityisSmallinlastbars,ATR1>ATR2-VolatilityisHighinlastbars")
datr1todatr3=use_atr1toart2_more_lessand(atr1toart2_more_less=="ATR1<ATR2")and(datr1<datr2)?true:use_atr1toart2_more_lessand(atr1toart2_more_less=="ATR1>ATR2")and(datr1>datr2)?true:false
longCondition1=true
shortCondition1=true
ifuse_atr1toart2_more_less
longCondition1:=false
shortCondition1:=false

longCondition1:=datr1todatr3
shortCondition1:=longCondition1
else
longCondition1:=true
shortCondition1:=true
//shortCondition1andlongCondition1isifFastATRMustbehigher(orLower)thanSlowATR!!!
//blockforfilters"ATR1<ATR2"END
//==========================================================================
//NOTE"ATR1<ATR2"and(Barssince_Highest/Lowest+falling/rising)areworkingseparately.ButSameATRsettings
//==========================================================================
//==========TwoAverageTrueRange===============================
//====================VolumeFilter===================Begin
grVOL="=======VolumeFilter========="
use_VOL_more_less=input(defval=false,title='UseVOL1<>VOL2?',group=grVOL)
VOL_more_less=input.string(title='VOL1toVOL2',defval='VOL1<VOL2',options=['VOL1<VOL2','VOL1>VOL2'],group=grVOL,tooltip="VOL1<VOL2-VolumeisSmallinlastbars,VOL1>VOL2-VolumeisHighinlastbars")
lengthVOL=input.int(title='VOLlength1(20)(5)',defval=20,minval=1,group=grVOL)
length2VOL=input.int(title='VOLlength2(100)(20)',defval=100,minval=1,step=5,group=grVOL)
smoothingVOL=input.string(title='VOLSmoothing',defval='WMA',options=['RMA','SMA','EMA','WMA'],group=grVOL)
VOL_ma_function(sourceVOL,XlengthVOL)=>
ifsmoothingVOL=='RMA'
ta.rma(sourceVOL,XlengthVOL)
else
ifsmoothingVOL=='SMA'
ta.sma(sourceVOL,XlengthVOL)
else
ifsmoothingVOL=='EMA'
ta.ema(sourceVOL,XlengthVOL)
else//WMA
ta.wma(sourceVOL,XlengthVOL)
vol1=VOL_ma_function(volume,lengthVOL)
vol2=VOL_ma_function(volume,length2VOL)
longCondition11=true
shortCondition11=true
ifuse_VOL_more_less
longCondition11:=false
shortCondition11:=false

longCondition11:=use_VOL_more_lessand(VOL_more_less=="VOL1<VOL2")and(vol1<vol2)?true:use_VOL_more_lessand(VOL_more_less=="VOL1>VOL2")and(vol1>vol2)?true:false
shortCondition11:=longCondition11
else
longCondition11:=true
shortCondition11:=true
//====================VolumeFilter===================END
//=======================dimakCCItimeframeBegin1111111====================
GRUPO_CCI_TF="==========CCIFILTER============"
lengthCCI=input.int(title="CCITFLong(14):",group=GRUPO_CCI_TF,defval=14,minval=1)
tf_CCI_indicator=input.timeframe("",title="CCITimeFrame:",group=GRUPO_CCI_TF)
useCCITFoverSold=input.bool(false,'UseCCILONGRange',group=GRUPO_CCI_TF)
overSoldCCITF=input.int(title='(LONG)CCIisMore',group=GRUPO_CCI_TF,defval=-400,step=5,minval=-400,inline='22')
overSold2CCITF=input.int(title='&CCILess',group=GRUPO_CCI_TF,defval=400,minval=-401,maxval=400,step=5,inline='22')
useCCITFFoverBought=input.bool(false,'UseCCISHORTRange',group=GRUPO_CCI_TF)
overBoughtCCITF=input.int(title='(SHORT)CCIisLess',group=GRUPO_CCI_TF,defval=400,step=5,minval=-401,maxval=400,inline='33')
overBought2CCITF=input.int(title='&CCIMore',group=GRUPO_CCI_TF,defval=10,minval=-401,step=5,inline='33')
//CCI_tf1=request.security(syminfo.tickerid,tf_CCI_indicator,ta.cci(close,lengthCCI),barmerge.gaps_off)
CCI_tf1=f_security(syminfo.tickerid,tf_CCI_indicator,ta.cci(close,lengthCCI),false)//Repaint=false
//=====================================================
longCondition9=true
shortCondition9=true
ifuseCCITFoverSoldoruseCCITFFoverBought
longCondition9:=false
shortCondition9:=false
ifuseCCITFoverSoldand(CCI_tf1>=overSoldCCITF)and(CCI_tf1<=overSold2CCITF)
longCondition9:=true

ifuseCCITFFoverBoughtand(CCI_tf1<=overBoughtCCITF)and(CCI_tf1>=overBought2CCITF)
shortCondition9:=true
else
longCondition9:=true
shortCondition9:=true
//dimakCCItimeframeEND
//=====================================================
//=======================dimakMomentumtimeframeBegin1111111====================
GRUPO_MOM_TF="==========MomentumFILTER============"
lengthMOM=input.int(title="MomentumTFLong(14):",group=GRUPO_MOM_TF,defval=14,minval=1)
tf_MOM_indicator=input.timeframe("",title="MomentumTimeFrame:",group=GRUPO_MOM_TF)
useMOMTFoverSold=input.bool(false,'UseMomentumLONGRange(-100:100)',group=GRUPO_MOM_TF)
overSoldMOMTF=input.int(title='(LONG)MomentumisMore',group=GRUPO_MOM_TF,defval=-100,step=5,minval=-100,maxval=100,inline='22')
overSold2MOMTF=input.int(title='&MomLess',group=GRUPO_MOM_TF,defval=10,minval=-100,maxval=100,step=5,inline='22')
useMOMTFFoverBought=input.bool(false,'UseMomentumSHORTRange(100:-100)',group=GRUPO_MOM_TF)
overBoughtMOMTF=input.int(title='(SHORT)MomentumisLess',group=GRUPO_MOM_TF,defval=95,step=5,minval=-100,maxval=100,inline='33')
overBought2MOMTF=input.int(title='&MomMore',group=GRUPO_MOM_TF,defval=-30,minval=-100,maxval=100,step=5,inline='33')
srcMOM=input(close,"MomentumSource",group=GRUPO_MOM_TF)
momm=ta.change(srcMOM)
f1(m)=>m>=0.0?m:0.0
f2(m)=>m>=0.0?0.0:-m
m1=f1(momm)
m2=f2(momm)
sm1=math.sum(m1,lengthMOM)
sm2=math.sum(m2,lengthMOM)
percent(nom,div)=>100*nom/div
chandeMO=percent(sm1-sm2,sm1+sm2)
//MOM_tf2=request.security(syminfo.tickerid,tf_MOM_indicator,chandeMO,barmerge.gaps_off)
MOM_tf2=f_security(syminfo.tickerid,tf_MOM_indicator,chandeMO,false)//Repaint=false
//=====================================================
longCondition3=true
shortCondition3=true
ifuseMOMTFoverSoldoruseMOMTFFoverBought
longCondition3:=false
shortCondition3:=false
ifuseMOMTFoverSoldand(MOM_tf2>=overSoldMOMTF)and(MOM_tf2<=overSold2MOMTF)
longCondition3:=true

ifuseMOMTFFoverBoughtand(MOM_tf2<=overBoughtMOMTF)and(MOM_tf2>=overBought2MOMTF)
shortCondition3:=true
else
longCondition3:=true
shortCondition3:=true
//dimakMOMtimeframeEND
//=====================================================
//==========SuperTrend===============================Begin
grSUPTREND="=============SUPERTRENDFILTER============="
useSUPTREND=input(defval=false,title='UseSuperTrend?',group=grSUPTREND)
opposite_SUPTREND=input(defval=false,title='OppositeSPSignal?(SellonUPtrend..)',group=grSUPTREND)
PeriodsST=input.int(title='SuperTrendATRPeriod',defval=10,minval=1,group=grSUPTREND)
MultiplierST=input.float(title='SuperTrendATRMultiplier',step=0.1,defval=3.0,group=grSUPTREND)
//srcST=input(hl2,title='SuperTrendSource',group=grSUPTREND)
srcST=hl2
//changeATR=input(title='SetATRSmoothingtoSMA?',defval=true,group=grSUPTREND)
changeATR=true
highlightingST=input(title='ShowSuperTrend?',defval=false,group=grSUPTREND)
atr2ST=ta.sma(ta.tr,PeriodsST)
atrST=changeATR?ta.atr(PeriodsST):atr2ST
upST=srcST-MultiplierST*atrST
up1ST=nz(upST[1],upST)
upST:=close[1]>up1ST?math.max(upST,up1ST):upST
dnST=srcST+MultiplierST*atrST
dn1ST=nz(dnST[1],dnST)
dnST:=close[1]<dn1ST?math.min(dnST,dn1ST):dnST
trendST=1
trendST:=nz(trendST[1],trendST)
trendST:=trendST==-1andclose>dn1ST?1:trendST==1andclose<up1ST?-1:trendST
//checkifTrendChanged.Notusednow.Commentedbelow.
buySignalST=trendST==1andtrendST[1]==-1
sellSignalST=trendST==-1andtrendST[1]==1
//checkifTrendChanged.Notusednow.Commentedbelow.
//visual
displST=highlightingST?display.all:display.none
upPlot=plot(trendST==1?upST:na,title='UpTrend',style=plot.style_linebr,linewidth=2,color=color.new(color.green,0),display=displST)
dnPlot=plot(trendST==1?na:dnST,title='DownTrend',style=plot.style_linebr,linewidth=2,color=color.new(color.red,0),display=displST)
mPlot=plot(ohlc4,title='',style=plot.style_circles,linewidth=0)
fill(mPlot,upPlot,title='UpTrendHighligter',color=color.rgb(76,144,175,90),display=displST)
fill(mPlot,dnPlot,title='DownTrendHighligter',color=color.rgb(255,82,255,90),display=displST)
//visual
longCondition5=true
shortCondition5=true
ifuseSUPTREND
longCondition5:=false
shortCondition5:=false

longCondition5:=trendST==1andnotopposite_SUPTREND?true:trendST==-1andopposite_SUPTREND?true:false
shortCondition5:=trendST==-1andnotopposite_SUPTREND?true:trendST==1andopposite_SUPTREND?true:false
//signalsbychangetrend
//longCondition5:=notopposite_SUPTREND?buySignalST:sellSignalST
//shortCondition5:=notopposite_SUPTREND?sellSignalST:buySignalST
else
longCondition5:=true
shortCondition5:=true
//==========SuperTrend===============================End
//===================================================================================================
ifUSE_SignSL
//ifpos_reg_div_detectedandnotenable_long_strategy
ifpos_reg_div_detectedandlongCondition1andlongCondition2andlongCondition3andlongCondition4andlongCondition5andlongCondition8andlongCondition9andlongCondition10andlongCondition11andlongCondition12
strategy.close('sell',comment='CloseShortL-Sign',alert_message='stoploss')

//ifneg_reg_div_detectedandnotenable_short_strategy
ifneg_reg_div_detectedandshortCondition1andshortCondition2andshortCondition3andshortCondition4andshortCondition5andshortCondition8andshortCondition9andshortCondition10andshortCondition11andshortCondition12
strategy.close('buy',comment='CloseLongS-Sign',alert_message='stoploss')
//===================================================================================================
//==TESTCODEby=================================================================================================
//reverseCond=strategy.closedtrades.exit_comment(strategy.closedtrades-1)
//exitPrice=strategy.closedtrades.exit_price(strategy.closedtrades-1)
//ifstrategy.position_size==0andreverseCond=='LSL'
//strategy.entry('sell',strategy.short,alert_message='enter_cycle')
//ifstrategy.position_size==0andreverseCond=='SSL'
//strategy.entry('buy',strategy.long,alert_message='enter_cycle')
//=====TESTCODEby==============================================================================================
NotMultiOrders=((strategy.closedtrades==0)or((bar_index!=strategy.closedtrades.entry_bar_index(strategy.closedtrades-1))))
//NotMultiOrders=true
//============NeworderafterSL=======================================================================================
varwasLong=false
varwasShort=false
ifUSEorderOnSLandstrategy.closedtrades.exit_bar_index(strategy.closedtrades-1)==bar_indexandNotMultiOrders
ifwasLong
wasLong:=false
strategy.entry('sell222',strategy.short,alert_message='enter_cycle')

ifwasShort
wasShort:=false
strategy.entry('buy222',strategy.long,alert_message='enter_cycle')
//=============NeworderafterSL===================================================================

//===================================================================================================
ifpos_reg_div_detectedandenable_long_strategyandtestPeriod()andNotMultiOrdersandlongCondition1andlongCondition2andlongCondition3andlongCondition4andlongCondition5andlongCondition8andlongCondition9andlongCondition10andlongCondition11andlongCondition12
strategy.entry('buy',strategy.long,alert_message='enter_cycle')
//strategy.order('sell333',strategy.short,stop=longSLExitPrice,limit=longSLExitPrice,alert_message='reverse_position')
wasLong:=true
wasShort:=false
ifneg_reg_div_detectedandenable_short_strategyandtestPeriod()andNotMultiOrdersandshortCondition1andshortCondition2andshortCondition3andshortCondition4andshortCondition5andshortCondition8andshortCondition9andshortCondition10andshortCondition11andshortCondition12
strategy.entry('sell',strategy.short,alert_message='enter_cycle')
//strategy.order('buy333',strategy.long,stop=shortSLExitPrice,limit=shortSLExitPrice,alert_message='reverse_position')
wasShort:=true
wasLong:=false
//===================================================================================================
//===================================================================================================
ifstrategy.position_size>0
strategy.exit(id='CloseLong%',from_entry='buy',stop=longSLExitPrice,limit=longExitPrice,alert_message='stoploss')
ifstrategy.position_size<0
strategy.exit(id='CloseShort%',from_entry='sell',stop=shortSLExitPrice,limit=shortExitPrice,alert_message='stoploss')
//===================================================================================================
displTPSL=notUSEdisplTPSL?display.none:display.all
//visualTPSL
avg_position_price_plot=plot(series=strategy.position_size!=0?strategy.position_avg_price:na,color=color.new(#c2bfbf,25),style=plot.style_linebr,linewidth=2,title="PrecioEntrada",display=displTPSL)
LONG_tp_plot=plot(strategy.position_size>0andlongExitPrice>0.0?longExitPrice:na,color=color.new(color.lime,60),style=plot.style_linebr,linewidth=2,title="LONGTakeProfit",display=displTPSL)
LONG_sl_plot=plot(strategy.position_size>0andlongSLExitPrice>0.0?longSLExitPrice:na,color=color.new(color.red,60),style=plot.style_linebr,linewidth=2,title="LongStopLoss",display=displTPSL)
fill(avg_position_price_plot,LONG_tp_plot,color=color.new(color.olive,90),display=displTPSL)
fill(avg_position_price_plot,LONG_sl_plot,color=color.new(color.maroon,90),display=displTPSL)
SHORT_tp_plot=plot(strategy.position_size<0andshortExitPrice>0.0?shortExitPrice:na,color=color.new(color.lime,60),style=plot.style_linebr,linewidth=2,title="SHORTTakeProfit",display=displTPSL)
SHORT_sl_plot=plot(strategy.position_size<0andshortSLExitPrice>0.0?shortSLExitPrice:na,color=color.new(color.red,60),style=plot.style_linebr,linewidth=2,title="ShortStopLoss",display=displTPSL)
fill(avg_position_price_plot,SHORT_tp_plot,color=color.new(color.olive,90),display=displTPSL)
fill(avg_position_price_plot,SHORT_sl_plot,color=color.new(color.maroon,90),display=displTPSL)
Expand (1354 lines)
