Script Name: MA Simple Strategy with SL & TP & ATR Filters
Author: DuDu95
Description: Hello Guys! Nice to meet you all!
This is my second script!
This Logic is trend following logic, This detects long & short trends by comparing the value of MAs.
This fits to the longer time frame.

### Long Condition
1. Compare 4 MAs (you can chose MA Type)
- Shortest MA (MA 1)
- Shorter MA (MA 2)
- Normal MA (MA 3)
- Longer MA (MA 4)
2. If MA 1 > MA 2 > MA 3 > MA...
PineScript code:

Pine Script™ strategy
MA Simple Strategy with SL & TP & ATR Filters
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  fpemehd
//  @version=5
//  #  =========================================================================  #
//  #                                      |      STRATEGY    |
//  #  =========================================================================  #
strategy(title  =  'MA  Simple  Strategy  with  SL  &  TP  &  ATR  Filters',
            shorttitle  =  'MA  Strategy',
            overlay  =  true,
            pyramiding  =  0,
            default_qty_type  =  strategy.percent_of_equity,
            default_qty_value  =  100,
            commission_type    =  strategy.commission.percent,
            commission_value  =  0.1,
            initial_capital  =  100000,
            max_lines_count  =  150,
            max_labels_count  =  300)
//  #  =========================================================================  #
//  #                                                    Inputs
//  #  =========================================================================  #
//  1.  Time
i_start  =  input.time  (defval  =  timestamp("20  Jan  1990  00:00  +0900"),  title  =  "Start  Date",  tooltip  =  "Choose  Backtest  Start  Date",  inline  =  "Start  Date",  group  =  "Time"  )
i_end  =  input.time  (defval  =  timestamp("20  Dec  2030  00:00  +0900"),  title  =  "End  Date",  tooltip  =  "Choose  Backtest  End  Date",  inline  =  "End  Date",  group  =  "Time"  )
c_timeCond  =  time  >=  i_start  and  time  <=  i_end
//  2.  Inputs  for  direction:  Long?  Short?  Both?
i_longEnabled  =  input.bool(defval  =  true  ,  title  =  "Long?",  tooltip  =  "Enable  Long  Position  Trade?",  inline  =  "Long  /  Short",  group  =  "Long  /  Short"  )
i_shortEnabled  =  input.bool(defval  =  true  ,  title  =  "Short?",  tooltip  =  "Enable  Short  Position  Trade?",  inline  =  "Long  /  Short",  group  =  "Long  /  Short"  )
//  3.  Use  Filters?  What  Filters?
i_ATRFilterOn  =  input.bool(defval  =  true  ,  title  =  "ATR  Filter  On?",  tooltip  =  "ATR  Filter  On?",  inline  =  "ATR  Filter",  group  =    "Filters")
i_ATRSMALen  =  input.int(defval  =  40  ,  title  =  "SMA  Length  for  ATR  SMA",  minval  =  1  ,  maxval  =  100000  ,  step  =  1  ,  tooltip  =  "ATR  should  be  bigger  than  this",  inline  =  "ATR  Filter",  group  =  "Filters")
//  3.  Shared  inputs  for  Long  and  Short
////  3-1.  Inputs  for  Stop  Loss  Type:  normal?  or  trailing?
////  If  trailing,  always  trailing  or  trailing  after  take  profit  order  executed?
i_useSLTP  =  input.bool(defval  =    true,  title  =  "Enable  SL  &  TP?",  tooltip  =  "",  inline  =  "Enable  SL  &  TP  &  SL  Type",  group  =  "Shared  Inputs")
i_tslEnabled  =  input.bool(defval  =  false  ,  title  =  "Enable  Trailing  SL?",  tooltip  =  "Enable  Stop  Loss  &  Take  Profit?  \n\Enable  Trailing  SL?",  inline  =  "Enable  SL  &  TP  &  SL  Type",  group  =  "Shared  Inputs")
//  i_tslAfterTP  =  input.bool(defval  =  true  ,  title  =  "Enable  Trailing  SL  after  TP?",  tooltip  =  "Enable  Trailing  SL  after  TP?",  inline  =  "Trailing  SL  Execution",  group  =  "Shared  Inputs")
i_slType  =  input.string(defval  =  "ATR",  title  =  "Stop  Loss  Type",  options  =  ["Percent",  "ATR"],  tooltip  =  "Stop  Loss  based  on  %?  ATR?",  inline  =  "Stop  Loss  Type",  group  =  "Shared  Inputs")
i_slATRLen  =  input.int(defval  =  14,  title  =  "ATR  Length",  minval  =  1  ,  maxval  =  200  ,  step  =  1,  inline  =  "Stop  Loss  ATR",  group  =  "Shared  Inputs")
i_tpType  =  input.string(defval  =  "R:R",  title  =  "Take  Profit  Type",  options  =  ["Percent",  "ATR",  "R:R"],  tooltip  =  "Take  Profit  based  on  %?  ATR?  R-R  ratio?",  inline  =  "Take  Profit  Type",  group  =  "Shared  Inputs")
////  3-2.  Inputs  for  Quantity
i_tpQuantityPerc  =  input.float(defval  =  50,  title  =  'Take  Profit  Quantity  %',  minval  =  0.0,  maxval  =  100,  step  =  1.0,  tooltip  =  '%  of  position  when  tp  target  is  met.',  group  =  'Shared  Inputs')
//  4.  Inputs  for  Long  Stop  Loss  &  Long  Take  Profit
i_slPercentLong  =  input.float(defval  =  3,  title  =  "SL  Percent",  tooltip  =  "",  inline  =  "Percent  >  Long  Stop  Loss  /  Take  Profit  Percent",  group  =  "Long  Stop  Loss  /  Take  Profit")
i_tpPercentLong  =  input.float(defval  =  3,  title  =  "TP  Percent",  tooltip  =  "Long  Stop  Loss  &&  Take  Profit  Percent?",  inline  =  "Percent  >  Long  Stop  Loss  /  Take  Profit  Percent",  group  =  "Long  Stop  Loss  /  Take  Profit")
i_slATRMultLong  =  input.float(defval  =  3,  title  =  "SL  ATR  Multiplier",  minval  =  1  ,  maxval  =  200  ,  step  =  0.1,  tooltip  =  "",  inline  =  "Long  Stop  Loss  /  Take  Profit  ATR",  group  =  "Long  Stop  Loss  /  Take  Profit")
i_tpATRMultLong  =  input.float(defval  =  3,  title  =  "TP  ATR  Multiplier",  minval  =  1  ,  maxval  =  200  ,  step  =  0.1,  tooltip  =  "ATR  >  Long  Stop  Loss  &&  Take  Profit  ATR  Multiplier?  \n\Stop  Loss  =  i_slATRMultLong  *  ATR  (i_slATRLen)  \n\Take  Profit  =  i_tpATRMultLong  *  ATR  (i_tpATRLen)",  inline  =  "Long  Stop  Loss  /  Take  Profit  ATR",  group  =  "Long  Stop  Loss  /  Take  Profit")
i_tpRRratioLong  =  input.float(defval  =  1.8,  title  =  "R:R  Ratio",  minval  =  0.1  ,  maxval  =  200  ,  step  =  0.1,  tooltip  =  "R:R  Ratio  >  Risk  Reward  Ratio?  It  will  automatically  set  Take  Profit  %  based  on  Stop  Loss",  inline  =  "R:R  Ratio",  group  =  "Long  Stop  Loss  /  Take  Profit")
//  5.  Inputs  for  Short  Stop  Loss  &  Short  Take  Profit
i_slPercentShort  =  input.float(defval  =  3,  title  =  "SL  Percent",  tooltip  =  "",  inline  =  "Percent  >  Short  Stop  Loss  /  Take  Profit  Percent",  group  =  "Short  Stop  Loss  /  Take  Profit")
i_tpPercentShort  =  input.float(defval  =  3,  title  =  "TP  Percent",  tooltip  =  "Short  Stop  Loss  &&  Take  Profit  Percent?",  inline  =  "Percent  >  Short  Stop  Loss  /  Take  Profit  Percent",  group  =  "Short  Stop  Loss  /  Take  Profit")
i_slATRMultShort  =  input.float(defval  =  3,  title  =  "SL  ATR  Multiplier",  minval  =  1  ,  maxval  =  200  ,  step  =  0.1,  tooltip  =  "",  inline  =  "ATR  >  Short  Stop  Loss  /  Take  Profit  ATR",  group  =  "Short  Stop  Loss  /  Take  Profit")
i_tpATRMultShort  =  input.float(defval  =  3,  title  =  "TP  ATR  Multiplier",  minval  =  1  ,  maxval  =  200  ,  step  =  0.1,  tooltip  =  "ATR  >  Short  Stop  Loss  &&  Take  Profit  ATR  Multiplier?  \n\Stop  Loss  =  i_slATRMultShort  *  ATR  (i_slATRLen)  \n\Take  Profit  =  i_tpATRMultShort  *  ATR  (i_tpATRLen)",  inline  =  "ATR  >  Short  Stop  Loss  /  Take  Profit  ATR",  group  =  "Short  Stop  Loss  /  Take  Profit")
i_tpRRratioShort  =  input.float(defval  =  1.8,  title  =  "R:R  Ratio",  minval  =  0.1  ,  maxval  =  200  ,  step  =  0.1,  tooltip  =  "R:R  Ratio  >  Risk  Reward  Ratio?  It  will  automatically  set  Take  Profit  %  based  on  Stop  Loss",  inline  =  "R:R  Ratio",  group  =  "Short  Stop  Loss  /  Take  Profit")
//  6.  Inputs  for  logic
i_MAType  =  input.string(defval  =  "RMA",  title  =  "MA  Type",  options  =  ["SMA",  "EMA",  "WMA",  "HMA",  "RMA",  "VWMA",  "SWMA",  "ALMA",  "VWAP"],  tooltip  =  "Choose  MA  Type",  inline  =  "MA  Type",  group  =  'Strategy')
i_MA1Len  =  input.int(defval  =5,title='MA1Length',minval=1,inline='MALength',group='Strategy')
i_MA2Len=input.int(defval=10,title='MA2Length',minval=1,inline='MALength',group='Strategy')
i_MA3Len=input.int(defval=15,title='MA3Length',minval=1,inline='MALength',group='Strategy')
i_MA4Len=input.int(defval=25,title='MA4Length',minval=1,inline='MALength',group='Strategy')
i_ALMAOffset=input.float(defval=0.7,title="ALMAOffsetValue",tooltip="TheValueofALMAoffset",inline="ALMAInput",group='Strategy')
i_ALMASigma=input.float(defval=7,title="ALMASigmaValue",tooltip="TheValueofALMAsigma",inline="ALMAInput",group='Strategy')
//#=========================================================================#
//#Entry,CloseLogic
//#=========================================================================#
booli_ATRFilter=ta.atr(length=i_slATRLen)>=ta.sma(source=ta.atr(length=i_slATRLen),length=i_ATRSMALen)?true:false
//calculateTechnicalIndicatorsfortheLogic
getMAValue(source,length,almaOffset,almaSigma)=>
switchi_MAType
'SMA'=>ta.sma(source=source,length=length)
'EMA'=>ta.ema(source=source,length=length)
'WMA'=>ta.wma(source=source,length=length)
'HMA'=>ta.hma(source=source,length=length)
'RMA'=>ta.rma(source=source,length=length)
'SWMA'=>ta.swma(source=source)
'ALMA'=>ta.alma(series=source,length=length,offset=almaOffset,sigma=almaSigma)
'VWMA'=>ta.vwma(source=source,length=length)
'VWAP'=>ta.vwap(source=source)
=>na
floatc_MA1=getMAValue(close,i_MA1Len,i_ALMAOffset,i_ALMASigma)
floatc_MA2=getMAValue(close,i_MA2Len,i_ALMAOffset,i_ALMASigma)
floatc_MA3=getMAValue(close,i_MA3Len,i_ALMAOffset,i_ALMASigma)
floatc_MA4=getMAValue(close,i_MA4Len,i_ALMAOffset,i_ALMASigma)
//Logic:정배열될떄들어가
varma1Color=color.new(color.red,0)
plot(series=c_MA1,title='SMA1',color=ma1Color,linewidth=1,style=plot.style_line)
varma2Color=color.new(color.orange,0)
plot(series=c_MA2,title='SMA2',color=ma2Color,linewidth=1,style=plot.style_line)
varma3Color=color.new(color.yellow,0)
plot(series=c_MA3,title='SMA3',color=ma3Color,linewidth=1,style=plot.style_line)
varma4Color=color.new(color.green,0)
plot(series=c_MA4,title='SMA4',color=ma4Color,linewidth=1,style=plot.style_line)
boolopenLongCond=(c_MA1>=c_MA2andc_MA2>=c_MA3andc_MA3>=c_MA4)
boolopenShortCond=(c_MA1<=c_MA2andc_MA2<=c_MA3andc_MA3<=c_MA4)
boolopenLong=i_longEnabledandopenLongCondand(noti_ATRFilterOnori_ATRFilter)
boolopenShort=i_shortEnabledandopenShortCondand(noti_ATRFilterOnori_ATRFilter)
openLongCondColor=openLongCond?color.new(color=color.blue,transp=80):na
bgcolor(color=openLongCondColor)
ATRFilterColor=i_ATRFilter?color.new(color=color.orange,transp=80):na
bgcolor(color=ATRFilterColor)
boolenterLong=openLongandnot(strategy.opentrades.size(strategy.opentrades-1)>0)
boolenterShort=openShortandnot(strategy.opentrades.size(strategy.opentrades-1)<0)
boolcloseLong=i_longEnabledand(c_MA1[1]>=c_MA2[1]andc_MA2[1]>=c_MA3[1]andc_MA3[1]>=c_MA4[1])andnot(c_MA1>=c_MA2andc_MA2>=c_MA3andc_MA3>=c_MA4)
boolcloseShort=i_shortEnabledand(c_MA1[1]<=c_MA2[1]andc_MA2[1]<=c_MA3[1]andc_MA3[1]<=c_MA4[1])andnot(c_MA1<=c_MA2andc_MA2<=c_MA3andc_MA3<=c_MA4)
//#=========================================================================#
//#Position,StatusConrtol
//#=========================================================================#
//longisActive:NewLong||AlreadyLong&&notcloseLong,shortisthesame
boollongIsActive=enterLongorstrategy.opentrades.size(strategy.opentrades-1)>0andnotcloseLong
boolshortIsActive=enterShortorstrategy.opentrades.size(strategy.opentrades-1)<0andnotcloseShort
//beforelongTPExecution:notrailingSL&&afterlongTPExecution:trailingSLstarts
//longTPExecutionqunatityshouldbelessthan100%
boollongTPExecuted=false
boolshortTPExecuted=false
//#=========================================================================#
//#LongStopLossLogic
//#=========================================================================#
floatopenAtr=ta.valuewhen(enterLongorenterShort,ta.atr(i_slATRLen),0)
f_getLongSL(source)=>
switchi_slType
'Percent'=>source*(1-(i_slPercentLong/100))
'ATR'=>source-i_slATRMultLong*openAtr
=>na
varfloatc_longSLPrice=na
c_longSLPrice:=if(longIsActive)
if(enterLong)
f_getLongSL(close)
else
c_stopPrice=f_getLongSL(i_tslEnabled?high:strategy.opentrades.entry_price(trade_num=strategy.opentrades-1))
math.max(c_stopPrice,nz(c_longSLPrice[1]))
else
na
//#=========================================================================#
//#ShortStopLossLogic
//#=========================================================================#
f_getShortSL(source)=>
switchi_slType
'Percent'=>source*(1+(i_slPercentShort)/100)
'ATR'=>source+i_slATRMultShort*openAtr
=>na
varfloatc_shortSLPrice=na
c_shortSLPrice:=if(shortIsActive)
if(enterShort)
f_getShortSL(close)
else
c_stopPrice=f_getShortSL(i_tslEnabled?low:strategy.opentrades.entry_price(strategy.opentrades-1))
math.min(c_stopPrice,nz(c_shortSLPrice[1],999999.9))
else
na
//#=========================================================================#
//#LongTakeProfitLogic
//#=========================================================================#
f_getLongTP()=>
switchi_tpType
'Percent'=>close*(1+(i_tpPercentLong/100))
'ATR'=>close+i_tpATRMultLong*openAtr
'R:R'=>close+i_tpRRratioLong*(close-f_getLongSL(close))
=>na
varfloatc_longTPPrice=na
c_longTPPrice:=if(longIsActiveandnotlongTPExecuted)
if(enterLong)
f_getLongTP()
else
nz(c_longTPPrice[1],f_getLongTP())
else
na
longTPExecuted:=strategy.opentrades.size(strategy.opentrades-1)>0and(longTPExecuted[1]orstrategy.opentrades.size(strategy.opentrades-1)<strategy.opentrades.size(strategy.opentrades-1)[1]orstrategy.opentrades.size(strategy.opentrades-1)[1]==0andhigh>=c_longTPPrice)
//#=========================================================================#
//#ShortTakeProfitLogic
//#=========================================================================#
f_getShortTP()=>
switchi_tpType
'Percent'=>close*(1-(i_tpPercentShort/100))
'ATR'=>close-i_tpATRMultShort*openAtr
'R:R'=>close-i_tpRRratioShort*(close-f_getLongSL(close))
=>na
varfloatc_shortTPPrice=na
c_shortTPPrice:=if(shortIsActiveandnotshortTPExecuted)
if(enterShort)
f_getShortTP()
else
nz(c_shortTPPrice[1],f_getShortTP())
else
na
shortTPExecuted:=strategy.opentrades.size(strategy.opentrades-1)<0and(shortTPExecuted[1]orstrategy.opentrades.size(strategy.opentrades-1)>strategy.opentrades.size(strategy.opentrades-1)[1]orstrategy.opentrades.size(strategy.opentrades-1)[1]==0andlow<=c_shortTPPrice)
//#=========================================================================#
//#MakeOrders
//#=========================================================================#
if(c_timeCond)
if(enterLong)
strategy.entry(id="LongEntry",direction=strategy.long,comment='Long('+syminfo.ticker+'):Started',alert_message='Long('+syminfo.ticker+'):Started')
if(enterShort)
strategy.entry(id="ShortEntry",direction=strategy.short,comment='Short('+syminfo.ticker+'):Started',alert_message='Short('+syminfo.ticker+'):Started')
if(closeLong)
strategy.close(id='LongEntry',comment='CloseLong',alert_message='Long:Closedatmarketprice')
if(closeShort)
strategy.close(id='ShortEntry',comment='CloseShort',alert_message='Short:Closedatmarketprice')
if(longIsActiveandi_useSLTP)
strategy.exit(id='LongTakeProfit/StopLoss',from_entry='LongEntry',qty_percent=i_tpQuantityPerc,limit=c_longTPPrice,stop=c_longSLPrice,alert_message='Long('+syminfo.ticker+'):TakeProfitorStopLossexecuted')
strategy.exit(id='LongStopLoss',from_entry='LongEntry',stop=c_longSLPrice,alert_message='Long('+syminfo.ticker+'):StopLossexecuted')

if(shortIsActiveandi_useSLTP)
strategy.exit(id='ShortTakeProfit/StopLoss',from_entry='ShortEntry',qty_percent=i_tpQuantityPerc,limit=c_shortTPPrice,stop=c_shortSLPrice,alert_message='Short('+syminfo.ticker+'):TakeProfitorStopLossexecuted')
strategy.exit(id='ShortStopLoss',from_entry='ShortEntry',stop=c_shortSLPrice,alert_message='Short('+syminfo.ticker+'):StopLossexecuted')
//#=========================================================================#
//#Plot
//#=========================================================================#
varposColor=color.new(color.white,0)
plot(series=strategy.opentrades.entry_price(strategy.opentrades-1),title='Position',color=posColor,linewidth=1,style=plot.style_linebr)
varstopLossColor=color.new(color.maroon,0)
plot(series=c_longSLPrice,title='LongStopLoss',color=stopLossColor,linewidth=1,style=plot.style_linebr,offset=1)
plot(series=c_shortSLPrice,title='ShortStopLoss',color=stopLossColor,linewidth=1,style=plot.style_linebr,offset=1)
longTPExecutedColor=longTPExecuted?color.new(color=color.green,transp=80):na
//bgcolor(color=longTPExecutedColor)
shortTPExecutedColor=shortTPExecuted?color.new(color=color.red,transp=80):na
//bgcolor(color=shortTPExecutedColor)
//isPositionOpenedColor=strategy.opentrades.size(strategy.opentrades-1)!=0?color.new(color=color.yellow,transp=90):na
//bgcolor(color=isPositionOpenedColor)
vartakeProfitColor=color.new(color.teal,0)
plot(series=c_longTPPrice,title='LongTakeProfit',color=takeProfitColor,linewidth=1,style=plot.style_linebr,offset=1)
plot(series=c_shortTPPrice,title='ShortTakeProfit',color=takeProfitColor,linewidth=1,style=plot.style_linebr,offset=1)
Expand (270 lines)
