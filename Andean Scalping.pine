Script Name: Andean Scalping
Author: elpavohombre
Description: Andean Scalping Implementation - BETA

- Uses Andean Oscillator: alpaca.markets
- Implements a threshold moving average (SMA 1000) on the Andean Signal line at 1.1 factor to filter out small moves
- TP/SL using ATR bands at 3x multiplier
PineScript code:

Pine Script™ strategy
Andean Scalping
//@version=5
//
//  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//    -----------------------------------------------------------------------------
//    Copyright  2022  Iason  Nikolas  |  jason5480
//    Template  Trailing  Strategy  script  may  be  freely  distributed  under  the  MIT  license.
//
//    Permission  is  hereby  granted,  free  of  charge,
//    to  any  person  obtaining  a  copy  of  this  software  and  associated  documentation  files  (the  "Software"),
//    to  deal  in  the  Software  without  restriction,  including  without  limitation  the  rights  to  use,  copy,  modify,  merge,
//    publish,  distribute,  sublicense,  and/or  sell  copies  of  the  Software,  and  to  permit  persons  to  whom  the  Software  is  furnished  to  do  so,
//    subject  to  the  following  conditions:
//
//    The  above  copyright  notice  and  this  permission  notice  shall  be  included  in  all  copies  or  substantial  portions  of  the  Software.
//
//    THE  SOFTWARE  IS  PROVIDED  "AS  IS",  WITHOUT  WARRANTY  OF  ANY  KIND,
//    EXPRESS  OR  IMPLIED,  INCLUDING  BUT  NOT  LIMITED  TO  THE  WARRANTIES  OF  MERCHANTABILITY,
//    FITNESS  FOR  A  PARTICULAR  PURPOSE  AND  NONINFRINGEMENT.  IN  NO  EVENT  SHALL  THE  AUTHORS  OR  COPYRIGHT  HOLDERS  BE  LIABLE  FOR  ANY  CLAIM,
//    DAMAGES  OR  OTHER  LIABILITY,  WHETHER  IN  AN  ACTION  OF  CONTRACT,  TORT  OR  OTHERWISE,  ARISING  FROM,
//    OUT  OF  OR  IN  CONNECTION  WITH  THE  SOFTWARE  OR  THE  USE  OR  OTHER  DEALINGS  IN  THE  SOFTWARE.
//
//    -----------------------------------------------------------------------------
//
//    Authors:    @jason5480
//    Revision:  v1.1.4
//    Date:          16-Aug-2022
//
//    Description
//    =============================================================================
//    This  script  is  designed  to  be  used  as  a  template  for  building  new  strategies.
//    The  framework  provide  you  with  a  configurable  implementation  of  the  entry,  exit,
//    stop  loss  and  take  profit  trailing  logic.  The  proposed  way  to  use  that  script
//    is  in  combination  with  a  customized  signal  indicator  where  you  implemented  your
//    own  logic  of  start  and  end  deal  conditions.  See  my  "Two  MA  Signal  Indicator"
//    and  "Template  Signal  Indicator"  in  my  profile  for  more.  An  other  way  to  utilize
//    this  script  (not  recomended)  is  to  copy  it  and  replace  the  startLongDeal,
//    startShortDeal,  endLongDeal  and  endShortDeal  variables  in  the  STRATEGY  1  module
//    according  to  your  needs!  However,  doing  that  way  you  will  have  to  reimplement
//    your  changes  every  time  I  release  a  new  update  if  you  want  to  recieve  the  new
//    changes  I  made  in  the  latest  release.
//
//    -----------------------------------------------------------------------------
//    Disclaimer:
//        1.  I  am  not  licensed  financial  advisors  or  broker  dealer.  I  do  not  tell  you
//              when  or  what  to  buy  or  sell.  I  developed  this  software  which  enables  you
//              execute  manual  or  automated  trades  using  TradingView.  The
//              software  allows  you  to  set  the  criteria  you  want  for  entering  and  exiting
//              trades.
//        2.  Do  not  trade  with  money  you  cannot  afford  to  lose.
//        3.  I  do  not  guarantee  consistent  profits  or  that  anyone  can  make  money  with  no
//              effort.  And  I  am  not  providing  you  the  holy  grail.
//        4.  Every  system  can  have  winning  and  losing  streaks.
//        5.  Money  management  plays  a  large  role  in  the  results  of  your  trading.  For
//              example:  lot  size,  account  size,  broker  leverage,  and  broker  margin  call
//              rules  all  have  an  effect  on  results.  Also,  your  Take  Profit  and  Stop  Loss
//              settings  for  individual  pair  trades  and  for  overall  account  equity  have  a
//              major  impact  on  results.  If  you  are  new  to  trading  and  do  not  understand
//              these  items,  then  I  recommend  you  seek  education  materials  to  further  your
//              knowledge.
//
//        YOU  NEED  TO  FIND  AND  USE  THE  TRADING  SYSTEM  THAT  WORKS  BEST  FOR  YOU  AND  YOUR
//        TRADING  TOLERANCE.
//
//        I  HAVE  PROVIDED  NOTHING  MORE  THAN  A  TOOL  WITH  OPTIONS  FOR  YOU  TO  TRADE  WITH  THIS  PROGRAM  ON  TRADINGVIEW.
//
//        I  accept  suggestions  to  improve  the  script!  For  any  change  proposal  to  the  existing  functionality,
//        any  additional  feture  you  have  in  mind,  or  even  reporting  a  defect  (bug)  you  found,  you  should  write  it
//        down  here  docs.google.com/spreadsheets/d/1xwpr2Ut4CmMX6kX9PxflWuvb4mZ6LFKJ1Y6C7LahQ5o/edit?usp=sharing
//        and  let  me  know  by  sending  me  a  private  message  on  TradingView.
//        If  you  encounter  any  problems  I  will  be  happy  to  share  them  with  me.
//    -----------------------------------------------------------------------------
//
//  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//  SETUP  ============================================================================================================
strategy(title  =  'Andean  Scalping',
                  shorttitle  =  'Andean  Scalping',
                  overlay  =  true,
                  pyramiding  =  0,
                  default_qty_type  =  strategy.percent_of_equity,
                  default_qty_value  =  1,
                  initial_capital  =  10000,
                  commission_type  =  strategy.commission.percent,
                  commission_value  =  0.04,
                  max_lines_count  =  300,
                  max_labels_count  =  200)
import  jason5480/external_input_utils/3  as  exiu
//
//  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//  📆📈  FILTERS  =====================================================================================================
//  Description:  Module  responsible  for  filtering  out  long  and  short  open  signals  that  do  not  meet  userdefinedrules
//Dependencies:NONE
//Results:longFiltersApproval,shortFiltersApproval
importjason5480/time_filters/5astif
//INPUT============================================================================================================
src_timezone=input.string(defval='Exchange',title='TimezonesSrc->Dst',options=['Exchange','UTC','America/Los_Angeles','America/Phoenix','America/Vancouver','America/El_Salvador','America/Bogota','America/Chicago','America/New_York','America/Toronto','America/Argentina/Buenos_Aires','America/Sao_Paulo','Etc/UTC','Europe/London','Europe/Berlin','Europe/Madrid','Europe/Paris','Europe/Warsaw','Europe/Athens','Europe/Moscow','Asia/Tehran','Asia/Dubai','Asia/Ashkhabad','Asia/Kolkata','Asia/Almaty','Asia/Bangkok','Asia/Hong_Kong','Asia/Shanghai','Asia/Singapore','Asia/Taipei','Asia/Seoul','Asia/Tokyo','Australia/ACT','Australia/Adelaide','Australia/Brisbane','Australia/Sydney','Pacific/Auckland','Pacific/Fakaofo','Pacific/Chatham','Pacific/Honolulu'],inline='Timezone',group='📆Filters-Time')
dst_timezone=input.string(defval='Exchange',title='->',options=['Exchange','UTC','America/Los_Angeles','America/Phoenix','America/Vancouver','America/El_Salvador','America/Bogota','America/Chicago','America/New_York','America/Toronto','America/Argentina/Buenos_Aires','America/Sao_Paulo','Etc/UTC','Europe/London','Europe/Berlin','Europe/Madrid','Europe/Paris','Europe/Warsaw','Europe/Athens','Europe/Moscow','Asia/Tehran','Asia/Dubai','Asia/Ashkhabad','Asia/Kolkata','Asia/Almaty','Asia/Bangkok','Asia/Hong_Kong','Asia/Shanghai','Asia/Singapore','Asia/Taipei','Asia/Seoul','Asia/Tokyo','Australia/ACT','Australia/Adelaide','Australia/Brisbane','Australia/Sydney','Pacific/Auckland','Pacific/Fakaofo','Pacific/Chatham','Pacific/Honolulu'],tooltip='Sourceisthetimezonetobeusedasareferenceforthetimesettings.Destinationisthetimezonetoconvertinto(e.g.thecharts\'timezone)',inline='Timezone',group='📆Filters-Time')
usefromDate=input.bool(defval=true,title='From',inline='FromDate',group='📆Filters-Time')
fromDate=input.time(defval=timestamp('01Jan202200:00'),title='',inline='FromDate',group='📆Filters-Time')
usetoDate=input.bool(defval=false,title='To ',inline='ToDate',group='📆Filters-Time')
toDate=input.time(defval=timestamp('01Jul202200:00'),title='',inline='ToDate',group='📆Filters-Time')
useSessionDay=input.bool(defval=false,title='SessionDays',inline='SessionDays',group='📆Filters-Time')
mon=input.bool(defval=true,title='Mon',inline='SessionDays',group='📆Filters-Time')
tue=input.bool(defval=true,title='Tue',inline='SessionDays',group='📆Filters-Time')
wed=input.bool(defval=true,title='Wed',inline='SessionDays',group='📆Filters-Time')
thu=input.bool(defval=true,title='Thu',inline='SessionDays',group='📆Filters-Time')
fri=input.bool(defval=true,title='Fri',inline='SessionDays',group='📆Filters-Time')
sat=input.bool(defval=false,title='Sat',inline='SessionDays',group='📆Filters-Time')
sun=input.bool(defval=false,title='Sun',inline='SessionDays',group='📆Filters-Time')
useSessionStart=input.bool(defval=false,title='SessionStart',inline='SessionStart',group='📆Filters-Time')
sessionStartHour=input.int(defval=12,title='',minval=0,maxval=23,step=1,inline='SessionStart',group='📆Filters-Time')
sessionStartMinute=input.int(defval=00,title=':',minval=0,maxval=59,step=1,tooltip='Starttimeofthesession.',inline='SessionStart',group='📆Filters-Time')
useSessionEnd=input.bool(defval=false,title='SessionEnd',inline='SessionEnd',group='📆Filters-Time')
sessionEndHour=input.int(defval=20,title='',minval=0,maxval=23,step=1,inline='SessionEnd',group='📆Filters-Time')
sessionEndMinute=input.int(defval=00,title=':',minval=0,maxval=59,step=1,tooltip='Endtimeofthesession.',inline='SessionEnd',group='📆Filters-Time')
longTradesEnabled=input.bool(defval=true,title='LongTrades',inline='Trades',group='📈Filters-Trend')
shortTradesEnabled=input.bool(defval=true,title='ShortTrades',tooltip='Enablelong/shorttrades.',inline='Trades',group='📈Filters-Trend')
emaFilterEnabled=input.bool(defval=false,title='EMAFilter',tooltip='Enablelong/shorttradesbasedonEMA.',group='📈Filters-Trend')
emaTimeframe=input.timeframe(defval="",title='  EMARes/Len/Src',inline='EMAFilter',group='📈Filters-Trend')
emaLength=input.int(defval=200,title='',minval=1,inline='EMAFilter',group='📈Filters-Trend')
emaSrc=exiu.str_to_src(input.string(defval='close',title='',options=['open','high','low','close','hl2','hlc3','ohlc4','hlcc4'],tooltip='Thetimeframe,periodandsourcefortheEMAcalculation.',inline='EMAFilter',group='📈Filters-Trend'))
emaAtrBandEnabled=input.bool(defval=false,title='EMAATRBand',tooltip='EnableATRbandforEMAfilter.',group='📈Filters-Trend')
filterAtrLength=input.int(defval=5,title='  EMAATRLen/Mul',minval=1,inline='EMAATR',group='📈Filters-Trend')
filterAtrMul=input.float(defval=1.0,title='',tooltip='ATRlengthandmultipliertobeusedfortheATRcalculationthatwillbeaddedontopoftheEMAfilter.',minval=0.1,step=0.1,inline='EMAATR',group='📈Filters-Trend')
adxFilterEnabled=input.bool(defval=false,title='ADXFilter',tooltip='Enablelong/shorttradesbasedonADX.',group='📈Filters-Trend')
adxSmoothing=input.int(defval=14,title='  Smooth/DILen',minval=1,inline='ADXFilter',group='📈Filters-Trend')
diLength=input.int(defval=14,title='',minval=1,tooltip='ADXSmoothinglengthandDirectionLength.',inline='ADXFilter',group='📈Filters-Trend')
adxThreshold=input.float(defval=39.4,title='  Threshold',minval=0.1,maxval=100.0,step=0.1,tooltip='ADXlowerthreshold.',group='📈Filters-Trend')
//LOGIC============================================================================================================
booldateFilterApproval=tif.is_in_date_range(usefromDate,fromDate,usetoDate,toDate,src_timezone,dst_timezone)
boolsessionFilterApproval=tif.is_in_session(useSessionStart,sessionStartHour,sessionStartMinute,useSessionEnd,sessionEndHour,sessionEndMinute,useSessionDay,mon,tue,wed,thu,fri,sat,sun,src_timezone,dst_timezone)
booltimeFilterApproval=dateFilterApprovalandsessionFilterApproval
emaLine=request.security(symbol=syminfo.tickerid,timeframe=emaTimeframe,expression=ta.ema(emaSrc,emaLength),gaps=barmerge.gaps_off)
emaAtr=ta.atr(filterAtrLength)
emaUpperBand=emaLine+filterAtrMul*emaAtr
emaLowerBand=emaLine-filterAtrMul*emaAtr
boolemaLongApproval=emaFilterEnabled?close>(emaAtrBandEnabled?emaUpperBand:emaLine)andopen>(emaAtrBandEnabled?emaUpperBand:emaLine):true
boolemaShortApproval=emaFilterEnabled?close<(emaAtrBandEnabled?emaLowerBand:emaLine)andopen<(emaAtrBandEnabled?emaLowerBand:emaLine):true
[_,_,adx]=ta.dmi(diLength,adxSmoothing)
booladxApproval=adxFilterEnabled?adx>adxThreshold:true
boollongFiltersApproval=longTradesEnabledandemaLongApprovalandadxApprovalandtimeFilterApproval
boolshortFiltersApproval=shortTradesEnabledandemaShortApprovalandadxApprovalandtimeFilterApproval
//PLOT=============================================================================================================
bgcolor(color=timeFilterApproval?na:color.new(color.gray,90),offset=1,title='TimeWindow')
emaLineColor=emaLongApproval?color.teal:emaShortApproval?color.maroon:color.gray
plot(series=emaFilterEnabled?emaLine:na,color=emaLineColor,style=plot.style_linebr,linewidth=2,title='EMALine')
emaUpperBandPlot=plot(series=emaUpperBand,color=na,style=plot.style_linebr,linewidth=1,title='EMAUpperBand')
emaLowerBandPlot=plot(series=emaLowerBand,color=na,style=plot.style_linebr,linewidth=1,title='EMALowerBand')
emaBandFillColor=emaFilterEnabledandemaAtrBandEnabled?color.new(emaLineColor,85):na
fill(plot1=emaUpperBandPlot,plot2=emaLowerBandPlot,color=emaBandFillColor,title='EMABand')
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//☭SHAREDVARIABLES1=============================================================================================
//Description:Moduleresponsibleforgeneralpurposevariablethatneededforseveralothermodules
//Dependencies:NONE
//Results:currentPositionSize,previousPositionSize,positionSizeIncreased,positionSizeDecreased,longPositionCompleted,shortPositionCompleted
//LOGIC============================================================================================================
//thecurrentandpreviouspositionsizes
floatcurrentPositionSize=strategy.opentrades.size(strategy.opentrades-1)
floatpreviousPositionSize=strategy.opentrades.size(strategy.opentrades-1)[1]
boolpositionSizeIncreased=currentPositionSize>previousPositionSize
boolpositionSizeDecreased=currentPositionSize<previousPositionSize
boollongPositionCompleted=currentPositionSize<=0andpreviousPositionSize>0
boolshortPositionCompleted=currentPositionSize>=0andpreviousPositionSize<0
//flagsthtaretruewhenalreadyenteredalongorshortposition
boolenteredLongPosition=currentPositionSize>0andpreviousPositionSize<=0
boolenteredShortPosition=currentPositionSize<0andpreviousPositionSize>=0
//debugflags
varboolshowAlertsEnabled=false
varbooldebugModeEnabled=false
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//🛠️STRATEGY1====================================================================================================
//Description:Moduleresponsiblefortheopenpositionlogic.Thisisimplementedbasedondealconditionsdefinedinternally(inthisscript)orexternaly(basedonconditionsthattakeasinputotherindicator)
//Dependencies:FILTERS,SHAREDVARIABLES1
//Results:openLongPosition,openShortPosition
importHeWhoMustNotBeNamed/enhanced_ta/14aseta
//INPUT============================================================================================================
dealMode=input.string(defval='🔧Internal',title='DealConditionsMode',options=['🔧Internal','🔨External'],tooltip='Usethe"Internal"MAcrossover/underlogictostartandendyourdeals.Orusean"External"indicatortoconstructyourownstartandenddealconditions.',group='🛠️Strategy')
cooldownEnabled=input.bool(defval=false,title='Cooldown#ofbars',inline='Cooldown',group='🛠️Strategy')
cooldownBars=input.int(defval=7,title='',minval=1,tooltip='DoNOTemitopenpositionsignalifnomorethanthegivennumberofbarshavepassedsincepreviouspositionhasbeencompleted.Anewstartdealsignalwillbeneededafterthatperiodtoopenanewposition.',inline='Cooldown',group='🛠️Strategy')
and_length=input.int(defval=50,title='AndeanLength',group='🔧Strategy-Internal')
sig_length=input.int(defval=9,title='AndeanSignalLength',group='🔧Strategy-Internal')
signal_threshold_length=input.int(defval=1000,title='SignalThresholdLength',group='🔧Strategy-Internal')
signal_threshold_multiplier=input.float(defval=1.1,step=0.1,title='SignalThresholdMultiplier',group='🔧Strategy-Internal')
externalInput=input.source(defval=close,title='ExternalInput',tooltip='Selectinputfromanexternalindicator.Theindicatorshouldbeaddedtothesamechartwiththisstrategyandthedesiredvaluethatwilltakepartintheconditionshouldbeplotedinthechart.',group='🔨Strategy-External')
startLongDealOperator=input.string(defval='/10',title='StartLongDealwheninput',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2','mod3','mod10','/10','noop'],inline='StartLongDeal',group='🔨Strategy-External')
startLongDealValue=input.float(defval=2.0,title='',tooltip='ConditontostartaLongDealbasedonexternalinput.',inline='StartLongDeal',group='🔨Strategy-External')
endLongDealOperator=input.string(defval='/10',title='EndLongDealwheninput',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2','mod3','mod10','/10','noop'],inline='EndLongDeal',group='🔨Strategy-External')
endLongDealValue=input.float(defval=1.0,title='',tooltip='ConditontoendaLongDealbasedonexternalinput.',inline='EndLongDeal',group='🔨Strategy-External')
startShortDealOperator=input.string(defval='mod10',title='StartShortDealwheninput',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2','mod3','mod10','/10','noop'],inline='StartShortDeal',group='🔨Strategy-External')
startShortDealValue=input.float(defval=2.0,title='',tooltip='ConditontostartaShortDealbasedonexternalinput.',inline='StartShortDeal',group='🔨Strategy-External')
endShortDealOperator=input.string(defval='mod10',title='EndShortDealwheninput',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2','mod3','mod10','/10','noop'],inline='EndShortDeal',group='🔨Strategy-External')
endShortDealValue=input.float(defval=1.0,title='',tooltip='ConditontoendaShortDealbasedonexternalinput.',inline='EndShortDeal',group='🔨Strategy-External')
//ANDEANOSCILLATOR============================================================================================================
varalpha=2/(and_length+1)
varup1=0.,varup2=0.
vardn1=0.,vardn2=0.
C=close
O=open
up1:=nz(math.max(C,O,up1[1]-(up1[1]-C)*alpha),C)
up2:=nz(math.max(C*C,O*O,up2[1]-(up2[1]-C*C)*alpha),C*C)
dn1:=nz(math.min(C,O,dn1[1]+(C-dn1[1])*alpha),C)
dn2:=nz(math.min(C*C,O*O,dn2[1]+(C*C-dn2[1])*alpha),C*C)
bull=math.sqrt(dn2-dn1*dn1)
bear=math.sqrt(up2-up1*up1)
signal=ta.ema(math.max(bull,bear),sig_length)
average_threshold=ta.sma(signal,signal_threshold_length)*signal_threshold_multiplier
plotchar(average_threshold,"AvgThreshold","")
and_startLongDeal=bull>bearandbull>signalandsignal>average_threshold
and_endLongDeal=bull<signal
and_startShortDeal=bear>bullandbear>signalandsignal>average_threshold
and_endShortDeal=bear<signal
//-----------------------------------------------------------------------------}
boolstartLongDeal=dealMode=='🔧Internal'?and_startLongDeal:exiu.eval_cond(externalInput,startLongDealOperator,startLongDealValue,false)
boolendLongDeal=dealMode=='🔧Internal'?and_endLongDeal:exiu.eval_cond(externalInput,endLongDealOperator,endLongDealValue,true)
boolstartShortDeal=dealMode=='🔧Internal'?and_startShortDeal:exiu.eval_cond(externalInput,startShortDealOperator,startShortDealValue,false)
boolendShortDeal=dealMode=='🔧Internal'?and_endShortDeal:exiu.eval_cond(externalInput,endShortDealOperator,endShortDealValue,true)
intbarsSinceComplete=nz(ta.barssince(currentPositionSize!=0),999999)
boolcooldownApproval=cooldownEnabled?barsSinceComplete>cooldownBars:true
boolopenLongPosition=longFiltersApprovalandstartLongDealandcooldownApproval
boolopenShortPosition=shortFiltersApprovalandstartShortDealandcooldownApproval
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//☭SHAREDVARIABLES2=============================================================================================
//Description:Moduleresponsibleforgeneralpurposevariablethatneededforseveralothermodules
//Dependencies:SHAREDVARIABLES1,STRATEGY1
//Results:validOpenLongPosition,validOpenShortPosition,validOpenClose,barsSinceOpenLong,barsSinceOpenShort,
//barsSinceValidOpenLong,barsSinceValidOpenShort,barsSinceCloseLong,barsSinceCloseShort,longAtr,shortAtr
importHeWhoMustNotBeNamed/arrayutils/21aspa
//INPUT============================================================================================================
atrMethod=input.string(defval='STATIC',title='ATRMethod',options=['STATIC','DYNAMIC','LADDER'],tooltip='ThemethodtocalculatetheATRusedforthetrailing.',group='☭SharedVariables')
atrMaType=str.lower(input.string(defval='RMA',title='  ATRSmoothType/Len',options=['SMA','EMA','HMA','RMA','WMA'],inline='ATR',group='☭SharedVariables'))
atrLength=input.int(defval=14,title='',minval=1,tooltip='ThesmoothingtypeandthelengthtobeusedfortheATRcalculation.',inline='ATR',group='☭SharedVariables')
//LOGIC============================================================================================================
//theopensignalswhennotalreadyintoaposition
boolvalidOpenLongPosition=openLongPositionandnot(currentPositionSize>0)
boolvalidOpenShortPosition=openShortPositionandnot(currentPositionSize<0)
//Theclosepricewhenlastvalidopenwastriggered
floatvalidOpenClose=ta.valuewhen(validOpenLongPositionorvalidOpenShortPosition,close,0)
//counthowfararethelastopensignals(validornot)
intbarsSinceOpenLong=nz(ta.barssince(openLongPosition),999999)
intbarsSinceOpenShort=nz(ta.barssince(openShortPosition),999999)
intbarsSinceValidOpenLong=nz(ta.barssince(validOpenLongPosition),999999)
intbarsSinceValidOpenShort=nz(ta.barssince(validOpenShortPosition),999999)
//counthowfararethelastvalidclosesignals
varboolcloseLongPosition=false
varboolcloseShortPosition=false
intbarsSinceCloseLong=nz(ta.barssince(closeLongPositionandtimeFilterApproval),999999)
intbarsSinceCloseShort=nz(ta.barssince(closeShortPositionandtimeFilterApproval),999999)
//calculateatrbasedonmethodselected,staticatrwhenlastopensignalwastriggered,dynamicatristhecurrentatrthatchangeovertime,ladderatrforpositiveandnegativebars
floatdynamicAtr=eta.ma(ta.tr(true),atrMaType,atrLength)
floatstaticAtr=ta.valuewhen(validOpenLongPositionorvalidOpenShortPosition,dynamicAtr,0)
varnegativeTrs=array.new<float>()
varpositiveTrs=array.new<float>()
if(open>close)
pa.push(negativeTrs,ta.tr(true),atrLength)
else
pa.push(positiveTrs,ta.tr(true),atrLength)
floatladderLongAtr=pa.ma(negativeTrs,atrMaType,atrLength)
floatladderShortAtr=pa.ma(positiveTrs,atrMaType,atrLength)
floatlongAtr=switchatrMethod
'STATIC'=>staticAtr
'DYNAMIC'=>dynamicAtr
'LADDER'=>ladderLongAtr
=>na
floatshortAtr=switchatrMethod
'STATIC'=>staticAtr
'DYNAMIC'=>dynamicAtr
'LADDER'=>ladderShortAtr
=>na
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//⇩ENTRY==========================================================================================================
//Description:Moduleresponsibleforthetrailingentrylogicimplementationbasedonthedeviation
//Dependencies:SHAREDVARIABLES1,STRATEGY1,SHAREDVARIABLES2
//Results:longPositionEntry,longIsActive,longTrEntryIsActive,shortPositionEntry,shortIsActive,shortTrEntryIsActive,entryBarId,entryPrice
//INPUT============================================================================================================
entryTrailingEnabled=input.bool(defval=false,title='EnableTrailing',tooltip='Enableordisablethetrailingforentryposition.',group='⇩Entry')
devEntryMethod=input.string(defval='PERC',title='DeviationMethod',options=['PERC','ATR','LOC'],tooltip='Themethodtocalculatethedeviationforthetrailingentry.',group='⇩Entry')
devEntryPerc=input.float(defval=3.0,title='  Deviation%',minval=0.01,maxval=100.0,step=0.05,tooltip='Thesteptofollowthepricewhentheopenpositionconditionismet.',group='⇩Entry')/100.0
devEntryAtrMul=input.float(defval=0.5,title='  DeviationATRMul',minval=0.01,step=0.05,tooltip='MultipliertobeusedontheATRtocalculatethestepforfollowingtheprice,untiltheentrytargetisreached.',group='⇩Entry')
devEntryLen=input.int(defval=3,title='  DevLocExtremaLen/Ticks',minval=1,inline='DeviationEntryLocalExtrema',group='⇩Entry')
devEntryTicks=input.int(defval=2,title='',minval=0,tooltip='Localextrema(minimum/maximum)withinawindowoflengthminus/plussometickstobeusedfortheentrytarget.',inline='DeviationEntryLocalExtrema',group='⇩Entry')
//LOGIC============================================================================================================
boollongPositionEntry=entryTrailingEnabled?enteredLongPosition:validOpenLongPosition
//Markwhenlongpositionisactive
boollongIsActive=longPositionEntryorcurrentPositionSize>0
//counthowfaristhelastlongentrysignal
intbarsSinceEnterLong=nz(ta.barssince(longPositionEntry),999999)
boolopenLongIsActive=barsSinceCloseLong>=barsSinceOpenLong//close->open
boolenterLongIsPending=barsSinceEnterLong>barsSinceValidOpenLong//enter->validOpen
booltryEnterLongPosition=entryTrailingEnabledandlongFiltersApprovalandopenLongIsActiveandenterLongIsPendingandcurrentPositionSize<=0
floatentryHighestHigh=ta.highest(high,devEntryLen)
floatopenEntryHighestHigh=ta.valuewhen(validOpenLongPosition,entryHighestHigh,0)
getLongEntryOpenBaseScr()=>
switchdevEntryMethod
'PERC'=>validOpenClose
'ATR'=>validOpenClose
'LOC'=>openEntryHighestHigh
=>na
getLongEntryTrailingBaseScr()=>
switchdevEntryMethod
'PERC'=>low
'ATR'=>low
'LOC'=>entryHighestHigh
=>na
getLongEntryPrice(baseSrc)=>
switchdevEntryMethod
'PERC'=>baseSrc*(1+devEntryPerc)
'ATR'=>baseSrc+devEntryAtrMul*longAtr
'LOC'=>baseSrc+devEntryTicks*syminfo.mintick
=>na
varfloatlongTrEntryPrice=na
boolisFirstValidOpenLongPosition=entryTrailingEnabledandvalidOpenLongPositionandna(longTrEntryPrice[1])
longTrEntryPrice:=if(isFirstValidOpenLongPosition)
getLongEntryPrice(getLongEntryOpenBaseScr())
elseif(tryEnterLongPosition)
math.min(getLongEntryPrice(getLongEntryTrailingBaseScr()),nz(longTrEntryPrice[1],999999))
else
na
boollongTrEntryIsActive=notna(longTrEntryPrice)
boolshortPositionEntry=entryTrailingEnabled?enteredShortPosition:validOpenShortPosition
//Markwhenshortpositionisactive
boolshortIsActive=shortPositionEntryorcurrentPositionSize<0
//counthowfaristhelastshortentrysignal
intbarsSinceEnterShort=nz(ta.barssince(shortPositionEntry),999999)
boolopenShortIsActive=barsSinceCloseShort>=barsSinceOpenShort//close->open
boolenterShortIsPending=barsSinceEnterShort>barsSinceValidOpenShort//enter->validOpen
booltryEnterShortPosition=entryTrailingEnabledandshortFiltersApprovalandopenShortIsActiveandenterShortIsPendingandcurrentPositionSize>=0
floatentryLowestLow=ta.lowest(low,devEntryLen)
floatopenEntryLowestLow=ta.valuewhen(validOpenShortPosition,entryLowestLow,0)
getShortEntryOpenBaseScr()=>
switchdevEntryMethod
'PERC'=>validOpenClose
'ATR'=>validOpenClose
'LOC'=>openEntryLowestLow
=>na
getShortEntryTrailingBaseScr()=>
switchdevEntryMethod
'PERC'=>high
'ATR'=>high
'LOC'=>entryLowestLow
=>na
getShortEntryPrice(baseSrc)=>
switchdevEntryMethod
'PERC'=>baseSrc*(1-devEntryPerc)
'ATR'=>baseSrc-devEntryAtrMul*shortAtr
'LOC'=>baseSrc-devEntryTicks*syminfo.mintick
=>na
varfloatshortTrEntryPrice=na
boolisFirstValidOpenShortPosition=entryTrailingEnabledandvalidOpenShortPositionandna(shortTrEntryPrice[1])
shortTrEntryPrice:=if(isFirstValidOpenShortPosition)
getShortEntryPrice(getShortEntryOpenBaseScr())
elseif(tryEnterShortPosition)
math.max(getShortEntryPrice(getShortEntryTrailingBaseScr()),nz(shortTrEntryPrice[1]))
else
na
boolshortTrEntryIsActive=notna(shortTrEntryPrice)
//barindexwhentheentersignalwastriggered
intentryBarId=ta.valuewhen(longPositionEntryorshortPositionEntry,bar_index,0)
//currententrypositionprice
floatposPrice=strategy.opentrades.entry_price(strategy.opentrades-1)
//pricewhenenteredapositionorpotentialentrypriceincaseoftrailing
floatentryPrice=(validOpenLongPositionorvalidOpenShortPosition)andnotentryTrailingEnabled?close
:longTrEntryIsActive?longTrEntryPrice
:shortTrEntryIsActive?shortTrEntryPrice
:posPrice
//PLOT=============================================================================================================
vartrailingEntryColor=color.new(color.blue,0)
plot(series=longTrEntryPrice,title='LongTrEntryPrice',color=trailingEntryColor,linewidth=1,style=plot.style_linebr,offset=1)
plot(series=shortTrEntryPrice,title='ShortTrEntryPrice',color=trailingEntryColor,linewidth=1,style=plot.style_linebr,offset=1)
varposColor=color.new(color.white,0)
plot(series=posPrice,title='Position',color=posColor,linewidth=1,style=plot.style_linebr,offset=1)
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//🟢TAKEPROFIT1=================================================================================================
//Description:Moduleresponsibleforthetakeprofitlogicimplementationbasedonthemethodandthenumberofsteptakeprofittargetsandthetrailingdeviation
//Dependencies:SHAREDVARIABLES1
//Results:longTrailingTakeProfitExecuted,shortTrailingTakeProfitExecuted,longInitTrailingTakeProfitExecuted,shortInitTrailingTakeProfitExecuted
//INPUT============================================================================================================
numOfTakeProfitTargets=input.int(defval=1,title='TakeProfitTargets',minval=0,tooltip='Thenumberoftakeprofittargetstobesetforeachentry.Thefirsttargetistheinitialtargetandeveryadditionaltargetisasteptarget.',group='🟢TakeProfit')
//LOGIC============================================================================================================
//arrayswiththeupdatedtakeProfitPrices
varlongTakeProfitPrices=array.new<float>(numOfTakeProfitTargets,na)
varshortTakeProfitPrices=array.new<float>(numOfTakeProfitTargets,na)
//takeprofithastocommunicatetheexecutionoftakeprofittargetswiththestoplosslogicwhen'TP'modeisselected
varlongTrailingTakeProfitExecuted=array.new<bool>(numOfTakeProfitTargets,false)
varshortTrailingTakeProfitExecuted=array.new<bool>(numOfTakeProfitTargets,false)
//counttheTakeProfittargetsthatexecuted
intlongTrailingTakeProfitExecutedCount=0
intshortTrailingTakeProfitExecutedCount=0
//calculatethehighesthighsincethelongentry
varfloathighestHighSinceLongEntry=na
highestHighSinceLongEntry:=if(longIsActive)
math.max(high,nz(highestHighSinceLongEntry[1],high))
else
na
//calculatethelowestlowsincetheshortentry
varfloatlowestLowSinceShortEntry=na
lowestLowSinceShortEntry:=if(shortIsActive)
math.min(low,nz(lowestLowSinceShortEntry[1],low))
else
na
for[i,takeProfitPrice]inlongTakeProfitPrices
executed=currentPositionSize>0and(array.get(longTrailingTakeProfitExecuted,i)or(((positionSizeDecreasedorpreviousPositionSize==0))andhighestHighSinceLongEntry>=takeProfitPrice))
array.set(longTrailingTakeProfitExecuted,i,executed)
if(executed)
longTrailingTakeProfitExecutedCount:=longTrailingTakeProfitExecutedCount+1
for[i,takeProfitPrice]inshortTakeProfitPrices
executed=currentPositionSize<0and(array.get(shortTrailingTakeProfitExecuted,i)or(((positionSizeIncreasedorpreviousPositionSize==0))andlowestLowSinceShortEntry<=takeProfitPrice))
array.set(shortTrailingTakeProfitExecuted,i,executed)
if(executed)
shortTrailingTakeProfitExecutedCount:=shortTrailingTakeProfitExecutedCount+1
//checkifthei-thTakeProfittargetwasexecuted
longIthTrailingTakeProfitExecuted(i)=>
array.size(longTrailingTakeProfitExecuted)>i?array.get(longTrailingTakeProfitExecuted,i):false
shortIthTrailingTakeProfitExecuted(i)=>
array.size(shortTrailingTakeProfitExecuted)>i?array.get(shortTrailingTakeProfitExecuted,i):false
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//🛠️STRATEGY2====================================================================================================
//Description:Moduleresponsiblefortheclosepositionlogic.Thisisimplementedbasedondealconditionsdefinedinternally(inthisscript)orexternaly(basedonconditionsthattakeasinputotherindicator)
//Dependencies:FILTERS,STRATEGY1,ENTRY
//Results:closeLongPosition,closeShortPosition
//INPUT============================================================================================================
ignoreEndDeals=input.bool(defval=true,title='IgnoreEndDeals',tooltip='Aclosesignalwillnotbeemitedwhentheenddealconditionismet,thusyouwillnotexityourexistingpositionbasedonthestrategylogic.Ifthisoptionischecked,youwillexitonlywhenthestoplossorthetakeprofittargetsaretriggered.',group='🛠️Strategy')
closeEarlyEnabled=input.bool(defval=false,title='CloseEarly#ofbars',inline='CloseEarly',group='🛠️Strategy')
closeEarlyBars=input.int(defval=7,title='',minval=1,tooltip='Emitclosepositionsignalifthegivennumberofbarshavepassedsincetheentryandthefirsttakeprofittargethasnotbeenreachedyet.',inline='CloseEarly',group='🛠️Strategy')
closeAtSessionEnd=input.bool(defval=false,title='CloseatSessionEnd',tooltip='Closeallpositionsatthemarketpriceattheendofeachsessionortheendoftimewindow.',group='🛠️Strategy')
//LOGIC============================================================================================================
closeLongPosition:=(ignoreEndDeals?false:longTradesEnabledandendLongDeal)or(closeEarlyEnabled?bar_index-entryBarId==closeEarlyBarsandnotlongIthTrailingTakeProfitExecuted(0):false)
closeShortPosition:=(ignoreEndDeals?false:shortTradesEnabledandendShortDeal)or(closeEarlyEnabled?bar_index-entryBarId==closeEarlyBarsandnotshortIthTrailingTakeProfitExecuted(0):false)
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//☭SHAREDVARIABLES3=============================================================================================
//Description:Moduleresponsibleforgeneralpurposevariablethatneededforseveralothermodules
//Dependencies:SHAREDVARIABLES1,STRATEGY2
//Results:validCloseLongPosition,validCloseShortPosition,closeClose
//LOGIC============================================================================================================
//theclosesignalswhenalreadyintoapositiontothatdirection
boolvalidCloseLongPosition=closeLongPositionandcurrentPositionSize>0
boolvalidCloseShortPosition=closeShortPositionandcurrentPositionSize<0
//Theclosepricewhenlastvalidclosewastriggered
floatcloseClose=ta.valuewhen(validCloseLongPositionorvalidCloseShortPosition,close,0)
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//⇧EXIT===========================================================================================================
//Description:Moduleresponsibleforthetrailingexitlogicimplementationbasedonthedeviation
//Dependencies:SHAREDVARIABLES1,SHAREDVARIABLES2,STRATEGY2,SHAREDVARIABLES3
//Results:longTrExitIsActive,shortTrExitIsActive
//INPUT============================================================================================================
exitTrailingEnabled=input.bool(defval=false,title='EnableTrailing',tooltip='Enableordisablethetrailingforexitposition.',group='⇧Exit')
devExitMethod=input.string(defval='PERC',title='DeviationMethod',options=['PERC','ATR','LOC'],tooltip='Themethodtocalculatethedeviationforthetrailingexit.',group='⇧Exit')
devExitPerc=input.float(defval=3.0,title='  Deviation%',minval=0.01,maxval=100.0,step=0.05,tooltip='Thesteptofollowthepricewhentheclosepositionconditionismet.',group='⇧Exit')/100.0
devExitAtrMul=input.float(defval=0.5,title='  DeviationATRMul',minval=0.01,step=0.05,tooltip='MultipliertobeusedontheATRtocalculatethestepforfollowingtheprice,untiltheexittargetisreached.',group='⇧Exit')
devExitLen=input.int(defval=3,title='  DevLocExtremaLen/Ticks',minval=1,inline='DeviationExitLocalExtrema',group='⇧Exit')
devExitTicks=input.int(defval=2,title='',minval=0,tooltip='Localextrema(minimum/maximum)withinawindowoflengthminus/plussometickstobeusedfortheentrytarget.',inline='DeviationExitLocalExtrema',group='⇧Exit')
//LOGIC============================================================================================================
boolexitLongIsPending=barsSinceOpenLong>barsSinceCloseLongandcurrentPositionSize>0//open->close
booltryExitLongPosition=exitTrailingEnabledandexitLongIsPending
floatexitLowestLow=ta.lowest(low,devExitLen)
floatcloseExitLowestLow=ta.valuewhen(validCloseLongPosition,exitLowestLow,0)
getLongExitCloseBaseScr()=>
switchdevExitMethod
'PERC'=>closeClose
'ATR'=>closeClose
'LOC'=>closeExitLowestLow
=>na
getLongTrExitBaseScr()=>
switchdevExitMethod
'PERC'=>high
'ATR'=>high
'LOC'=>exitLowestLow
=>na
getLongTrExitPrice(baseSrc)=>
switchdevExitMethod
'PERC'=>baseSrc*(1-devExitPerc)
'ATR'=>baseSrc-devExitAtrMul*longAtr
'LOC'=>baseSrc-devExitTicks*syminfo.mintick
=>na
varfloatlongTrExitPrice=na
boolisFirstValidCloseLongPosition=exitTrailingEnabledandvalidCloseLongPositionandna(longTrExitPrice[1])
longTrExitPrice:=if(isFirstValidCloseLongPosition)
getLongTrExitPrice(getLongExitCloseBaseScr())
elseif(tryExitLongPosition)
math.max(getLongTrExitPrice(getLongTrExitBaseScr()),nz(longTrExitPrice[1],999999.9))
else
na
boollongTrExitIsActive=notna(longTrExitPrice)
boolexitShortIsPending=barsSinceOpenShort>barsSinceCloseShortandcurrentPositionSize<0//open->close
booltryExitShortPosition=exitTrailingEnabledandexitShortIsPending
floatexitHighestHigh=ta.highest(high,devExitLen)
floatcloseExitHighestHigh=ta.valuewhen(validCloseShortPosition,exitHighestHigh,0)
getShortExitCloseBaseScr()=>
switchdevExitMethod
'PERC'=>closeClose
'ATR'=>closeClose
'LOC'=>closeExitHighestHigh
=>na
getShortTrExitBaseScr()=>
switchdevExitMethod
'PERC'=>low
'ATR'=>low
'LOC'=>exitHighestHigh
=>na
getShortTrExitPrice(baseSrc)=>
switchdevExitMethod
'PERC'=>baseSrc*(1+devExitPerc)
'ATR'=>baseSrc+devExitAtrMul*shortAtr
'LOC'=>baseSrc+devExitTicks*syminfo.mintick
=>na
varfloatshortTrExitPrice=na
boolisFirstValidCloseShortPosition=exitTrailingEnabledandvalidCloseShortPositionandna(shortTrExitPrice[1])
shortTrExitPrice:=if(isFirstValidCloseShortPosition)
getShortTrExitPrice(getShortExitCloseBaseScr())
elseif(tryExitShortPosition)
math.min(getShortTrExitPrice(getShortTrExitBaseScr()),nz(shortTrExitPrice[1],999999.9))
else
na
boolshortTrExitIsActive=notna(shortTrExitPrice)
//pricewhenexitedapositionorpotentialexitpriceincaseoftrailing
floatexitPrice=longTrExitIsActive?longTrExitPrice
:shortTrExitIsActive?shortTrExitPrice
:close
//PLOT=============================================================================================================
vartrailingExitColor=color.new(color.purple,0)
plot(series=longTrExitPrice,title='LongSellPrice',color=trailingExitColor,linewidth=1,style=plot.style_linebr,offset=1)
plot(series=shortTrExitPrice,title='ShortSellPrice',color=trailingExitColor,linewidth=1,style=plot.style_linebr,offset=1)
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//🔴STOPLOSS=====================================================================================================
//Description:Moduleresponsibleforthestoplosslogicimplementationbasedonthemethodandthetrailingmode
//Dependencies:SHAREDVARIABLES2,ENTRY,TAKEPROFIT1
//Results:longStopLossPrice,shortStopLossPrice
//INPUT============================================================================================================
stopLossMethod=input.string(defval='PERC',title='StopLossMethod',options=['PERC','ATR','LOC'],tooltip='Themethodtocalculatethestoploss(percentagewise,ATRbasedorbasedonlocalextrema).',group='🔴StopLoss')
longTrailingStopLossPerc=input.float(defval=7.5,title='  Long/ShortStopLoss%',minval=0.05,maxval=100.0,step=0.05,inline='StopLossPerc',group='🔴StopLoss')/100.0
shortTrailingStopLossPerc=input.float(defval=7.5,title='',minval=0.05,maxval=100.0,step=0.05,tooltip='Thepercentageofthepricedecrease/increasetosetthestoplosspricetargetforlong/shortpositions.',inline='StopLossPerc',group='🔴StopLoss')/100.0
longStopLossAtrMul=input.float(defval=3.0,title='  ATRLong/ShortMul  ',minval=0.1,step=0.1,inline='StopLossATRMultiplier',group='🔴StopLoss')
shortStopLossAtrMul=input.float(defval=3.0,title='',minval=0.1,step=0.1,tooltip='ATRmultipliertobeusedforthelong/shortstoploss.',inline='StopLossATRMultiplier',group='🔴StopLoss')
stopLossLocLen=input.int(defval=5,title='  LocExtremaLen/Ticks  ',minval=1,inline='StopLossLocalExtrema',group='🔴StopLoss')
stopLossLocTicks=input.int(defval=5,title='',minval=0,tooltip='Localextrema(minimum/maximum)withinawindowoflengthminus/plussometickstobeusedforthelong/shortstoploss.',inline='StopLossLocalExtrema',group='🔴StopLoss')
stopLossMoveActMode=input.string(defval='MULTI',title='MoveActivationMode',options=['OFF','ONCE','MULTI'],tooltip='Movethestoplosstotheentryprice(a.k.abreakeven)whenfirsttakeprofitpricetargetisreached(ONCE),ormovethestoplosstotheprevioustakeprofittargetpriceeverytimeanewtakeprofitisreached(MULTI).Thus,morethanonetakeprofittargetsareneededtoseeadifferencebetweenthetwomodes!Ifbothmoveandtrailingareactivatedthestoplossisdefinedbythemorestrictpriceatanygiventime.',group='🔴StopLoss')
stopLossTrailingActMode=input.string(defval='TP',title='TrailingActivationMode',options=['OFF','START','TP'],tooltip='Enablesthetrailingforthestoplossfromtheverybeginningoftheentryorder(START),orwhenthei-thtakeprofitorderisexecuted(TP)ornotatall(OFF).',group='🔴StopLoss')
stopLossTrailingTPActNum=input.int(defval=3,title='  ActTakeProfit#',minval=1,tooltip='TheTakeProfitnumber(from1uptothe"TakeProfitTargets"numbersetinTAKEPROFITsection)thatwillactivatethetrailingofthestoplossafteritisreached.TheTrailingActivationshouldbesetto"TP".',group='🔴StopLoss')
stopLossTrailingDistMode=input.string(defval='FIXED',title='TrailingDistanceMode',options=['FIXED','STEP'],tooltip='Whenstoplosstrailiningisactivatedthedistancewilltrailthepriceaccordingtothestoplossmethodsoitmaintainsitsmaximumvaluefromthecurrenthigh/low(FIXED),orthedistancewillchangeeverytimeanewtakeprofitisreachedandwilladdthecorrespondigstepvaluetotheprevious.Thus,morethanonetakeprofittargetsareneededtoseeadifferencebetweentwomodes!Ifbothmoveandtrailingareactivatedthestoplossisdefinedbythemorestrictpriceatanygiventime.',group='🔴StopLoss')
longStepTrailingStopLossPerc=input.float(defval=2.5,title='  StepLong/ShortStopLoss%',minval=-100.0,maxval=100.0,step=0.05,inline='StopLossPercStep',group='🔴StopLoss')/100.0
shortStepTrailingStopLossPerc=input.float(defval=2.5,title='',minval=-100.0,maxval=100.0,step=0.05,tooltip='TheSteppercentageofthepricedecrease/increasetosetthestoplosspricetargetforlong/shortpositionsafterthefirsttakeprofittargetisreached.',inline='StopLossPercStep',group='🔴StopLoss')/100.0
longStepStopLossAtrMul=input.float(defval=1.0,title='  StepATRLong/ShortMul  ',step=0.1,inline='StopLossATRMultiplierStep',group='🔴StopLoss')
shortStepStopLossAtrMul=input.float(defval=1.0,title='',step=0.1,tooltip='StepATRmultipliertobeusedforthelong/shortStopLossafterthefirsttakeprofittargetisreached.',inline='StopLossATRMultiplierStep',group='🔴StopLoss')
stepStopLossLocLen=input.int(defval=4,title='  StepLocExtremaLen/Ticks',inline='StopLossLocalExtremaStep',group='🔴StopLoss')
stepStopLossLocTicks=input.int(defval=0,title='',tooltip='StepLocalextrema(minimum/maximum)withinawindowoflengthminus/plussometickstobeusedforthelong/shortstoplossafterthefirsttakeprofittargetisreached.',inline='StopLossLocalExtremaStep',group='🔴StopLoss')
//LOGIC============================================================================================================
floatstopLossLowestLow=ta.lowest(low,(stopLossTrailingDistMode=='STEP'?stopLossLocLen+longTrailingTakeProfitExecutedCount*stepStopLossLocLen:stopLossLocLen))
getLongStopLossEntryBaseScr()=>
switchstopLossMethod
'PERC'=>entryPrice
'ATR'=>entryPrice
'LOC'=>stopLossLowestLow
=>na
getLongStopLossTrailingBaseScr()=>
switchstopLossMethod
'PERC'=>high
'ATR'=>high
'LOC'=>stopLossLowestLow
=>na
getLongStopLossPrice(baseSrc)=>
switchstopLossMethod
'PERC'=>baseSrc*(1-(stopLossTrailingDistMode=='STEP'?longTrailingStopLossPerc+longTrailingTakeProfitExecutedCount*longStepTrailingStopLossPerc:longTrailingStopLossPerc))
'ATR'=>baseSrc-(stopLossTrailingDistMode=='STEP'?longStopLossAtrMul+longTrailingTakeProfitExecutedCount*longStepStopLossAtrMul:longStopLossAtrMul)*longAtr
'LOC'=>baseSrc-(stopLossTrailingDistMode=='STEP'?stopLossLocTicks+longTrailingTakeProfitExecutedCount*stepStopLossLocTicks:stopLossLocTicks)*syminfo.mintick
=>na
//trailingstartswhentheselectedtakeprofitpriceisreachedif'TP'modeissetorfromtheverybeginingif'START'modeisselected
boollongStopLossTrailingEnabled=stopLossTrailingActMode=='START'or(stopLossTrailingActMode=='TP'andlongIthTrailingTakeProfitExecuted(stopLossTrailingTPActNum-1))
//calculatethestoplosspricewhenenterlongpositionandpeserveitsvalueuntilthepositioncloses
varfloatlongStopLossPrice=na
longStopLossPrice:=if(longTrEntryIsActiveorvalidOpenLongPositionorenteredLongPosition)
getLongStopLossPrice(getLongStopLossEntryBaseScr())
elseif(longIsActive)
stopPrice=longStopLossTrailingEnabled?getLongStopLossPrice(getLongStopLossTrailingBaseScr()):longStopLossPrice[1]
stopPrice:=(stopLossMoveActMode=='ONCE'andlongTrailingTakeProfitExecutedCount>=1)or(stopLossMoveActMode=='MULTI'andlongTrailingTakeProfitExecutedCount==1)?math.max(stopPrice,entryPrice)
:stopLossMoveActMode=='MULTI'andlongTrailingTakeProfitExecutedCount>1?math.max(stopPrice,array.get(longTakeProfitPrices,longTrailingTakeProfitExecutedCount-2))
:stopPrice
math.max(stopPrice,nz(longStopLossPrice[1]))
else
na
floatlongStopLossPerc=(entryPrice-longStopLossPrice)/entryPrice
floatstopLossHighestHigh=ta.highest(high,(stopLossTrailingDistMode=='STEP'?stopLossLocLen+shortTrailingTakeProfitExecutedCount*stepStopLossLocLen:stopLossLocLen))
getShortStopLossEntryBaseScr()=>
switchstopLossMethod
'PERC'=>entryPrice
'ATR'=>entryPrice
'LOC'=>stopLossHighestHigh
getShortStopLossTrailingBaseScr()=>
switchstopLossMethod
'PERC'=>low
'ATR'=>low
'LOC'=>stopLossHighestHigh
getShortStopLossPrice(baseSrc)=>
switchstopLossMethod
'PERC'=>baseSrc*(1+(stopLossTrailingDistMode=='STEP'?shortTrailingStopLossPerc+shortTrailingTakeProfitExecutedCount*shortStepTrailingStopLossPerc:shortTrailingStopLossPerc))
'ATR'=>baseSrc+(stopLossTrailingDistMode=='STEP'?shortStopLossAtrMul+shortTrailingTakeProfitExecutedCount*shortStepStopLossAtrMul:shortStopLossAtrMul)*shortAtr
'LOC'=>baseSrc+(stopLossTrailingDistMode=='STEP'?stopLossLocTicks+shortTrailingTakeProfitExecutedCount*stepStopLossLocTicks:stopLossLocTicks)*syminfo.mintick
=>na
//trailingstartswhentheselectedtakeprofitpriceisreachedif'TP'modeissetorfromtheverybeginingif'START'modeisselected
boolshortStopLossTrailingEnabled=stopLossTrailingActMode=='START'or(stopLossTrailingActMode=='TP'andshortIthTrailingTakeProfitExecuted(stopLossTrailingTPActNum-1))
//calculatethestoplosspricewhenentershortpositionandpeserveitsvalueuntilthepositioncloses
varfloatshortStopLossPrice=na
shortStopLossPrice:=if(shortTrEntryIsActiveorvalidOpenShortPositionorenteredShortPosition)
getShortStopLossPrice(getShortStopLossEntryBaseScr())
elseif(shortIsActive)
stopPrice=shortStopLossTrailingEnabled?getShortStopLossPrice(getShortStopLossTrailingBaseScr()):shortStopLossPrice[1]
stopPrice:=(stopLossMoveActMode=='ONCE'andshortTrailingTakeProfitExecutedCount>=1)or(stopLossMoveActMode=='MULTI'andshortTrailingTakeProfitExecutedCount==1)?math.min(stopPrice,entryPrice)
:stopLossMoveActMode=='MULTI'andshortTrailingTakeProfitExecutedCount>1?math.min(stopPrice,array.get(shortTakeProfitPrices,shortTrailingTakeProfitExecutedCount-2))
:stopPrice
math.min(stopPrice,nz(shortStopLossPrice[1],999999.9))
else
na
floatshortStopLossPerc=(shortStopLossPrice-entryPrice)/entryPrice
//PLOT=============================================================================================================
varstopLossColor=color.new(#e25141,0)
plot(series=debugModeEnabledorna(longTrEntryPrice)?longStopLossPrice:na,title='LongStopLoss',color=stopLossColor,linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledorna(shortTrEntryPrice)?shortStopLossPrice:na,title='ShortStopLoss',color=stopLossColor,linewidth=1,style=plot.style_linebr,offset=1)
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//🟢TAKEPROFIT2=================================================================================================
//Description:Moduleresponsibleforthetakeprofitlogicimplementationbasedonthemethodandthenumberofsteptakeprofittargetsandthetrailingdeviation
//Dependencies:SHAREDVARIABLES2,ENTRY,TAKEPROFIT1
//Results:longTakeProfitPrices,shortTakeProfitPrices
//INPUT============================================================================================================
initTakeProfitMethod=input.string(defval='PERC',title='InitTakeProfitMethod',options=['PERC','ATR','RR','LOC'],tooltip='Themethodtocalculatethefirsttakeprofitpricetarget.',group='🟢TakeProfit')
longInitTakeProfitPerc=input.float(defval=10.0,title='  Long/ShortInitTakeProfit%',minval=0.05,step=0.05,inline='InitTakeProfitPerc',group='🟢TakeProfit')/100.0
shortInitTakeProfitPerc=input.float(defval=10.0,title='',minval=0.05,step=0.05,tooltip='Thepercentageofthepriceincrease/decreasefromtheopenpricetosetthefirsttakeprofitpricetargetforlong/shortpositions.',inline='InitTakeProfitPerc',group='🟢TakeProfit')/100.0
longInitTakeProfitAtrMul=input.float(defval=6.0,title='  InitATRLong/ShortMul  ',minval=0.1,step=0.1,inline='InitTakeProfitATRMultiplier',group='🟢TakeProfit')
shortInitTakeProfitAtrMul=input.float(defval=6.0,title='',minval=0.1,step=0.1,tooltip='ATRmultipliertobeusedforthelong/shortfirsttakeprofittarget.',inline='InitTakeProfitATRMultiplier',group='🟢TakeProfit')
longInitRiskRewardRatio=input.float(defval=1.5,title='  InitLong/ShortRRRatio  ',minval=0.1,step=0.1,inline='InitRiskRewardRatio',group='🟢TakeProfit')
shortInitRiskRewardRatio=input.float(defval=1.5,title='',minval=0.1,step=0.1,tooltip='TheRisk/RewardRatiotobeusedforthelong/shortfirsttakeprofitbasedonthestoplosspricetarget.',inline='InitRiskRewardRatio',group='🟢TakeProfit')
takeProfitLocLen=input.int(defval=14,title='  LocExtremaLen/Ticks  ',minval=1,inline='TakeProfitLocalExtrema',group='🟢TakeProfit')
takeProfitLocTicks=input.int(defval=5,title='',minval=0,tooltip='Localextrema(minimum/maximum)withinawindowoflengthminus/plussometickstobeusedforthelong/shorttakeprofit.',inline='TakeProfitLocalExtrema',group='🟢TakeProfit')
stepTakeProfitMethod=input.string(defval='PERC',title='StepTakeProfitMethod',options=['PERC','ATR','RR'],tooltip='Themethodtocalculatetheadditionalsteptakeprofitpricetargets.',group='🟢TakeProfit')
longStepTakeProfitPerc=input.float(defval=5.0,title='  Long/ShortStepTakeProfit%',minval=0.05,step=0.05,inline='StepTakeProfitPerc',group='🟢TakeProfit')/100.0
shortStepTakeProfitPerc=input.float(defval=5.0,title='',minval=0.05,step=0.05,tooltip='Thepercentageofthepricetobeadded/subtractedontopofthefirsttakeprofittargetforeachadditionalsteptakeprofitpricetargetforlong/shortpositions.',inline='StepTakeProfitPerc',group='🟢TakeProfit')/100.0
longStepTakeProfitAtrMul=input.float(defval=3.0,title='  StepATRLong/ShortMul  ',minval=0.1,step=0.1,inline='StepTakeProfitATRMultiplier',group='🟢TakeProfit')
shortStepTakeProfitAtrMul=input.float(defval=3.0,title='',minval=0.1,step=0.1,tooltip='ATRmultipliertobeadded/subtractedontopofthefirsttakeprofittargetforeachadditionalsteptakeprofitpricetargetforthelong/shortpositions.',inline='StepTakeProfitATRMultiplier',group='🟢TakeProfit')
longStepRiskRewardRatio=input.float(defval=1.0,title='  StepLong/ShortRRRatio  ',minval=0.1,step=0.1,inline='StepRiskRewardRatio',group='🟢TakeProfit')
shortStepRiskRewardRatio=input.float(defval=1.0,title='',minval=0.1,step=0.1,tooltip='TheRisk/RewardRatiotobeadded/subtractedtothefirsttakeprofittargetforeachadditionalsteptakeprofitpricetargetforthelong/shortpositions.',inline='StepRiskRewardRatio',group='🟢TakeProfit')
takeProfitTrailingEnabled=input.bool(defval=true,title='EnableTrailing⚠️🎨️',tooltip='Enableordisablethetrailingfortakeprofit.WARNING!Thisfeaturewillrepaint.Makesureyouuseitalongwith"BarMagnifier"and"DeepBacktesting"forrealisticbacktestresults.',group='🟢TakeProfit')
devTakeProfitMethod=input.string(defval='PERC',title='  DeviationMethod',options=['PERC','ATR'],tooltip='Themethodtocalculatethedeviationforthetrailingtakeprofit.',group='🟢TakeProfit')
devTakeProfitPerc=input.float(defval=1.0,title='  Deviation%',minval=0.01,maxval=100.0,step=0.05,tooltip='Thepercentagewisesteptobeusedforfollowingtheprice,whenthetakeprofittargetisreached.',group='🟢TakeProfit')/100.0
devTakeProfitAtrMul=input.float(defval=0.01,title='  DeviationATRMul',minval=0.01,step=0.05,tooltip='MultipliertobeusedontheATRtocalculatethestepforfollowingtheprice,whenthetakeprofittargetisreached.',group='🟢TakeProfit')
//LOGIC============================================================================================================
getTrailingOffsetTicks(takeProfitPrice,atr)=>
switchdevTakeProfitMethod
'PERC'=>takeProfitPrice*devTakeProfitPerc/syminfo.mintick
'ATR'=>devTakeProfitAtrMul*atr/syminfo.mintick
=>na
floattakeProfitHighestHigh=ta.highest(high,takeProfitLocLen)
getLongInitTakeProfitBaseScr()=>
switchinitTakeProfitMethod
'PERC'=>entryPrice
'ATR'=>entryPrice
'RR'=>entryPrice
'LOC'=>takeProfitHighestHigh
=>na
getLongTakeProfitPrice(baseSrc,takeProfitMethod,takeProfitPerc,takeProfitAtrMul,riskRewardRatio)=>
switchtakeProfitMethod
'PERC'=>baseSrc*(1+takeProfitPerc)
'ATR'=>baseSrc+takeProfitAtrMul*longAtr
'RR'=>baseSrc+riskRewardRatio*(entryPrice-longStopLossPrice)
'LOC'=>baseSrc-takeProfitLocTicks*syminfo.mintick
=>na
//calculatetakeprofitpriceswhenenterlongpositionandpeservetheirvaluesuntiltheentirepositioncloses
for[i,takeProfitPrice]inlongTakeProfitPrices
longTakeProfitPerc=i*longStepTakeProfitPerc
longTakeProfitAtrMul=i*longStepTakeProfitAtrMul
longRiskRewardRatio=i*longStepRiskRewardRatio
if(longTrEntryIsActiveorvalidOpenLongPositionorenteredLongPosition)
array.set(longTakeProfitPrices,i,getLongTakeProfitPrice(getLongTakeProfitPrice(getLongInitTakeProfitBaseScr(),initTakeProfitMethod,longInitTakeProfitPerc,longInitTakeProfitAtrMul,longInitRiskRewardRatio),stepTakeProfitMethod,longTakeProfitPerc,longTakeProfitAtrMul,longRiskRewardRatio))
elseif(longIsActive)
array.set(longTakeProfitPrices,i,nz(takeProfitPrice,getLongTakeProfitPrice(getLongTakeProfitPrice(getLongInitTakeProfitBaseScr(),initTakeProfitMethod,longInitTakeProfitPerc,longInitTakeProfitAtrMul,longInitRiskRewardRatio),stepTakeProfitMethod,longTakeProfitPerc,longTakeProfitAtrMul,longRiskRewardRatio)))
else
array.set(longTakeProfitPrices,i,na)
varlongTrailingTakeProfitOffsetTicks=array.new<float>(numOfTakeProfitTargets,na)
if(longPositionEntry)
for[i,takeProfitPrice]inlongTakeProfitPrices
array.set(longTrailingTakeProfitOffsetTicks,i,getTrailingOffsetTicks(takeProfitPrice,longAtr))
floattakeProfitLowestLow=ta.lowest(low,takeProfitLocLen)
getShortInitTakeProfitBaseScr()=>
switchinitTakeProfitMethod
'PERC'=>entryPrice
'ATR'=>entryPrice
'RR'=>entryPrice
'LOC'=>takeProfitLowestLow
=>na
getShortTakeProfitPrice(baseSrc,takeProfitMethod,takeProfitPerc,takeProfitAtrMul,riskRewardRatio)=>
switchtakeProfitMethod
'PERC'=>baseSrc*(1-takeProfitPerc)
'ATR'=>baseSrc-takeProfitAtrMul*shortAtr
'RR'=>baseSrc-riskRewardRatio*(shortStopLossPrice-entryPrice)
'LOC'=>baseSrc+takeProfitLocTicks*syminfo.mintick
=>na
//calculatetakeprofitpriceswhenentershortpositionandpeservetheirvaluesuntiltheentirepositioncloses
for[i,takeProfitPrice]inshortTakeProfitPrices
shortTakeProfitPerc=i*shortStepTakeProfitPerc
shortTakeProfitAtrMul=i*shortStepTakeProfitAtrMul
shortRiskRewardRatio=i*shortStepRiskRewardRatio
if(shortTrEntryIsActiveorvalidOpenShortPositionorenteredShortPosition)
array.set(shortTakeProfitPrices,i,getShortTakeProfitPrice(getShortTakeProfitPrice(getShortInitTakeProfitBaseScr(),initTakeProfitMethod,shortInitTakeProfitPerc,shortInitTakeProfitAtrMul,shortInitRiskRewardRatio),stepTakeProfitMethod,shortTakeProfitPerc,shortTakeProfitAtrMul,shortRiskRewardRatio))
elseif(shortIsActive)
array.set(shortTakeProfitPrices,i,nz(takeProfitPrice,getShortTakeProfitPrice(getShortTakeProfitPrice(getShortInitTakeProfitBaseScr(),initTakeProfitMethod,shortInitTakeProfitPerc,shortInitTakeProfitAtrMul,shortInitRiskRewardRatio),stepTakeProfitMethod,shortTakeProfitPerc,shortTakeProfitAtrMul,shortRiskRewardRatio)))
else
array.set(shortTakeProfitPrices,i,na)
varshortTrailingTakeProfitOffsetTicks=array.new<float>(numOfTakeProfitTargets,na)
if(shortPositionEntry)
for[i,takeProfitPrice]inshortTakeProfitPrices
array.set(shortTrailingTakeProfitOffsetTicks,i,getTrailingOffsetTicks(takeProfitPrice,shortAtr))
//PLOT=============================================================================================================
vartakeProfitColor=color.new(#419388,0)
varwinColor=color.new(color.lime,0)
updateLines(lines,prices,trasp)=>
for[i,ln]inlines
price=array.get(prices,i)
if(notna(price)andnotarray.get(trasp,i))
line.set_y1(ln,price)
line.set_y2(ln,price)
line.set_x2(ln,bar_index+1)
moveAllElements(fromArr,toArr)=>
len=array.size(fromArr)-1
fori=0tolen>=0?len:na
array.push(toArr,array.pop(fromArr))
varallLongTakeProfitLines=array.new<line>()
varcurrentLongTakeProfitLines=array.new<line>()
if(longIsActive)
if(longPositionEntry)
moveAllElements(currentLongTakeProfitLines,allLongTakeProfitLines)
for[i,takeProfitPrice]inlongTakeProfitPrices
pa.push(currentLongTakeProfitLines,line.new(x1=entryBarId+1,y1=takeProfitPrice,x2=bar_index+1,y2=takeProfitPrice,xloc=xloc.bar_index,extend=extend.none,color=color.from_gradient(i,0,numOfTakeProfitTargets,takeProfitColor,winColor),style=line.style_solid,width=1),numOfTakeProfitTargets)
updateLines(currentLongTakeProfitLines,longTakeProfitPrices,longTrailingTakeProfitExecuted)
varallShortTakeProfitLines=array.new<line>()
varcurrentShortTakeProfitLines=array.new<line>()
if(shortIsActive)
if(shortPositionEntry)
moveAllElements(currentShortTakeProfitLines,allShortTakeProfitLines)
for[i,takeProfitPrice]inshortTakeProfitPrices
pa.push(currentShortTakeProfitLines,line.new(x1=entryBarId+1,y1=takeProfitPrice,x2=bar_index+1,y2=takeProfitPrice,xloc=xloc.bar_index,extend=extend.none,color=color.from_gradient(i,0,numOfTakeProfitTargets,takeProfitColor,winColor),style=line.style_solid,width=1),numOfTakeProfitTargets)
updateLines(currentShortTakeProfitLines,shortTakeProfitPrices,shortTrailingTakeProfitExecuted)
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//💰QUANTITY/RISKMANAGEMENT======================================================================================
//Description:Moduleresponsibleforthecalculationofthequantitypercentagethatwillbeusedoneachentry
//Dependencies:SHAREDVARIABLES2,ENTRY,SHAREDVARIABLES3,EXIT
//Results:longEntryBaseQuantity,shortEntryBaseQuantity,longRemainingQuantityPerc,shortRemainingQuantityPerc
importjason5480/math_utils/3asmu
//INPUT============================================================================================================
allTakeProfitsQuantityPerc=input.float(defval=100.0,title='TakeProfitQuantity%',minval=0.0,maxval=100.0,step=0.5,tooltip='ThepercentageofthepositionthatwillbewithdrawnwhenALLthetakeprofitpricetargetsarereached.Ifmorethanonetakeprofittargetisset,thenALLtargetswillshareequallythisamountandexitaccordingly.',group='💰Quantity/RiskManagement')/100.0
quantityMethod=input.string(defval='RISK',title='QuantityMethod',options=['RISK','EQUITY'],tooltip='Themethodtocalculatethequantitytoentereachnewposition.',group='💰Quantity/RiskManagement')
riskPerc=input.float(defval=2.0,title='  CapitalatRisk%',minval=1.0,maxval=100.0,tooltip='Themaximumpercentageoftheequitytoriskineverytradewhennoleverageisused.',group='💰Quantity/RiskManagement')/100.0
equityPerc=input.float(defval=20.0,title='  Equity%        ',minval=1.0,maxval=100.0,tooltip='Thepercentageoftheequitytoenterineverytradewhennoleverageisused.',group='💰Quantity/RiskManagement')/100.0
minTrade=input.int(defval=10,title='MinimumTradePrice',minval=1,tooltip='Theminimumtradepriceinquotecurrencythatisallowedintheexchangeforavalidnewposition.',group='💰Quantity/RiskManagement')
longLeverage=input.int(defval=1,title='LeverageLong/Short ',minval=1,inline='Leverage',group='💰Quantity/RiskManagement')
shortLeverage=input.int(defval=1,title='',minval=1,tooltip='Leveragefactorusedtomultiplytheinitialriskquantityofeachtrade(byborrowingtheremainingamount).Thus,theprofitsandlossesaremultipliedrespectivelly.',inline='Leverage',group='💰Quantity/RiskManagement')
//LOGIC============================================================================================================
varfloatepsilon=0.0001
varfloattakeProfitQuantityPerc=numOfTakeProfitTargets==0?0:mu.clamp_up((allTakeProfitsQuantityPerc/numOfTakeProfitTargets)+epsilon,0.0,1.0,4)
varintquoteDecimalDigits=mu.num_of_decimal_digits(syminfo.mintick*syminfo.pointvalue)
getLongRiskQuoteQuantity()=>
mu.clamp_down(strategy.equity*riskPerc*longLeverage/longStopLossPerc,minTrade,strategy.equity*longLeverage,quoteDecimalDigits)
getLongEquityQuoteQuantity()=>
mu.clamp_down(strategy.equity*equityPerc*longLeverage,minTrade,strategy.equity*longLeverage,quoteDecimalDigits)
floatlongQuoteQuantity=switchquantityMethod
'RISK'=>getLongRiskQuoteQuantity()
'EQUITY'=>getLongEquityQuoteQuantity()
=>na
getLongQuoteQuantityPerc()=>
longQuoteQuantity/strategy.equity
floatlongEntryQuoteQuantityPerc=na
longEntryQuoteQuantityPerc:=if(longTrEntryIsActiveorvalidOpenLongPosition)
getLongQuoteQuantityPerc()
elseif(longIsActive)
nz(longEntryQuoteQuantityPerc[1],getLongQuoteQuantityPerc())
else
na
getLongBaseQuantity()=>
longQuoteQuantity/entryPrice
varfloatlongEntryBaseQuantity=na
longEntryBaseQuantity:=if(longTrEntryIsActiveorvalidOpenLongPosition)
getLongBaseQuantity()
elseif(longIsActive)
nz(longEntryBaseQuantity[1],getLongBaseQuantity())
else
na
getLongRisk()=>
switchquantityMethod
'RISK'=>riskPerc
'EQUITY'=>equityPerc*longStopLossPerc
=>na
varfloatlongRisk=na
longRisk:=if(longTrEntryIsActiveorvalidOpenLongPosition)
getLongRisk()
elseif(longIsActive)
nz(longRisk[1],getLongRisk())
else
na
floatlongRemainingQuantityPerc=1-longTrailingTakeProfitExecutedCount*takeProfitQuantityPerc
getShortRiskQuoteQuantity()=>
mu.clamp_down(strategy.equity*riskPerc*shortLeverage/shortStopLossPerc,minTrade,strategy.equity*shortLeverage,quoteDecimalDigits)
getShortEquityQuoteQuantity()=>
mu.clamp_down(strategy.equity*equityPerc*shortLeverage,minTrade,strategy.equity*shortLeverage,quoteDecimalDigits)
floatshortQuoteQuantity=switchquantityMethod
'RISK'=>getShortRiskQuoteQuantity()
'EQUITY'=>getShortEquityQuoteQuantity()
=>na
getShortQuoteQuantityPerc()=>
shortQuoteQuantity/strategy.equity
floatshortEntryQuoteQuantityPerc=na
shortEntryQuoteQuantityPerc:=if(shortTrEntryIsActiveorvalidOpenShortPosition)
getShortQuoteQuantityPerc()
elseif(shortIsActive)
nz(shortEntryQuoteQuantityPerc[1],getShortQuoteQuantityPerc())
else
na
getShortBaseQuantity()=>
shortQuoteQuantity/entryPrice
varfloatshortEntryBaseQuantity=na
shortEntryBaseQuantity:=if(shortTrEntryIsActiveorvalidOpenShortPosition)
getShortBaseQuantity()
elseif(shortIsActive)
nz(shortEntryBaseQuantity[1],getShortBaseQuantity())
else
na
getShortRisk()=>
switchquantityMethod
'RISK'=>riskPerc
'EQUITY'=>equityPerc*shortStopLossPerc
=>na
varfloatshortRisk=na
shortRisk:=if(shortTrEntryIsActiveorvalidOpenShortPosition)
getShortRisk()
elseif(shortIsActive)
nz(shortRisk[1],getShortRisk())
else
na
floatshortRemainingQuantityPerc=1-shortTrailingTakeProfitExecutedCount*takeProfitQuantityPerc
//PLOT=============================================================================================================
varbuyColor=color.new(color.green,0)
varsellColor=color.new(color.red,0)
vartextColor=color.new(color.white,0)
if(validOpenLongPosition)
label.new(x=bar_index,y=na,text='Buy',yloc=yloc.belowbar,color=buyColor,style=label.style_label_up,textcolor=textColor)
if(validOpenShortPosition)
label.new(x=bar_index,y=na,text='Sell',yloc=yloc.abovebar,color=sellColor,style=label.style_label_down,textcolor=textColor)
if(validCloseShortPosition)
label.new(x=bar_index,y=na,text='Buy',yloc=yloc.belowbar,color=buyColor,style=label.style_label_up,textcolor=textColor)
if(validCloseLongPosition)
label.new(x=bar_index,y=na,text='Sell',yloc=yloc.abovebar,color=sellColor,style=label.style_label_down,textcolor=textColor)
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//📊STATS=========================================================================================================
//Description:Moduleresponsibleforplottingadditionalinformationforstatisticsandbacktestingpurposes
//Dependencies:SHAREDVARIABLES1,ENTRY
//Results:NONE
//INPUT============================================================================================================
showStatsTable=input.bool(defval=false,title='ShowStatsTable⚠️🐌',inline='StatsTable',group='📊Stats')
statsTablePos=input.string(defval='TR',title='',options=['TR','TL','BR','BL'],tooltip='Showthetablewiththeoveralltradestatisticsontheselectedcorner.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',inline='StatsTable',group='📊Stats')
showTradeStats=input.bool(defval=false,title='ShowTradeStats⚠️🐌',tooltip='Showthewinning/losingtradestatswhencomplete.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='📊Stats')
//LOGIC============================================================================================================
getTablePosition(pos)=>
switchpos
'TR'=>position.top_right
'TL'=>position.top_left
'BR'=>position.bottom_right
'BL'=>position.bottom_left
=>position.middle_center
floatcurrentLongProfitPerc=if((longIsActiveorlongPositionCompleted)and(showStatsTableorshowTradeStats))
floatprofit=0.0
for[i,takeProfitPrice]inlongTakeProfitPrices
if(array.get(longTrailingTakeProfitExecuted,i))
floatlongTakeProfitPerc=(takeProfitPrice-entryPrice)/entryPrice
profit+=longTakeProfitPerc*takeProfitQuantityPerc
profit-=(validCloseLongPosition?(entryPrice-close)/entryPrice:longStopLossPerc)*longRemainingQuantityPerc
else
na
floatcurrentShortProfitPerc=if((shortIsActiveorshortPositionCompleted)and(showStatsTableorshowTradeStats))
floatprofit=0.0
for[i,takeProfitPrice]inshortTakeProfitPrices
if(array.get(shortTrailingTakeProfitExecuted,i))
floatshortTakeProfitPerc=(entryPrice-takeProfitPrice)/entryPrice
profit+=shortTakeProfitPerc*takeProfitQuantityPerc
profit-=(validCloseShortPosition?(close-entryPrice)/entryPrice:shortStopLossPerc)*shortRemainingQuantityPerc
else
na
//Storethewinning/losingprofits
varwinTradeProfits=array.new<float>()
varlossTradeProfits=array.new<float>()
varwinTradeWProfits=array.new<float>()
varlossTradeWProfits=array.new<float>()
varfloatwinQuantityPercSum=0.0
varfloatlossQuantityPercSum=0.0
//Countwinning/losingstreaks
varintmaxWinningStreak=0
varintmaxLosingStreak=0
varintcurrentWinningStreak=0
varintcurrentLosingStreak=0
if(showStatsTableandlongPositionCompleted)
floatlongProfit=100.0*currentLongProfitPerc[1]
floatlongQuantityPerc=longEntryQuoteQuantityPerc[1]
floatlongWProfit=longProfit*longQuantityPerc
boolisWin=longProfit>0
if(isWin)
array.push(winTradeProfits,longProfit)
array.push(winTradeWProfits,longWProfit)
winQuantityPercSum:=winQuantityPercSum+longQuantityPerc
currentWinningStreak:=currentWinningStreak+1
currentLosingStreak:=0
else
array.push(lossTradeProfits,longProfit)
array.push(lossTradeWProfits,longWProfit)
lossQuantityPercSum:=lossQuantityPercSum+longQuantityPerc
currentLosingStreak:=currentLosingStreak+1
currentWinningStreak:=0
maxWinningStreak:=math.max(currentWinningStreak,maxWinningStreak)
maxLosingStreak:=math.max(currentLosingStreak,maxLosingStreak)
if(showStatsTableandshortPositionCompleted)
floatshortProfit=100.0*currentShortProfitPerc[1]
floatshortQuantityPerc=shortEntryQuoteQuantityPerc[1]
floatshortWProfit=shortProfit*shortQuantityPerc
boolisWin=shortProfit>0
if(isWin)
array.push(winTradeProfits,shortProfit)
array.push(winTradeWProfits,shortWProfit)
winQuantityPercSum:=winQuantityPercSum+shortQuantityPerc
currentWinningStreak:=currentWinningStreak+1
currentLosingStreak:=0
else
array.push(lossTradeProfits,shortProfit)
array.push(lossTradeWProfits,shortWProfit)
lossQuantityPercSum:=lossQuantityPercSum+shortQuantityPerc
currentLosingStreak:=currentLosingStreak+1
currentWinningStreak:=0
maxWinningStreak:=math.max(currentWinningStreak,maxWinningStreak)
maxLosingStreak:=math.max(currentLosingStreak,maxLosingStreak)
//PLOT=============================================================================================================
if(showStatsTableand(barstate.islastconfirmedhistoryorbarstate.islast))
vartxtColor=color.new(color.gray,0)
varbgColor=color.new(color.black,95)
varwinBgColor=color.new(color.green,95)
varlossBgColor=color.new(color.red,95)
varstatsTable=table.new(position=getTablePosition(statsTablePos),columns=4,rows=6,frame_color=color.new(color.black,0),frame_width=2,border_color=color.new(color.black,0),border_width=1)
//horizontalheaders
table.cell(table_id=statsTable,column=0,row=0,bgcolor=color.new(color.black,95))
table.cell(table_id=statsTable,column=1,row=0,text='All',text_color=txtColor,text_size=size.normal,bgcolor=bgColor,tooltip='IncontrasttotheTVbacktestengine,atradeisconsideredtobecompletewhentheentireentrypositionwasexitedandnotwhenamoveisdone(e.g.atakeprofittargetisreached).')
table.cell(table_id=statsTable,column=2,row=0,text='Wins',text_color=takeProfitColor,text_size=size.normal,bgcolor=winBgColor,tooltip='Thewinningtrades.')
table.cell(table_id=statsTable,column=3,row=0,text='Losses',text_color=stopLossColor,text_size=size.normal,bgcolor=lossBgColor,tooltip='Thelosingtrades.')
//verticalheaders
table.cell(table_id=statsTable,column=0,row=1,text='Trades',text_color=txtColor,text_size=size.normal,bgcolor=bgColor,tooltip='Thetotalnumberoftradesandthosethathadawinning/losingoutcome.')
table.cell(table_id=statsTable,column=0,row=2,text='Streak',text_color=txtColor,text_size=size.normal,bgcolor=bgColor,tooltip='Themaximumconsecutivenumberofwins/losesinarow.')
table.cell(table_id=statsTable,column=0,row=3,text='Rate',text_color=txtColor,text_size=size.normal,bgcolor=bgColor,tooltip='Thepercentofthewins/losses.')
table.cell(table_id=statsTable,column=0,row=4,text='AvgProfit',text_color=txtColor,text_size=size.normal,bgcolor=bgColor,tooltip='Theaverageprofit(percentagewise)pertradeofall/winning/losingtrades.')
table.cell(table_id=statsTable,column=0,row=5,text='WAvgProfit',text_color=txtColor,text_size=size.normal,bgcolor=bgColor,tooltip='Theweightedaverageprofit(percentagewise)pertradeofall/winning/losingtradesnormalizedbytheentryquantitypercentage.Thustheresultisnon-compound.')
//Trades
intnumOfWins=array.size(winTradeProfits)
intnumOfLosses=array.size(lossTradeProfits)
intnumOfTrades=numOfWins+numOfLosses
table.cell(table_id=statsTable,column=1,row=1,text=str.tostring(numOfTrades),text_color=txtColor,text_size=size.normal,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=1,text=str.tostring(numOfWins),text_color=takeProfitColor,text_size=size.normal,bgcolor=winBgColor)
table.cell(table_id=statsTable,column=3,row=1,text=str.tostring(numOfLosses),text_color=stopLossColor,text_size=size.normal,bgcolor=lossBgColor)
//Streak
table.cell(table_id=statsTable,column=1,row=2,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=2,text=str.tostring(maxWinningStreak),text_color=takeProfitColor,text_size=size.normal,bgcolor=winBgColor)
table.cell(table_id=statsTable,column=3,row=2,text=str.tostring(maxLosingStreak),text_color=stopLossColor,text_size=size.normal,bgcolor=lossBgColor)
//Rate
floatwinRate=100.0*numOfWins/numOfTrades
floatloseRate=100.0*numOfLosses/numOfTrades
table.cell(table_id=statsTable,column=1,row=3,text=str.tostring(winRate+loseRate,format.percent),text_color=txtColor,text_size=size.normal,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=3,text=str.tostring(winRate,format.percent),text_color=takeProfitColor,text_size=size.normal,bgcolor=winBgColor)
table.cell(table_id=statsTable,column=3,row=3,text=str.tostring(loseRate,format.percent),text_color=stopLossColor,text_size=size.normal,bgcolor=lossBgColor)
//AvgProfit
floatwinAvgProfit=array.avg(winTradeProfits)
floatloseAvgProfit=array.avg(lossTradeProfits)
floatavgProfit=(winAvgProfit*numOfWins+loseAvgProfit*numOfLosses)/numOfTrades
table.cell(table_id=statsTable,column=1,row=4,text=str.tostring(avgProfit,format.percent),text_color=avgProfit>0?takeProfitColor:stopLossColor,text_size=size.normal,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=4,text=str.tostring(winAvgProfit,format.percent),text_color=takeProfitColor,text_size=size.normal,bgcolor=winBgColor)
table.cell(table_id=statsTable,column=3,row=4,text=str.tostring(loseAvgProfit,format.percent),text_color=stopLossColor,text_size=size.normal,bgcolor=lossBgColor)
//WAvgProfit
floatwinWAvgProfit=array.sum(winTradeWProfits)/winQuantityPercSum
floatlossWAvgProfit=array.sum(lossTradeWProfits)/lossQuantityPercSum
floatwavgProfit=(winWAvgProfit*numOfWins+lossWAvgProfit*numOfLosses)/numOfTrades
table.cell(table_id=statsTable,column=1,row=5,text=str.tostring(wavgProfit,format.percent),text_color=wavgProfit>0?takeProfitColor:stopLossColor,text_size=size.normal,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=5,text=str.tostring(winWAvgProfit,format.percent),text_color=takeProfitColor,text_size=size.normal,bgcolor=winBgColor)
table.cell(table_id=statsTable,column=3,row=5,text=str.tostring(lossWAvgProfit,format.percent),text_color=stopLossColor,text_size=size.normal,bgcolor=lossBgColor)
if(showTradeStatsandlongPositionCompleted)
floatlongProfit=100.0*currentLongProfitPerc[1]
boolisWin=longProfit>0
stringlongProfitStr=str.tostring(longProfit,format.percent)
inttakeProfitsExecuted=longTrailingTakeProfitExecutedCount[1]
floatstopLossPrice=longStopLossPrice[1]
floattradePrice=isWinandlongTrailingTakeProfitExecutedCount[1]>0?math.max(array.get(longTakeProfitPrices[1],takeProfitsExecuted-1),stopLossPrice):validCloseLongPosition?close:stopLossPrice
line.new(x1=entryBarId+1,y1=tradePrice,x2=bar_index,y2=tradePrice,xloc=xloc.bar_index,extend=extend.none,color=isWin?winColor:stopLossColor,style=line.style_arrow_both,width=1)
label.new(x=int((entryBarId+bar_index+1)/2),y=tradePrice,text=isWin?'Win\n+'+longProfitStr:'Loss\n'+longProfitStr,yloc=yloc.price,color=isWin?winColor:stopLossColor,style=isWin?label.style_label_down:label.style_label_up,textcolor=textColor,size=size.large,tooltip='NumberofTakeProfittargetsexecuted:'+str.tostring(takeProfitsExecuted))

if(showTradeStatsandshortPositionCompleted)
floatshortProfit=100.0*currentShortProfitPerc[1]
boolisWin=shortProfit>0
stringshortProfitStr=str.tostring(shortProfit,format.percent)
inttakeProfitsExecuted=shortTrailingTakeProfitExecutedCount[1]
floatstopLossPrice=shortStopLossPrice[1]
floattradePrice=isWinandshortTrailingTakeProfitExecutedCount[1]>0?math.min(array.get(shortTakeProfitPrices[1],takeProfitsExecuted-1),stopLossPrice):validCloseShortPosition?close:stopLossPrice
line.new(x1=entryBarId+1,y1=tradePrice,x2=bar_index,y2=tradePrice,xloc=xloc.bar_index,extend=extend.none,color=isWin?winColor:stopLossColor,style=line.style_arrow_both,width=1)
label.new(x=int((entryBarId+bar_index+1)/2),y=tradePrice,text=isWin?'Win\n+'+shortProfitStr:'Loss\n'+shortProfitStr,yloc=yloc.price,color=isWin?winColor:stopLossColor,style=isWin?label.style_label_up:label.style_label_down,textcolor=textColor,size=size.large,tooltip='NumberofTakeProfittargetsexecuted:'+str.tostring(takeProfitsExecuted))
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//☭SHAREDVARIABLES4=============================================================================================
//Description:Moduleresponsibleforconditionalvariablestoenterandexitorders
//Dependencies:SHAREDVARIABLES2,EXIT
//Results:ALL
//LOGIC============================================================================================================
booldoCloseLong=notexitTrailingEnabledandcloseLongPosition
booldoCloseShort=notexitTrailingEnabledandcloseShortPosition
booldoSLorExitTrLong=longTrExitIsActiveorlongIsActive
booldoSLorExitTrShort=shortTrExitIsActiveorshortIsActive
booldoCloseAll=closeAtSessionEndandnottimeFilterApproval
booldoCnlTrEntryLong=entryTrailingEnabledandlongTrEntryIsActiveandcloseLongPosition
booldoCnlTrEntryShort=entryTrailingEnabledandshortTrEntryIsActiveandcloseShortPosition
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//🔔ALERTMESSAGES================================================================================================
//Description:Moduleresponsibleforthemessageoutputswhenstrategyordersarebeingexecuted
//Dependencies:ENTRY,TAKEPROFIT1,EXIT,STOPLOSS,TAKEPROFIT2,QUANTITY/RISKMANAGEMENT,SHAREDVARIABLES4
//Results:ALL
importjason5480/string_variables/8assv
//INPUT============================================================================================================
tickerPrefix=input.string(defval='',title='TickerPrefix/Postfix',inline='Ticker',group='🔔AlertMessages')
tickerPostfix=input.string(defval='',title='',tooltip='Prepend/AppendacustomstringtotheTVstickerwhenyouuse{@{TICKER}}asvariableinthealertmessages.',inline='Ticker',group='🔔AlertMessages')
usePercRange100=input.bool(defval=true,title='PercentageRange[0,100]',tooltip='Enabletomultiplyallthepercentatgeswith100sothatthevaluesrangefrom[0,100]insteadof[0,1].',group='🔔AlertMessages')
marginTicks=input.int(defval=5,title='MarginTicks',minval=1,tooltip='Theticksthatwillbeadded/substractedfromentry/exitpricetocalculatethe{${ENTRY+}},{${ENTRY-}},{${EXIT+}},{${EXIT-}}variables.Thosevaluescouldbeusedifyouwanttosendalimitordertoyourexchangeandthepricemightgotothe"wrong"sideduetohighvolatilityofthemarketanddelaybetweenthetimeofcomputationandexecution.',group='🔔AlertMessages')
msgEventsEnabled=input.bool(defval=false,title='EnableAllEventAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"orderfills"ofthestrategy(e.g.entry,exit,close,takeprofitandstoploss).WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgEnteredLong=input.text_area(defval='LongEntry({@{TICKER}}):Boughtatmarketpriceof{${ENTRY}}{@{QUOTE}}anamountequalto{#{LBQ}}{@{BASE}}(for{${LQQ}}{@{QUOTE}})andariskof{#{LRISK}}%.Thestoplosswasplacedat{${LSL}}{@{QUOTE}}andtakeprofittargetsat[{${LTP1}},{${LTP2}},{${LTP3}},{${LTP4}},{${LTP5}}]{@{QUOTE}}',title='EnterLong',tooltip='Alertmessageemitedwhenenteredlongposition.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
rawMsgEnteredShort=input.text_area(defval='ShortEntry({@{TICKER}}):Soldatmarketpriceof{${ENTRY}}{@{QUOTE}}anamountequalto{#{SBQ}}{@{BASE}}(for{${SQQ}}{@{QUOTE}})andariskof{#{SRISK}}%.Thestoplosswasplacedat{${SSL}}{@{QUOTE}}andtakeprofittargetsat[{${STP1}},{${STP2}},{${STP3}},{${STP4}},{${STP5}}]{@{QUOTE}}',title='EnterShort',tooltip='Alertmessageemitedwhenenteredshortposition.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
rawMsgEnteredTrLong=input.text_area(defval='LongEntry({@{TICKER}}):Boughtwithtrailingstop-limitentryorderatpriceof{${ENTRY}}{@{QUOTE}}anamountequalto{#{LBQ}}{@{BASE}}andariskof{#{LRISK}}%.Thestoplosswasplacedat{${LSL}}{@{QUOTE}}andtakeprofittargetsat[{${LTP1}},{${LTP2}},{${LTP3}},{${LTP4}},{${LTP5}}]{@{QUOTE}}',title='EnterTrLong',tooltip='Alertmessageemitedwhenenteredlongpositionwithtrailingstoporder.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
rawMsgEnteredTrShort=input.text_area(defval='ShortEntry({@{TICKER}}):Soldwithtrailingstop-limitentryorderatpriceof{${ENTRY}}{@{QUOTE}}anamountequalto{#{SBQ}}{@{BASE}}andariskof{#{SRISK}}%.Thestoplosswasplacedat{${SSL}}{@{QUOTE}}andtakeprofittargetsat[{${STP1}},{${STP2}},{${STP3}},{${STP4}},{${STP5}}]{@{QUOTE}}',title='EnterTrShort',tooltip='Alertmessageemitedwhenenteredshortpositionwithtrailingstoporder.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
rawMsgClosedLong=input.text_area(defval='LongClose({@{TICKER}}):Soldatmarketpriceof{${EXIT}}{@{QUOTE}}{#{LRQP}}%oftheinitialposition',title='CloseLong',tooltip='Alertmessageemitedwhenclosedlongposition.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
rawMsgClosedShort=input.text_area(defval='ShortClose({@{TICKER}}):Boughtatmarketpriceof{${EXIT}}{@{QUOTE}}{#{SRQP}}%oftheinitialposition',title='CloseShort',tooltip='Alertmessageemitedwhenclosedshortposition.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
rawMsgExitedTrLong=input.text_area(defval='LongExit({@{TICKER}}):Soldwithtrailingstop-limitexitorderatpriceof{${EXIT}}{@{QUOTE}}{#{LRQP}}%oftheinitialposition',title='ExitTrLong',tooltip='Alertmessageemitedwhenexitedlongpositionwithtrailingstoporder.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
rawMsgExitedTrShort=input.text_area(defval='ShortExit({@{TICKER}}):Boughtwithtrailingstop-limitexitorderatpriceof{${EXIT}}{@{QUOTE}}{#{SRQP}}%oftheinitialposition',title='ExitTrShort',tooltip='Alertmessageemitedwhenexitedshortpositionwithtrailingstoporder.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
varrawMsgRchTPLong=array.new<string>(5,na)
varrawMsgRchTPShort=array.new<string>(5,na)
array.set(rawMsgRchTPLong,0,input.text_area(defval='LongExit({@{TICKER}}):TakeProfit1executedatpriceof{${LTP1}}{@{QUOTE}}andsold{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{LTPBQ}}{@{BASE}}',title='TP1Long',tooltip='Alertmessageemitedwhenthefirstquantitytakeprofittargetforlongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
array.set(rawMsgRchTPShort,0,input.text_area(defval='ShortExit({@{TICKER}}):TakeProfit1executedatpriceof{${STP1}}{@{QUOTE}}andbought{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{STPBQ}}{@{BASE}}',title='TP1Short',tooltip='Alertmessageemitedwhenthefirstquantitytakeprofittargetforshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
array.set(rawMsgRchTPLong,1,input.text_area(defval='LongExit({@{TICKER}}):TakeProfit2executedatpriceof{${LTP2}}{@{QUOTE}}andsold{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{LTPBQ}}{@{BASE}}',title='TP2Long',tooltip='Alertmessageemitedwhenthesecondquantitytakeprofittargetforlongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
array.set(rawMsgRchTPShort,1,input.text_area(defval='ShortExit({@{TICKER}}):TakeProfit2executedatpriceof{${STP2}}{@{QUOTE}}andbought{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{STPBQ}}{@{BASE}}',title='TP2Short',tooltip='Alertmessageemitedwhenthesecondquantitytakeprofittargetforshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
array.set(rawMsgRchTPLong,2,input.text_area(defval='LongExit({@{TICKER}}):TakeProfit3executedatpriceof{${LTP3}}{@{QUOTE}}andsold{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{LTPBQ}}{@{BASE}}',title='TP3Long',tooltip='Alertmessageemitedwhenthethirdquantitytakeprofittargetforlongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
array.set(rawMsgRchTPShort,2,input.text_area(defval='ShortExit({@{TICKER}}):TakeProfit3executedatpriceof{${STP3}}{@{QUOTE}}andbought{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{STPBQ}}{@{BASE}}',title='TP3Short',tooltip='Alertmessageemitedwhenthethirdquantitytakeprofittargetforshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
array.set(rawMsgRchTPLong,3,input.text_area(defval='LongExit({@{TICKER}}):TakeProfit4executedatpriceof{${LTP4}}{@{QUOTE}}andsold{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{LTPBQ}}{@{BASE}}',title='TP4Long',tooltip='Alertmessageemitedwhentheforthquantitytakeprofittargetforlongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
array.set(rawMsgRchTPShort,3,input.text_area(defval='ShortExit({@{TICKER}}):TakeProfit4executedatpriceof{${STP4}}{@{QUOTE}}andbought{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{STPBQ}}{@{BASE}}',title='TP4Short',tooltip='Alertmessageemitedwhentheforthquantitytakeprofittargetforshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
array.set(rawMsgRchTPLong,4,input.text_area(defval='LongExit({@{TICKER}}):TakeProfit5executedatpriceof{${LTP5}}{@{QUOTE}}andsold{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{LTPBQ}}{@{BASE}}',title='TP5Long',tooltip='Alertmessageemitedwhenthefifthquantitytakeprofittargetforlongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
array.set(rawMsgRchTPShort,4,input.text_area(defval='ShortExit({@{TICKER}}):TakeProfit5executedatpriceof{${STP5}}{@{QUOTE}}andbought{#{TPQP}}%oftheinitialposition,thatequalstoanamountof{#{STPBQ}}{@{BASE}}',title='TP5Short',tooltip='Alertmessageemitedwhenthefifthquantitytakeprofittargetforshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'))
rawMsgRchSLLong=input.text_area(defval='LongExit({@{TICKER}}):StopLossexecutedatpriceof{${LSL}}{@{QUOTE}}andsold{#{LRQP}}%oftheinitialposition,thatequalstoanamountof{#{LRBQ}}{@{BASE}}',title='SLLong',tooltip='Alertmessageemitedwhenthelastquantitystoplosstargetforlongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
rawMsgRchSLShort=input.text_area(defval='ShortExit({@{TICKER}}):StopLossexecutedatpriceof{${SSL}}{@{QUOTE}}andbought{#{SRQP}}%oftheinitialposition,thatequalstoanamountof{#{SRBQ}}{@{BASE}}',title='SLShort',tooltip='Alertmessageemitedwhenthelastquantitystoplosstargetforshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
rawMsgClosedAll=input.text_area(defval='CloseAll({@{TICKER}}):Closedallpositionsatmarketpriceof{${CLOSE}}{@{QUOTE}}',title='CloseAll',tooltip='Alertmessageemitedwhenclosedallpositions.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages')
msgChgTrEntryEnabled=input.bool(defval=false,title='EnableTrEntryChangeAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"alert()functioncalls"whenthetrailingentrypricechanges.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgChgTrEntryLong=input.text_area(defval='LongTrailingEntryUpdate({@{TICKER}}):Longtrailingstop-limitentryorderchangedandsetatnewpriceof{${ENTRY}}{@{QUOTE}}',title='ChgTrEntryLong',tooltip='Alertmessageemitedwhenlongtrailingstop-limitentryorderchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialogthe"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages')
rawMsgChgTrEntryShort=input.text_area(defval='ShortTrailingEntryUpdate({@{TICKER}}):Shorttrailingstop-limitentryorderchangedandsetatnewpriceof{${ENTRY}}{@{QUOTE}}',title='ChgTrEntryShort',tooltip='Alertmessageemitedwhenshorttrailingstop-limitentryorderchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialogthe"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages')
msgChgTrExitEnabled=input.bool(defval=false,title='EnableTrExitChangeAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"alert()functioncalls"whenthetrailingexitpricechanges.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgChgTrExitLong=input.text_area(defval='LongTrailingExitUpdate({@{TICKER}}):Longtrailingstop-limitexitorderchangedandsetatnewpriceof{${EXIT}}{@{QUOTE}}',title='ChgTrExitLong',tooltip='Alertmessageemitedwhenlongtrailingstop-limitexitorderchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialogthe"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages')
rawMsgChgTrExitShort=input.text_area(defval='ShortTrailingExitUpdate({@{TICKER}}):Shorttrailingstop-limitexitorderchangedandsetatnewpriceof{${EXIT}}{@{QUOTE}}',title='ChgTrExitShort',tooltip='Alertmessageemitedwhenshorttrailingstop-limitexitorderchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialogthe"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages')
msgChgSLEnabled=input.bool(defval=false,title='EnableStopLossChangeAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"alert()functioncalls"whenthestoplosspricechanges.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgChgSLLong=input.text_area(defval='LongStopLossUpdate({@{TICKER}}):StopLossvaluechangedandsetatnewpriceof{${LSL}}{@{QUOTE}}',title='ChgSLLong',tooltip='Alertmessageemitedwhenthestoplosstargetforlongpositionchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialogthe"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages')
rawMsgChgSLShort=input.text_area(defval='ShortStopLossUpdate({@{TICKER}}):StopLossvaluechangedandsetatnewpriceof{${SSL}}{@{QUOTE}}',title='ChgSLShort',tooltip='Alertmessageemitedwhenthestoplosstargetforshortpositionchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialogthe"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages')
msgCnlTrEntryEnabled=input.bool(defval=false,title='EnableTrEntryCancelAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"alert()functioncalls"whentrailingforentryanditcancels.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgCnlTrEntryLong=input.text_area(defval='LongTrailingEntryCancel({@{TICKER}}):Longtrailingstop-limitentryordercanceled',title='CnlTrEntryLong',tooltip='Alertmessageemitedwhenlongtrailingstop-limitentryordercanceled.Inthe"Condition"comboboxofthe"CreateAlert"dialogthe"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages')
rawMsgCnlTrEntryShort=input.text_area(defval='ShortTrailingEntryCancel({@{TICKER}}):Shorttrailingstop-limitentryordercanceled',title='CnlTrEntryShort',tooltip='Alertmessageemitedwhenshorttrailingstop-limitentryordercanceled.Inthe"Condition"comboboxofthe"CreateAlert"dialogthe"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages')
msgMaxDrawdown=msgEventsEnabled?input.text_area(defval='Maxdrawdownwasreached:Allpendingordersarecancelled,allopenpositionsareclosedandnoneworderscanbeplaced!RIP⚰️',title='MaxDrawdown',tooltip='Alertmessageemitedwhenthemaxdrawdownlimitisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
//LOGIC============================================================================================================
varvariableNames=array.new<string>(37,na)
varvariableValues=array.new<float>(array.size(variableNames),na)
varstringVariableNames=array.new<string>(3,na)
varstringVariableValues=array.new<string>(array.size(stringVariableNames),na)
varboolvariableNamesInit=false
if((msgEventsEnabledormsgChgTrEntryEnabledormsgChgTrExitEnabledormsgChgSLEnabledormsgCnlTrEntryEnabled)andnotvariableNamesInit)
array.set(variableNames,0,'OPEN')//Openprice
array.set(variableNames,1,'HIGH')//Highprice
array.set(variableNames,2,'LOW')//Lowprice
array.set(variableNames,3,'CLOSE')//Closeprice
array.set(variableNames,4,'LBQ')//Longbasecurrencyentryquantity
array.set(variableNames,5,'SBQ')//Shortbasecurrencyentryquantity
array.set(variableNames,6,'LQQ')//Longquotecurrencyentryquantity
array.set(variableNames,7,'SQQ')//Shortquotecurrencyentryquantity
array.set(variableNames,8,'LQQP')//Longquotecurrencyentryquantitypercentage
array.set(variableNames,9,'SQQP')//Shortquotecurrencyentryquantitypercentage
array.set(variableNames,10,'TPQP')//TakeProfitquantitypercentage
array.set(variableNames,11,'LRQP')//Longremainingquantitypercentage
array.set(variableNames,12,'SRQP')//Shortremainingquantitypercentage
array.set(variableNames,13,'LTPBQ')//LongTakeProfitbasequantity
array.set(variableNames,14,'STPBQ')//ShortTakeProfitbasequantity
array.set(variableNames,15,'LRBQ')//Longremainingbasequantity
array.set(variableNames,16,'SRBQ')//Shortremainingbasequantity
array.set(variableNames,17,'LRISK')//Longriskpercentageoftheentryquantity
array.set(variableNames,18,'SRISK')//Shortriskpercentageoftheentryquantity
array.set(variableNames,19,'ENTRY')//Entryprice
array.set(variableNames,20,'ENTRY+')//Entrypriceplusthemarginticks
array.set(variableNames,21,'ENTRY-')//Entrypriceminusthemarginticks
array.set(variableNames,22,'EXIT')//Exitprice
array.set(variableNames,23,'EXIT+')//Exitpriceplusthemarginticks
array.set(variableNames,24,'EXIT-')//Exitpriceminusthemarginticks
array.set(variableNames,25,'LSL')//LongStopLossprice
array.set(variableNames,26,'SSL')//ShortStopLossprice
array.set(variableNames,27,'LTP1')//LongTakeProfittarget1price
array.set(variableNames,28,'STP1')//ShortTakeProfittarget1price
array.set(variableNames,29,'LTP2')//LongTakeProfittarget2price
array.set(variableNames,30,'STP2')//ShortTakeProfittarget2price
array.set(variableNames,31,'LTP3')//LongTakeProfittarget3price
array.set(variableNames,32,'STP3')//ShortTakeProfittarget3price
array.set(variableNames,33,'LTP4')//LongTakeProfittarget4price
array.set(variableNames,34,'STP4')//ShortTakeProfittarget4price
array.set(variableNames,35,'LTP5')//LongTakeProfittarget5price
array.set(variableNames,36,'STP5')//ShortTakeProfittarget5price

variableNamesInit:=true
if(msgEventsEnabledormsgChgTrEntryEnabledormsgChgTrExitEnabledormsgChgSLEnabledormsgCnlTrEntryEnabled)
varfloatpercMul=usePercRange100?100.0:1.0

array.set(variableValues,0,open)
array.set(variableValues,1,high)
array.set(variableValues,2,low)
array.set(variableValues,3,close)
array.set(variableValues,4,longEntryBaseQuantity)
array.set(variableValues,5,shortEntryBaseQuantity)
array.set(variableValues,6,longQuoteQuantity)
array.set(variableValues,7,shortQuoteQuantity)
array.set(variableValues,8,longEntryQuoteQuantityPerc*percMul)
array.set(variableValues,9,shortEntryQuoteQuantityPerc*percMul)
array.set(variableValues,10,takeProfitQuantityPerc*percMul)
array.set(variableValues,11,longRemainingQuantityPerc*percMul)
array.set(variableValues,12,shortRemainingQuantityPerc*percMul)
array.set(variableValues,13,longEntryBaseQuantity*takeProfitQuantityPerc)
array.set(variableValues,14,shortEntryBaseQuantity*takeProfitQuantityPerc)
array.set(variableValues,15,longEntryBaseQuantity*longRemainingQuantityPerc)
array.set(variableValues,16,shortEntryBaseQuantity*shortRemainingQuantityPerc)
array.set(variableValues,17,longRisk*percMul)
array.set(variableValues,18,shortRisk*percMul)
array.set(variableValues,19,entryPrice)
array.set(variableValues,20,entryPrice+marginTicks*syminfo.mintick)
array.set(variableValues,21,entryPrice-marginTicks*syminfo.mintick)
array.set(variableValues,22,exitPrice)
array.set(variableValues,23,exitPrice+marginTicks*syminfo.mintick)
array.set(variableValues,24,exitPrice-marginTicks*syminfo.mintick)
array.set(variableValues,25,longStopLossPrice)
array.set(variableValues,26,shortStopLossPrice)
if(array.size(longTakeProfitPrices)>0)
array.set(variableValues,27,array.get(longTakeProfitPrices,0))
if(array.size(shortTakeProfitPrices)>0)
array.set(variableValues,28,array.get(shortTakeProfitPrices,0))
if(array.size(longTakeProfitPrices)>1)
array.set(variableValues,29,array.get(longTakeProfitPrices,1))
if(array.size(shortTakeProfitPrices)>1)
array.set(variableValues,30,array.get(shortTakeProfitPrices,1))
if(array.size(longTakeProfitPrices)>2)
array.set(variableValues,31,array.get(longTakeProfitPrices,2))
if(array.size(shortTakeProfitPrices)>2)
array.set(variableValues,32,array.get(shortTakeProfitPrices,2))
if(array.size(longTakeProfitPrices)>3)
array.set(variableValues,33,array.get(longTakeProfitPrices,3))
if(array.size(shortTakeProfitPrices)>3)
array.set(variableValues,34,array.get(shortTakeProfitPrices,3))
if(array.size(longTakeProfitPrices)>4)
array.set(variableValues,35,array.get(longTakeProfitPrices,4))
if(array.size(shortTakeProfitPrices)>4)
array.set(variableValues,36,array.get(shortTakeProfitPrices,4))
varboolstringVariablesInit=false
if((msgEventsEnabledormsgChgTrEntryEnabledormsgChgTrExitEnabledormsgChgSLEnabledormsgCnlTrEntryEnabled)andnotstringVariablesInit)
array.set(stringVariableNames,0,'TICKER')
array.set(stringVariableNames,1,'BASE')
array.set(stringVariableNames,2,'QUOTE')

array.set(stringVariableValues,0,tickerPrefix+syminfo.ticker+tickerPostfix)
array.set(stringVariableValues,1,syminfo.basecurrency)
array.set(stringVariableValues,2,syminfo.currency)

stringVariablesInit:=true
//createtheactualmessages
msgEnteredLong=msgEventsEnabledandvalidOpenLongPosition?sv.eval_vars(rawMsgEnteredLong,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgEnteredShort=msgEventsEnabledandvalidOpenShortPosition?sv.eval_vars(rawMsgEnteredShort,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgEnteredTrLong=msgEventsEnabledandlongTrEntryIsActive?sv.eval_vars(rawMsgEnteredTrLong,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgEnteredTrShort=msgEventsEnabledandshortTrEntryIsActive?sv.eval_vars(rawMsgEnteredTrShort,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgClosedLong=msgEventsEnabledanddoCloseLong?sv.eval_vars(rawMsgClosedLong,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgClosedShort=msgEventsEnabledanddoCloseShort?sv.eval_vars(rawMsgClosedShort,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgExitedTrLong=msgEventsEnabledanddoSLorExitTrLong?sv.eval_vars(rawMsgExitedTrLong,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgExitedTrShort=msgEventsEnabledanddoSLorExitTrShort?sv.eval_vars(rawMsgExitedTrShort,variableNames,variableValues,stringVariableNames,stringVariableValues):na
varmsgRchTPLong=array.new<string>(array.size(rawMsgRchTPLong),na)
varmsgRchTPShort=array.new<string>(array.size(rawMsgRchTPShort),na)
if(msgEventsEnabled)
if(doSLorExitTrLong)
for[i,rawMsg]inrawMsgRchTPLong
array.set(msgRchTPLong,i,sv.eval_vars(rawMsg,variableNames,variableValues,stringVariableNames,stringVariableValues))
if(doSLorExitTrShort)
for[i,rawMsg]inrawMsgRchTPShort
array.set(msgRchTPShort,i,sv.eval_vars(rawMsg,variableNames,variableValues,stringVariableNames,stringVariableValues))
msgRchSLLong=msgEventsEnabledanddoSLorExitTrLong?sv.eval_vars(rawMsgRchSLLong,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgRchSLShort=msgEventsEnabledanddoSLorExitTrShort?sv.eval_vars(rawMsgRchSLShort,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgClosedAll=msgEventsEnabledanddoCloseAll?sv.eval_vars(rawMsgClosedAll,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgChgTrEntryLong=msgChgTrEntryEnabled?sv.eval_vars(rawMsgChgTrEntryLong,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgChgTrEntryShort=msgChgTrEntryEnabled?sv.eval_vars(rawMsgChgTrEntryShort,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgChgTrExitLong=msgChgTrExitEnabled?sv.eval_vars(rawMsgChgTrExitLong,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgChgTrExitShort=msgChgTrExitEnabled?sv.eval_vars(rawMsgChgTrExitShort,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgChgSLLong=msgChgSLEnabled?sv.eval_vars(rawMsgChgSLLong,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgChgSLShort=msgChgSLEnabled?sv.eval_vars(rawMsgChgSLShort,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgCnlTrEntryLong=msgCnlTrEntryEnabledanddoCnlTrEntryLong?sv.eval_vars(rawMsgCnlTrEntryLong,variableNames,variableValues,stringVariableNames,stringVariableValues):na
msgCnlTrEntryShort=msgCnlTrEntryEnabledanddoCnlTrEntryShort?sv.eval_vars(rawMsgCnlTrEntryShort,variableNames,variableValues,stringVariableNames,stringVariableValues):na
//signalchangealerts
if(msgChgTrEntryEnabledandta.change(longTrEntryPrice))
alert(message=msgChgTrEntryLong)
if(msgChgTrEntryEnabledandta.change(shortTrEntryPrice))
alert(message=msgChgTrEntryShort)
if(msgChgTrExitEnabledandta.change(longTrExitPrice))
alert(message=msgChgTrExitLong)

if(msgChgTrExitEnabledandta.change(shortTrExitPrice))
alert(message=msgChgTrExitShort)

if(msgChgSLEnabledandna(longTrEntryPrice)andta.change(longStopLossPrice))
alert(message=msgChgSLLong)

if(msgChgSLEnabledandna(shortTrEntryPrice)andta.change(shortStopLossPrice))
alert(message=msgChgSLShort)

//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//🗲POSITIONORDERS===============================================================================================
//Description:Moduleresponsiblefortheactualexecutionofthestrategyorders
//Dependencies:STRATEGY1,ENTRY,STRATEGY2,EXIT,STOPLOSS,TAKEPROFIT2,QUANTITYMANAGEMENT,SHAREDVARIABLES4,ALERTMESSAGES
//Results:NONE
//INPUT============================================================================================================
maxDrawdown=input.int(defval=25,title='MaxDrawdown%',minval=1,maxval=100,tooltip='Themaximumdrawdowntostoptrading.',group='💰Quantity/RiskManagement')
//LOGIC============================================================================================================
//closeallpositionsattheendofthesession
if(doCloseAll)
strategy.close_all(comment=showAlertsEnabled?msgClosedAll:'AC',alert_message=msgClosedAll)
//closeontrendreversalwhennotexittrailing
if(doCloseLong)
strategy.close(id='LongEntry',comment=showAlertsEnabled?msgClosedLong:'LC',alert_message=msgClosedLong)
//closeontrendreversalwhennotexittrailing
if(doCloseShort)
strategy.close(id='ShortEntry',comment=showAlertsEnabled?msgClosedShort:'SC',alert_message=msgClosedShort)
//gettingintoLONGposition
if(entryTrailingEnabled?longTrEntryIsActive:validOpenLongPosition)
strategy.entry(id='LongEntry',direction=strategy.long,stop=longTrEntryPrice,qty=longEntryBaseQuantity,comment=showAlertsEnabled?entryTrailingEnabled?msgEnteredTrLong:msgEnteredLong:'LEn',alert_message=entryTrailingEnabled?msgEnteredTrLong:msgEnteredLong)
//cancelexistingentrytrailingstoporders(ifany)
if(doCnlTrEntryLong)
strategy.cancel(id='LongEntry')
if(msgCnlTrEntryEnabled)
alert(message=msgCnlTrEntryLong)
//calculatethetighteststoporderbycombiningthestoplossandtrailingexit(ifany)
floatlongTightestStop=na(longTrExitPrice)?longStopLossPrice:math.max(nz(longTrExitPrice),nz(longStopLossPrice))
boolisLongTrailingExitTighter=longTrExitIsActiveandlongTrExitPrice>longStopLossPrice
//submitexitorderfortrailingtakeprofitpricealsosetthestoplossforthetakeprofitpercentageincasethatstoplossisreachedfirst
//submitexitstoporderontrendreversalwhenexittrailing
for[i,longTakeProfitPrice]inlongTakeProfitPrices
if(longTrExitIsActiveor(longIsActiveandnotarray.get(longTrailingTakeProfitExecuted,i)))
alertMessage=array.get(msgRchTPLong,i%array.size(msgRchTPLong))
comment='LTP'+str.tostring(i+1)
strategy.exit(id='LongTakeProfit'+str.tostring(i+1)+'/StopLoss/TrailingExit',from_entry='LongEntry',qty_percent=100.0*takeProfitQuantityPerc,
limit=takeProfitTrailingEnabled?na:longTakeProfitPrice,stop=longTightestStop,
trail_price=takeProfitTrailingEnabled?longTakeProfitPrice:na,trail_offset=takeProfitTrailingEnabled?array.get(longTrailingTakeProfitOffsetTicks,i):na,
comment_profit=showAlertsEnabled?alertMessage:comment,comment_loss=allTakeProfitsQuantityPerc==1.0andi==numOfTakeProfitTargets-1?isLongTrailingExitTighter?msgExitedTrLong:msgRchSLLong:isLongTrailingExitTighter?'LTrEx'+str.tostring(i+1):'LSL'+str.tostring(i+1),comment_trailing=showAlertsEnabled?alertMessage:comment,
alert_profit=alertMessage,alert_loss=allTakeProfitsQuantityPerc==1.0andi==numOfTakeProfitTargets-1?isLongTrailingExitTighter?msgExitedTrLong:msgRchSLLong:na,alert_trailing=alertMessage)
//submitexitorderfortrailingstoplosspricefortheremainingpercentofthequantitynotreservedbythetakeprofitorder
//submitexitstoporderontrendreversalwhenexittrailing
if(doSLorExitTrLong)
strategy.exit(id='LongStopLoss/TrailingExit',from_entry='LongEntry',stop=longTightestStop,
comment_loss=showAlertsEnabled?isLongTrailingExitTighter?msgExitedTrLong:msgRchSLLong:isLongTrailingExitTighter?'LTrEx':'LSL',alert_loss=isLongTrailingExitTighter?msgExitedTrLong:msgRchSLLong)
//gettingintoSHORTposition
if(entryTrailingEnabled?shortTrEntryIsActive:validOpenShortPosition)
strategy.entry(id='ShortEntry',direction=strategy.short,stop=shortTrEntryPrice,qty=shortEntryBaseQuantity,comment=showAlertsEnabled?entryTrailingEnabled?msgEnteredTrShort:msgEnteredShort:'SEn',alert_message=entryTrailingEnabled?msgEnteredTrShort:msgEnteredShort)
//cancelexistingentrytrailingstoporders(ifany)
if(doCnlTrEntryShort)
strategy.cancel(id='ShortEntry')
if(msgCnlTrEntryEnabled)
alert(message=msgCnlTrEntryShort)
//calculatethetighteststoporderbycombiningthestoplossandtrailingexit(ifany)
floatshortTightestStop=na(shortTrExitPrice)?shortStopLossPrice:math.min(nz(shortTrExitPrice,999999.9),nz(shortStopLossPrice,999999.9))
boolisShortTrailingExitTighter=shortTrExitIsActiveandshortTrExitPrice<shortStopLossPrice
//submitexitorderfortrailingtakeprofitpricealsosetthestoplossforthetakeprofitpercentageincasethatstoplossisreachedfirst
//submitexitstoporderontrendreversalwhenexittrailing
for[i,shortTakeProfitPrice]inshortTakeProfitPrices
if(shortTrExitIsActiveor(shortIsActiveandnotarray.get(shortTrailingTakeProfitExecuted,i)))
alertMessage=array.get(msgRchTPShort,i%array.size(msgRchTPShort))
comment='STP'+str.tostring(i+1)
strategy.exit(id='ShortTakeProfit'+str.tostring(i+1)+'/StopLoss/TrailingExit',from_entry='ShortEntry',qty_percent=100.0*takeProfitQuantityPerc,
limit=takeProfitTrailingEnabled?na:shortTakeProfitPrice,stop=shortTightestStop,
trail_price=takeProfitTrailingEnabled?shortTakeProfitPrice:na,trail_offset=takeProfitTrailingEnabled?array.get(shortTrailingTakeProfitOffsetTicks,i):na,
comment_profit=showAlertsEnabled?alertMessage:comment,comment_loss=allTakeProfitsQuantityPerc==1.0andi==numOfTakeProfitTargets-1?isShortTrailingExitTighter?msgExitedTrShort:msgRchSLShort:isShortTrailingExitTighter?'STrEx'+str.tostring(i+1):'SSL'+str.tostring(i+1),comment_trailing=showAlertsEnabled?alertMessage:comment,
alert_profit=alertMessage,alert_loss=allTakeProfitsQuantityPerc==1.0andi==numOfTakeProfitTargets-1?isShortTrailingExitTighter?msgExitedTrShort:msgRchSLShort:na,alert_trailing=alertMessage)
//submitexitorderfortrailingstoplosspricefortheremainingpercentofthequantitynotreservedbythetakeprofitorder
//submitexitstoporderontrendreversalwhenexittrailing
if(doSLorExitTrShort)
strategy.exit(id='ShortStopLoss/TrailingExit',from_entry='ShortEntry',stop=shortTightestStop,
comment_loss=showAlertsEnabled?isShortTrailingExitTighter?msgExitedTrShort:msgRchSLShort:isShortTrailingExitTighter?'STrEx':'SSL',alert_loss=isShortTrailingExitTighter?msgExitedTrShort:msgRchSLShort)
//limitthemaximumdrawdown
strategy.risk.max_drawdown(value=maxDrawdown,type=strategy.percent_of_equity,alert_message=msgMaxDrawdown)
//
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//🐞DEBUG=========================================================================================================
//Description:Moduleresponsibleforplottingadditionalinformationfordebugingpurposes
//Dependencies:ALL
//Results:showAlertsEnabled,debugModeEnabled
//INPUT============================================================================================================
showAlertsEnabled:=input.bool(defval=false,title='ShowAlerts',tooltip='Showalertmessagesthatcorrespondtoeventsinthechart.',group='🐞Debug')
debugModeEnabled:=input.bool(defval=false,title='DebugMode',tooltip='Enabledebugmode.',group='🐞Debug')
//PLOT=============================================================================================================
plotshape(series=debugModeEnabled?tryEnterLongPosition:na,title='DbgTryEnterLong',style=shape.arrowup,location=location.belowbar,color=color.new(buyColor,70),size=size.tiny)
plotshape(series=debugModeEnabled?tryEnterShortPosition:na,title='DbgTryEnterShort',style=shape.arrowdown,location=location.abovebar,color=color.new(sellColor,70),size=size.tiny)
plotshape(series=debugModeEnabled?longPositionEntry:na,title='DbgLongEntry',style=shape.flag,location=location.belowbar,color=color.new(buyColor,70),size=size.small)
plotshape(series=debugModeEnabled?shortPositionEntry:na,title='DbgShortEntry',style=shape.flag,location=location.abovebar,color=color.new(sellColor,70),size=size.small)
plotshape(series=debugModeEnabled?longPositionCompleted:na,title='DbgLongCompleted',style=shape.square,location=location.belowbar,color=color.new(buyColor,70),size=size.small)
plotshape(series=debugModeEnabled?shortPositionCompleted:na,title='DbgShortCompleted',style=shape.square,location=location.abovebar,color=color.new(sellColor,70),size=size.small)
plotshape(series=debugModeEnabled?longIsActive:na,title='DbgActiveLong',style=shape.labelup,location=location.belowbar,color=color.new(buyColor,70),size=size.tiny)
plotshape(series=debugModeEnabled?shortIsActive:na,title='DbgActiveShort',style=shape.labeldown,location=location.abovebar,color=color.new(sellColor,70),size=size.tiny)
plot(series=debugModeEnabled?entryPrice:na,title='DbgEntryPrice',color=color.new(posColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>0?array.get(longTakeProfitPrices,0):na,title='DbgLongTakeProfit1',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>0?array.get(shortTakeProfitPrices,0):na,title='DbgShortTakeProfit1',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>1?array.get(longTakeProfitPrices,1):na,title='DbgLongTakeProfit2',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>1?array.get(shortTakeProfitPrices,1):na,title='DbgShortTakeProfit2',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>2?array.get(longTakeProfitPrices,2):na,title='DbgLongTakeProfit3',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>2?array.get(shortTakeProfitPrices,2):na,title='DbgShortTakeProfit3',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>3?array.get(longTakeProfitPrices,3):na,title='DbgLongTakeProfit4',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>3?array.get(shortTakeProfitPrices,3):na,title='DbgShortTakeProfit4',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>4?array.get(longTakeProfitPrices,4):na,title='DbgLongTakeProfit5',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
plot(series=debugModeEnabledandarray.size(shortTakeProfitPrices)>4?array.get(shortTakeProfitPrices,4):na,title='DbgShortTakeProfit5',color=color.new(takeProfitColor,70),linewidth=1,style=plot.style_linebr,offset=1)
//==================================================================================================================
Expand (1566 lines)
