Script Name: X48 - Strategy - ADAPTIVE CONSECUTIVE + TP-SL - V.1
Author: X4815162342
Description: Thanks For Tradingview Built-in Script :: << Original From Consecutive Strategy Built-in Script >>

 ================== Read This First Before Use This Strategy ==============

  Please be aware that this strategy is not a guarantee of success and may lead to losses.
  Trading involves risk and you should always do your own research before making any...
PineScript code:

Pine Script™ strategy
X48 - Strategy | ADAPTIVE CONSECUTIVE + TP/SL | V.1
//Thanks  For  Tradingview  Built-in  Script  ::  <<  Original  From  Consecutive  Strategy  Built-in  Script  >>
//This  Strategy  Mod  by  ME  :  X4815162342
//==================  Read  This  First  Before  Use  This  Strategy  ==============
//  ***********  Please  be  aware  that  this  strategy  is  not  a  guarantee  of  success  and  may  lead  to  losses.
//  ***********  Trading  involves  risk  and  you  should  always  do  your  own  research  before  making  any  decisions.
//  ***********  This  Strategy  Just  an  Idea  For  Help  Your  Decision  For  OpenPosition.
//  ***********  You  Must  Be  Search  and  Make  Your  Self  Understand  What  You  Doing  In  This  Strategy.
//  ***********  Example  ::  This  Strategy  and  Indicator  Find  The  Consecutive  Bars  And  You,  You  Are  Reading  Must  Be  Decision  Up  to  You  !!
//  ***********  For  Backtest  Show  It's  That  For  a  Newbie  100$  Portfolio  and  16.333$  Per  Order  Size
//>>>>  Read  Me  First  !!  <<<<<
//==========  Detailed  and  meaningful  description  =========
//  -  How  It's  Work  :  This  Strategy  are  Following  [Length]Green  or  [Length]Red  Candle  ::  example  3  Green  Candle  To  OpenLong  Position
//  -  Can  Set  TP/SL  if  you  want  ::  Just  Fine  The  Best  Value  of  Asset  as  you  want
//  -  Fast  Trend  =  MA  FAST  LINE  [Blue  Line]
//  -  SLOW  Trend  =  MA  SLOW  LINE  [Red  Line]
//  -  MID-TERM  TREND  =  MA  MID-TERM  [Yellow  Line]
//  -  LONG-TERM  TREND  =  MA  LONG-TERM  [White  Line]
//===========  Condition  And  Statement  ===========
//  Long  Condition  Statement  ::  [Length]  Candles  Consecutive  Bars  Up  and  close  >  golden_line  and  fast_line  >  golden_line
//  Short  Condition  Statement  ::  [Length]  Candles  Consecutive  Bars  Down  and  close  <  golden_line  and  fast_line  <  golden_line
//  AutoCloseLong  Condition  ::  [Length]  Candles  ConsecutiveBarsDownStop  and  close  >  golden_line  and  close[2]  <  death_line  and  close[1]  <  death_line  and  close  <  death_line  or  fastUpdeath
//  AutoCloseShort  Condition  ::  [Length]  Candles  ConsecutiveBarsUpStop  and  close  <  golden_line  and  close[2]  >  death_line  and  close[1]  >  death_line  and  close  >  death_line  or  fastUpdeath
//  ======  For  ADAPTIVE  you  can  customize  your  ALL  MA  [FAST,  SLOW,  MID-TERM,  LONG-TERM]  For  Your  Statement
///////////For  Example  Hook  Alert  Command  ////////////
//  Just  Easy  Command  >>  ::  {{strategy.order.alert_message}}
//  Or  Other  Json  You  Should  Edit  Command  Like  This  Example
//  {"ex":"'bnfuture'","side":  "AutoLong",  "$16.333",  "symbol":  "{{ticker}}",  "passphrase":  "1234","leverage":"10",  "tp"  :  "5",  "sl"  :  "2",  "tl"  :  "2",  "callback"  :  "1"}  //
//  {"ex":"'bnfuture'","side":  "AutoShort",  "$16.333",  "symbol":  "{{ticker}}",  "passphrase":  "1234","leverage":"10",  "tp"  :  "5",  "sl"  :  "2",  "tl"  :  "2",  "callback"  :  "1"}  //
//////////////////////////////////////////////////////
//@version=5
strategy("X48  -  Strategy  |  ADAPTIVE  CONSECUTIVE  +  TP/SL  |  V.1",  overlay=true,  default_qty_type  =  strategy.cash,  default_qty_value  =  16.333,  currency  =  currency.USD,  initial_capital  =  100,  commission_type  =  strategy.commission.percent,  commission_value  =  0.1)
//================  SPOT  MODE  ==============
GRSPT  =  "===  🍀🍀🍀  SPOT  MODE  🍀🍀🍀  ==="
Spot_MODE  =  input.bool(defval  =  false,  title  =  "🍀  SPOT  MODE",  group  =  GRSPT)
Auto_Stop  =  input.bool(defval  =  true,  title  =  "🍵  AUTO  TP/SL",  group  =  "CONSECUTIVE-SETTING")
consecutiveBarsUp  =  input(defval  =  3,  title  =  "BarsUp-Length",  group  =  "CONSECUTIVE-SETTING")
consecutiveBarsDown  =  input(defval  =  3,  title  =  "BarsDown-Length",  group  =  "CONSECUTIVE-SETTING")
consecutiveBarsUpStop  =  input(defval  =  2,  title  =  "BarsStopUp-Length",  group  =  "CONSECUTIVE-STOP")
consecutiveBarsDownStop  =  input(defval  =  2,  title  =  "BarsStopDown-Length",  group  =  "CONSECUTIVE-STOP")
////////////////////////////////////////////////////////////////////////////////////
GRMAC  =  '===💯💯💯4️⃣  Multi  MA  SETTING  4️⃣💯💯💯==='
///////////  Normal  Setting  ////////////////
srcstrategy  =  input(close,  title='💯4️⃣  Source  Multi  MA',  group  =  GRMAC,  tooltip  =  'Normal  Line  =  Close  \nSmooth  Line  =  ohlc4')
/////////////  EMA/SMA  SETTING  /////////////
pricestrategy  =  request.security(syminfo.tickerid,  timeframe.period,  srcstrategy)
ma1strategy  =  input(8,  title='💯4️⃣  Fast  MA  Length',  group  =  GRMAC,  inline  =  '12')
type1strategy  =  input.string('EMA',  'Fast  MA  Type',  options=['SMA',  'EMA',  'WMA',  'HMA',  'RMA',  'VWMA'],  group  =  GRMAC,  tooltip  =  'SMA  /  EMA  /  WMA  /  HMA  /  RMA  /  VWMA',  inline  =  '12')
ma3strategy  =  input(32,  title='💯4️⃣  Slow  MA  Length',  group  =  GRMAC,  inline  =  '13')
type3strategy  =  input.string('EMA',  'Slow  MA  Type',  options=['SMA',  'EMA',  'WMA',  'HMA',  'RMA',  'VWMA'],  group  =  GRMAC,  tooltip  =  'SMA  /  EMA  /  WMA  /  HMA  /  RMA  /  VWMA',  inline  =  '13')
ma4strategy  =  input(50,  title='💯4️⃣  Mid  MA  Length',  group  =  GRMAC,  inline  =  '14')
type4strategy  =  input.string('EMA',  'Mid  MA  Type',  options=['SMA',  'EMA',  'WMA',  'HMA',  'RMA',  'VWMA'],  group  =  GRMAC,  tooltip  =  'SMA  /  EMA  /  WMA  /  HMA  /  RMA  /  VWMA',  inline  =  '14')
ma5strategy  =  input(200,  title='💯4️⃣  Long  MA  Length',  group  =  GRMAC,  inline  =  '15')
type5strategy  =  input.string('EMA',  'Long  MA  Type',  options=['SMA',  'EMA',  'WMA',  'HMA',  'RMA',  'VWMA'],  group  =  GRMAC,  tooltip  =  'SMA  /  EMA  /  WMA  /  HMA  /  RMA  /  VWMA',  inline  =  '15')
price1strategy  =  switch  type1strategy
        "EMA"  =>  ta.ema(pricestrategy,  ma1strategy)
        "SMA"  =>  ta.sma(pricestrategy,  ma1strategy)
        "WMA"  =>  ta.wma(pricestrategy,  ma1strategy)
        "HMA"  =>  ta.hma(pricestrategy,  ma1strategy)
        "RMA"  =>  ta.rma(pricestrategy,  ma1strategy)
        "VWMA"  =>  ta.vwma(pricestrategy,  ma1strategy)

price3strategy  =  switch  type3strategy
        "EMA"  =>  ta.ema(pricestrategy,  ma3strategy)
        "SMA"  =>  ta.sma(pricestrategy,  ma3strategy)
        "WMA"  =>  ta.wma(pricestrategy,  ma3strategy)
        "HMA"  =>ta.hma(pricestrategy,ma3strategy)
"RMA"=>ta.rma(pricestrategy,ma3strategy)
"VWMA"=>ta.vwma(pricestrategy,ma3strategy)
price4strategy=switchtype4strategy
"EMA"=>ta.ema(pricestrategy,ma4strategy)
"SMA"=>ta.sma(pricestrategy,ma4strategy)
"WMA"=>ta.wma(pricestrategy,ma4strategy)
"HMA"=>ta.hma(pricestrategy,ma4strategy)
"RMA"=>ta.rma(pricestrategy,ma4strategy)
"VWMA"=>ta.vwma(pricestrategy,ma4strategy)
price5strategy=switchtype5strategy
"EMA"=>ta.ema(pricestrategy,ma5strategy)
"SMA"=>ta.sma(pricestrategy,ma5strategy)
"WMA"=>ta.wma(pricestrategy,ma5strategy)
"HMA"=>ta.hma(pricestrategy,ma5strategy)
"RMA"=>ta.rma(pricestrategy,ma5strategy)
"VWMA"=>ta.vwma(pricestrategy,ma5strategy)
fast_plot=input.bool(defval=true,title="MAFAST",group="PLOT",inline="P1")
slow_plot=input.bool(defval=true,title="MASLOW",group="PLOT",inline="P1")
death_plot=input.bool(defval=true,title="MIDMA",group="PLOT",inline="P2")
golden_plot=input.bool(defval=true,title="LONGMA",group="PLOT",inline="P2")
price=close
ups=0.0
ups:=price>price[1]?nz(ups[1])+1:0
dns=0.0
dns:=price<price[1]?nz(dns[1])+1:0
golden_line=price5strategy
death_line=price4strategy
fast_line=price1strategy
slow_line=price3strategy
plot(golden_plot?golden_line:na,title="GoldenLine",color=color.white,linewidth=2)
plot(death_plot?death_line:na,"DeathLine",color=color.yellow,linewidth=2)
plot(fast_plot?fast_line:na,"DeathLine",color=color.blue,linewidth=1)
plot(slow_plot?slow_line:na,"DeathLine",color=color.red,linewidth=1)
fastUpdeath=ta.crossunder(fast_line,death_line)
fastDowndeath=ta.crossover(fast_line,death_line)
//===============TAKEPROFITandSTOPLOSSby%=================
tpsl(percent)=>
strategy.position_avg_price*percent/100/syminfo.mintick
GR4="=====🆘🆘🆘TAKEPROFIT&STOPLOSSBY[%]🆘🆘🆘====="
GRH="🎯🎯🎯TakeProfit&StopLossMODE🎯🎯🎯"
mode=input.bool(title="🆘TakeProfit&StopLossByPercent(%)",defval=true,group=GRH,tooltip="TakeProfit&StopLossby%Change")
lengthBO=input.int(title="1️⃣LengthBreakOut",minval=1,maxval=1000,defval=5,group=GR4)
BOTrail_MODE=input.bool(defval=false,title="🅾️CALLBACKTrailingStop[LowProfitButMoreTP]",group=GRH,tooltip="BreakOutLengthForWho'sWantFastTrailingButThisLowProfitButMoreTimeForTP\nIt'sCanComboWithBreakoutand15m")
triling_BO=input.float(title="🅾️BreakOutTrailingCALLBACK[%]",defval=25,minval=0.01,maxval=999.99,group=GR4,tooltip="BinanceCallback=5%,NowYouCanCustomizeYourCallback><")
plotcolor=input.bool(defval=false,title='🆑ATRTrailingStop',group=GRH)
upBound=ta.highest(high,lengthBO)
downBound=ta.lowest(low,lengthBO)
SL_LongBO=(close<(upBound-((upBound*triling_BO)/100)))
SL_ShortBO=(close>(downBound+((downBound*triling_BO)/100)))
tp_l=tpsl(input.float(99999,title='🆘TP[LONG]%',group=GR4))
tp_s=tpsl(input.float(20,title='🆘TP[SHORT]%',group=GR4))
sl=tpsl(input.float(5,title='🆘StopLoss%',group=GR4))
GRT="=====🆑🆑🆑ATRTRAILINGSTOP🆑🆑🆑====="
/////////notes////////////////////////////////////////
//ThisisbasedontheATRtrailingstopindicator//
//widthadditionoftwolevelsofstopsand//
//differentinterpretation.//
//Thisisafast-reactingsystemandisbetter//
//suitedforhighervolatilitymarkets//
//////////////////////////////////////////////////////

//FastTrail//
AP1=input.int(5,'🆑FastATRperiod',group=GRT)//ATRPeriod
AF1=input.float(0.5,'🆑FastATRmultiplier',group=GRT)//ATRFactor
SL1=AF1*ta.atr(AP1)//StopLoss
Trail1=0.0
iff_1=close>nz(Trail1[1],0)?close-SL1:close+SL1
iff_2=close<nz(Trail1[1],0)andclose[1]<nz(Trail1[1],0)?math.min(nz(Trail1[1],0),close+SL1):iff_1
Trail1:=close>nz(Trail1[1],0)andclose[1]>nz(Trail1[1],0)?math.max(nz(Trail1[1],0),close-SL1):iff_2
//SlowTrail//
AP2=input.int(10,'🆑SlowATRperiod',group=GRT)//ATRPeriod
AF2=input.float(2,'🆑SlowATRmultiplier',group=GRT)//ATRFactor
SL2=AF2*ta.atr(AP2)//StopLoss
Trail2=0.0
iff_3=close>nz(Trail2[1],0)?close-SL2:close+SL2
iff_4=close<nz(Trail2[1],0)andclose[1]<nz(Trail2[1],0)?math.min(nz(Trail2[1],0),close+SL2):iff_3
Trail2:=close>nz(Trail2[1],0)andclose[1]>nz(Trail2[1],0)?math.max(nz(Trail2[1],0),close-SL2):iff_4
BuyLong=ta.crossover(Trail1,Trail2)
SellShort=ta.crossunder(Trail1,Trail2)
TS1=plot(plotcolor?Trail1:na,'FastTrail',style=plot.style_line,color=Trail1>Trail2?color.blue:color.yellow,linewidth=3,display=display.none)
TS2=plot(plotcolor?Trail2:na,'SlowTrail',style=plot.style_line,color=Trail1>Trail2?color.lime:color.blue,linewidth=3)
ifplotcolor==true
ifBuyLongandstrategy.position_size<0
strategy.close('Short',qty_percent=100,comment="🚨ATRTL🚨")
ifSellShortandstrategy.position_size>0
strategy.close('Long',qty_percent=100,comment="🚨ATRTL🚨")
calcStopLossPrice(OffsetPts)=>
ifstrategy.position_size>0
strategy.position_avg_price-OffsetPts*syminfo.mintick
elseifstrategy.position_size<0
strategy.position_avg_price+OffsetPts*syminfo.mintick
else
na
varstoploss=0.
vartakeprofit=0.
ifmode==true
if(strategy.position_size>0)
stoploss:=calcStopLossPrice(sl)
takeprofit:=tp_l
if(strategy.position_size<0)
stoploss:=calcStopLossPrice(sl)
takeprofit:=tp_s
elseifstrategy.position_size==0
stoploss:=na
takeprofit:=na
/////////////////////////////////////////////////////////////////////////////////////////////////////
Text_Alert_Future='{{strategy.order.alert_message}}'
copy_Fu=input(defval=Text_Alert_Future,title="AlertMessageforBOT",inline='00',group='═BotSetting═\n>>IfYouDontUseBotJustPassIt',tooltip='AlertForX48-BOT>CopyandPasteToAlertFunction')
passphrase=input.string(defval='1234',title='BotPass',group='═BotSetting═\n>>IfYouDontUseBotJustPassIt',tooltip='PassphraseMustBeSameasX48-BOT')
leveragex=input.int(125,title='leverage',group='═BotSetting═\n>>IfYouDontUseBotJustPassIt',tooltip='"NOTHING"todowithPositionsizeForCommandToX48-BOTOnly',minval=1)
longcommand=input.string(defval='AutoLong',title='BotLongCommand',group='═BotSetting═\n>>IfYouDontUseBotJustPassIt',tooltip='1.OpenLong\n2.AutoLong\n***IfAutoLong=Close(100%)First>OpenLongPositionAuto')
shortcommand=input.string(defval='AutoShort',title='BotShortCommand',group='═BotSetting═\n>>IfYouDontUseBotJustPassIt',tooltip='1.OpenShort\n2.AutoShort\n***IfAutoShort=Close(100%)First>OpenShortPositionAuto')
markettype=input.string(defval='bnfuture',title='Future/SpotCommand',group='═BotSetting═\n>>IfYouDontUseBotJustPassIt',tooltip='1.bnfuture=FUTUREMODE\n2.bnspot=SPOTMODE\n3.bncombo=EZ2in1Order')
////////////////StrategyAlert//////////////////////
////////ForUseBotCanChangeThisCommandByYourSelf/////////////////////
stringAlert_OpenLong='{"ex":"'+markettype+'","side":"'+longcommand+'","@{{strategy.order.contracts}}","symbol":"{{ticker}}","passphrase":"'+passphrase+'","leverage":"'+str.tostring(leveragex)+'","tp":"25","sl":"0","tl":"0","callback":"0"}'
stringAlert_OpenShort='{"ex":"'+markettype+'","side":"'+shortcommand+'","@{{strategy.order.contracts}}","symbol":"{{ticker}}","passphrase":"'+passphrase+'","leverage":"'+str.tostring(leveragex)+'","tp":"25","sl":"0","tl":"0","callback":"0"}'
//stringAlert_LongTP='{"ex":"bnfuture","side":"CloseLong","amount":"@{{strategy.order.contracts}}","symbol":"{{ticker}}","passphrase":"'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
//stringAlert_ShortTP='{"ex":"bnfuture","side":"CloseShort","amount":"@{{strategy.order.contracts}}","symbol":"{{ticker}}","passphrase":"'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
//varmessage_closelong='{"ex":"bnfuture","side":"CloseLong","amount":"%100","symbol":"{{ticker}}","passphrase":"'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
//varmessage_closeshort='{"ex":"bnfuture","side":"CloseShort","amount":"%100","symbol":"{{ticker}}","passphrase":"'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
stringAlert_StopLosslong='{"ex":"'+markettype+'","side":"CloseLong","amount":"%100","symbol":"{{ticker}}","passphrase":"'+passphrase+'","leverage":"'+str.tostring(leveragex)+'","tp":"0","sl":"0","tl":"0","callback":"0"}'
stringAlert_StopLossshort='{"ex":"'+markettype+'","side":"CloseShort","amount":"%100","symbol":"{{ticker}}","passphrase":"'+passphrase+'","leverage":"'+str.tostring(leveragex)+'","tp":"0","sl":"0","tl":"0","callback":"0"}'
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////INPUTBACKTESTRANGE////////////////////////////////////////////////////
varstringBTR1='════════INPUTBACKTESTTIMERANGE════════'
i_startTime=input.time(defval=timestamp("01Jan194500:00+0000"),title="Start",inline="timestart",group=BTR1,tooltip='StartBacktestYYYY/MM/DD')
i_endTime=input.time(defval=timestamp("01Jan207423:59+0000"),title="End",inline="timeend",group=BTR1,tooltip='EndBacktestYYYY/MM/DD')
iftime>=i_startTimeandtime<=i_endTime
ifSpot_MODE==false
if(ups>=consecutiveBarsUp)andclose>golden_lineandfast_line>golden_line
strategy.entry("Long",strategy.long,comment="🌙",alert_message=Alert_OpenLong)
if(dns>=consecutiveBarsDown)andclose<golden_lineandfast_line<golden_line
strategy.entry("Short",strategy.short,comment="👻",alert_message=Alert_OpenShort)
ifAuto_Stop==true
if(dns>=consecutiveBarsDownStop)andclose>golden_lineandclose[2]<death_lineandclose[1]<death_lineandclose<death_lineorfastUpdeath
strategy.close("Long",qty_percent=100,comment="🔔AUTO🔔",alert_message=Alert_StopLosslong)
if(ups>=consecutiveBarsUp)andclose<golden_lineandclose[2]>death_lineandclose[1]>death_lineandclose>death_lineorfastDowndeath
strategy.close("Short",qty_percent=100,comment="🔔AUTO🔔",alert_message=Alert_StopLossshort)
ifSpot_MODE==true
if(ups>=consecutiveBarsUp)andclose>golden_lineandfast_line>golden_line
strategy.entry("Long",strategy.long,comment="🌙",alert_message=Alert_OpenLong)

ifAuto_Stop==true
if(dns>=consecutiveBarsDownStop)andclose>golden_lineandclose[2]<death_lineandclose[1]<death_lineandclose<death_lineorfastUpdeath
strategy.close("Long",qty_percent=100,comment="🔔AUTO🔔",alert_message=Alert_StopLosslong)
ifmode==true
ifSpot_MODE==false
iftp_l>0andsl>0andstrategy.position_size>0
strategy.exit("Exit",'Long',qty_percent=100,profit=takeprofit,stop=stoploss,comment_profit="TP💚L",comment_loss="SL💚L",alert_message=Alert_StopLosslong)
iftp_l>0andsl<=0andstrategy.position_size>0
strategy.exit("Exit",'Long',qty_percent=100,profit=takeprofit,comment_profit="TP💚L",alert_message=Alert_StopLosslong)
iftp_l<=0andsl>0andstrategy.position_size>0
strategy.exit("Exit",'Long',qty_percent=100,stop=stoploss,comment_loss="SL💚L",alert_message=Alert_StopLosslong)
iftp_s>0andsl>0andstrategy.position_size<0
strategy.exit("Exit",'Short',qty_percent=100,profit=takeprofit,stop=stoploss,comment_profit="TP❤️️S",comment_loss="SL❤️️S",alert_message=Alert_StopLossshort)
iftp_s>0andsl<=0andstrategy.position_size<0
strategy.exit("Exit",'Short',qty_percent=100,profit=takeprofit,comment_profit="TP❤️️S",alert_message=Alert_StopLossshort)
iftp_s<=0andsl>0andstrategy.position_size<0
strategy.exit("Exit",'Short',qty_percent=100,stop=stoploss,comment_loss="SL❤️️S",alert_message=Alert_StopLossshort)
ifSpot_MODE==true
iftp_l>0andsl>0andstrategy.position_size>0
strategy.exit("Exit",'Long',qty_percent=100,profit=takeprofit,loss=stoploss,comment_profit="TP💚L",comment_loss="SL💚L",alert_message=Alert_StopLosslong)
iftp_l>0andsl<=0andstrategy.position_size>0
strategy.exit("Exit",'Long',qty_percent=100,profit=takeprofit,comment_profit="TP💚L",alert_message=Alert_StopLosslong)
iftp_l<=0andsl>0andstrategy.position_size>0
strategy.exit("Exit",'Long',qty_percent=100,loss=stoploss,comment_loss="SL💚L",alert_message=Alert_StopLosslong)
ifBOTrail_MODE==true
ifSpot_MODE==false
ifSL_LongBOandstrategy.position_size>0
strategy.close("Long",qty_percent=100,comment="❇️CALLBACK❇️",alert_message=Alert_StopLosslong)
ifSL_ShortBOandstrategy.position_size<0
strategy.close("Short",qty_percent=100,comment="❇️CALLBACK❇️",alert_message=Alert_StopLossshort)
ifSpot_MODE==true
ifSL_LongBOandstrategy.position_size>0
strategy.close("Long",qty_percent=100,comment="❇️CALLBACK❇️",alert_message=Alert_StopLosslong)
//=====================เรียกใช้library=========================
importX4815162342/X48_LibaryStrategyStatus/2asfuLi
//แสดงผลBacktest
show_Net=input.bool(true,'MonitorProfit&Loss',inline='Lnet',group='=PNLMONITORSETTING=')
position_=input.string('bottom_center','Position',options=['top_right','middle_right','bottom_right','top_center','middle_center','bottom_center','middle_left','bottom_left'],inline='Lnet')
size_i=input.string('auto','size',options=['auto','tiny','small','normal'],inline='Lnet')
color_Net=input.color(color.blue,"",inline='Lnet')
fuLi.NetProfit_Show(show_Net,position_,size_i,color_Net)
Expand (291 lines)
