Script Name: ATR GOD Strategy by TradeSmart (PineConnector-compatible)
Author: TradeSmart22
Description: This is a  highly-customizable trading strategy  made by TradeSmart, focusing mainly on ATR-based indicators and filters. The strategy is mainly intended for  trading forex , and has been optimized using the Deep Backtest feature on the 2018.01.01 - 2023.06.01 interval on the EUR/USD (FXCM) 15M chart, with a Slippage value of 3, and a Commission set to 0.00004 USD...
PineScript code:

Pine Scriptâ„¢ strategy
ATR GOD Strategy by TradeSmart (PineConnector-compatible)
//  @version=5
//  @strategy_alert_message  {{strategy.order.comment}}
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  Â©  TradeSmart22
strategy(default_qty_type=strategy.percent_of_equity,  default_qty_value=100,  pyramiding=0,  title="ATR  GOD  Strategy  by  TradeSmart",  overlay=true,  initial_capital=10000,  precision=8)
//  PLOT  SETTINGS
plot_signals  =  input.bool(true,  title="Plot  Signals",  group="Plot  Settings",  tooltip="Show  Long  and  Short  signals  on  the  signal  candle,  besides  the  actual  entry  points  of  the  strategy.")
plot_sl_tp  =  input.bool(true,  title="Plot  SL/TP  Lines",  group="Plot  Settings")
//  STRATEGY  SETTINGS
//  Supertrend  1
plot_st_1  =  input.bool(false,  title="Plot  Supertrend  1",  group="Supertrend  1")
can_be_entry_signal_st_1  =  input.bool(true,  title="Supertrend  1  can  be  entry  signal",  group="Supertrend  1",  tooltip="This  Supertrend  will  be  checked  for  a  potential  entry  signal.  (meaning  Buy  for  a  Long  entry  and  Sell  for  a  Short  entry)  If  disabled,  the  strategy  will  not  enter  on  any  Buy/Sell  signals  emitted  by  this  particular  Supertrend.\n\nNOTE:  One  of  the  Supertrends  must  be  enabled  to  be  a  potential  entry  signal  in  order  for  the  strategy  to  enter  into  any  trades.")
long_trend_st_1  =  input.string("uptrend",  options=["uptrend",  "downtrend",  "unspecified"],  title="Long:  Supertrend  1  has  to  be  in",  group="Supertrend  1",  tooltip="When  checking  for  a  potential  Long  entry  signal,  this  particular  Supertrend  must  be  in  the  set  trend  or  undefined  (meaning  that  it  can  be  in  either  up/down  trends).")
short_trend_st_1  =  input.string("downtrend",  options=["uptrend",  "downtrend",  "unspecified"],  title="Short:  Supertrend  1  has  to  be  in",  group="Supertrend  1",  tooltip="When  checking  for  a  potential  Short  entry  signal,  this  particular  Supertrend  must  be  in  the  set  trend  or  undefined  (meaning  that  it  can  be  in  either  up/down  trends).")
per_st_1  =  input.int(20,  title="ATR  Period  1",  group="Supertrend  1")
src_st_1  =  input(hl2,  title="Source  1",  group="Supertrend  1")
mult_st_1  =  input.float(2.0,  title="ATR  Multiplier  1",  step=0.1,  group="Supertrend  1")
atr_st_1  =  ta.atr(per_st_1)
up_st_1  =  src_st_1  -  (mult_st_1  *  atr_st_1)
up1_st_1  =  nz(up_st_1[1],  up_st_1)
up_st_1  :=  close[1]  >  up1_st_1  ?  math.max(up_st_1,  up1_st_1)  :  up_st_1
dn_st_1  =  src_st_1  +  (mult_st_1  *  atr_st_1)
dn1_st_1  =  nz(dn_st_1[1],  dn_st_1)
dn_st_1  :=  close[1]  <  dn1_st_1  ?  math.min(dn_st_1,  dn1_st_1)  :  dn_st_1
trend_st_1  =  1
trend_st_1  :=  nz(trend_st_1[1],  trend_st_1)
trend_st_1  :=  trend_st_1  ==  -1  and  close  >  dn1_st_1  ?  1  :  trend_st_1  ==  1  and  close  <  up1_st_1  ?  -1  :  trend_st_1
buySignal_st_1  =  trend_st_1  ==  1  and  trend_st_1[1]  ==  -1
sellSignal_st_1  =  trend_st_1  ==  -1  and  trend_st_1[1]  ==  1
upPlot_st_1  =  plot(trend_st_1  ==  1  ?  up_st_1  :  na,  title="Up  Trend  1",  style=plot.style_linebr,  linewidth=1,  color=color.rgb(20,  100,  20,  10),  display=plot_st_1  ?  display.all  :  display.none)
plotshape(buySignal_st_1  and  plot_st_1  ?  up_st_1  :  na,  title="Start  Up  Trend  1",  location=location.absolute,  style=shape.circle,  size=size.tiny,  color=color.rgb(20,  100,  20,  10))
plotshape(buySignal_st_1  and  plot_st_1  ?  up_st_1  :  na,  title="Buy  1",  text="Buy  1",  location=location.absolute,  style=shape.labelup,  size=size.tiny,  color=color.rgb(20,  100,  20,  10),  textcolor=color.white)
dnPlot_st_1  =  plot(trend_st_1  ==  1  ?  na  :  dn_st_1,  title="Down  Trend  1",  style=plot.style_linebr,  linewidth=1,  color=color.rgb(100,  20,  20,  10),  display=plot_st_1?display.all:display.none)
plotshape(sellSignal_st_1andplot_st_1?dn_st_1:na,title="StartDownTrend1",location=location.absolute,style=shape.circle,size=size.tiny,color=color.rgb(100,20,20,10))
plotshape(sellSignal_st_1andplot_st_1?dn_st_1:na,title="Sell1",text="Sell1",location=location.absolute,style=shape.labeldown,size=size.tiny,color=color.rgb(100,20,20,10),textcolor=color.white)
//Supertrend2
plot_st_2=input.bool(false,title="PlotSupertrend2",group="Supertrend2")
can_be_entry_signal_st_2=input.bool(false,title="Supertrend2canbeentrysignal",group="Supertrend2",tooltip="ThisSupertrendwillbecheckedforapotentialentrysignal.(meaningBuyforaLongentryandSellforaShortentry)Ifdisabled,thestrategywillnotenteronanyBuy/SellsignalsemittedbythisparticularSupertrend.\n\nNOTE:OneoftheSupertrendsmustbeenabledtobeapotentialentrysignalinorderforthestrategytoenterintoanytrades.")
long_trend_st_2=input.string("uptrend",options=["uptrend","downtrend","unspecified"],title="Long:Supertrend2hastobein",group="Supertrend2",tooltip="WhencheckingforapotentialLongentrysignal,thisparticularSupertrendmustbeinthesettrendorundefined(meaningthatitcanbeineitherup/downtrends).")
short_trend_st_2=input.string("downtrend",options=["uptrend","downtrend","unspecified"],title="Short:Supertrend2hastobein",group="Supertrend2",tooltip="WhencheckingforapotentialShortentrysignal,thisparticularSupertrendmustbeinthesettrendorundefined(meaningthatitcanbeineitherup/downtrends).")
per_st_2=input.int(5,title="ATRPeriod2",group="Supertrend2")
src_st_2=input(hlcc4,title="Source2",group="Supertrend2")
mult_st_2=input.float(15,title="ATRMultiplier2",step=0.1,group="Supertrend2")
atr_st_2=ta.atr(per_st_2)
up_st_2=src_st_2-(mult_st_2*atr_st_2)
up1_st_2=nz(up_st_2[1],up_st_2)
up_st_2:=close[1]>up1_st_2?math.max(up_st_2,up1_st_2):up_st_2
dn_st_2=src_st_2+(mult_st_2*atr_st_2)
dn1_st_2=nz(dn_st_2[1],dn_st_2)
dn_st_2:=close[1]<dn1_st_2?math.min(dn_st_2,dn1_st_2):dn_st_2
trend_st_2=1
trend_st_2:=nz(trend_st_2[1],trend_st_2)
trend_st_2:=trend_st_2==-1andclose>dn1_st_2?1:trend_st_2==1andclose<up1_st_2?-1:trend_st_2
buySignal_st_2=trend_st_2==1andtrend_st_2[1]==-1
sellSignal_st_2=trend_st_2==-1andtrend_st_2[1]==1
upPlot_st_2=plot(trend_st_2==1?up_st_2:na,title="UpTrend2",style=plot.style_linebr,linewidth=1,color=color.rgb(40,100,40,10),display=plot_st_2?display.all:display.none)
plotshape(buySignal_st_2andplot_st_2?up_st_2:na,title="StartUpTrend2",location=location.absolute,style=shape.circle,size=size.tiny,color=color.rgb(40,100,40,10))
plotshape(buySignal_st_2andplot_st_2?up_st_2:na,title="Buy2",text="Buy2",location=location.absolute,style=shape.labelup,size=size.tiny,color=color.rgb(40,100,40,10),textcolor=color.white)
dnPlot_st_2=plot(trend_st_2==1?na:dn_st_2,title="DownTrend2",style=plot.style_linebr,linewidth=1,color=color.rgb(100,40,40,10),display=plot_st_2?display.all:display.none)
plotshape(sellSignal_st_2andplot_st_2?dn_st_2:na,title="StartDownTrend2",location=location.absolute,style=shape.circle,size=size.tiny,color=color.rgb(100,40,40,10))
plotshape(sellSignal_st_2andplot_st_2?dn_st_2:na,title="Sell2",text="Sell2",location=location.absolute,style=shape.labeldown,size=size.tiny,color=color.rgb(100,40,40,10),textcolor=color.white)
//Supertrend3
plot_st_3=input.bool(false,title="PlotSupertrend3",group="Supertrend3")
can_be_entry_signal_st_3=input.bool(true,title="Supertrend3canbeentrysignal",group="Supertrend3",tooltip="ThisSupertrendwillbecheckedforapotentialentrysignal.(meaningBuyforaLongentryandSellforaShortentry)Ifdisabled,thestrategywillnotenteronanyBuy/SellsignalsemittedbythisparticularSupertrend.\n\nNOTE:OneoftheSupertrendsmustbeenabledtobeapotentialentrysignalinorderforthestrategytoenterintoanytrades.")
long_trend_st_3=input.string("uptrend",options=["uptrend","downtrend","unspecified"],title="Long:Supertrend3hastobein",group="Supertrend3",tooltip="WhencheckingforapotentialLongentrysignal,thisparticularSupertrendmustbeinthesettrendorundefined(meaningthatitcanbeineitherup/downtrends).")
short_trend_st_3=input.string("downtrend",options=["uptrend","downtrend","unspecified"],title="Short:Supertrend3hastobein",group="Supertrend3",tooltip="WhencheckingforapotentialShortentrysignal,thisparticularSupertrendmustbeinthesettrendorundefined(meaningthatitcanbeineitherup/downtrends).")
per_st_3=input.int(10,title="ATRPeriod3",group="Supertrend3")
src_st_3=input(hl2,title="Source3",group="Supertrend3")
mult_st_3=input.float(3.0,title="ATRMultiplier3",step=0.1,group="Supertrend3")
atr_st_3=ta.atr(per_st_3)
up_st_3=src_st_3-(mult_st_3*atr_st_3)
up1_st_3=nz(up_st_3[1],up_st_3)
up_st_3:=close[1]>up1_st_3?math.max(up_st_3,up1_st_3):up_st_3
dn_st_3=src_st_3+(mult_st_3*atr_st_3)
dn1_st_3=nz(dn_st_3[1],dn_st_3)
dn_st_3:=close[1]<dn1_st_3?math.min(dn_st_3,dn1_st_3):dn_st_3
trend_st_3=1
trend_st_3:=nz(trend_st_3[1],trend_st_3)
trend_st_3:=trend_st_3==-1andclose>dn1_st_3?1:trend_st_3==1andclose<up1_st_3?-1:trend_st_3
buySignal_st_3=trend_st_3==1andtrend_st_3[1]==-1
sellSignal_st_3=trend_st_3==-1andtrend_st_3[1]==1
upPlot_st_3=plot(trend_st_3==1?up_st_3:na,title="UpTrend3",style=plot.style_linebr,linewidth=1,color=color.rgb(60,100,60,10),display=plot_st_3?display.all:display.none)
plotshape(buySignal_st_3andplot_st_3?up_st_3:na,title="StartUpTrend3",location=location.absolute,style=shape.circle,size=size.tiny,color=color.rgb(60,100,60,10))
plotshape(buySignal_st_3andplot_st_3?up_st_3:na,title="Buy3",text="Buy3",location=location.absolute,style=shape.labelup,size=size.tiny,color=color.rgb(60,100,60,10),textcolor=color.white)
dnPlot_st_3=plot(trend_st_3==1?na:dn_st_3,title="DownTrend3",style=plot.style_linebr,linewidth=1,color=color.rgb(100,60,60,10),display=plot_st_3?display.all:display.none)
plotshape(sellSignal_st_3andplot_st_3?dn_st_3:na,title="StartDownTrend3",location=location.absolute,style=shape.circle,size=size.tiny,color=color.rgb(100,60,60,10))
plotshape(sellSignal_st_3andplot_st_3?dn_st_3:na,title="Sell3",text="Sell3",location=location.absolute,style=shape.labeldown,size=size.tiny,color=color.rgb(100,60,60,10),textcolor=color.white)
//Supertrend4
plot_st_4=input.bool(false,title="PlotSupertrend4",group="Supertrend4")
can_be_entry_signal_st_4=input.bool(true,title="Supertrend4canbeentrysignal",group="Supertrend4",tooltip="ThisSupertrendwillbecheckedforapotentialentrysignal.(meaningBuyforaLongentryandSellforaShortentry)Ifdisabled,thestrategywillnotenteronanyBuy/SellsignalsemittedbythisparticularSupertrend.\n\nNOTE:OneoftheSupertrendsmustbeenabledtobeapotentialentrysignalinorderforthestrategytoenterintoanytrades.")
long_trend_st_4=input.string("uptrend",options=["uptrend","downtrend","unspecified"],title="Long:Supertrend4hastobein",group="Supertrend4",tooltip="WhencheckingforapotentialLongentrysignal,thisparticularSupertrendmustbeinthesettrendorundefined(meaningthatitcanbeineitherup/downtrends).")
short_trend_st_4=input.string("downtrend",options=["uptrend","downtrend","unspecified"],title="Short:Supertrend4hastobein",group="Supertrend4",tooltip="WhencheckingforapotentialShortentrysignal,thisparticularSupertrendmustbeinthesettrendorundefined(meaningthatitcanbeineitherup/downtrends).")
per_st_4=input.int(20,title="ATRPeriod4",group="Supertrend4")
src_st_4=input(hl2,title="Source4",group="Supertrend4")
mult_st_4=input.float(10.0,title="ATRMultiplier4",step=0.1,group="Supertrend4")
atr_st_4=ta.atr(per_st_4)
up_st_4=src_st_4-(mult_st_4*atr_st_4)
up1_st_4=nz(up_st_4[1],up_st_4)
up_st_4:=close[1]>up1_st_4?math.max(up_st_4,up1_st_4):up_st_4
dn_st_4=src_st_4+(mult_st_4*atr_st_4)
dn1_st_4=nz(dn_st_4[1],dn_st_4)
dn_st_4:=close[1]<dn1_st_4?math.min(dn_st_4,dn1_st_4):dn_st_4
trend_st_4=1
trend_st_4:=nz(trend_st_4[1],trend_st_4)
trend_st_4:=trend_st_4==-1andclose>dn1_st_4?1:trend_st_4==1andclose<up1_st_4?-1:trend_st_4
buySignal_st_4=trend_st_4==1andtrend_st_4[1]==-1
sellSignal_st_4=trend_st_4==-1andtrend_st_4[1]==1
upPlot_st_4=plot(trend_st_4==1?up_st_4:na,title="UpTrend4",style=plot.style_linebr,linewidth=1,color=color.rgb(0,100,100,10),display=plot_st_4?display.all:display.none)
plotshape(buySignal_st_4andplot_st_4?up_st_4:na,title="StartUpTrend4",location=location.absolute,style=shape.circle,size=size.tiny,color=color.rgb(0,100,100,10))
plotshape(buySignal_st_4andplot_st_4?up_st_4:na,title="Buy4",text="Buy4",location=location.absolute,style=shape.labelup,size=size.tiny,color=color.rgb(0,100,100,10),textcolor=color.white)
dnPlot_st_4=plot(trend_st_4==1?na:dn_st_4,title="DownTrend4",style=plot.style_linebr,linewidth=1,color=color.rgb(100,0,100,10),display=plot_st_4?display.all:display.none)
plotshape(sellSignal_st_4andplot_st_4?dn_st_4:na,title="StartDownTrend4",location=location.absolute,style=shape.circle,size=size.tiny,color=color.rgb(100,0,100,10))
plotshape(sellSignal_st_4andplot_st_4?dn_st_4:na,title="Sell4",text="Sell4",location=location.absolute,style=shape.labeldown,size=size.tiny,color=color.rgb(100,0,100,10),textcolor=color.white)
//ExitStrategy
function(source,length,smoothing)=>
ifsmoothing=="RMA/SMMA"
ta.rma(source,length)
else
ifsmoothing=="SMA"
ta.sma(source,length)
else
ifsmoothing=="EMA"
ta.ema(source,length)
else
ta.wma(source,length)
formula(number,decimals)=>
factor=math.pow(10,decimals)
int(number*factor)/factor

use_atr_based_sl=input.bool(true,"ATRBasedStopLoss",group="ExitStrategy",tooltip="Pleaseselectonlyoneactivestoploss.Defaultvalue(ifnothingormultiplestoplossesareselected)isthe'ATRBasedStopLoss'.")
nnatr_length=input.int(100,title="ATRLength",group="ExitStrategy")
smoothing=input.string("RMA/SMMA",title="ATRSmoothing",options=["RMA/SMMA","SMA","EMA","WMA"],group="ExitStrategy")
use_low_high_based_sl=input.bool(false,"CandleLow/HighBasedStopLoss",group="ExitStrategy",tooltip="Userecentlowestorhighestpoint(dependingonlong/shortposition)tocalculatestoplossvalue.\n\nSet'BaseRiskMultiplier'to1ifyouwouldliketousethecalculatedvalueasis.Settingittoadifferentvaluewillcountasanadditionalmultiplier.\n\nPleaseselectonlyoneactivestoploss.Defaultvalue(ifnothingormultiplestoplossesareselected)isthe'ATRBasedStopLoss'.")
candle_lookback_sl=input.int(50,title="CandleLookback",group="ExitStrategy")
use_percentage_based_sl=input.bool(false,"PercentageBasedStopLoss",group="ExitStrategy",tooltip="Setthestoplosstocurrentprice-%ofcurrentprice(long)orprice+%ofcurrentprice(short).\n\nSet'BaseRiskMultiplier'to1ifyouwouldliketousethecalculatedvalueasis.Settingittoadifferentvaluewillcountasanadditionalmultiplier.\n\nPleaseselectonlyoneactivestoploss.Defaultvalue(ifnothingormultiplestoplossesareselected)isthe'ATRBasedStopLoss'.")
percentage_sl=input.float(0.3,title="Percentage",group="ExitStrategy")
use_pip_based_sl=input.bool(false,"PipBasedStopLoss",group="ExitStrategy",tooltip="Setthestoplosstocurrentprice-xpips(long)orprice+xpips(short).\n\nSet'BaseRiskMultiplier'to1ifyouwouldliketousethecalculatedvalueasis.Settingittoadifferentvaluewillcountasanadditionalmultiplier.\n\nPleaseselectonlyoneactivestoploss.Defaultvalue(ifnothingormultiplestoplossesareselected)isthe'ATRBasedStopLoss'.")
pip_sl=input.int(10,title="Pip",group="ExitStrategy")
nnatr_loss=input.float(4.5,title="BaseRiskMultiplier",minval=0.1,step=0.1,group="ExitStrategy")
rr_ratio=input.float(1.5,title="RisktoRewardRatio",minval=0.1,step=0.1,group="ExitStrategy")
nnatr_profit=nnatr_loss*rr_ratio

nnatr=formula(function(ta.tr(true),nnatr_length,smoothing),5)
lowest_point_sl=ta.lowest(candle_lookback_sl)
highest_point_sl=ta.highest(candle_lookback_sl)
percentage_val=percentage_sl*0.01
percentage_long_sl=close-(close*percentage_val*nnatr_loss)
percentage_short_sl=close+(close*percentage_val*nnatr_loss)
pip_long_sl=close-pip_sl*syminfo.mintick
pip_short_sl=close+pip_sl*syminfo.mintick
b_atr_buy=use_atr_based_sl?close+nnatr*nnatr_profit:use_low_high_based_sl?close+(close-lowest_point_sl)*nnatr_profit:use_percentage_based_sl?close+(close-percentage_long_sl)/nnatr_loss*nnatr_profit:use_pip_based_sl?close+(close-pip_long_sl)*nnatr_profit:close+nnatr*nnatr_profit
b_atr_sell=use_atr_based_sl?close-nnatr*nnatr_loss:use_low_high_based_sl?lowest_point_sl*nnatr_loss:use_percentage_based_sl?percentage_long_sl:use_pip_based_sl?pip_long_sl:close-nnatr*nnatr_loss
s_atr_buy=use_atr_based_sl?close-nnatr*nnatr_profit:use_low_high_based_sl?close-(highest_point_sl-close)*nnatr_profit:use_percentage_based_sl?close-(percentage_short_sl-close)/nnatr_loss*nnatr_profit:use_pip_based_sl?close-(pip_short_sl-close)*nnatr_profit:close-nnatr*nnatr_profit
s_atr_sell=use_atr_based_sl?close+nnatr*nnatr_loss:use_low_high_based_sl?highest_point_sl*nnatr_loss:use_percentage_based_sl?percentage_short_sl:use_pip_based_sl?pip_short_sl:close+nnatr*nnatr_loss
//FORCEEXITING
use_force_exit_exact_time_1=input.bool(false,title="1-Forceexitoncustomsessionclose",group="ForceExiting",inline="force_exit_exact_time_1")
force_exit_exact_time_1=input.session("0930-1630:1234567",title="",group="ForceExiting",inline="force_exit_exact_time_1",tooltip="Ifenabled,tradeswillcloseautomaticallyafterthesetsessionisclosed(onnextcandle'sopen).CAUTION:donotsetthestartandendtimesofthesessiontothesamevalue!")
custom_session_1=time("30S",force_exit_exact_time_1)
use_force_exit_exact_time_2=input.bool(false,title="2-Forceexitoncustomsessionclose",group="ForceExiting",inline="force_exit_exact_time_2")
force_exit_exact_time_2=input.session("0930-1630:1234567",title="",group="ForceExiting",inline="force_exit_exact_time_2",tooltip="Ifenabled,tradeswillcloseautomaticallyafterthesetsessionisclosed(onnextcandle'sopen).CAUTION:donotsetthestartandendtimesofthesessiontothesamevalue!")
custom_session_2=time("30S",force_exit_exact_time_2)
use_force_exit_exact_time_3=input.bool(false,title="3-Forceexitoncustomsessionclose",group="ForceExiting",inline="force_exit_exact_time_3")
force_exit_exact_time_3=input.session("0930-1630:1234567",title="",group="ForceExiting",inline="force_exit_exact_time_3",tooltip="Ifenabled,tradeswillcloseautomaticallyafterthesetsessionisclosed(onnextcandle'sopen).CAUTION:donotsetthestartandendtimesofthesessiontothesamevalue!")
custom_session_3=time("30S",force_exit_exact_time_3)
use_force_exit_exact_time_4=input.bool(false,title="4-Forceexitoncustomsessionclose",group="ForceExiting",inline="force_exit_exact_time_4")
force_exit_exact_time_4=input.session("0930-1630:1234567",title="",group="ForceExiting",inline="force_exit_exact_time_4",tooltip="Ifenabled,tradeswillcloseautomaticallyafterthesetsessionisclosed(onnextcandle'sopen).CAUTION:donotsetthestartandendtimesofthesessiontothesamevalue!")
custom_session_4=time("30S",force_exit_exact_time_4)
//BASESETUPS
allow_long=input.bool(true,title="AllowLongEntries",group="BaseSetups")
allow_short=input.bool(true,title="AllowShortEntries",group="BaseSetups")
order_size_value=input.float(1000,title='OrderSize',minval=0,inline="ordersize",group="BaseSetups")
order_size_type=input.string("Cash",title="",inline="ordersize",options=["Cash","Contract(s)","CapitalPercentage"],group="BaseSetups",tooltip="Adjusthowthepositionsizeiscalculated:\n\nCash:onlythesetcashammountwillbeusedforeachtrade\n\nContract(s):theadjustednumberofcontractswillbeusedforeachtrade\n\nCapitalPercentage:a%ofthecurrentavailablecapitalwillbeusedforeachtrade")
//ATRFilter
switch_ma(maType,maSrc,maLen)=>
floatmaOut=switchmaType
"SMA"=>ta.sma(maSrc,maLen)
"EMA"=>ta.ema(maSrc,maLen)
"WMA"=>ta.wma(maSrc,maLen)
"VWMA"=>ta.vwma(maSrc,maLen)
"RMA/SMMA"=>ta.rma(maSrc,maLen)
"SWMA"=>ta.swma(maSrc)
"HMA"=>ta.hma(maSrc,maLen)
use_atr_limiter=input.bool(true,title="UseATRLimiter",group="ATRLimiter",tooltip="Onlyenterintoanyposition(long/short)ifATRvalueishigherthantheLowBoundaryandlowerthantheHighBoundary.")
atrlim_len=input(50,title="ATRLimiterLength",group="ATRLimiter")
atrlim_smoothing=input.string("RMA/SMMA",title="ATRLimiterSmoothing",options=["RMA/SMMA","SMA","EMA","WMA"],group="ATRLimiter")
atrlim_boundary_high=input.float(1000,title="HighBoundary",group="ATRLimiter")
atrlim_boundary_low=input.float(0.0003,title="LowBoundary",group="ATRLimiter")
atrlim_val=formula(function(ta.tr(true),atrlim_len,atrlim_smoothing),5)
plot(atrlim_val,title='atrlim_val',color=color.yellow)
atrlim_calc_by_ma=input.string("ATRvalueunderMA",options=["ATRvalueoverMA","ATRvalueunderMA","Unspecified"],title="MAbasedcalculation",group="ATRLimiter",tooltip="IfnotUnspecified,anMAiscalculatedwiththeATRvalueassource.Onlyenterintoposition(long/short)ifATRvalueishigher/lowerthantheMA.")
atrlim_ema_type=input.string("RMA/SMMA",options=["SMA","EMA","WMA","VWMA","RMA/SMMA","SWMA","HMA"],title="MAType",group="ATRLimiter")
atrlim_ema_len=input.int(400,title="MALength",minval=1,group="ATRLimiter")
atrlim_ema=switch_ma(atrlim_ema_type,atrlim_val,atrlim_ema_len)
check_atr_lim_long()=>
use_atr_limiter?atrlim_calc_by_ma=="ATRvalueoverMA"?atrlim_val>atrlim_emaandatrlim_val<atrlim_boundary_highandatrlim_val>atrlim_boundary_low:atrlim_calc_by_ma=="ATRvalueunderMA"?atrlim_val<atrlim_emaandatrlim_val<atrlim_boundary_highandatrlim_val>atrlim_boundary_low:atrlim_val<atrlim_boundary_highandatrlim_val>atrlim_boundary_low:true

check_atr_lim_short()=>
use_atr_limiter?atrlim_calc_by_ma=="ATRvalueoverMA"?atrlim_val>atrlim_emaandatrlim_val>atrlim_boundary_lowandatrlim_val<atrlim_boundary_high:atrlim_calc_by_ma=="ATRvalueunderMA"?atrlim_val<atrlim_emaandatrlim_val>atrlim_boundary_lowandatrlim_val<atrlim_boundary_high:atrlim_val>atrlim_boundary_lowandatrlim_val<atrlim_boundary_high:true
//EntryLogic
green_1=trend_st_1==1
green_2=trend_st_2==1
green_3=trend_st_3==1
green_4=trend_st_4==1
red_1=trend_st_1!=1
red_2=trend_st_2!=1
red_3=trend_st_3!=1
red_4=trend_st_4!=1
st_uptrend_bool_arr=array.from(green_1,green_2,green_3,green_4)
st_downtrend_bool_arr=array.from(red_1,red_2,red_3,red_4)
st_buy_signal_arr=array.from(buySignal_st_1,buySignal_st_2,buySignal_st_3,buySignal_st_4)
last_st_buy_signal_arr=array.from(buySignal_st_1[1],buySignal_st_2[1],buySignal_st_3[1],buySignal_st_4[1])
st_sell_signal_arr=array.from(sellSignal_st_1,sellSignal_st_2,sellSignal_st_3,sellSignal_st_4)
last_st_sell_signal_arr=array.from(sellSignal_st_1[1],sellSignal_st_2[1],sellSignal_st_3[1],sellSignal_st_4[1])
long_trend_arr=array.from(long_trend_st_1,long_trend_st_2,long_trend_st_3,long_trend_st_4)
short_trend_arr=array.from(short_trend_st_1,short_trend_st_2,short_trend_st_3,short_trend_st_4)
long_trends_ok=true
short_trends_ok=true
for[index,value]inst_uptrend_bool_arr
ifvalue
ifarray.get(long_trend_arr,index)=="downtrend"
long_trends_ok:=false
ifarray.get(short_trend_arr,index)=="downtrend"
short_trends_ok:=false
for[index,value]inst_downtrend_bool_arr
ifvalue
ifarray.get(long_trend_arr,index)=="uptrend"
long_trends_ok:=false
ifarray.get(short_trend_arr,index)=="uptrend"
short_trends_ok:=false
can_be_entry_signal_arr=array.from(can_be_entry_signal_st_1,can_be_entry_signal_st_2,can_be_entry_signal_st_3,can_be_entry_signal_st_4)
long_trigger=false
short_trigger=false
for[index,value]inst_buy_signal_arr
ifarray.get(st_buy_signal_arr,index)andnotarray.get(last_st_buy_signal_arr,index)andarray.get(can_be_entry_signal_arr,index)
long_trigger:=true
ifarray.get(st_sell_signal_arr,index)andnotarray.get(last_st_sell_signal_arr,index)andarray.get(can_be_entry_signal_arr,index)
short_trigger:=true
check_entry_long()=>long_triggerandlong_trends_ok
check_entry_short()=>short_triggerandshort_trends_ok
//WADDAHATTARFILTER
wafilt_calc_macd(source,fast_length,fast_type,slow_length,slow_type)=>
fast_ma=switch_ma(fast_type,source,fast_length)
slow_ma=switch_ma(slow_type,source,slow_length)
fast_ma-slow_ma
wafilt_calc_BBUpper(ma_type,source,length,mult)=>
basis=switch_ma(ma_type,source,length)
dev=mult*ta.stdev(source,length)
basis+dev
wafilt_calc_BBLower(ma_type,source,length,mult)=>
basis=switch_ma(ma_type,source,length)
dev=mult*ta.stdev(source,length)
basis-dev

wa_entry_logic=input.string("Notspecified",options=["ExplosionoverDeadzone","ExplosionunderDeadzone","Notspecified"],title="Explosion/Deadzonerelation",group="WaddahAttarFilter",tooltip="ExplosionoverDeadzone:tradeswillonlyhappeniftheexplosionlineisoverthedeadzoneline;\n\nExplosionunderDeadzone:tradeswillonlyhappeniftheexplosionlineisunderthedeadzoneline;\n\nNotspecified:theopeningoftradeswillnotbebasedontherelationbetweentheexplosionanddeadzonelines.")
wafilt_only_trade_when_trend=input.string("Notspecified",options=["StrongTrends","SoftTrends","AllTrends","Notspecified"],title="Limittradesbasedontrends",group="WaddahAttarFilter",tooltip="StrongTrends:onlyenterlongiftheWAbariscoloredgreen(thereisanuptrendandthecurrentbarishigherthentheprevious);onlyentershortiftheWAbariscoloredred(thereisadowntrendandthecurrentbarishigherthentheprevious);\n\nSoftTrends:onlyenterlongiftheWAbariscoloredlime(thereisanuptrendandthecurrentbarislowerthentheprevious);onlyentershortiftheWAbariscoloredorange(thereisadowntrendandthecurrentbarislowerthentheprevious);\n\nAllTrends:onlyenterlongiftheWAbariscoloredgreenorlime(thereisanuptrend);onlyentershortiftheWAbariscoloredredororange(thereisadowntrend);\n\nNotspecified:thecoloroftheWAbar(trend)isnotrelevantwhenconsideringentries.")
wa_over_e_dz=input.string("Notspecified",options=["OverExplosionandDeadzone","Notspecified"],title="WAbarvalue",group="WaddahAttarFilter",tooltip="OverExplosionandDeadzone:onlyentertradeswhentheWAbarvalueisovertheExplosionandDeadzonelines;\n\nNotspecified:therelationbetweentheexplosion/deadzonelinestothevalueoftheWAbarwillnotbeusedtofilteropeningtrades.")
wafilt_sensitivity=input(150,title="Sensitivity",group="WaddahAttarFilter")
wafilt_fast_type=input.string("SMA",options=["SMA","EMA","WMA","VWMA","RMA/SMMA","SWMA","HMA"],title="FastMAType",inline="wa_1",group="WaddahAttarFilter")
wafilt_fast_length=input(10,title="FastMALength",inline="wa_1",group="WaddahAttarFilter")
wafilt_slow_type=input.string("SMA",options=["SMA","EMA","WMA","VWMA","RMA/SMMA","SWMA","HMA"],title="SlowMAType",inline="wa_2",group="WaddahAttarFilter")
wafilt_slow_length=input(20,title="SlowMALength",inline="wa_2",group="WaddahAttarFilter")
wafilt_channel_type=input.string("EMA",options=["SMA","EMA","WMA","VWMA","RMA/SMMA","SWMA","HMA"],title="ChannelMAType",group="WaddahAttarFilter")
wafilt_channel_length=input(20,title="BBChannelLength",inline="wa_3",group="WaddahAttarFilter")
wafilt_mult=input(2.0,title="BBStdevMultiplier",inline="wa_3",group="WaddahAttarFilter")
wafilt_dead_zone=nz(ta.rma(ta.tr(true),100))*3.7
wafilt_t1=(wafilt_calc_macd(close,wafilt_fast_length,wafilt_fast_type,wafilt_slow_length,wafilt_slow_type)-wafilt_calc_macd(close[1],wafilt_fast_length,wafilt_fast_type,wafilt_slow_length,wafilt_slow_type))*wafilt_sensitivity
wafilt_e1=(wafilt_calc_BBUpper(wafilt_channel_type,close,wafilt_channel_length,wafilt_mult)-wafilt_calc_BBLower(wafilt_channel_type,close,wafilt_channel_length,wafilt_mult))
wafilt_trend_up=(wafilt_t1>=0)?wafilt_t1:0
wafilt_trend_down=(wafilt_t1<0)?(-1*wafilt_t1):0
wafilt_trend_up_color=wafilt_trend_up<wafilt_trend_up[1]?color.lime:color.green
wafilt_trend_down_color=wafilt_trend_down<wafilt_trend_down[1]?color.orange:color.red
wafilt_trend_val=wafilt_trend_up!=0?wafilt_trend_up:wafilt_trend_down
wafilt_trend_color=wafilt_trend_up!=0?wafilt_trend_up_color:wafilt_trend_down_color
check_waddah_attar_long()=>
logic=wa_entry_logic=="ExplosionoverDeadzone"?wafilt_e1>wafilt_dead_zone:wa_entry_logic=="ExplosionunderDeadzone"?wafilt_e1<wafilt_dead_zone:true
trend=wafilt_only_trade_when_trend=="AllTrends"?wafilt_trend_color==color.limeorwafilt_trend_color==color.green:wafilt_only_trade_when_trend=="StrongTrends"?wafilt_trend_color==color.green:wafilt_only_trade_when_trend=="SoftTrends"?wafilt_trend_color==color.lime:true
wa_bar_value=wa_over_e_dz=="OverExplosionandDeadzone"?wafilt_trend_val>wafilt_e1andwafilt_trend_val>wafilt_dead_zone:true
logicandtrendandwa_bar_value
check_waddah_attar_short()=>
logic=wa_entry_logic=="ExplosionoverDeadzone"?wafilt_e1>wafilt_dead_zone:wa_entry_logic=="ExplosionunderDeadzone"?wafilt_e1<wafilt_dead_zone:true
trend=wafilt_only_trade_when_trend=="AllTrends"?wafilt_trend_color==color.redorwafilt_trend_color==color.orange:wafilt_only_trade_when_trend=="StrongTrends"?wafilt_trend_color==color.red:wafilt_only_trade_when_trend=="SoftTrends"?wafilt_trend_color==color.orange:true
wa_bar_value=wa_over_e_dz=="OverExplosionandDeadzone"?wafilt_trend_val>wafilt_e1andwafilt_trend_val>wafilt_dead_zone:true
logicandtrendandwa_bar_value
//TRENDFILTER
use_long_trend_filter_1=input.bool(false,title="Uselongtrendfilter1",group="TrendFilter",tooltip="OnlyenterlongifpriceisaboveLongMA.")
show_long_trend_filter_1=input.bool(false,title="Showlongtrendfilter1",group="TrendFilter",tooltip="PlottheselectedMAonthechart.")
long_ma_type_1=input.string("EMA",options=["SMA","EMA","WMA","VWMA","RMA/SMMA","SWMA","HMA"],title="TF1-MAType",inline="lTF1",group="TrendFilter")
long_ma_len_1=input.int(120,title="TF1-MALength",inline="lTF1",group="TrendFilter")
long_ma_source_1=input(close,title="TF1-MASource",inline="lTF1",group="TrendFilter")
floatlong_ma_tf_1=switch_ma(long_ma_type_1,long_ma_source_1,long_ma_len_1)
use_short_trend_filter_1=input.bool(false,title="Useshorttrendfilter1",group="TrendFilter",tooltip="OnlyentershortifpriceisunderShortMA.")
show_short_trend_filter_1=input.bool(false,title="Showshorttrendfilter1",group="TrendFilter",tooltip="PlottheselectedMAonthechart.")
short_ma_type_1=input.string("EMA",options=["SMA","EMA","WMA","VWMA","RMA/SMMA","SWMA","HMA"],title="TF2-MAType",inline="sTF1",group="TrendFilter")
short_ma_len_1=input.int(120,title="TF2-MALength",inline="sTF1",group="TrendFilter")
short_ma_source_1=input(close,title="TF2-MASource",inline="sTF1",group="TrendFilter")
floatshort_ma_tf_1=switch_ma(short_ma_type_1,short_ma_source_1,short_ma_len_1)
plot(long_ma_tf_1,color=color.blue,display=show_long_trend_filter_1?display.all:display.none,title="LongTrendFilter1")
plot(short_ma_tf_1,color=color.teal,display=show_short_trend_filter_1?display.all:display.none,title="ShortTrendFilter1")
check_trend_filter_long()=>
long_filter_1=use_long_trend_filter_1?close>long_ma_tf_1:true
long_filter_1
check_trend_filter_short()=>
short_filter_1=use_short_trend_filter_1?close<short_ma_tf_1:true
short_filter_1
//VOLUMEFILTER
use_volume_filter=input.bool(true,title="Onlyentertradeswherevolumeishigherthenthevolume-basedMA",group="VolumeFilter",tooltip="AsettypeofMAwillbecalculatedwiththevolumeassource,andsetlength")
vol_ma_type=input.string("RMA/SMMA",options=["SMA","EMA","WMA","VWMA","RMA/SMMA","SWMA","HMA"],title="Volume-basedMAType",group="VolumeFilter")
vol_ma_len=input.int(200,title="Volume-basedMALength",group="VolumeFilter")
vol_ma=switch_ma(vol_ma_type,volume,vol_ma_len)
check_volume_filter()=>
use_volume_filter?volume>vol_ma:true
//DATERANGESETTINGS
limit_dates=input.bool(false,title="LimitBetweenDates",group="DateRangeLimiter")
start_date=input.time(timestamp("Jan01202300:00:00"),title="StartDate",group="DateRangeLimiter")
end_date=input.time(timestamp("Jun24202300:00:00"),title="EndDate",group="DateRangeLimiter")
//SESSIONLIMITER
show_session_plots=input.bool(false,title="Showsessionplots",group="SessionLimiter",tooltip="Showcryptomarketsessionsonchart:Sidney(red),Tokyo(orange),London(yellow),NewYork(green)")
use_session_limit=input.bool(false,title="Usesessionlimiter",group="SessionLimiter",tooltip="Ifenabled,tradeswillonlyhappeninthetickedsessionsbelow.")
limit_session1=input.bool(false,title="Sidneysession",group="SessionLimiter",tooltip="Sessionbetween:15:00-00:00(EST)")
limit_session2=input.bool(false,title="Tokyosession",group="SessionLimiter",tooltip="Sessionbetween:19:00-04:00(EST)")
limit_session3=input.bool(false,title="Londonsession",group="SessionLimiter",tooltip="Sessionbetween:03:00-11:00(EST)")
limit_session4=input.bool(false,title="NewYorksession",group="SessionLimiter",tooltip="Sessionbetween:08:00-17:00(EST)")
session1=time(timeframe.period,"1500-0000:1234567","America/New_York")//SydneySession
session2=time(timeframe.period,"1900-0400:1234567","America/New_York")//TokyoSession
session3=time(timeframe.period,"0300-1100:1234567","America/New_York")//LondonSession
session4=time(timeframe.period,"0800-1700:1234567","America/New_York")//NewYorkSession
bgcolor(session1andshow_session_plots?color.new(color.red,60):na,title="SydneySession")
bgcolor(session2andshow_session_plots?color.new(color.orange,60):na,title="TokyoSession")
bgcolor(session3andshow_session_plots?color.new(color.yellow,60):na,title="LondonSession")
bgcolor(session4andshow_session_plots?color.new(color.green,60):na,title="NewYorkSession")
//TRADINGTIME
limit_trading_time=input.bool(true,title="LimitTradingTime",group="TradingTimeLimiter",tooltip="Tickthistogetherwiththeoptionsbelowtoenablelimitingbasedondayandtime.")
days_to_trade_on=input.string("123567",title="ValidTradingDaysGlobal",tooltip="IftheLimitTradingTimeison,tradeswillonlyhappenondaysthatarepresentinthisfield.IfanyofthenotglobalValidTradingDaysisused,thisfieldwillbeneglected.\n\nValuesrepresentdays:\nSunday(1),Monday(2),...,Friday(6),Saturday(7)\nTotradeonalldaysuse:123457",group="TradingTimeLimiter")
limit_day1=input.bool(false,title="",group="TradingTimeLimiter",inline="day1")
days_to_trade_on1=input.string("23456",title="(1)ValidTradingDays",inline="day1",tooltip="Valuesrepresentdays:\nSunday(1),Monday(2),...,Friday(6),Saturday(7)\n\nScriptwilltradeondaysthatarepresentinthisfield.Pleasemakesurethatthisfieldandalso(1)ValidTradingHoursBetweenischecked.",group="TradingTimeLimiter")
valid_hours1=input.bool(false,title="",inline="inline1",group="TradingTimeLimiter",tooltip="Hoursbetweenwhichthetradescanhappen.Thetimeisalwaysintheexchange'stimezone.")
hours_to_trade_on1=input.session("1800-2000",title="(1)ValidTradingHoursBetween",inline="inline1",group="TradingTimeLimiter")
limit_day2=input.bool(false,title="",group="TradingTimeLimiter",inline="day2")
days_to_trade_on2=input.string("1234567",title="(2)ValidTradingDays",inline="day2",tooltip="Valuesrepresentdays:\nSunday(1),Monday(2),...,Friday(6),Saturday(7)\n\nScriptwilltradeondaysthatarepresentinthisfield.Pleasemakesurethatthisfieldandalso(2)ValidTradingHoursBetweenischecked.",group="TradingTimeLimiter")
valid_hours2=input.bool(false,title="",inline="inline2",group="TradingTimeLimiter",tooltip="Hoursbetweenwhichthetradescanhappen.Thetimeisalwaysintheexchange'stimezone.")
hours_to_trade_on2=input.session("0930-1600",title="(2)ValidTradingHoursBetween",inline="inline2",group="TradingTimeLimiter")
limit_day3=input.bool(false,title="",group="TradingTimeLimiter",inline="day3")
days_to_trade_on3=input.string("1234567",title="(3)ValidTradingDays",inline="day3",tooltip="Valuesrepresentdays:\nSunday(1),Monday(2),...,Friday(6),Saturday(7)\n\nScriptwilltradeondaysthatarepresentinthisfield.Pleasemakesurethatthisfieldandalso(3)ValidTradingHoursBetweenischecked.",group="TradingTimeLimiter")
valid_hours3=input.bool(false,title="",inline="inline3",group="TradingTimeLimiter",tooltip="Hoursbetweenwhichthetradescanhappen.Thetimeisalwaysintheexchange'stimezone.")
hours_to_trade_on3=input.session("0930-1600",title="(3)ValidTradingHoursBetween",inline="inline3",group="TradingTimeLimiter")
//PineConnectorAutomation
use_pc_automation=input.bool(false,title="UsePineConnectorAutomation|PLEASEREADTOOLTIP-->",group="PineConnectorAutomation",tooltip="NOTE!InorderfortheconnectiontoMetaTradertowork,youwillneeddoperformprerequisitesteps,youcanfollowourfullguideatourwebsite,orrefertotheofficialPineConnectorDocumentation.\n\nTosetupPineConnectorAutomationontheTradingViewside,youwillneedtodothefollowing:\n\n1.FillouttheLicenseIDfieldwithyourPineConnectorLicenseID;\n\n2.FillouttheRisk(tradingvolume)withthedesiredvolumetobetradedineachtrade(themeaningofthisvaluedependsontheEAsettingsinMetatrader.Followthedetailedguideforadditionalinformation);\n\n3.Afterfillingoutthefields,youneedtoenablethe'UsePineConnectorAutomation'option(checktheboxinthestrategysettings);\n\n4.Checkifthecharthasupdatedandyoucanseetheappropriateordercommentsonyourchart;\n\n5.CreateanalertwiththestrategyselectedasCondition,andtheMessageas{{strategy.order.comment}}(shouldbetherebydefault);\n\n6.EnabletheWebhookURLintheNotificationssection,setitastheofficialPineConnectorwebhookaddressandenjoyyourconnectionwithMetaTrader.")
pc_licence_id=input.int(60123456789,title="LicenseID",maxval=9999999999999,group="PineConnectorAutomation")
pc_risk=input.float(1,title="Risk(tradingvolume)",group="PineConnectorAutomation")
pc_long_entry_alert=str.tostring(pc_licence_id)+',buy,'+syminfo.ticker+',risk='+str.tostring(pc_risk)+',comment="ATRGODStrategybyTradeSmart"'
pc_short_entry_alert=str.tostring(pc_licence_id)+',sell,'+syminfo.ticker+',risk='+str.tostring(pc_risk)+',comment="ATRGODStrategybyTradeSmart"'
pc_long_exit_alert=str.tostring(pc_licence_id)+',closelong,'+syminfo.ticker+',risk='+str.tostring(pc_risk)+',comment="ATRGODStrategybyTradeSmart"'
pc_short_exit_alert=str.tostring(pc_licence_id)+',closeshort,'+syminfo.ticker+',risk='+str.tostring(pc_risk)+',comment="ATRGODStrategybyTradeSmart"'
//LIMITERS
in_date()=>
time>start_dateandtime<end_date

check_valid_session()=>
s1=limit_session1?session1:na
s2=limit_session2?session2:na
s3=limit_session3?session3:na
s4=limit_session4?session4:na
use_session_limit?na(s1)andna(s2)andna(s3)andna(s4)?false:true:true
check_valid_time()=>
t=(limit_day1==falseandlimit_day2==falseandlimit_day3==false)?time(timeframe.period,'0000-0000:'+days_to_trade_on):na
t7=valid_hours1andlimit_day1==false?time(timeframe.period,hours_to_trade_on1+':'+days_to_trade_on):na
t8=valid_hours2andlimit_day2==false?time(timeframe.period,hours_to_trade_on2+':'+days_to_trade_on):na
t9=valid_hours3andlimit_day3==false?time(timeframe.period,hours_to_trade_on3+':'+days_to_trade_on):na
t1=valid_hours1andlimit_day1?time(timeframe.period,hours_to_trade_on1+':'+days_to_trade_on1):na
t2=valid_hours2andlimit_day2?time(timeframe.period,hours_to_trade_on2+':'+days_to_trade_on2):na
t3=valid_hours3andlimit_day3?time(timeframe.period,hours_to_trade_on3+':'+days_to_trade_on3):na
na(t)andna(t1)andna(t2)andna(t3)andna(t7)andna(t8)andna(t9)?false:true

check_filters_long()=>check_volume_filter()andcheck_waddah_attar_long()andcheck_valid_session()andcheck_atr_lim_long()andcheck_trend_filter_long()
check_filters_short()=>check_volume_filter()andcheck_waddah_attar_short()andcheck_valid_session()andcheck_atr_lim_short()andcheck_trend_filter_short()
checkLong()=>check_entry_long()andcheck_filters_long()
checkShort()=>check_entry_short()andcheck_filters_short()
should_long_limit_dates=limit_dates?(in_date()andcheckLong()):checkLong()
should_short_limit_dates=limit_dates?(in_date()andcheckShort()):checkShort()
should_long_limit_day_trades=limit_trading_time?(check_valid_time()andcheckLong()):checkLong()
should_short_limit_day_trades=limit_trading_time?(check_valid_time()andcheckShort()):checkShort()
long=should_long_limit_datesandshould_long_limit_day_tradesandallow_long
short=should_short_limit_datesandshould_short_limit_day_tradesandallow_short
//CALCULATEEXITPRICESANDSTOPLOSSES
long_exit_price=float(na)
long_stop_price=float(na)
short_exit_price=float(na)
short_stop_price=float(na)
long_exit_price:=(longandstrategy.position_size<=0)?b_atr_buy:long_exit_price[1]
long_stop_price:=(longandstrategy.position_size<=0)?b_atr_sell:long_stop_price[1]
short_exit_price:=(shortandstrategy.position_size>=0)?s_atr_buy:short_exit_price[1]
short_stop_price:=(shortandstrategy.position_size>=0)?s_atr_sell:short_stop_price[1]
plot(strategy.position_size>0andplot_sl_tp?long_exit_price:na,color=color.green,style=plot.style_linebr,linewidth=2,title="LongExitPrice")
plot(strategy.position_size>0andplot_sl_tp?long_stop_price:na,color=color.red,style=plot.style_linebr,linewidth=2,title="LongStopPrice")
plot(strategy.position_size<0andplot_sl_tp?short_exit_price:na,color=color.purple,style=plot.style_linebr,linewidth=2,title="ShortExitPrice")
plot(strategy.position_size<0andplot_sl_tp?short_stop_price:na,color=color.aqua,style=plot.style_linebr,linewidth=2,title="ShortStopPrice")
//QUANTITYCALCULATION
ourQty=switchorder_size_type
"CapitalPercentage"=>(strategy.initial_capital+strategy.netprofit)*0.01*order_size_value/close
"Cash"=>order_size_value/close
"Contract(s)"=>order_size_value
=>0
//TEST
//ENTER/EXITORDERS
checkForceExit(usage_trigger,exit_trigger,order_comment)=>
ifstrategy.position_size!=0andusage_trigger
ifexit_trigger
strategy.cancel_all()
ifuse_pc_automation
strategy.close_all(comment=strategy.position_size>0?pc_long_exit_alert:pc_short_exit_alert)
else
strategy.close_all(comment=order_comment,immediately=true)
plotshape(plot_signalsandstrategy.position_size==0?long:na,style=shape.labelup,location=location.belowbar,color=color.new(#046ff9,0),size=size.large,text='EntrySignal\nLong/Buy',textcolor=color.new(color.white,10))
plotshape(plot_signalsandstrategy.position_size==0?short:na,style=shape.labeldown,location=location.abovebar,color=color.new(#046ff9,0),size=size.large,text='EntrySignal\nShort/Sell',textcolor=color.new(color.white,10))
valid_values=true
if(na(nnatr)anduse_atr_based_sl)or(na(lowest_point_sl)anduse_low_high_based_sl)or(na(highest_point_sl)anduse_low_high_based_sl)
valid_values:=false
ifvalid_values
ifallow_long
iflongandstrategy.position_size==0
strategy.order("LongEntry",direction=strategy.long,qty=ourQty,oca_type=strategy.oca.none,comment=use_pc_automation?pc_long_entry_alert:na)
ifstrategy.position_size>0
strategy.cancel("LongEntry")
strategy.order("LongExit",direction=strategy.short,qty=strategy.position_size,limit=long_exit_price,oca_type=strategy.oca.reduce,oca_name="asd",comment=use_pc_automation?pc_long_exit_alert:na)
strategy.order("LongStop",direction=strategy.short,qty=strategy.position_size,stop=long_stop_price,oca_type=strategy.oca.reduce,oca_name="asd",comment=use_pc_automation?pc_long_exit_alert:na)
ifallow_short
ifshortandstrategy.position_size==0
strategy.order("ShortEntry",direction=strategy.short,qty=ourQty,oca_type=strategy.oca.none,comment=use_pc_automation?pc_short_entry_alert:na)
ifstrategy.position_size<0
strategy.cancel("ShortEntry")
strategy.order("ShortExit",direction=strategy.long,qty=-1*strategy.position_size,limit=short_exit_price,oca_type=strategy.oca.reduce,oca_name="asd",comment=use_pc_automation?pc_short_exit_alert:na)
strategy.order("ShortStop",direction=strategy.long,qty=-1*strategy.position_size,stop=short_stop_price,oca_type=strategy.oca.reduce,oca_name="asd",comment=use_pc_automation?pc_short_exit_alert:na)
checkForceExit(use_force_exit_exact_time_1,custom_session_1[1]andnotcustom_session_1,"CustomSessionForceExit1")
checkForceExit(use_force_exit_exact_time_2,custom_session_2[1]andnotcustom_session_2,"CustomSessionForceExit2")
checkForceExit(use_force_exit_exact_time_3,custom_session_3[1]andnotcustom_session_3,"CustomSessionForceExit3")
checkForceExit(use_force_exit_exact_time_4,custom_session_4[1]andnotcustom_session_4,"CustomSessionForceExit4")
Expand (529 lines)
