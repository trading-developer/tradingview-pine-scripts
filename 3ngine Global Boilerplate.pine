Script Name: 3ngine Global Boilerplate
Author: jordanfray
Description: ABOUT THE BOILERPLATE
This strategy is designed to bring consistency to your strategies. It includes a  macro EMA filter  for filtering out countertrend trades,
an  ADX filter  to help filter out chop, a  session filter  to filter out trades outside of desired timeframe,  alert messages  setup for automation,
 laddering in/out  of trades (up to 6 rungs), ...
PineScript code:

Pine Script™ strategy
3ngine Global Boilerplate
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  jordanfray
//@version=5
strategy(title="Boilerplate",  overlay=true,  max_bars_back=5000,  commission_type=strategy.commission.percent,  close_entries_rule="ANY",  commission_value=0.035,  backtest_fill_limits_assumption=0,  calc_on_order_fills=true,  process_orders_on_close=true)
import  jordanfray/threengine_global_automation_library/10  as  bot  //  This  is  a  required  library
//    A  B  O  U  T      T  H  E      B  O  I  L  E  R  P  L  A  T  E
//    This  strategy  is  desisnged  to  bring  consistency  to  your  strategies.  It  includes  a  macro  EMA  filter  for  filtering  out  countertrend  trades,
//    an  ADX  filter  to  help  filter  out  chop,  a  session  filter  to  filter  out  trades  outside  of  desired  timeframe,  alert  messages  setup  for  automation,
//    laddering  in/out  of  trades  (up  to  6  rungs),  trailing  take  profit,  and  beautiful  visuals  for  each  entry.  There  are  comments  throughout  the
//    strategy  that  provide  further  instructions  on  how  to  use  the  boilerplate  strategy.  This  strategy  uses  more_margin_trade_automation_library
//    throughout  and  must  be  included  at  the  top  of  the  strategy  using  import  [path  to  latest  version]  as  bot.  This  allows  you  to  use  dot  notation
//    to  access  functions  in  the  library  -  EX:  bot.orderCurrentlyExists().
//    H  O  W      T  O      U  S  E      T  H  I  S      S  T  R  A  T  E  G  Y
//    1      Add  your  inputs
//    2      Add  your  calculations
//    3      Add  your  entry  criteria
//            3.1          Add  your  criteria  to  strategySpecificLongConditions  (this  gets  combined  with  boilerplate  conditions  in  longConditionsMet)
//            3.2          Add  your  criteria  to  strategySpecificShortConditions  (this  gets  combined  with  boilerplate  conditions  in  shortConditionsMet)
//            3.4          Set  your  desired  entry  price  (calculated  on  every  bar  unless  stored  as  a  static  variable)  to  longEntryPrice  and  shortEntryPrice.
//                            Default  is  the  bar  "close".  This  will  be  the  FIRST  ladder  if  using  laddering  capabilities.  If  you  pick  1  for  "Ladder  In  Rungs"
//                            this  will  be  the  only  entry.
//    4      Plot  anything  you  want  to  overlay  on  the  chart  in  addition  to  the  boilerplate  plots  and  labels.  Included  in  boilerplate:
//            Average  entry  price  (blue),  stop  loss  (red),  trailing  stop  (red/green),  profit  target  (green).
//  Indenting  Classs  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
indent  =  "    "
//  Colors  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
oceanBlue                      =  color.new(#0C6090,0)
skyBlue                          =  color.new(#00A5FF,0)
green                              =  color.new(#2DBD85,0)
nevisShallows              =  color.new(#00FFD4,0)
red                                  =  color.new(#E02A4A,0)
lightBlue                      =  color.new(#00A5FF,80)
lightGreen                    =  color.new(#2DBD85,80)
lightRed                        =  color.new(#E02A4A,80)
lightYellow                  =  color.new(#FFF900,80)
white                              =  color.new(#ffffff,0)
black                              =  color.new(#191B20,0)
gray                                =  color.new(#AAAAAA,0)
lightGray                      =  color.new(#AAAAAA,90)
transparent                  =  color.new(#000000,100)
//  Input  Groups  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
groupOneTitle              =  "Strategy  Settings  "
groupTwoTitle              =  "Filters"
groupThreeTitle          =  "Entry  Settings"
groupFourTitle            =  "Exit  Settings"
//  Tooltips  -  This  is  where  all  of  the  tooltips  are  defined  to  keep  the  code  clean  below  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -
startTip              =  "Select  where  you  want  to  start  laddering  in  from."
stopLossTip      =  "Select  where  you  want  your  stop  loss  to  be."
ladderInToolTip          =  "Enable  this  to  use  the  laddering  settings  below."
cancelEntryToolTip    =  "When  the  position  reaches  a  certain  percent  profit,  you  can  cancel  any  unfiller  orders."
ladderInStepsTip                                =  "When  the  criteria  for  entering  a  strategy  is  met,  the  order  can  placed  using  a  single  order  or  split  across  multiple  ladder  orders.  Select  1  to  place  a  single  order."
ladderInStepSpacingTip                    =  "The  percent  distance  between  the  orders.  Ex:  If  the  strategy  produces  an  entry  signal  to  buy  at  $20,000  and  the  strategy  is  configured  to  ladder  into  the  position  across  4  steps,  setting  the  Ladder  In  Step  Spacing  to  1%  would  split  the  entry  into  4  orders  at  $20,000,  $19,800,  $19,600,  and  $19,400."
ladderOutStepsTip                              =  "When  the  criteria  for  exiting  a  strategy  is  met,  the  order  can  placed  using  a  single  order  or  split  across  multiple  ladder  orders.  Select  1  toplaceasingleorder."
ladderOutStepSpacingTip="Thepercentdistancebetweentheorders.Ex:Ifthestrategyproducesanexitsignaltosellat$21,000andthestrategyisconfiguredtoladderoutofthepositionacross2steps,settingtheLadderOutStepSpacingto1%wouldsplittheentryinto2ordersat$21,000,$21,210."
//StrategySpecificInputs------------------------------------------------------------
start=input.price(defval=0,title="Startingladeringinat",confirm=true,group=groupOneTitle,tooltip=startTip)
stop=input.price(defval=0,title="setstoplossat",confirm=true,group=groupOneTitle,tooltip=stopLossTip)//Thisstrategyusesapricebasedstoploss.Youcanuseapercentbasedstoplossaspartoftheboilerplatesettingsbelow.
cancelUnfilledOrdersAfter=input.float(defval=10,title="CancelUnfillerOrdersAfter",confirm=false,group=groupOneTitle,tooltip=cancelEntryToolTip)/100//Thisstrategyusesapricebasedstoploss.Youcanuseapercentbasedstoplossaspartoftheboilerplatesettingsbelow.
//BoilerplateInputs--------------------------------------------------------------
showStrategyStatusBox=input.bool(defval=true,title="ShowStrategyStatusBox",group=groupOneTitle)
enableMacroEmaFilter=input.bool(defval=false,title="UseEMAFilter",group=groupTwoTitle)
macroEmaTimeframe=input.timeframe(defval="240",title=indent+"Timeframe",group=groupTwoTitle)
macroEmaLength=input.int(defval=100,minval=1,step=10,title=indent+"Length",group=groupTwoTitle)
macroEmaType=input.string(defval="EMA",options=["EMA","SMA","RMA","WMA"],title=indent+"Type",group=groupTwoTitle)
macroEmaSource=input.source(defval=close,title=indent+"Source",group=groupTwoTitle)
enableAdxFilter=input.bool(defval=false,title="UseADXFilter",group=groupTwoTitle)
diLength=input.int(defval=14,title=indent+"DILength",group=groupTwoTitle)
adxSmoothing=input.int(defval=14,title=indent+"ADXSmoothing",group=groupTwoTitle)
adxMinumum=input.int(defval=30,title=indent+"ADXMustBeBetween"+"      ",inline="adxGroup",group=groupTwoTitle)
adxMaximum=input.int(defval=100,title="",inline="adxGroup",group=groupTwoTitle)
useTimeFilter=input.bool(defval=false,title="UseTimeSessionFilter",group=groupTwoTitle)
timeSession=input.session(defval="0800-1700",title=indent+"OnlyTakeTradesBetween",group=groupTwoTitle)
startTime=input.time(defval=timestamp("01Jan202200:00"),confirm=true,title=indent+"StrategyStart",group=groupTwoTitle)//Remove"confirm=true"fromthislineifyoudon'twanttopickatimewhenaddingthestrategytothechart
ladderInSteps=input.int(defval=2,minval=1,maxval=6,step=1,title="LadderInRungs",group=groupThreeTitle,tooltip=ladderInStepsTip)
ladderInStepSpacingPercent=input.float(defval=2,title="LadderInStepSpacing(%)",step=.25,group=groupThreeTitle,tooltip=ladderInStepSpacingTip)
ladderOutSteps=input.int(defval=2,minval=1,maxval=6,step=1,title="LadderOutRungs",group=groupFourTitle,tooltip=ladderOutStepsTip)
ladderOutStepSpacingPercent=input.float(defval=2,title="LadderOutStepSpacing(%)",step=.25,group=groupFourTitle,tooltip=ladderOutStepSpacingTip)/100
takeProfitVal=input.float(defval=20,title="TakeProfit(%)",step=0.25,group=groupFourTitle)/100
stopLossVal=input.float(defval=10,title="StopLoss(%)",step=0.25,group=groupFourTitle)/100//Thissamplestrategydoesnotuseapercentbasedstoploss.Insteaditusesapricebasedstoplossabove.
startTrailingAfter=input.float(defval=10,title="StartTrailingAfter(%)",step=0.25,group=groupFourTitle)/100
trailBehind=input.float(defval=10,title="TrailBehind(%)",step=0.25,group=groupFourTitle)/100
//BoilerplateCalculations-----------------------------------------------------
macroEma=request.security(syminfo.tickerid,macroEmaTimeframe,bot.taGetEma(macroEmaType,macroEmaSource,macroEmaLength)[barstate.isrealtime?1:0])
closeAboveEmaMacroFilter=enableMacroEmaFilter?close>macroEma:true
closeBelowEmaMacroFilter=enableMacroEmaFilter?close<macroEma:true
adx=bot.taGetAdx(diLength,adxSmoothing)
adxInRange=enableAdxFilter?adx>=adxMinumumandadx<=adxMaximum:true
withTime=useTimeFilter?bot.isBetweenTwoTimes(timeSession,"GMT-6"):true
boolbeyondStartTime=time>startTime
currentlyInLongPosition=strategy.position_size>0
currentlyInShortPosition=strategy.position_size<0
currentlyInAPosition=strategy.position_size!=0
StrategyEntryPrice=start//Setthistothepricethestrategyshouldstartladderinginat
[ladderStartPrice,ladderStartedOnBar]=bot.getLockedLadderStart(StrategyEntryPrice)
barsSinceEntry=currentlyInAPosition?bar_index-ladderStartedOnBar+1:1
avgPrice=bot.getAveragePriceOfFilledLadders()
//BoilerplateEntryCriteria
boilerplateLongConditionsMet=beyondStartTimeandcloseAboveEmaMacroFilterandadxInRangeandwithTimeandnotcurrentlyInShortPosition
boilerplateShortConditionsMet=beyondStartTimeandcloseAboveEmaMacroFilterandadxInRangeandwithTimeandnotcurrentlyInLongPosition
//StrategySpecificCalculations-------------------------------------------------------------
varstringside=start>stop?"buy":"sell"
//StrategySpecificEntryCriteria
alreadyClosedTrades=strategy.closedtrades>0
strategySpecificLongConditions=side=="buy"andnotalreadyClosedTrades
strategySpecificShortConditions=side=="sell"andnotalreadyClosedTrades
//CombinedEntryConditionsArrayConstruction
longConditionsMet=strategySpecificLongConditionsandboilerplateLongConditionsMet
shortConditionsMet=strategySpecificShortConditionsandboilerplateShortConditionsMet
longLadder1Criteria=notbot.orderCurrentlyExists("Long-1")andstrategy.opentrades==0andlongConditionsMet
longLadder2Criteria=notbot.orderCurrentlyExists("Long-2")andstrategy.opentrades==1andlongConditionsMet
longLadder3Criteria=notbot.orderCurrentlyExists("Long-3")andstrategy.opentrades==2andlongConditionsMet
longLadder4Criteria=notbot.orderCurrentlyExists("Long-4")andstrategy.opentrades==3andlongConditionsMet
longLadder5Criteria=notbot.orderCurrentlyExists("Long-5")andstrategy.opentrades==4andlongConditionsMet
longLadder6Criteria=notbot.orderCurrentlyExists("Long-6")andstrategy.opentrades==5andlongConditionsMet
bool[]longLadderInCriterias=array.from(longLadder1Criteria,longLadder2Criteria,longLadder3Criteria,longLadder4Criteria,longLadder5Criteria,longLadder6Criteria)
shortLadder1Criteria=notbot.orderCurrentlyExists("Short-1")andstrategy.opentrades==0andshortConditionsMet
shortLadder2Criteria=notbot.orderCurrentlyExists("Short-2")andstrategy.opentrades==1andshortConditionsMet
shortLadder3Criteria=notbot.orderCurrentlyExists("Short-3")andstrategy.opentrades==2andshortConditionsMet
shortLadder4Criteria=notbot.orderCurrentlyExists("Short-4")andstrategy.opentrades==3andshortConditionsMet
shortLadder5Criteria=notbot.orderCurrentlyExists("Short-5")andstrategy.opentrades==4andshortConditionsMet
shortLadder6Criteria=notbot.orderCurrentlyExists("Short-6")andstrategy.opentrades==5andshortConditionsMet
bool[]shortLadderInCriterias=array.from(shortLadder1Criteria,shortLadder2Criteria,shortLadder3Criteria,shortLadder4Criteria,shortLadder5Criteria,shortLadder6Criteria)
//StopCriteria-"When"orderswillexitduetohittingstoplossortrailingstop------------------------------------
longRunUp=ta.highest(high,bar_index==0?5000:barsSinceEntry)
longTrailingTrigger=avgPrice+(avgPrice*startTrailingAfter)
//longStopLoss=currentlyInLongPositionandlongRunUp>longTrailingTrigger?longRunUp-(longRunUp*trailBehind):strategy.position_avg_price*(1.0-stopLossVal)//Usethisforapercentbasedstoploss
longStopLoss=currentlyInLongPositionandlongRunUp>longTrailingTrigger?longRunUp-(longRunUp*trailBehind):stop
shortRunDown=ta.lowest(low,bar_index==0?5000:barsSinceEntry)
shortTrailingTrigger=avgPrice-(avgPrice*startTrailingAfter)
//shortStopLoss=currentlyInShortPositionandshortRunDown<shortTrailingTrigger?shortRunDown+(shortRunDown*trailBehind):strategy.position_avg_price*(1+stopLossVal)//Usethisforapercentbasedstoploss
shortStopLoss=currentlyInShortPositionandshortRunDown<shortTrailingTrigger?shortRunDown+(shortRunDown*trailBehind):stop//Usethisforapricebasedstoploss
//TakeProfit-Thepointinwhichthefirstladderentrywilltakeprofitbasedonaverageentryprice--------------------------
floatlongProfitTarget=avgPrice*(1+takeProfitVal)
floatshortProfitTarget=avgPrice*(1-takeProfitVal)
takeProfitConditions=strategy.openprofit>0
//CriteriaforCancelingunfilledorders
cancelUnfilledLongEntries=false//close>strategy.position_avg_price+(strategy.position_avg_price*cancelUnfilledOrdersAfter)
cancelUnfilledShortEntries=false//close<strategy.position_avg_price-(strategy.position_avg_price*cancelUnfilledOrdersAfter)
//Orders--------------------------------------------------------------------------
[longEntryPrices,longEntryContractCounts,longEntryOrderNames]=bot.getLadderInSteps(side="buy",amount="10000",ladderRungs=ladderInSteps,ladderStart=ladderStartPrice,ladderStop=na,stepSpacingPercent=ladderInStepSpacingPercent)
[shortEntryPrices,shortEntryContractCounts,shortEntryOrderNames]=bot.getLadderInSteps(side="sell",amount="10000",ladderRungs=ladderInSteps,ladderStart=ladderStartPrice,ladderStop=na,stepSpacingPercent=ladderInStepSpacingPercent)
[longExitPrices,longExitQuantities,longExitOrderNames]=bot.getLadderOutSteps("sell",longProfitTarget,ladderOutSteps,ladderOutStepSpacingPercent)
[shortExitPrices,shortExitQuantities,shortExitOrderNames]=bot.getLadderOutSteps("buy",shortProfitTarget,ladderOutSteps,ladderOutStepSpacingPercent)
//LongLadders
fori=0toladderInSteps-1by1
ladderPrice=array.get(longEntryPrices,i)
ladderQty=array.get(longEntryContractCounts,i)
ladderID=array.get(longEntryOrderNames,i)
ladderInCriteria=array.get(longLadderInCriterias,i)
ladderAlertMessage=bot.getStrategyAlertMessage("MM1",bot.getChartSymbol(),bot.getBaseCurrency(),"buy",ladderPrice,ladderPrice,str.tostring(ladderQty),longProfitTarget,longProfitTarget,longStopLoss,longStopLoss,false)

ifladderInCriteria
strategy.order(id=ladderID,direction=strategy.long,limit=ladderPrice,qty=ladderQty,alert_message=ladderAlertMessage)

ifcancelUnfilledLongEntries
strategy.cancel(id=ladderID)

ifcurrentlyInLongPosition
forx=0toladderOutSteps-1by1
ladderOutID=ladderID+"|Exit"+str.tostring(x+1)
ladderOutPrice=array.get(longExitPrices,x)
ladderOutQty=ladderQty/ladderOutSteps

ifx==ladderOutSteps-1
strategy.exit(id=ladderOutID,from_entry=ladderID,qty_percent=100,limit=ladderOutPrice,stop=longStopLoss)
else
strategy.exit(id=ladderOutID,from_entry=ladderID,qty=ladderOutQty,limit=ladderOutPrice,stop=longStopLoss)
//ShortLadders
fori=0toladderInSteps-1by1
ladderPrice=array.get(shortEntryPrices,i)
ladderQty=array.get(shortEntryContractCounts,i)
ladderID=array.get(shortEntryOrderNames,i)
ladderInCriteria=array.get(shortLadderInCriterias,i)
ladderAlertMessage=bot.getStrategyAlertMessage("MM1",bot.getChartSymbol(),bot.getBaseCurrency(),"sell",ladderPrice,ladderPrice,str.tostring(ladderQty),longProfitTarget,longProfitTarget,longStopLoss,longStopLoss,false)

ifladderInCriteria
strategy.order(id=ladderID,direction=strategy.short,limit=ladderPrice,qty=ladderQty,alert_message=ladderAlertMessage)

ifcancelUnfilledShortEntries
strategy.cancel(id=ladderID)

ifcurrentlyInShortPosition
forx=0toladderOutSteps-1by1
ladderOutID=ladderID+"|Exit"+str.tostring(x+1)
ladderOutPrice=array.get(shortExitPrices,x)
ladderOutQty=ladderQty/ladderOutSteps

ifx==ladderOutSteps-1
strategy.exit(id=ladderOutID,from_entry=ladderID,qty_percent=100,limit=ladderOutPrice,stop=shortStopLoss)
else
strategy.exit(id=ladderOutID,from_entry=ladderID,qty=ladderOutQty,limit=ladderOutPrice,stop=shortStopLoss)
//StrategyPlots,Lines,andLabels
startLine=plot(series=start,title="LadderStartLine",color=currentlyInLongPosition?transparent:green,linewidth=1,editable=false)
stopLinep=plot(series=stop,title="StopLossLine",color=currentlyInLongPosition?transparent:red,linewidth=1,editable=false)
varlinestartTimeLine=na
varlinestopTimeLine=na
line.delete(startTimeLine)
line.delete(stopTimeLine)
stopTime=strategy.closedtrades.exit_time(0)
stopBarIndex=strategy.closedtrades.exit_bar_index(0)
startTimeLine:=line.new(x1=startTime,y1=0,x2=startTime,y2=10000000,color=gray,width=1,xloc=xloc.bar_time)
//BoilerplatePlots,Lines,andLabels
adxPlot=plot(adx,title="ADX",editable=false,color=nevisShallows)
macroEmaPlot=plot(enableMacroEmaFilter?macroEma:na,title="EMAMacroFilter",linewidth=2,color=white,editable=false)
floatladderIn1Price=currentlyInLongPosition?array.get(longEntryPrices,0):array.get(shortEntryPrices,0)
floatladderIn2Price=currentlyInLongPosition?array.get(longEntryPrices,1):array.get(shortEntryPrices,1)
floatladderIn3Price=currentlyInLongPosition?array.get(longEntryPrices,2):array.get(shortEntryPrices,2)
floatladderIn4Price=currentlyInLongPosition?array.get(longEntryPrices,3):array.get(shortEntryPrices,3)
floatladderIn5Price=currentlyInLongPosition?array.get(longEntryPrices,4):array.get(shortEntryPrices,4)
floatladderIn6Price=currentlyInLongPosition?array.get(longEntryPrices,5):array.get(shortEntryPrices,5)
ladderInLineColor=currentlyInAPosition?oceanBlue:transparent
ladderIn1PriceLine=plot(series=ladderIn1Price,style=plot.style_stepline,color=ladderInLineColor,linewidth=1,editable=false)
ladderIn2PriceLine=plot(series=ladderIn2Price,style=plot.style_stepline,color=ladderInLineColor,linewidth=1,editable=false)
ladderIn3PriceLine=plot(series=ladderIn3Price,style=plot.style_stepline,color=ladderInLineColor,linewidth=1,editable=false)
ladderIn4PriceLine=plot(series=ladderIn4Price,style=plot.style_stepline,color=ladderInLineColor,linewidth=1,editable=false)
ladderIn5PriceLine=plot(series=ladderIn5Price,style=plot.style_stepline,color=ladderInLineColor,linewidth=1,editable=false)
ladderIn6PriceLine=plot(series=ladderIn6Price,style=plot.style_stepline,color=ladderInLineColor,linewidth=1,editable=false)
floatladderOut1Price=currentlyInLongPosition?array.get(longExitPrices,0):array.get(shortExitPrices,0)
floatladderOut2Price=currentlyInLongPosition?array.get(longExitPrices,1):array.get(shortExitPrices,1)
floatladderOut3Price=currentlyInLongPosition?array.get(longExitPrices,2):array.get(shortExitPrices,2)
floatladderOut4Price=currentlyInLongPosition?array.get(longExitPrices,3):array.get(shortExitPrices,3)
floatladderOut5Price=currentlyInLongPosition?array.get(longExitPrices,4):array.get(shortExitPrices,4)
floatladderOut6Price=currentlyInLongPosition?array.get(longExitPrices,5):array.get(shortExitPrices,5)
ladderOutLineColor=currentlyInAPosition?green:transparent
ladderOut1PriceLine=plot(series=ladderOut1Price,style=plot.style_stepline_diamond,color=ladderOutLineColor,linewidth=1,editable=false)
ladderOut2PriceLine=plot(series=ladderOut2Price,style=plot.style_stepline_diamond,color=ladderOutLineColor,linewidth=1,editable=false)
ladderOut3PriceLine=plot(series=ladderOut3Price,style=plot.style_stepline_diamond,color=ladderOutLineColor,linewidth=1,editable=false)
ladderOut4PriceLine=plot(series=ladderOut4Price,style=plot.style_stepline_diamond,color=ladderOutLineColor,linewidth=1,editable=false)
ladderOut5PriceLine=plot(series=ladderOut5Price,style=plot.style_stepline_diamond,color=ladderOutLineColor,linewidth=1,editable=false)
ladderOut6PriceLine=plot(series=ladderOut6Price,style=plot.style_stepline_diamond,color=ladderOutLineColor,linewidth=1,editable=false)
averageEntryLine=plot(series=avgPrice,title="AverageEntryPrice",style=plot.style_stepline_diamond,linewidth=1,color=currentlyInAPosition?skyBlue:transparent,editable=false)
longTrailingStopLine=plot(longStopLoss,title="LongTrailingStop",style=plot.style_stepline_diamond,editable=false,linewidth=1,color=currentlyInLongPosition?longStopLoss>strategy.position_avg_price?green:red:transparent)
shortTrailingStopLine=plot(shortStopLoss,title="ShortTrailingStop",style=plot.style_stepline_diamond,editable=false,linewidth=1,color=currentlyInShortPosition?shortStopLoss<strategy.position_avg_price?green:red:transparent)
//shortRunDownLine=plot(shortRunDown,style=plot.style_stepline,editable=false,linewidth=2,color=currentlyInShortPosition?green:transparent)
//longRunUpLine=plot(longRunUp,style=plot.style_stepline,editable=false,linewidth=2,color=currentlyInLongPosition?green:transparent)
//StrategyDashboardPanel--------------------------------------------------------------------------
long1LadderFilled=bot.orderCurrentlyExists("Long-1")
long2LadderFilled=bot.orderCurrentlyExists("Long-2")
long3LadderFilled=bot.orderCurrentlyExists("Long-3")
long4LadderFilled=bot.orderCurrentlyExists("Long-4")
long5LadderFilled=bot.orderCurrentlyExists("Long-5")
long6LadderFilled=bot.orderCurrentlyExists("Long-6")
short1LadderFilled=bot.orderCurrentlyExists("Short-1")
short2LadderFilled=bot.orderCurrentlyExists("Short-2")
short3LadderFilled=bot.orderCurrentlyExists("Short-3")
short4LadderFilled=bot.orderCurrentlyExists("Short-4")
short5LadderFilled=bot.orderCurrentlyExists("Short-5")
short6LadderFilled=bot.orderCurrentlyExists("Short-6")
longTP1Hit=bot.orderAlreadyClosedSince("Long-1|Exit1",barsSinceEntry)
longTP2Hit=bot.orderAlreadyClosedSince("Long-1|Exit2",barsSinceEntry)
longTP3Hit=bot.orderAlreadyClosedSince("Long-1|Exit3",barsSinceEntry)
longTP4Hit=bot.orderAlreadyClosedSince("Long-1|Exit4",barsSinceEntry)
longTP5Hit=bot.orderAlreadyClosedSince("Long-1|Exit5",barsSinceEntry)
longTP6Hit=bot.orderAlreadyClosedSince("Long-1|Exit6",barsSinceEntry)
shortTP1Hit=bot.orderAlreadyClosedSince("Short-1|Exit1",barsSinceEntry)
shortTP2Hit=bot.orderAlreadyClosedSince("Short-1|Exit2",barsSinceEntry)
shortTP3Hit=bot.orderAlreadyClosedSince("Short-1|Exit3",barsSinceEntry)
shortTP4Hit=bot.orderAlreadyClosedSince("Short-1|Exit4",barsSinceEntry)
shortTP5Hit=bot.orderAlreadyClosedSince("Short-1|Exit5",barsSinceEntry)
shortTP6Hit=bot.orderAlreadyClosedSince("Short-1|Exit6",barsSinceEntry)
ifshowStrategyStatusBoxandlongConditionsMetorshortConditionsMet
//GlobalDashboardSettings
varstringcheckMark=" ✓"
varstringfontSize=size.normal
cellBgColor=lightGray
varfloatquantityOfAllFilledOrders=0
vartablepanel=table.new(position=position.bottom_right,columns=3,rows=100,bgcolor=cellBgColor,border_color=lightGray,border_width=1)
rowCount=0

table.cell(panel,0,rowCount,text=" "+"LadderIn",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text="Price",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text="Contracts"+" ",text_color=black,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1

//LongLadder1
ifcurrentlyInLongPositionandladderInSteps>=1
intladderArrayPosition=0
stringentryID=long1LadderFilled?str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(longEntryContractCounts,ladderArrayPosition))
color=long1LadderFilled?green:black

table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1

//LongLadder2
ifcurrentlyInLongPositionandladderInSteps>=2
intladderArrayPosition=1
stringentryID=long2LadderFilled?str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(longEntryContractCounts,ladderArrayPosition))
color=long2LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1

//LongLadder3
ifcurrentlyInLongPositionandladderInSteps>=3
intladderArrayPosition=2
stringentryID=long3LadderFilled?str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(longEntryContractCounts,ladderArrayPosition))
color=long3LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1
//LongLadder4
ifcurrentlyInLongPositionandladderInSteps>=4
intladderArrayPosition=3
stringentryID=long4LadderFilled?str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(longEntryContractCounts,ladderArrayPosition))
color=long4LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1
//LongLadder5
ifcurrentlyInLongPositionandladderInSteps>=5
intladderArrayPosition=4
stringentryID=long5LadderFilled?str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(longEntryContractCounts,ladderArrayPosition))
color=long5LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1
//LongLadder6
ifcurrentlyInLongPositionandladderInSteps>=6
intladderArrayPosition=5
stringentryID=long6LadderFilled?str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(longEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(longEntryContractCounts,ladderArrayPosition))
color=long6LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1

//ShortLadder1
ifcurrentlyInShortPositionandladderInSteps>=1
intladderArrayPosition=0
stringentryID=short1LadderFilled?str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(shortEntryContractCounts,ladderArrayPosition))

table.cell(panel,0,rowCount,text=" "+entryID,text_color=short1LadderFilled?green:black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=short1LadderFilled?green:black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=short1LadderFilled?green:black,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1

//ShortLadder2
ifcurrentlyInShortPositionandladderInSteps>=2
intladderArrayPosition=1
stringentryID=short2LadderFilled?str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(shortEntryContractCounts,ladderArrayPosition))
color=short2LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1

//ShortLadder3
ifcurrentlyInShortPositionandladderInSteps>=3
intladderArrayPosition=2
stringentryID=short3LadderFilled?str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(shortEntryContractCounts,ladderArrayPosition))
color=short3LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1
//ShortLadder4
ifcurrentlyInShortPositionandladderInSteps>=4
intladderArrayPosition=3
stringentryID=short4LadderFilled?str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(shortEntryContractCounts,ladderArrayPosition))
color=short4LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1
//ShortLadder5
ifcurrentlyInShortPositionandladderInSteps>=5
intladderArrayPosition=4
stringentryID=short5LadderFilled?str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(shortEntryContractCounts,ladderArrayPosition))
color=short5LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1
//ShortLadder6
ifcurrentlyInShortPositionandladderInSteps>=6
intladderArrayPosition=5
stringentryID=short6LadderFilled?str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))+checkMark:str.tostring(array.get(shortEntryOrderNames,ladderArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortEntryPrices,ladderArrayPosition))
stringquantity=str.format("{0,number,#.#####}",array.get(shortEntryContractCounts,ladderArrayPosition))
color=short6LadderFilled?green:black
table.cell(panel,0,rowCount,text=" "+entryID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

quantityOfAllFilledOrders+=array.get(longEntryContractCounts,ladderArrayPosition)
rowCount+=1

//AverageEntryPrice
ifcurrentlyInAPosition

table.cell(panel,0,rowCount,text=" "+"",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=size.tiny)
table.cell(panel,1,rowCount,text="",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=size.tiny)
table.cell(panel,2,rowCount,text=" ",text_color=black,text_halign=text.align_right,bgcolor=cellBgColor,text_size=size.tiny)

rowCount+=1

stringavgPriceString=str.format("{0,number,currency}",strategy.position_avg_price)
table.cell(panel,0,rowCount,text=" "+"AvgPrice",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text="",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=avgPriceString+" ",text_color=black,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

rowCount+=1

//TotalContracts
//ifcurrentlyInAPosition
//stringtotalContracts=str.format("{0,number,#.#####}",quantityOfAllFilledOrders)

//table.cell(panel,0,rowCount,text=" "+"TotalContracts",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
//table.cell(panel,1,rowCount,text="",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
//table.cell(panel,2,rowCount,text=strategy.open+" ",text_color=black,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

//rowCount+=1

ifcurrentlyInAPosition
table.cell(panel,0,rowCount,text=" "+"",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=size.tiny)
table.cell(panel,1,rowCount,text="",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=size.tiny)
table.cell(panel,2,rowCount,text=" ",text_color=black,text_halign=text.align_right,bgcolor=cellBgColor,text_size=size.tiny)

rowCount+=1

table.cell(panel,0,rowCount,text=" "+"LadderOut",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text="Price",text_color=black,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text="%ofOrder"+" ",text_color=black,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)

rowCount+=1

//LongLadderOut1
ifcurrentlyInLongPositionandladderOutSteps>=1
intladderOutArrayPosition=0
stringexitID=str.tostring(array.get(longExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(longExitQuantities,ladderOutArrayPosition)/100)
color=longTP1Hit?green:black

table.cell(panel,0,rowCount,text=longTP1Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1

//LongLadderOut2
ifcurrentlyInLongPositionandladderOutSteps>=2
intladderOutArrayPosition=1
stringexitID=str.tostring(array.get(longExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(longExitQuantities,ladderOutArrayPosition)/100)
color=longTP2Hit?green:black

table.cell(panel,0,rowCount,text=longTP2Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1

//LongLadderOut3
ifcurrentlyInLongPositionandladderOutSteps>=3
intladderOutArrayPosition=2
stringexitID=str.tostring(array.get(longExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(longExitQuantities,ladderOutArrayPosition)/100)
color=longTP3Hit?green:black

table.cell(panel,0,rowCount,text=longTP3Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1
//LongLadderOut4
ifcurrentlyInLongPositionandladderOutSteps>=4
intladderOutArrayPosition=3
stringexitID=str.tostring(array.get(longExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(longExitQuantities,ladderOutArrayPosition)/100)
color=longTP4Hit?green:black

table.cell(panel,0,rowCount,text=longTP4Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1
//LongLadderOut5
ifcurrentlyInLongPositionandladderOutSteps>=5
intladderOutArrayPosition=4
stringexitID=str.tostring(array.get(longExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(longExitQuantities,ladderOutArrayPosition)/100)
color=longTP5Hit?green:black

table.cell(panel,0,rowCount,text=longTP5Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1
//LongLadderOut6
ifcurrentlyInLongPositionandladderOutSteps>=6
intladderOutArrayPosition=5
stringexitID=str.tostring(array.get(longExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(longExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(longExitQuantities,ladderOutArrayPosition)/100)
color=longTP6Hit?green:black

table.cell(panel,0,rowCount,text=longTP6Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1

//ShortLadderOut1
ifcurrentlyInShortPositionandladderOutSteps>=1
intladderOutArrayPosition=0
stringexitID=str.tostring(array.get(shortExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(shortExitQuantities,ladderOutArrayPosition)/100)
color=shortTP1Hit?green:black

table.cell(panel,0,rowCount,text=longTP1Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1

//ShortLadderOut2
ifcurrentlyInShortPositionandladderOutSteps>=2
intladderOutArrayPosition=1
stringexitID=str.tostring(array.get(shortExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(shortExitQuantities,ladderOutArrayPosition)/100)
color=shortTP2Hit?green:black

table.cell(panel,0,rowCount,text=longTP2Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1

//ShortLadderOut3
ifcurrentlyInShortPositionandladderOutSteps>=3
intladderOutArrayPosition=2
stringexitID=str.tostring(array.get(shortExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(shortExitQuantities,ladderOutArrayPosition)/100)
color=shortTP3Hit?green:black

table.cell(panel,0,rowCount,text=longTP3Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1
//ShortLadderOut4
ifcurrentlyInShortPositionandladderOutSteps>=4
intladderOutArrayPosition=3
stringexitID=str.tostring(array.get(shortExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(shortExitQuantities,ladderOutArrayPosition)/100)
color=shortTP4Hit?green:black

table.cell(panel,0,rowCount,text=longTP4Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1
//ShortLadderOut5
ifcurrentlyInShortPositionandladderOutSteps>=5
intladderOutArrayPosition=4
stringexitID=str.tostring(array.get(shortExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(shortExitQuantities,ladderOutArrayPosition)/100)
color=shortTP5Hit?green:black

table.cell(panel,0,rowCount,text=longTP5Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1
//ShortLadderOut6
ifcurrentlyInShortPositionandladderOutSteps>=6
intladderOutArrayPosition=5
stringexitID=str.tostring(array.get(shortExitOrderNames,ladderOutArrayPosition))
stringprice=str.format("{0,number,currency}",array.get(shortExitPrices,ladderOutArrayPosition))
stringquantity=str.format("{0,number,percent}",array.get(shortExitQuantities,ladderOutArrayPosition)/100)
color=shortTP6Hit?green:black

table.cell(panel,0,rowCount,text=longTP6Hit?" "+exitID+checkMark:" "+exitID,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,1,rowCount,text=price,text_color=color,text_halign=text.align_left,bgcolor=cellBgColor,text_size=fontSize)
table.cell(panel,2,rowCount,text=quantity+" ",text_color=color,text_halign=text.align_right,bgcolor=cellBgColor,text_size=fontSize)
rowCount+=1
Expand (719 lines)
