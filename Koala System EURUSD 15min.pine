Script Name: Koala System EURUSD 15min
Author: SoftKill21
Description: Today I bring you one of the best systems I have found for 15min chart for EURUSD, can be adapted to other pairs aswell I suppose.

Its made of 4 SMA 3 6 9 50 and EMA 200.

It only makes 1 trade per day, in this case we have a risk % of our total eqquity, being the min 0.1 lots , can be changed tho .

We target TP/SL the same 1:1 rr, in this case I use 30 pips for...
PineScript code:

Pine Script™ strategy
Koala System EURUSD 15min
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  SoftKill21
//@version=4
strategy("Koala  Script",initial_capital=1000,
          commission_type=strategy.commission.cash_per_contract,
          commission_value=0.000065,
          slippage=3)
fromDay  =  input(defval  =  1,  title  =  "From  Day",  minval  =  1,  maxval  =  31)
fromMonth  =  input(defval  =  1,  title  =  "From  Month",  minval  =  1,  maxval  =  12)
fromYear  =  input(defval  =  2000,  title  =  "From  Year",  minval  =  1970)

//  To  Date  Inputs
toDay  =  input(defval  =  1,  title  =  "To  Day",  minval  =  1,  maxval  =  31)
toMonth  =  input(defval  =  8,  title  =  "To  Month",  minval  =  1,  maxval  =  12)
toYear  =  input(defval  =  2021,  title  =  "To  Year",  minval  =  1970)

startDate  =  timestamp(fromYear,  fromMonth,  fromDay,  00,  00)
finishDate  =  timestamp(toYear,  toMonth,  toDay,  00,  00)
len  =  input(3,  minval=1,  title="Length")
src  =  input(hl2,  title="Source")
smma  =  0.0
sma1  =  sma(src,  len)
smma  :=  na(smma[1])  ?  sma1  :  (smma[1]  *  (len  -  1)  +  src)  /  len
len2  =  input(6,  minval=1,  title="Length")
src2  =  input(hl2,  title="Source")
smma2  =  0.0
sma2  =  sma(src2,  len2)
smma2  :=  na(smma2[1])  ?  sma2  :  (smma2[1]  *  (len2  -  1)  +  src2)  /  len2
len3  =  input(9,  minval=1,  title="Length")
src3  =  input(hl2,  title="Source")
smma3  =  0.0
sma3  =  sma(src3,  len3)
smma3  :=  na(smma3[1])  ?  sma3  :  (smma3[1]  *  (len3  -  1)  +  src3)  /  len3
len4  =  input(50,  minval=1,  title="Length")
src4  =  input(close,  title="Source")
smma4  =  0.0
sma4  =  sma(src4,  len4)
smma4  :=  na(smma4[1])  ?  sma4    :  (smma4[1]  *  (len4  -  1)  +  src4)  /  len4
len5  =  input(200,  minval=1,  title="Length")
src5  =  input(close,  title="Source")
out5  =  ema(src5,  len5)
timeinrange(res,  sess)  =>  time(res,  sess)  !=  0
london=timeinrange(timeframe.period,  "0300-1045")
londonEntry=timeinrange(timeframe.period,  "0300-0845")
time_cond  =  time  >=  startDate  and  time  <=  finishDate  and  londonEntry
fast_length  =  input(title="Fast  Length",  type=input.integer,  defval=12)
slow_length  =  input(title="Slow  Length",  type=input.integer,  defval=26)
srcc  =  input(title="Source",  type=input.source,  defval=close)
signal_length  =  input(title="Signal  Smoothing",  type=input.integer,  minval  =  1,  maxval  =  50,  defval  =  9)
sma_source  =  input(title="Simple  MA(Oscillator)",  type=input.bool,  defval=false)
sma_signal  =  input(title="Simple  MA(Signal  Line)",  type=input.bool,  defval=false)
//  Calculating
fast_ma  =  sma_source  ?  sma(srcc,  fast_length)  :  ema(srcc,  fast_length)
slow_ma  =  sma_source  ?  sma(srcc,  slow_length)  :  ema(srcc,  slow_length)
macd  =  fast_ma  -  slow_ma
signal  =  sma_signal  ?  sma(macd,  signal_length)  :  ema(macd,  signal_length)
hist  =  macd  -  signal
longCond  =  close  >  out5andclose>smma4andclose>smma3andclose>smma2andclose>smmaandlondonEntryandsmma>smma2andsmma2>smma3andsmma3>smma4andsmma4>out5
shortCond=close<out5andclose<smma4andclose<smma3andclose<smma2andclose<smmaandlondonEntryandsmma<smma2andsmma2<smma3andsmma3<smma4andsmma4<out5
//longCond2=crossover(close,out5)andcrossover(close,smma4)andcrossover(close,smma3)andcrossover(close,smma2)andcrossover(close,smma)andtime_cond
//shortCond2=crossunder(close,out5)andcrossunder(close,smma4)andcrossunder(close,smma3)andcrossunder(close,smma2)andcrossunder(close,smma)andtime_cond
length=input(14,title="ATRLength")
mult=input(1.0,title="PercentageMultiplier(forex.,0.7=70%)",step=0.1,minval=0.1,maxval=5.0)
oa=input(false,title="ShowactualATR")
ii=syminfo.pointvalue==0
s=ii?na:oa?atr(length):(syminfo.pointvalue*mult*atr(length))
tp=input(300,title="tp")
sl=input(300,title="sl")
//tp=s*10000
//sl=s*10000
//if(tp>300)
//tp:=300
//if(sl>300)
//sl:=300
//if(sl<150)
//sl:=150
//if(tp<150)
//tp:=150
//MONEYMANAGEMENT--------------------------------------------------------------
balance=strategy.netprofit+strategy.initial_capital//currentbalance
floating=strategy.openprofit//floatingprofit/loss
risk=input(3,type=input.float,title="Risk%")/100//risk%pertrade
//Calculatethesizeofthenexttrade
temp01=balance*risk//RiskinUSD
temp02=temp01/sl//Riskinlots
temp03=temp02*100000//Converttocontracts
size=temp03-temp03%1000//Normalizeto1000s(Tradesize)
if(size<10000)
size:=10000//Setmin.lotsize
strategy.entry("long",1,size,when=longCond)
strategy.exit("closelong","long",profit=tp,loss=sl)
//strategy.close("long",when=crossunder(close[4],smma4)andclose[4]>close[3]andclose[3]>close[2]andclose[2]>close[1]andclose[1]>close)
strategy.entry("short",0,size,when=shortCond)
strategy.exit("closeshort","short",profit=tp,loss=sl)
//strategy.close("short",when=crossover(close[4],smma4)andclose[4]<close[3]andclose[3]<close[2]andclose[2]<close[1]andclose[1]<close)
strategy.close_all(when=notlondon)
maxEntry=input(2,title="maxentries")
strategy.risk.max_intraday_filled_orders(maxEntry)
Expand (133 lines)
