Script Name: Strategy Myth-Busting #1 - UT Bot+STC+Hull [MYN]
Author: myncrypto
Description: This is part of a new series we are calling "Strategy Myth-Busting" where we take open public manual trading strategies and automate them.  The goal is to not only validate the authenticity of the claims but to provide an automated version for traders who wish to trade autonomously.

Our first one is an automated version of the " The ULTIMATE Scalping Trading...
PineScript code:

Pine Script™ strategy
Strategy Myth-Busting #1 - UT Bot+STC+Hull [MYN]
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  myn
//@version=5
strategy('Strategy  Myth-Busting  #1  -  UT  Bot+STC+Hull+  [MYN]',  max_bars_back=5000,  overlay=true,  pyramiding=0,  initial_capital=500,  currency='USD',  default_qty_type=strategy.percent_of_equity,  default_qty_value=1.0,  commission_value=0.075)
/////////////////////////////////////
//*  Put  your  strategy  logic  below  *//
/////////////////////////////////////
//2oVDibie_bk
///  UT  Bot  Alerts  by  QuantNomad  -  https://www.tradingview.com/script/n8ss8BID-UT-Bot-Alerts/
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//study(title="UT  Bot  Alerts",  overlay  =  true)
//  Inputs
a  =  input(2,  title='Key  Vaule.  \'This  changes  the  sensitivity\'')
c  =  input(6,  title='ATR  Period')
h  =  input(false,  title='Signals  from  Heikin  Ashi  Candles')
xATR  =  ta.atr(c)
nLoss  =  a  *  xATR
src  =  h  ?  request.security(ticker.heikinashi(syminfo.tickerid),  timeframe.period,  close,  lookahead=barmerge.lookahead_off)  :  close
xATRTrailingStop  =  0.0
iff_1  =  src  >  nz(xATRTrailingStop[1],  0)  ?  src  -  nLoss  :  src  +  nLoss
iff_2  =  src  <  nz(xATRTrailingStop[1],  0)  and  src[1]  <  nz(xATRTrailingStop[1],  0)  ?  math.min(nz(xATRTrailingStop[1]),  src  +  nLoss)  :  iff_1
xATRTrailingStop  :=  src  >  nz(xATRTrailingStop[1],  0)  and  src[1]  >  nz(xATRTrailingStop[1],  0)  ?  math.max(nz(xATRTrailingStop[1]),  src  -  nLoss)  :  iff_2
pos  =  0
iff_3  =  src[1]  >  nz(xATRTrailingStop[1],  0)  and  src  <  nz(xATRTrailingStop[1],  0)  ?  -1  :  nz(pos[1],  0)
pos  :=  src[1]  <  nz(xATRTrailingStop[1],  0)  and  src  >  nz(xATRTrailingStop[1],  0)  ?  1  :  iff_3
xcolor  =  pos  ==  -1  ?  color.red  :  pos  ==  1  ?  color.green  :  color.blue
ema  =  ta.ema(src,  1)
above  =  ta.crossover(ema,  xATRTrailingStop)
below  =  ta.crossover(xATRTrailingStop,  ema)
buy  =  src  >  xATRTrailingStop  and  above
sell  =  src  <  xATRTrailingStop  and  below
barbuy  =  src  >  xATRTrailingStop
barsell  =  src  <  xATRTrailingStop
//plotshape(buy,    title  =  "Buy",    text  =  'Buy',    style  =  shape.labelup,      location  =  location.belowbar,  color=  color.green,  textcolor  =  color.white,  transp  =  0,  size  =  size.tiny)
//plotshape(sell,  title  =  "Sell",  text  =  'Sell',  style  =  shape.labeldown,  location  =  location.abovebar,  color=  color.red,      textcolor  =  color.white,  transp  =  0,  size  =  size.tiny)
barcolor(barbuy  ?  color.green  :  na)
barcolor(barsell  ?  color.red  :  na)
alertcondition(buy,  'UT  Long',  'UT  Long')
alertcondition(sell,  'UT  Short',  'UT  Short')
///////////////////////////////////////////////
//======[  Position  Check  (long/short)  ]======//
///////////////////////////////////////////////
last_longCondition  =  float(na)
last_shortCondition  =  float(na)
last_longCondition  :=  buy  ?  time  :  nz(last_longCondition[1])
last_shortCondition  :=  sell  ?  time  :  nz(last_shortCondition[1])
in_longCondition  =  last_longCondition  >  last_shortCondition
in_shortCondition  =  last_shortCondition  >  last_longCondition
UTBotBuyZone  =  in_longCondition
UTBotSellZone  =  in_shortCondition
///  STC  Indicator  -  A  Better  MACD  [SHK]  By  shayankm  -  https://www.tradingview.com/script/WhRRThMI-STC-Indicator-A-Better-MACD-SHK/
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//[SHK]  STC  colored  indicator
//https://www.tradingview.com/u/shayankm/
//indicator(title='[SHK]  Schaff  Trend  Cycle  (STC)',  shorttitle='STC',  overlay=false)
STCDivider  =  input(false,  '░░░░░░░░░░░░░░░░░░░░░░░░░')
EEEEEE  =  input(80,  'Length')
BBBB  =  input(27,  'FastLength')
BBBBB  =  input(50,  'SlowLength')
AAAA(BBB,  BBBB,  BBBBB)  =>
        fastMA  =  ta.ema(BBB,  BBBB)
        slowMA  =  ta.ema(BBB,  BBBBB)
        AAAA  =  fastMA  -  slowMA
        AAAA
AAAAA(EEEEEE,  BBBB,  BBBBB)  =>
        AAA  =  input(0.5)
        var  CCCCC  =  0.0
        var  DDD  =  0.0
        var  DDDDDD  =  0.0
        var  EEEEE  =  0.0
        BBBBBB  =  AAAA(close,  BBBB,  BBBBB)
        CCC  =  ta.lowest(BBBBBB,  EEEEEE)
        CCCC  =  ta.highest(BBBBBB,  EEEEEE)  -  CCC
        CCCCC  :=  CCCC  >  0  ?  (BBBBBB  -  CCC)  /  CCCC  *  100  :  nz(CCCCC[1])
        DDD  :=  na(DDD[1])  ?  CCCCC  :  DDD[1]  +  AAA  *  (CCCCC  -  DDD[1])
        DDDD  =  ta.lowest(DDD,  EEEEEE)
        DDDDD  =  ta.highest(DDD,  EEEEEE)  -  DDDD
        DDDDDD  :=  DDDDD  >  0  ?  (DDD  -  DDDD)  /  DDDDD  *  100  :  nz(DDDDDD[1])
        EEEEE  :=  na(EEEEE[1])  ?  DDDDDD  :  EEEEE[1]  +  AAA  *  (DDDDDD  -  EEEEE[1])
        EEEEE
mAAAAA  =  AAAAA(EEEEEE,  BBBB,  BBBBB)
mColor  =  mAAAAA  >  mAAAAA[1]  ?  color.new(color.green,  20)  :  color.new(color.red,  20)
if  mAAAAA[3]  <=  mAAAAA[2]  andmAAAAA[2]>mAAAAA[1]andmAAAAA>75
alert('Red',alert.freq_once_per_bar)
ifmAAAAA[3]>=mAAAAA[2]andmAAAAA[2]<mAAAAA[1]andmAAAAA<25
alert('Green',alert.freq_once_per_bar)
//plot(mAAAAA,color=mColor,title='STC',linewidth=2)
//ul=plot(25,color=color.new(color.white,0))
//ll=plot(75,color=color.new(color.purple,0))
//fill(ul,ll,color=color.new(color.gray,96))
STCGreenAndBelow25AndRising=mAAAAA>mAAAAA[1]andmAAAAA<25
STCRedAndAndAbove75AndFalling=mAAAAA<mAAAAA[1]andmAAAAA>75
///HullSuitebyInSilico
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//BasicHullMaPacktinkeredbyInSilico-https://www.tradingview.com/script/hg92pFwS-Hull-Suite/
//study("HullSuitebyInSilico",overlay=true)
HullDivider=input(false,'░░░░░░░░░░░░░░░░░░░░░░░░░')
//INPUT
srcHull=input(close,title='Source')
modeSwitch=input.string('Hma',title='HullVariation',options=['Hma','Thma','Ehma'])
length=input(55,title='Length(180-200forfloatingS/R,55forswingentry)')
lengthMult=input(1.0,title='Lengthmultiplier(Usedtoviewhighertimeframeswithstraightband)')
useHtf=input(false,title='ShowHullMAfromXtimeframe?(goodforscalping)')
htf=input.timeframe('240',title='Highertimeframe')
switchColor=input(true,'ColorHullaccordingtotrend?')
candleCol=input(false,title='ColorcandlesbasedonHull\'sTrend?')
visualSwitch=input(true,title='ShowasaBand?')
thicknesSwitch=input(1,title='LineThickness')
transpSwitch=input.int(40,title='BandTransparency',step=5)
//FUNCTIONS
//HMA
HMA(_src,_length)=>
ta.wma(2*ta.wma(_src,_length/2)-ta.wma(_src,_length),math.round(math.sqrt(_length)))
//EHMA
EHMA(_src,_length)=>
ta.ema(2*ta.ema(_src,_length/2)-ta.ema(_src,_length),math.round(math.sqrt(_length)))
//THMA
THMA(_src,_length)=>
ta.wma(ta.wma(_src,_length/3)*3-ta.wma(_src,_length/2)-ta.wma(_src,_length),_length)
//SWITCH
Mode(modeSwitch,src,len)=>
modeSwitch=='Hma'?HMA(src,len):modeSwitch=='Ehma'?EHMA(src,len):modeSwitch=='Thma'?THMA(src,len/2):na
//OUT
_hull=Mode(modeSwitch,srcHull,int(length*lengthMult))
HULL=useHtf?request.security(syminfo.ticker,htf,_hull):_hull
MHULL=HULL[0]
SHULL=HULL[2]
//COLOR
hullColor=switchColor?HULL>HULL[2]?#00ff00:#ff0000:#ff9800
//PLOT
///<Frame
Fi1=plot(MHULL,title='MHULL',color=hullColor,linewidth=thicknesSwitch,transp=50)
Fi2=plot(visualSwitch?SHULL:na,title='SHULL',color=hullColor,linewidth=thicknesSwitch,transp=50)
alertcondition(ta.crossover(MHULL,SHULL),title='Hulltrendingup.',message='Hulltrendingup.')
alertcondition(ta.crossover(SHULL,MHULL),title='Hulltrendingdown.',message='Hulltrendingdown.')
///<EndingFiller
fill(Fi1,Fi2,title='BandFiller',color=hullColor,transp=transpSwitch)
///BARCOLOR
barcolor(color=candleCol?switchColor?hullColor:na:na)
HullGreen=hullColor==#00ff00
HullRed=hullColor==#ff0000
//////////////////////////////////////
//*Putyourstrategyrulesbelow*//
/////////////////////////////////////
longCondition=STCGreenAndBelow25AndRisingandHullGreenandUTBotBuyZone
shortCondition=STCRedAndAndAbove75AndFallingandHullRedandUTBotSellZone
//defineas0ifdonotwanttouse
closeLongCondition=0
closeShortCondition=0
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
useStartPeriodTime=input.bool(true,'Start',group='DateRange',inline='StartPeriod')
startPeriodTime=input.time(timestamp('1Jan2019'),'',group='DateRange',inline='StartPeriod')
useEndPeriodTime=input.bool(true,'End',group='DateRange',inline='EndPeriod')
endPeriodTime=input.time(timestamp('31Dec2030'),'',group='DateRange',inline='EndPeriod')
start=useStartPeriodTime?startPeriodTime>=time:false
end=useEndPeriodTime?endPeriodTime<=time:false
calcPeriod=notstartandnotend
//TradeDirection
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tradeDirection=input.string('LongandShort',title='TradeDirection',options=['LongandShort','LongOnly','ShortOnly'],group='TradeDirection')
//PercentasPoints
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
per(pcnt)=>
strategy.position_size!=0?math.round(pcnt/100*strategy.position_avg_price/syminfo.mintick):float(na)
//Takeprofit1
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp1=input.float(title='TakeProfit1-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit1')
q1=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit1')
//Takeprofit2
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp2=input.float(title='TakeProfit2-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit2')
q2=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit2')
//Takeprofit3
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp3=input.float(title='TakeProfit3-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit3')
q3=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit3')
//Takeprofit4
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp4=input.float(title='TakeProfit4-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit')
///StopLoss
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
stoplossPercent=input.float(title='StopLoss(%)',defval=15,minval=0.01,group='StopLoss')*0.01
slLongClose=close<strategy.position_avg_price*(1-stoplossPercent)
slShortClose=close>strategy.position_avg_price*(1+stoplossPercent)
///Leverage
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
leverage=input.float(1,'Leverage',step=.5,group='Leverage')
contracts=math.min(math.max(.000001,strategy.equity/close*leverage),1000000000)
///TradeStateManagement
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
isInLongPosition=strategy.position_size>0
isInShortPosition=strategy.position_size<0
///ProfitViewAlertSyntaxStringGeneration
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
alertSyntaxPrefix=input.string(defval='PV-AccountNameHere_Strategy-Name-Here',title='AlertSyntaxPrefix',group='ProfitViewAlertSyntax')
alertSyntaxBase=alertSyntaxPrefix+'\n#'+str.tostring(open)+','+str.tostring(high)+','+str.tostring(low)+','+str.tostring(close)+','+str.tostring(volume)+','
///TradeExecution
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
ifcalcPeriod
iflongConditionandtradeDirection!='ShortOnly'andisInLongPosition==false
strategy.entry('Long',strategy.long,qty=contracts)
alert(message=alertSyntaxBase+'side:long',freq=alert.freq_once_per_bar_close)
ifshortConditionandtradeDirection!='LongOnly'andisInShortPosition==false
strategy.entry('Short',strategy.short,qty=contracts)
alert(message=alertSyntaxBase+'side:short',freq=alert.freq_once_per_bar_close)
//InspiredbyMultiple%%profitexitsexampleByadolgohttps://www.tradingview.com/script/kHhCik9f-Multiple-profit-exits-example/
strategy.exit('TP1',qty_percent=q1,profit=per(tp1))
strategy.exit('TP2',qty_percent=q2,profit=per(tp2))
strategy.exit('TP3',qty_percent=q3,profit=per(tp3))
strategy.exit('TP4',profit=per(tp4))
strategy.close('Long',qty_percent=100,comment='SLLong',when=slLongClose)
strategy.close('Short',qty_percent=100,comment='SLShort',when=slShortClose)
strategy.close_all(when=closeLongConditionorcloseShortCondition,comment='ClosePostion')
Expand (292 lines)
