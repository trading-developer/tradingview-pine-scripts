Script Name: Crunchster's Normalised Trend Strategy
Author: Crunchster1
Description: This is a unique rules-based, systematic trading strategy - in the trend following category.

The strategy is designed for use on the daily timeframe. Specific features of this strategy are outlined below:
1. Uses a transformed price series (which I dub "real price") to generate signals rather than ticker price
2. Uses advanced position sizing and risk...
PineScript code:

Pine Script™ strategy
Crunchster's Normalised Trend Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  Crunchster1
//@version=5
strategy(title="Crunchster's  Normalised  Trend  Strategy",  shorttitle="Normalised  Trend  Strategy",  overlay=false,  slippage=10,  pyramiding=1,  precision  =  4,  calc_on_order_fills  =  false,  calc_on_every_tick  =  false,  default_qty_value  =  0.1,  initial_capital  =  1000,  commission_value  =  0.06,  process_orders_on_close  =  true)
//  Inputs  and  Parameters
src  =  input(close,  'Source',  group='Strategy  Settings')
length  =  input.int(title="Lookback  period  for  price  normalisation  filter",  defval=14,  minval=2,  group='Strategy  Settings',  tooltip='This  sets  the  lookback  period  for  the  volatility  adjustment  of  returns,  which  is  used  to  transform  the  price  series  into  the  "real  price"')
hlength  =  input.int(title="Lookback  periodforHullMovingAverage",defval=100,minval=2,group='StrategySettings')
offset=input.int(title="HMAOffset",defval=0,minval=0,group='StrategySettings')
long=input(true,'Long',inline='08',group='StrategySettings')
short=input(true,'Short',inline='08',group='StrategySettings',tooltip='Togglelong/shortstrategyon/off')
stopMultiple=input.float(1,'Stopmultiple',step=0.25,group='RiskManagementSettings',tooltip='MultipleforATR,settinghardstoplossfromentryprice')
lev=input.float(1,'MaxLeverage',step=0.5,group='RiskManagementSettings',tooltip='Maxleveragesetsmaximumallowableleverageoftotalcapital(initialcapital+anynetprofit),cappingmaximumvolatilityadjustedpositionsize')
riskT=input.float(10,maxval=75,title='AnnualisedVolatilityTarget%',group='RiskManagementSettings',tooltip='Specifyannualrisktarget,usedtodeterminevolatilityadjustedpositionsize.Annualiseddailyvolatilityisreferencedtothisvalueandpositionsizeadjustedaccordingly')
comp=input(false,'Compounding',inline='09',group='RiskManagementSettings')
Comppct=input.float(50,'%',step=5,inline='09',group='RiskManagementSettings',tooltip='Togglecompoundingofprofit,andset%ofprofittocompound')
//Backtestingperiod
FromDay=input.int(defval=1,title='FromDay',minval=1,maxval=31,inline='04',group='Backtestrange')
FromMonth=input.int(defval=1,title='FromMon',minval=1,maxval=12,inline='04',group='Backtestrange')
FromYear=input.int(defval=2018,title='FromYr',minval=1900,inline='04',group='Backtestrange',tooltip='Setstartofbacktestingperiod')
ToDay=input.int(defval=1,title='ToDay',minval=1,maxval=31,inline='05',group='Backtestrange')
ToMonth=input.int(defval=1,title='ToMon',minval=1,maxval=12,inline='05',group='Backtestrange')
ToYear=input.int(defval=9999,title='ToYr',minval=1900,inline='05',group='Backtestrange',tooltip='Setendofbacktestingperiod')
start=timestamp(FromYear,FromMonth,FromDay,00,00)
finish=timestamp(ToYear,ToMonth,ToDay,23,59)
window=time>=startandtime<=finish
//Normalisedreturnscalculation
nRet=(src-src[1])/ta.stdev((src-src[1]),length)
nPrice=ta.cum(nRet)
//HullMovingAverage-usingnormalisedpriceseries
fHMA=ta.wma(2*ta.wma(nPrice[offset],hlength/2)-ta.wma(nPrice[offset],hlength),math.round(math.sqrt(hlength)))
//RiskManagementformulae
tr=math.max(high-low,math.abs(high-close),math.abs(low-close))//Truerange
stopL=ta.sma(tr,14)//Averagetruerange
stdev=ta.stdev(close-close[1],14)//volatilityofrecentreturns
maxcapital=strategy.initial_capital+strategy.netprofit//Maximumcapitalavailabletoinvest-initialcapitalnetofprofit
annvol=100*math.sqrt(365)*stdev/close//convertsrecentvolatilityofreturnsintoannualisedvolatilityofreturns-assumesdailytimeframe
risk=1.1
ifcomp
risk:=(strategy.initial_capital+(Comppct*strategy.netprofit/100))//adjustinvestmentcapitaltoincludecompounding
else
risk:=strategy.initial_capital
shares=(risk*(riskT/annvol))/close//calculatesvolatilityadjustedpositionsize,dependentonuserspecifiedannualisedrisktarget
if((shares*close)>lev*maxcapital)//ensurespositionsizedoesnotexceedavailablecapitalmultipliedbyuserspecifiedmaximumleverage
shares:=lev*maxcapital/close
//Tosetthepriceattheentrypointoftrade
Posopen()=>
math.abs(strategy.position_size[1])<=0andmath.abs(strategy.position_size)>0
varfloatopenN=na
ifPosopen()
openN:=stopL
//StrategyRules
iflong
longCondition=ta.crossover(nPrice,fHMA)andwindow
exitlong=ta.crossunder(nPrice,fHMA)
if(longCondition)
strategy.entry('GoLong!',strategy.long,qty=shares)
ifstrategy.position_size>0
strategy.exit('StopLong',from_entry='GoLong!',stop=(strategy.opentrades.entry_price(0)-(openN*stopMultiple)))
if(exitlong)
strategy.close('GoLong!',immediately=true)
ifshort
shortCondition=ta.crossunder(nPrice,fHMA)andwindow
exitshort=ta.crossover(nPrice,fHMA)
if(shortCondition)
strategy.entry('GoShort!',strategy.short,qty=shares)
ifstrategy.position_size<0
strategy.exit('StopShort',from_entry='GoShort!',stop=(strategy.opentrades.entry_price(0)+(openN*stopMultiple)))
if(exitshort)
strategy.close('GoShort!',immediately=true)
//Visualsoftrendanddirection
plot(nPrice,title='RealPrice',color=color.black)
MAColor=fHMA>fHMA[3]?#00ff00:#ff0000
MA1=plot(fHMA,title='HullMA',color=MAColor)
MA2=plot(fHMA[3],title='HullMAOffset',color=MAColor)
fill(MA1,MA2,title='BandFiller',color=MAColor)
Expand (93 lines)
