Script Name: Strategy Multiple Orders + Statistics Template - Educational
Author: Daveatt
Description: Hello traders

It's been a while
We're back in a bear market so I have a bit more time to publish new Pine scripts for the TradingView community

 Special thanks  to @fikira for his Multiple Orders script () and to @carnagecain for allowing me to publish this script we worked together on

I got widely inspired by @fikira's script for that one

This script is for...
PineScript code:

Pine Script™ strategy
Strategy Multiple Orders + Statistics Template - Educational
//@version=5
//  #  =========================================================================  #
//  #                                      |      Strategy    |
//  #  =========================================================================  #
SystemName  =  "Strategy  Multiple  Orders  Template"
TradeId  =  "V"
//  These  values  are  used  both  in  the  strategy()  header  and  in  the  script's  relevant  inputs  as  default  values  so  they  match.
//  Unless  these  values  match  in  the  script's  Inputs  and  the  TV  backtesting  Properties,  results  between  them  cannot  be  compared.
InitCapital  =  1000000
InitPosition  =  1
InitCommission  =  0.075
InitPyramidMax  =  4
CalcOnorderFills  =  false
ProcessOrdersOnClose  =  true
CalcOnEveryTick  =  false
CloseEntriesRule  =  "ANY"
strategy(title=SystemName,  shorttitle=SystemName,
  overlay=true,  pyramiding=InitPyramidMax,  initial_capital=InitCapital,  default_qty_type=strategy.percent_of_equity,  process_orders_on_close=ProcessOrdersOnClose,
  default_qty_value=InitPosition,  commission_type=strategy.commission.percent,  commission_value=InitCommission,  calc_on_order_fills=CalcOnorderFills,
  calc_on_every_tick=CalcOnEveryTick,  close_entries_rule=CloseEntriesRule,
  precision=6,  max_lines_count=500,  max_labels_count=500)
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #                                      ||      Alerts    ||
//  #  =========================================================================  #
//  #  =========================================================================  #
i_alert_txt_entry_long  =  input.text_area(defval  =  "",  title  =  "Long  Entry  Message",  group  =  "Alerts")
i_alert_txt_entry_short  =  input.text_area(defval  =  "",  title  =  "Short  Entry  Message",  group  =  "Alerts")
i_alert_txt_exit_long  =  input.text_area(defval  =  "",  title  =  "Long  Exit  Message",  group  =  "Alerts")
i_alert_txt_exit_short  =  input.text_area(defval  =  "",  title  =  "Short  Exit  Message",  group  =  "Alerts")
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #                                      ||      General    ||
//  #  =========================================================================  #
//  #  =========================================================================  #
OpenDirection        =  input.string(defval="ALL",  title="Direction",  options=["ALL",  "LONG",  "SHORT"],  group="General")
clrBars                    =  input.bool(true,  title="Colour  Candles  to  Trade  Order  state",  group="General")
//closeOnOpposite    =  input.bool(true,  title="Invert  on  Opposite  signal:  ON/OFF",  group="――――――――  General  ――――――――")
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #                                      ||      Table    ||
//  #  =========================================================================  #
//  #  =========================================================================  #
showTable            =  input.bool(true  ,  title='Show  trade  data  table'    ,  group  =  "Table")
pos_table            =  input.string(defval  =  position.top_right,  title  =  "Position  on  Chart",  options=[position.top_left,  position.top_center,  position.top_right,  position.middle_left,  position.middle_center,  position.middle_right,  position.bottom_left,  position.bottom_center,  position.bottom_right],  group  =  "Table")
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #                                      ||      Dates  Range  Filtering    ||
//  #  =========================================================================  #
//  #  =========================================================================  #
DateFilter  =  input(false,  "Date  Range  Filtering",  group="Date")
//  —————  Syntax  coming  from  https://www.tradingview.com/blog/en/new-parameter-for-date-input-added-to-pine-21812/
i_startTime  =  input.time(defval  =  timestamp("01  Jan  2019  13:30  +0000"),  title  =  "Start  Time",  group="Date")
i_endTime  =  input.time(defval  =  timestamp("30  Dec  2021  23:30  +0000"),  title  =  "End  Time",  group="Date")
TradeDateIsAllowed()  =>  DateFilter  ?  time  >=  i_startTime  and  time  <=  i_endTime  :  true
//  #  =========================================================================  #
//  #                                      |      Stop  Loss  |
//  #  =========================================================================  #
sl1_input_perc  =  input.float(2,  minval  =  0,  title  =  "Stop  Loss  1  (%)",  group  =  "Stop  Loss  1",  inline  =  "SL1")  *  0.01
sl1_color            =  input.color(color.new(color.blue,  50),  title  =  "Color",  group  =  "Stop  Loss  1",  inline  =  "SL1")
sl2_input_perc  =  input.float(3,  minval  =  0,  title  =  "Stop  Loss  2  (%)",  group  =  "Stop  Loss  2",  inline  =  "SL2")  *  0.01
sl2_color            =  input.color(color.new(color.orange,  50),  title  =  "Color",  group  =  "Stop  Loss  2",  inline  =  "SL2")
sl3_input_perc  =  input.float(4,  minval  =  0,  title  =  "Stop  Loss  3  (%)",  group  =  "Stop  Loss  3",  inline  =  "SL3")  *  0.01
sl3_color            =  input.color(color.new(color.red,  50),  title  =  "Color",  group  =  "Stop  Loss  3",  inline  =  "SL3")
sl4_input_perc  =  input.float(5,  minval  =  0,  title  =  "Stop  Loss  4  (%)",  group  =  "Stop  Loss  4",  inline  =  "SL4")  *  0.01
sl4_color            =  input.color(color.new(color.purple,  50),  title  =  "Color",  group  =  "Stop  Loss  4",  inline  =  "SL4")
//  #  =========================================================================  #
//  #                                      |      Take  Profit  |
//  #  =========================================================================  #
tp1_input_perc  =  input.float(1,  minval  =  0,  title  =  "Take  Profit  1  (%)",  group  =  "Take  Profit  1",  inline  =  "TP1")  *  0.01
tp1_color            =  input.color(color.new(color.maroon,  50),  title  =  "Color",  group  =  "Take  Profit  1",  inline  =  "TP1")
tp2_input_perc  =  input.float(2,  minval  =  0,  title  =  "Take  Profit  2  (%)",  group  =  "Take  Profit  2",  inline  =  "TP2")  *  0.01
tp2_color            =  input.color(color.new(color.green,  50),  title  =  "Color",  group  =  "Take  Profit  2",  inline  =  "TP2")
tp3_input_perc  =  input.float(3,  minval  =  0,  title  =  "Take  Profit  3  (%)",  group  =  "Take  Profit  3",  inline  =  "TP3")  *  0.01
tp3_color            =  input.color(color.new(color.lime,  50),  title  =  "Color",  group  =  "Take  Profit  3",  inline  =  "TP3")
tp4_input_perc  =  input.float(4,  minval  =  0,  title  =  "Take  Profit  4  (%)",  group  =  "Take  Profit  4",  inline  =  "TP4")  *  0.01
tp4_color            =  input.color(color.new(color.black,  50),  title  =  "Color",  group  =  "Take  Profit  4",  inline  =  "TP4")
//  #  =========================================================================  #
//  #                                      |      General  Functions  |
//  #  =========================================================================  #
donchian(len)  =>  math.avg(ta.lowest(len),  ta.highest(len))
f_security(_sym,  _res,  _src)  =>  request.security(_sym,  _res,  _src[barstate.isrealtime  ?  1  :  0])[barstate.isrealtime  ?  0  :  1]
//f_security(_sym,  _res,  _src)  =>  request.security(_sym,  _res,  _src)//[1],  barmerge.gaps_off,  barmerge.lookahead_on)
//  #  =========================================================================  #
//  #                                      |      Entry  conditions  |
//  #  =========================================================================  #
bull  =  close  >  open  and  close  >  math.max(close[2],  open[2])  and  low[1]  <  low[2]  and  high[1]  <  high[2]  //  low  <  low[1]  and  low[1]  <  low[2]
bear  =  close  <  open  and  close  <  math.min(close[2],  open[2])  and  low[1]  >  low[2]  and  high[1]  >  high[2]  //  low  <  low[1]  and  low[1]  <  low[2]
open_all                =  OpenDirection  ==  "ALL"
open_all_longs    =  OpenDirection  !=  "SHORT"
open_all_shorts  =  OpenDirection  !=  "LONG"
//  #  =========================================================================  #
//  #                                      |      Plot  Entries  |
//  #  =========================================================================  #
plotshape(
  series          =  bull  and  not  bull[1],
  title            =  "Buy  Signal",
  style            =    shape.triangleup,
  location      =    location.bottom,
  color            =  color.new(color  =  color.green,  transp  =  0),
  size              =  size.normal
  )
plotshape(
  series          =  bear  and  not  bear[1],
  title            =  "Sell  Signal",
  style            =    shape.triangledown,
  location      =    location.top,
  color            =  color.new(color  =  color.red,  transp  =  0),
  size              =  size.normal
  )
//  #  =========================================================================  #
//  #                                      |      TPs  and  SLs  arrays  |
//  #  =========================================================================  #
var  L_array    =  array.from(0  ,  0  ,  0  ,  0)
var  S_array    =  array.from(0  ,  0  ,  0  ,  0)
var  L_SLline  =  array.from(0.,  0.,  0.,  0.)
var  L_TPline  =  array.from(0.,  0.,  0.,  0.)
var  S_SLline  =  array.from(0.,  0.,  0.,  0.)
var  S_TPline=array.from(0.,0.,0.,0.)
vartrades=4
varisFirst=0
//———————[entryandarrayset]———————
//{
ifbullandTradeDateIsAllowed()andopen_all_longs
switch
array.get(L_array,0)==0=>
SL=low*(1-sl1_input_perc)
TP=high*(1+tp1_input_perc)
strategy.entry('L1',strategy.long)
array.set(L_SLline,0,SL)
array.set(L_TPline,0,TP)
array.set(L_array,0,1)
ifisFirst==0
isFirst:=1
array.get(L_array,1)==0=>
SL=low*(1-sl2_input_perc)
TP=high*(1+tp2_input_perc)
strategy.entry('L2',strategy.long)
array.set(L_SLline,1,SL)
array.set(L_TPline,1,TP)
array.set(L_array,1,1)
array.get(L_array,2)==0=>
SL=low*(1-sl3_input_perc)
TP=high*(1+tp3_input_perc)
strategy.entry('L3',strategy.long)
array.set(L_SLline,2,SL)
array.set(L_TPline,2,TP)
array.set(L_array,2,1)
array.get(L_array,3)==0=>
strategy.entry('L4',strategy.long)
SL=low*(1-sl4_input_perc)
TP=high*(1+tp4_input_perc)
array.set(L_SLline,3,SL)
array.set(L_TPline,3,TP)
array.set(L_array,3,1)
elseifbearandTradeDateIsAllowed()andopen_all_shorts
switch
array.get(S_array,0)==0=>
SL=high*(1+sl1_input_perc)
TP=low*(1-tp1_input_perc)
strategy.entry('S1',strategy.short)
array.set(S_SLline,0,SL)
array.set(S_TPline,0,TP)
array.set(S_array,0,1)
ifisFirst==0
isFirst:=1
array.get(S_array,1)==0=>
SL=high*(1+sl2_input_perc)
TP=low*(1-tp2_input_perc)
strategy.entry('S2',strategy.short)
array.set(S_SLline,1,SL)
array.set(S_TPline,1,TP)
array.set(S_array,1,1)
array.get(S_array,2)==0=>
SL=high*(1+sl3_input_perc)
TP=low*(1-tp3_input_perc)
strategy.entry('S3',strategy.short)
array.set(S_SLline,2,SL)
array.set(S_TPline,2,TP)
array.set(S_array,2,1)
array.get(S_array,3)==0=>
strategy.entry('S4',strategy.short)
SL=high*(1+sl4_input_perc)
TP=low*(1-tp4_input_perc)
array.set(S_array,3,1)
array.set(S_SLline,3,SL)
array.set(S_TPline,3,TP)
//#=========================================================================#
//#|StrategyExitCalls|
//#=========================================================================#
//Longs
strategy.exit('xL1',from_entry='L1',limit=array.get(L_TPline,0),stop=array.get(L_SLline,0),when=array.get(L_array,0)==1)
strategy.exit('xL2',from_entry='L2',limit=array.get(L_TPline,1),stop=array.get(L_SLline,1),when=array.get(L_array,1)==1)
strategy.exit('xL3',from_entry='L3',limit=array.get(L_TPline,2),stop=array.get(L_SLline,2),when=array.get(L_array,2)==1)
strategy.exit('xL4',from_entry='L4',limit=array.get(L_TPline,3),stop=array.get(L_SLline,3),when=array.get(L_array,3)==1)
//Shorts
strategy.exit('xS1',from_entry='S1',limit=array.get(S_TPline,0),stop=array.get(S_SLline,0),when=array.get(S_array,0)==1)
strategy.exit('xS2',from_entry='S2',limit=array.get(S_TPline,1),stop=array.get(S_SLline,1),when=array.get(S_array,1)==1)
strategy.exit('xS3',from_entry='S3',limit=array.get(S_TPline,2),stop=array.get(S_SLline,2),when=array.get(S_array,2)==1)
strategy.exit('xS4',from_entry='S4',limit=array.get(S_TPline,3),stop=array.get(S_SLline,3),when=array.get(S_array,3)==1)
//#=========================================================================#
//#|ResetArrayvalues|
//#=========================================================================#
//#|LONGS|
varintL_nb_sl_hit=0
varintL_nb_tp1_hit=0
varintL_nb_tp2_hit=0
varintL_nb_tp3_hit=0
varintL_nb_tp4_hit=0
//IncrementSLLongscounter
ifarray.get(L_array,0)==1andlow<array.get(L_SLline,0)
L_nb_sl_hit+=1
elseifarray.get(L_array,1)==1andlow<array.get(L_SLline,1)
L_nb_sl_hit+=1
elseifarray.get(L_array,2)==1andlow<array.get(L_SLline,2)
L_nb_sl_hit+=1
elseifarray.get(L_array,3)==1andlow<array.get(L_SLline,3)
L_nb_sl_hit+=1
//IncrementTPLongscounter
ifarray.get(L_array,0)==1andhigh>array.get(L_TPline,0)
L_nb_tp1_hit+=1
elseifarray.get(L_array,1)==1andhigh>array.get(L_TPline,1)
L_nb_tp2_hit+=1
elseifarray.get(L_array,2)==1andhigh>array.get(L_TPline,2)
L_nb_tp3_hit+=1
elseifarray.get(L_array,3)==1andhigh>array.get(L_TPline,3)
L_nb_tp4_hit+=1
//ResetLongsarrays
ifarray.get(L_array,0)==1andhigh>array.get(L_TPline,0)orlow<array.get(L_SLline,0)
array.set(L_array,0,0)
elseifarray.get(L_array,1)==1andhigh>array.get(L_TPline,1)orlow<array.get(L_SLline,1)
array.set(L_array,1,0)
elseifarray.get(L_array,2)==1andhigh>array.get(L_TPline,2)orlow<array.get(L_SLline,2)
array.set(L_array,2,0)
elseifarray.get(L_array,3)==1andhigh>array.get(L_TPline,3)orlow<array.get(L_SLline,3)
array.set(L_array,3,0)
//#|Shorts|
varintS_nb_sl_hit=0
varintS_nb_tp1_hit=0
varintS_nb_tp2_hit=0
varintS_nb_tp3_hit=0
varintS_nb_tp4_hit=0
//IncrementSLShortscounter
ifarray.get(S_array,0)==1andhigh>array.get(S_SLline,0)
S_nb_sl_hit+=1
elseifarray.get(S_array,1)==1andhigh>array.get(S_SLline,1)
S_nb_sl_hit+=1
elseifarray.get(S_array,2)==1andhigh>array.get(S_SLline,2)
S_nb_sl_hit+=1
elseifarray.get(S_array,3)==1andhigh>array.get(S_SLline,3)
S_nb_sl_hit+=1
//IncrementTPShortscounter
ifarray.get(S_array,0)==1andlow<array.get(S_TPline,0)
S_nb_tp1_hit+=1
elseifarray.get(S_array,1)==1andlow<array.get(S_TPline,1)
S_nb_tp2_hit+=1
elseifarray.get(S_array,2)==1andlow<array.get(S_TPline,2)
S_nb_tp3_hit+=1
elseifarray.get(S_array,3)==1andlow<array.get(S_TPline,3)
S_nb_tp4_hit+=1
//ResetShortsarrays
ifarray.get(S_array,0)==1andlow<array.get(S_TPline,0)orhigh>array.get(S_SLline,0)
array.set(S_array,0,0)
elseifarray.get(S_array,1)==1andlow<array.get(S_TPline,1)orhigh>array.get(S_SLline,1)
array.set(S_array,1,0)
elseifarray.get(S_array,2)==1andlow<array.get(S_TPline,2)orhigh>array.get(S_SLline,2)
array.set(S_array,2,0)
elseifarray.get(S_array,3)==1andlow<array.get(S_TPline,3)orhigh>array.get(S_SLline,3)
array.set(S_array,3,0)
//#=========================================================================#
//#|Plots|
//#=========================================================================#
//Longs
plot(array.get(L_array,0)==1?array.get(L_TPline,0):na,color=tp1_color,style=plot.style_linebr,linewidth=3)
plot(array.get(L_array,0)==1?array.get(L_SLline,0):na,color=sl1_color,style=plot.style_linebr,linewidth=3)
plot(array.get(L_array,1)==1?array.get(L_TPline,1):na,color=tp2_color,style=plot.style_linebr,linewidth=3)
plot(array.get(L_array,1)==1?array.get(L_SLline,1):na,color=sl2_color,style=plot.style_linebr,linewidth=3)
plot(array.get(L_array,2)==1?array.get(L_TPline,2):na,color=tp3_color,style=plot.style_linebr,linewidth=3)
plot(array.get(L_array,2)==1?array.get(L_SLline,2):na,color=sl3_color,style=plot.style_linebr,linewidth=3)
plot(array.get(L_array,3)==1?array.get(L_TPline,3):na,color=tp4_color,style=plot.style_linebr,linewidth=3)
plot(array.get(L_array,3)==1?array.get(L_SLline,3):na,color=sl4_color,style=plot.style_linebr,linewidth=3)
//Shorts
plot(array.get(S_array,0)==1?array.get(S_TPline,0):na,color=tp1_color,style=plot.style_linebr,linewidth=3)
plot(array.get(S_array,0)==1?array.get(S_SLline,0):na,color=sl1_color,style=plot.style_linebr,linewidth=3)
plot(array.get(S_array,1)==1?array.get(S_TPline,1):na,color=tp2_color,style=plot.style_linebr,linewidth=3)
plot(array.get(S_array,1)==1?array.get(S_SLline,1):na,color=sl2_color,style=plot.style_linebr,linewidth=3)
plot(array.get(S_array,2)==1?array.get(S_TPline,2):na,color=tp3_color,style=plot.style_linebr,linewidth=3)
plot(array.get(S_array,2)==1?array.get(S_SLline,2):na,color=sl3_color,style=plot.style_linebr,linewidth=3)
plot(array.get(S_array,3)==1?array.get(S_TPline,3):na,color=tp4_color,style=plot.style_linebr,linewidth=3)
plot(array.get(S_array,3)==1?array.get(S_SLline,3):na,color=sl4_color,style=plot.style_linebr,linewidth=3)
//#=========================================================================#
//#|Calculations|
//#=========================================================================#
//Calculateaveragegrossprofitbyaddingthedifferencebetweengrossprofitandcommission.
L_avgGrossProfit()=>
L_sumGrossProfit=0.0
fortradeNo=0tostrategy.closedtrades-1

if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))>0andstrategy.closedtrades.size(tradeNo)>0
L_sumGrossProfit+=strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo)
result=nz(L_sumGrossProfit/strategy.closedtrades)
S_avgGrossProfit()=>
S_sumGrossProfit=0.0
fortradeNo=0tostrategy.closedtrades-1

if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))>0andstrategy.closedtrades.size(tradeNo)<0
S_sumGrossProfit+=strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo)
result=nz(S_sumGrossProfit/strategy.closedtrades)
avgGrossProfit()=>
sumGrossProfit=0.0
fortradeNo=0tostrategy.closedtrades-1
if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))>0
sumGrossProfit+=strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo)
result=nz(sumGrossProfit/strategy.closedtrades)
//Calculateaveragegrosslossbyaddingthedifferencebetweengrossprofitandcommission.
L_avgGrossLoss()=>
L_sumGrossLoss=0.0
fortradeNo=0tostrategy.closedtrades-1

if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))<0andstrategy.closedtrades.size(tradeNo)>0
L_sumGrossLoss+=strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo)
result=nz(L_sumGrossLoss/strategy.closedtrades)
S_avgGrossLoss()=>
S_sumGrossLoss=0.0
fortradeNo=0tostrategy.closedtrades-1

if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))<0andstrategy.closedtrades.size(tradeNo)<0
S_sumGrossLoss+=strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo)
result=nz(S_sumGrossLoss/strategy.closedtrades)
avgGrossLoss()=>
sumGrossLoss=0.0
fortradeNo=0tostrategy.closedtrades-1
if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))<0
sumGrossLoss+=strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo)
result=nz(sumGrossLoss/strategy.closedtrades)
//Calculateprobabilityofwin
L_probabilityWin()=>
L_nb_winners=0.0
fortradeNo=0tostrategy.closedtrades-1
if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))>0andstrategy.closedtrades.size(tradeNo)>0
L_nb_winners+=1
result=nz(L_nb_winners/strategy.closedtrades)*100
S_probabilityWin()=>
S_nb_winners=0.0
fortradeNo=0tostrategy.closedtrades-1
if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))>0andstrategy.closedtrades.size(tradeNo)<0
S_nb_winners+=1

result=nz(S_nb_winners/strategy.closedtrades)*100
probabilityWin()=>
nb_winners=0.0
fortradeNo=0tostrategy.closedtrades-1
if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))>0
nb_winners+=1
result=nz(nb_winners/strategy.closedtrades)*100
//Calculateprobabilityofloss
L_probabilityLoss()=>
L_nb_losers=0.0
fortradeNo=0tostrategy.closedtrades-1
if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))<0andstrategy.closedtrades.size(tradeNo)>0
L_nb_losers+=1
result=nz(L_nb_losers/strategy.closedtrades)*100
S_probabilityLoss()=>
S_nb_losers=0.0
fortradeNo=0tostrategy.closedtrades-1

if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))<0andstrategy.closedtrades.size(tradeNo)<0
S_nb_losers+=1
result=nz(S_nb_losers/strategy.closedtrades)*100
probabilityLoss()=>
nb_losers=0.0
fortradeNo=0tostrategy.closedtrades-1
if(strategy.closedtrades.profit(tradeNo)-strategy.closedtrades.commission(tradeNo))<0
nb_losers+=1
result=nz(nb_losers/strategy.closedtrades)*100
//CalculateAPPT
L_appt()=>
PW=L_probabilityWin()
PL=L_probabilityLoss()
AW=L_avgGrossProfit()
AL=L_avgGrossLoss()
result=(PW*AW)-(PL*AL)
S_appt()=>
PW=S_probabilityWin()
PL=S_probabilityLoss()
AW=S_avgGrossProfit()
AL=S_avgGrossLoss()
result=(PW*AW)-(PL*AL)
APPT()=>
PW=probabilityWin()
PL=probabilityLoss()
AW=avgGrossProfit()
AL=avgGrossLoss()
result=(PW*AW)-(PL*AL)
//CalculatenumberoftimesTP1washit
//#=========================================================================#
//#|Table|
//#=========================================================================#
ifbarstate.islastconfirmedhistoryandshowTable
L_PW=str.tostring(math.round(L_probabilityWin()))+"%"
L_PL=str.tostring(math.round(L_probabilityLoss()))+"%"
L_AW=str.tostring(math.round(L_avgGrossProfit()))
L_AL=str.tostring(math.round(L_avgGrossLoss()))
L_APPT=str.tostring(math.round(L_appt()))
S_PW=str.tostring(math.round(S_probabilityWin()))+"%"
S_PL=str.tostring(math.round(S_probabilityLoss()))+"%"
S_AW=str.tostring(math.round(S_avgGrossProfit()))
S_AL=str.tostring(math.round(S_avgGrossLoss()))
S_APPT=str.tostring(math.round(S_appt()))
T_PW=str.tostring(math.round(L_probabilityWin()+S_probabilityWin()))+"%"
T_PL=str.tostring(math.round(L_probabilityLoss()+S_probabilityLoss()))+"%"
T_AW=str.tostring(math.round(L_avgGrossProfit()+S_avgGrossProfit()))
T_AL=str.tostring(math.round(L_avgGrossLoss()+S_avgGrossLoss()))
T_APPT=str.tostring(math.round(L_appt()+S_appt()))
vartable=table.new(position=pos_table,columns=11,rows=4,bgcolor=color.new(color.yellow,100),border_width=1)
//Headers
table.cell(table_id=table,column=0,row=0,text='Statistics('+str.tostring(strategy.closedtrades)+'trades)',text_color=color.new(color.white,10),bgcolor=color.new(color.black,20))
table.cell(table_id=table,column=1,row=0,text='TP1',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=2,row=0,text='TP2',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=3,row=0,text='TP3',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=4,row=0,text='TP4',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=5,row=0,text='SL',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=6,row=0,text='PW',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=7,row=0,text='AW',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=8,row=0,text='PL',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=9,row=0,text='AL',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=10,row=0,text='APPT',text_color=color.new(color.black,10),bgcolor=color.new(color.gray,20))
table.cell(table_id=table,column=0,row=1,text='LONG',text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=0,row=2,text='SHORT',text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=0,row=3,text='TOTAL',text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
//Longs
table.cell(table_id=table,column=1,row=1,text=str.tostring(L_nb_tp1_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=2,row=1,text=str.tostring(L_nb_tp2_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=3,row=1,text=str.tostring(L_nb_tp3_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=4,row=1,text=str.tostring(L_nb_tp4_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=5,row=1,text=str.tostring(L_nb_sl_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=6,row=1,text=L_PW,text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=7,row=1,text=L_AW,text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=8,row=1,text=L_PL,text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=9,row=1,text=L_AL,text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
table.cell(table_id=table,column=10,row=1,text=L_APPT,text_color=color.new(color.black,10),bgcolor=color.new(color.green,20))
//Shorts
table.cell(table_id=table,column=1,row=2,text=str.tostring(S_nb_tp1_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=2,row=2,text=str.tostring(S_nb_tp2_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=3,row=2,text=str.tostring(S_nb_tp3_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=4,row=2,text=str.tostring(S_nb_tp4_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=5,row=2,text=str.tostring(S_nb_sl_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=6,row=2,text=S_PW,text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=7,row=2,text=S_AW,text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=8,row=2,text=S_PL,text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=9,row=2,text=S_AL,text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
table.cell(table_id=table,column=10,row=2,text=S_APPT,text_color=color.new(color.black,10),bgcolor=color.new(color.red,20))
//Total
table.cell(table_id=table,column=1,row=3,text=str.tostring(L_nb_tp1_hit+S_nb_tp1_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
table.cell(table_id=table,column=2,row=3,text=str.tostring(L_nb_tp2_hit+S_nb_tp2_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
table.cell(table_id=table,column=3,row=3,text=str.tostring(L_nb_tp3_hit+S_nb_tp3_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
table.cell(table_id=table,column=4,row=3,text=str.tostring(L_nb_tp4_hit+S_nb_tp4_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
table.cell(table_id=table,column=5,row=3,text=str.tostring(L_nb_sl_hit+S_nb_sl_hit),text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
table.cell(table_id=table,column=6,row=3,text=T_PW,text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
table.cell(table_id=table,column=7,row=3,text=T_AW,text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
table.cell(table_id=table,column=8,row=3,text=T_PL,text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
table.cell(table_id=table,column=9,row=3,text=T_AL,text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
table.cell(table_id=table,column=10,row=3,text=T_APPT,text_color=color.new(color.black,10),bgcolor=color.new(color.blue,40))
//#=========================================================================#
//#|BarsColoring|
//#=========================================================================#
//Colourcodethecandles
bclr=notclrBars?na:strategy.position_size==0?#dbd5d5:
strategy.position_size>0?color.lime:
strategy.position_size<0?color.red:color.gray
barcolor(bclr,title="TradeStateBarColouring")
Expand (594 lines)
