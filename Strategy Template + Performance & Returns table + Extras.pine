Script Name: Strategy Template + Performance & Returns table + Extras
Author: Sweettz
Description: A script I've been working on since summer 2022. A template for any strategy so you just have to write or paste the code and go straight into risk management settings

Features:

>Signal only Longs/only Shorts/Both
>Leverage system
>Proper fees calculation (even with leverage on)

>Different Stop Loss systems: Simple percentage, 4 different "move to Break Even"...
PineScript code:

Pine Scriptâ„¢ strategy
Strategy Template + Performance & Returns table + Extras
//@version=5
//@Sweetz  on  TradingView.  Contact  me  if  you  have  any  question  or  suggestion.
//This  template  hasn't  been  designed  to  be  used  with  pyramiding.
strategy(title='Strategy  Template',  overlay=true,  initial_capital=1000,  default_qty_type=strategy.percent_of_equity,  commission_value=0.02,  process_orders_on_close=false)
//SIGNALS  SETTINGS
signalSwitcher  =  input.string(defval="Both",  title="Enable  signals",  options=["Both",  "Longs",  "Shorts",  "None"],  group="Risk  settings")
bool  signalLongs  =  (signalSwitcher  ==  "Longs")  or  (signalSwitcher  ==  "Both")
bool  signalShorts  =  (signalSwitcher  ==  "Shorts")  or  (signalSwitcher  ==  "Both")
long_StopLossType  =  input.string(title="Stop  Loss  Type:  (L)",  defval="Simple",  options=["Disabled",  "Simple",  "Break  Even  1",  "Break  Even  2",  "Break  Even  3",  "Break  Even  4",  "Scaling"],  group  =  "Risk  settings",  inline  =  "StopLoss  Types",  tooltip  =  "Simple:  Percentage  loss  from  entry\n\nBreak  Even  (n):  As  TP  levels  are  claimed,  SL  will  be  moved  in  (n)  steps  towards  entry  price\n\nScaling:  SL  is  not  moved  towards  entry  but  to  the  previous  level,  SL  to  BE  when  TP1  claimed,  from  BE  to  TP1  when  TP2,  so  on")
bool  long_SL_Simple  =  long_StopLossType  ==  "Simple"
bool  long_SL_BreakEven1  =  long_StopLossType  ==  "Break  Even  1"
bool  long_SL_BreakEven2  =  long_StopLossType  ==  "Break  Even  2"
bool  long_SL_BreakEven3  =  long_StopLossType  ==  "Break  Even  3"
bool  long_SL_BreakEven4  =  long_StopLossType  ==  "Break  Even  4"
bool  long_SL_Scaling  =  long_StopLossType  ==  "Scaling"
bool  long_SL_Any  =  long_StopLossType  !=  "Disabled"
long_TakeProfitType  =  input.string(title="Take  Profit  Type:  (L)",  defval="Percentage",  options=["Disabled",  "Percentage",  "Risk/Reward  Ratio"],  group  =  "Risk  settings",  inline  =  "TakeProfit  Types",  tooltip  =  "Take  Profit  levels  based  on  percentage  are  self  describing\n\nRisk/Reward  based  levels  ALWAYS  require  a  StopLoss  system,  keep  that  in  mind")
bool  long_TP_Percentage  =  long_TakeProfitType  ==  "Percentage"
bool  long_TP_Ratio  =  long_TakeProfitType  ==  "Risk/Reward  Ratio"
long_numberOrders  =  input.int(defval  =  5,  title  =  "Number  of  Orders:  (L)",  options=[1,  2,  3,  4,  5],  group="Risk  settings",  inline  =  "Order  Numbers")
bool  numberLongs_one  =  long_numberOrders  >=  1
bool  numberLongs_two  =  long_numberOrders  >=  2
bool  numberLongs_three  =  long_numberOrders  >=  3
bool  numberLongs_four  =  long_numberOrders  >=  4
bool  numberLongs_five  =  long_numberOrders  ==  5
short_StopLossType  =  input.string(title="(S)",  defval="Simple",  options=["Disabled",  "Simple",  "Break  Even  1",  "Break  Even  2",  "Break  Even  3",  "Break  Even  4",  "Scaling"],  group  =  "Risk  settings",  inline  =  "StopLoss  Types",  tooltip  =  "Simple:  Percentage  loss  from  entry\n\nBreak  Even  (n):  As  TP  levels  are  claimed,  SL  will  be  moved  in  (n)  steps  towards  entry  price\n\nScaling:  SL  is  not  moved  towards  entry  but  to  the  previous  level,  SL  to  BE  when  TP1  claimed,  from  BE  to  TP1  when  TP2,  so  on")
bool  short_SL_Simple  =  short_StopLossType  ==  "Simple"
bool  short_SL_BreakEven1  =  short_StopLossType  ==  "Break  Even  1"
bool  short_SL_BreakEven2  =  short_StopLossType  ==  "Break  Even  2"
bool  short_SL_BreakEven3  =  short_StopLossType  ==  "Break  Even  3"
bool  short_SL_BreakEven4  =  short_StopLossType  ==  "Break  Even  4"
bool  short_SL_Scaling  =  short_StopLossType  ==  "Scaling"
bool  short_SL_Any  =  short_StopLossType  !=  "Disabled"
short_TakeProfitType  =  input.string(title="(S)",  defval="Percentage",  options=["Disabled",  "Percentage",  "Risk/Reward  Ratio"],  group  =  "Risk  settings",  inline  =  "TakeProfit  Types",  tooltip  =  "Take  Profit  levels  based  on  percentage  are  self  describing\n\nRisk/Reward  based  levels  ALWAYS  require  a  StopLoss  system,  keep  that  in  mind")
bool  short_TP_Percentage  =  short_TakeProfitType  ==  "Percentage"
bool  short_TP_Ratio  =  short_TakeProfitType  ==  "Risk/Reward  Ratio"
short_numberOrders  =  input.int(defval  =  5,  title  =  "(S)",  options=[1,  2,  3,  4,  5],  group="Risk  settings",  inline  =  "Order  Numbers")
bool  numberShorts_one  =  short_numberOrders  >=  1
bool  numberShorts_two  =  short_numberOrders  >=  2
bool  numberShorts_three  =  short_numberOrders  >=  3
bool  numberShorts_four  =  short_numberOrders  >=  4
bool  numberShorts_five  =  short_numberOrders  ==  5
pos_RideFree  =  input.bool(false,  title="[TP]  Ride  Free",  tooltip="If  true,  the  last  order  (if  more  than  1  is  set)  won't  ever  be  activated,  leaving  the  position  ride  free",  group="Risk  settings")
setLeverage  =  input.int(defval  =  10,  title  =  'Position  Leverage',  minval  =  1,  maxval  =  125,  step=1,group='Risksettings')
max_acceptedLoss=input.float(defval=10,title='MaximumAcceptedLoss%',minval=0,maxval=100,step=1,group='Risksettings',tooltip="Maximumaceptedlosspertrade,actualSLcanbelowerduetoselectedStopLosssystem.AlsousedasthesimpleSLlevel")/100/setLeverage
amount_per_trade=input.int(10,title='Equity%pertrade',minval=1,maxval=100,step=1,group='Risksettings',tooltip="ThisoverwritesthedefaultTVproperty")/100
leveraged_size=strategy.equity*setLeverage/close*amount_per_trade
//SHOWSETTINGS
show_TP_SL_lines=input.string(title="ShowTP/SLlines",defval="Entry+TP+SL",options=["Entry+TP+SL","Entry+SL","Disableall"],group="Risksettings")
booli_show_Entry=(show_TP_SL_lines=="Entry+TP+SL")or(show_TP_SL_lines=="Entry+SL")
booli_show_TPLevels=(show_TP_SL_lines=="Entry+TP+SL")
booli_show_CurrentSL=(show_TP_SL_lines=="Entry+TP+SL")or(show_TP_SL_lines=="Entry+SL")
//TAKINGPROFITENTRIES
TP1Level=input.float(defval=30,title="TP1:%",group="TakingProfitLevels",inline="TakeProfitlevels1")/100/setLeverage
TP2Level=input.float(defval=60,title="TP2:%",group="TakingProfitLevels",inline="TakeProfitlevels2")/100/setLeverage
TP3Level=input.float(defval=90,title="TP3:%",group="TakingProfitLevels",inline="TakeProfitlevels3")/100/setLeverage
TP4Level=input.float(defval=120,title="TP4:%",group="TakingProfitLevels",inline="TakeProfitlevels4")/100/setLeverage
TP5Level=input.float(defval=150,title="TP5:%",group="TakingProfitLevels",inline="TakeProfitlevels5")/100/setLeverage
TP1Ratio=input.float(defval=1.0,title="Ratio",group="TakingProfitLevels",inline="TakeProfitlevels1")
TP2Ratio=input.float(defval=2.0,title="Ratio",group="TakingProfitLevels",inline="TakeProfitlevels2")
TP3Ratio=input.float(defval=3.0,title="Ratio",group="TakingProfitLevels",inline="TakeProfitlevels3")
TP4Ratio=input.float(defval=4.0,title="Ratio",group="TakingProfitLevels",inline="TakeProfitlevels4")
TP5Ratio=input.float(defval=5.0,title="Ratio",group="TakingProfitLevels",inline="TakeProfitlevels5")
//INPUTSETTINGS=========================================================================================================================================================================================================================================================================================================================================================================================
//Hereyouwouldaddinputfunctionsforyourstrategycalculation
lenght_fast=input(12,group="IndicatorSettings")
lenght_slow=input(27,group="IndicatorSettings")
//SUPERTREND===================================
ST_Filter=input.bool(false,"SuperTrendFilter",group="IndicatorSettings")
atrPeriod=10
factor=3.0
ST_Filter_Show=input.bool(false,"ShowSuperTrend",group="IndicatorSettings")
//INDICATORS===============================================================================================================================================================================================================================================================================================================================================================================================
//Hereyouwouldaddthecodeofeveryindicatororformulathatintroducesconditionsforpositions
test_fast=ta.sma(close,lenght_fast)
test_slow=ta.sma(close,lenght_slow)
bullish=ta.crossover(test_fast,test_slow)
bearish=ta.crossunder(test_fast,test_slow)
//SUPERTRENDFILTER------------------------------
[supertrend,direction]=ta.supertrend(factor,atrPeriod)
//STRATEGY===================================================================================================================================================================================================================================================================================================================================================================
SPRtrend_condition_L=close>supertrend
SPRtrend_condition_S=close<supertrend
//AndhereIusuallyaddthoseconditionsorgroupofconditionsthattriggeranOpenLong/ShortSignal
long=bullish
short=bearish
//Detonators
openLongSignal=notST_Filter?long:longandSPRtrend_condition_L//Hereyou'dedittheopeningconditions,keeptherestofthesectionuntouched
openShortSignal=notST_Filter?short:shortandSPRtrend_condition_S//
closeLongSignal=openShortSignal
closeShortSignal=openLongSignal
boolisActiveLong=(openLongSignalorstrategy.position_size>0)andnotcloseLongSignal
boolisActiveShort=(openShortSignalorstrategy.position_size<0)andnotcloseShortSignal
//---DATERANGEFILTERSETTINGS---//Managedtomakethisnewfeaturewiththehelpof@bfr_
dateFilter=input.string(defval="No",title="Rangerequired?",options=["Automatic","Manualinput","No"],group="Timerangesettings",tooltip="Featureimprovedsoautomaticfilterwouldhelpme(andyou)throughwalkforwardbacktesting\n\nManualinputisthesimplestdateinput")
boolautoFilter=(dateFilter=="Automatic")
boolmanualFilter=(dateFilter=="Manualinput")
numberDivisions=input.int(defval=10,minval=1,maxval=10,title="Numberofdivisions",group="Timerangesettings",tooltip="These3settingsmustrespectsomerules,orelsetheautomaticfilterwon'tworkandyieldanerrorsign\n\nStartmustnotbeequaltoorhigherthanFinish,andneithercanbehigherthantheNumberofdivisions")
rangeStart=input.int(defval=0,minval=0,maxval=9,title="Start->Finish",group="Timerangesettings",inline="Start-Finish")
rangeFinish=input.int(defval=10,minval=1,maxval=10,title="",group="Timerangesettings",inline="Start-Finish")
rangePlotError=(rangeStart>rangeFinish)or(rangeFinish>numberDivisions)or(rangeStart==numberDivisions)or(rangeStart==rangeFinish)
ifrangePlotErrorandbarstate.islast//Thiswillwarnofwrongsettings
label.new(bar_index+30,close,"WALKFORWARDWRONGSETTINGS",color=#ff000080,textcolor=#ffffff,style=label.style_label_left)
//
varintfirstTime=na
ifbarstate.isfirst
firstTime:=time
dateFirst=(math.round((last_bar_time-firstTime)/numberDivisions)*rangeStart)+firstTime
dateLast=(math.round((last_bar_time-firstTime)/numberDivisions)*rangeFinish)+firstTime
inRange_auto=time>=dateFirstandtime<=dateLastandautoFilter
//Manualdatefilter
rangeStart_manual=input.time(timestamp("01Jan200000:00:00"),"Manualrange:Start",group="Timerangesettings",confirm=false)//Setconfirmtotruesoscriptforcesyoutosettherangewhenaddingittothechart.Notmytaste.
rangeFinish_manual=input.time(timestamp("01Jan203000:00:00"),"Manualrange:Finish",group="Timerangesettings",confirm=false)
inRange_manual=time>=rangeStart_manualandtime<=rangeFinish_manualandmanualFilter
inRange_both=notautoFilterandnotmanualFilter?true:inRange_autoorinRange_manual
//LONGARRAYS,TPANDSLLOGIC===============================================================================================================================================================================================================================================================================================================================================
floatLongStopLossLevel=na
floatlongTP1L=na
floatlongTP2L=na
floatlongTP3L=na
floatlongTP4L=na
floatlongTP5L=na
long_starting_level=(strategy.position_size<0?close:strategy.position_size>=0?strategy.position_avg_price:na)
iflong_TP_Percentage
longTP1L:=(1+TP1Level)*long_starting_level
longTP2L:=(1+TP2Level)*long_starting_level
longTP3L:=(1+TP3Level)*long_starting_level
longTP4L:=(1+TP4Level)*long_starting_level
longTP5L:=(1+TP5Level)*long_starting_level
iflong_TP_Ratio
iflong_SL_Any
Simple_SL_Diff=math.abs(long_starting_level-long_starting_level*(1-max_acceptedLoss))
longTP1L:=long_starting_level+Simple_SL_Diff*TP1Ratio
longTP2L:=long_starting_level+Simple_SL_Diff*TP2Ratio
longTP3L:=long_starting_level+Simple_SL_Diff*TP3Ratio
longTP4L:=long_starting_level+Simple_SL_Diff*TP4Ratio
longTP5L:=long_starting_level+Simple_SL_Diff*TP5Ratio
boollongTP1hit=high>=longTP1L
boollongTP2hit=high>=longTP2L
boollongTP3hit=high>=longTP3L
boollongTP4hit=high>=longTP4L
boollongTP5hit=high>=longTP5L
ifisActiveLong
iflong_SL_Simple
LongStopLossLevel:=long_starting_level*(1-max_acceptedLoss)
iflong_SL_Scaling
ifopenLongSignalandnot(strategy.position_size>0)
LongStopLossLevel:=close*(1-max_acceptedLoss)
else
longSteppedStopLoss=longTP5hit?longTP4L:longTP4hit?longTP3L:longTP3hit?longTP2L:longTP2hit?longTP1L:longTP1hit?strategy.position_avg_price:long_starting_level*(1-max_acceptedLoss)
LongStopLossLevel:=math.max(longSteppedStopLoss,nz(LongStopLossLevel[1]))
iflong_SL_BreakEven1
ifopenLongSignalandnot(strategy.position_size>0)
LongStopLossLevel:=close*(1-max_acceptedLoss)
else
longBEStopLoss=longTP1hit?strategy.position_avg_price:long_starting_level*(1-max_acceptedLoss)
LongStopLossLevel:=math.max(longBEStopLoss,nz(LongStopLossLevel[1]))
iflong_SL_BreakEven2
ifopenLongSignalandnot(strategy.position_size>0)
LongStopLossLevel:=close*(1-max_acceptedLoss)
else
longBEStopLoss=longTP2hit?strategy.position_avg_price:longTP1hit?long_starting_level*(1-max_acceptedLoss)+((strategy.position_avg_price-long_starting_level*(1-max_acceptedLoss))/2):long_starting_level*(1-max_acceptedLoss)
LongStopLossLevel:=math.max(longBEStopLoss,nz(LongStopLossLevel[1]))
iflong_SL_BreakEven3
ifopenLongSignalandnot(strategy.position_size>0)
LongStopLossLevel:=close*(1-max_acceptedLoss)
else
longBEStopLoss=longTP3hit?strategy.position_avg_price:longTP2hit?long_starting_level*(1-max_acceptedLoss)+2*((strategy.position_avg_price-long_starting_level*(1-max_acceptedLoss))/3):longTP1hit?long_starting_level*(1-max_acceptedLoss)+((strategy.position_avg_price-long_starting_level*(1-max_acceptedLoss))/3):long_starting_level*(1-max_acceptedLoss)
LongStopLossLevel:=math.max(longBEStopLoss,nz(LongStopLossLevel[1]))
iflong_SL_BreakEven4
ifopenLongSignalandnot(strategy.position_size>0)
LongStopLossLevel:=close*(1-max_acceptedLoss)
else
longBEStopLoss=longTP4hit?strategy.position_avg_price:longTP3hit?long_starting_level*(1-max_acceptedLoss)+3*((strategy.position_avg_price-long_starting_level*(1-max_acceptedLoss))/4):longTP2hit?long_starting_level*(1-max_acceptedLoss)+2*((strategy.position_avg_price-long_starting_level*(1-max_acceptedLoss))/4):longTP1hit?long_starting_level*(1-max_acceptedLoss)+((strategy.position_avg_price-long_starting_level*(1-max_acceptedLoss))/4):long_starting_level*(1-max_acceptedLoss)
LongStopLossLevel:=math.max(longBEStopLoss,nz(LongStopLossLevel[1]))
boollongSLHIT=low<LongStopLossLevel
//SHORTARRAYS,TPANDSLLOGIC=======================================================================================================================================================================================================================================================================================================================================
floatShortStopLossLevel=na
floatshortTP1L=na
floatshortTP2L=na
floatshortTP3L=na
floatshortTP4L=na
floatshortTP5L=na
short_starting_level=(strategy.position_size>0?close:strategy.position_size<=0?strategy.position_avg_price:na)
ifshort_TP_Percentage
shortTP1L:=(1-TP1Level)*short_starting_level
shortTP2L:=(1-TP2Level)*short_starting_level
shortTP3L:=(1-TP3Level)*short_starting_level
shortTP4L:=(1-TP4Level)*short_starting_level
shortTP5L:=(1-TP5Level)*short_starting_level
ifshort_TP_Ratio
ifshort_SL_Any
Simple_SL_Diff=math.abs(short_starting_level-short_starting_level*(1+max_acceptedLoss))
shortTP1L:=short_starting_level-Simple_SL_Diff*TP1Ratio
shortTP2L:=short_starting_level-Simple_SL_Diff*TP2Ratio
shortTP3L:=short_starting_level-Simple_SL_Diff*TP3Ratio
shortTP4L:=short_starting_level-Simple_SL_Diff*TP4Ratio
shortTP5L:=short_starting_level-Simple_SL_Diff*TP5Ratio
boolshortTP1hit=low<=shortTP1L
boolshortTP2hit=low<=shortTP2L
boolshortTP3hit=low<=shortTP3L
boolshortTP4hit=low<=shortTP4L
boolshortTP5hit=low<=shortTP5L
ifisActiveShort
ifshort_SL_Simple
ShortStopLossLevel:=short_starting_level*(1+max_acceptedLoss)
ifshort_SL_Scaling
ifopenShortSignalandnot(strategy.position_size<0)
ShortStopLossLevel:=close*(1+max_acceptedLoss)
else
shortSteppedStopLoss=shortTP5hit?shortTP4L:shortTP4hit?shortTP3L:shortTP3hit?shortTP2L:shortTP2hit?shortTP1L:shortTP1hit?strategy.position_avg_price:short_starting_level*(1+max_acceptedLoss)
ShortStopLossLevel:=math.min(shortSteppedStopLoss,nz(ShortStopLossLevel[1]))
ifshort_SL_BreakEven1
ifopenShortSignalandnot(strategy.position_size<0)
ShortStopLossLevel:=close*(1+max_acceptedLoss)
else
shortBEStopLoss=shortTP1hit?strategy.position_avg_price:short_starting_level*(1+max_acceptedLoss)
ShortStopLossLevel:=math.min(shortBEStopLoss,nz(ShortStopLossLevel[1]))
ifshort_SL_BreakEven2
ifopenShortSignalandnot(strategy.position_size<0)
ShortStopLossLevel:=close*(1+max_acceptedLoss)
else
shortBEStopLoss=shortTP2hit?strategy.position_avg_price:shortTP1hit?short_starting_level*(1+max_acceptedLoss)+((strategy.position_avg_price-short_starting_level*(1+max_acceptedLoss))/2):short_starting_level*(1+max_acceptedLoss)
ShortStopLossLevel:=math.min(shortBEStopLoss,nz(ShortStopLossLevel[1]))
ifshort_SL_BreakEven3
ifopenShortSignalandnot(strategy.position_size<0)
ShortStopLossLevel:=close*(1+max_acceptedLoss)
else
shortBEStopLoss=shortTP3hit?strategy.position_avg_price:shortTP2hit?short_starting_level*(1+max_acceptedLoss)+2*((strategy.position_avg_price-short_starting_level*(1+max_acceptedLoss))/3):shortTP1hit?short_starting_level*(1+max_acceptedLoss)+((strategy.position_avg_price-short_starting_level*(1+max_acceptedLoss))/3):short_starting_level*(1+max_acceptedLoss)
ShortStopLossLevel:=math.min(shortBEStopLoss,nz(ShortStopLossLevel[1]))
ifshort_SL_BreakEven4
ifopenShortSignalandnot(strategy.position_size<0)
ShortStopLossLevel:=close*(1+max_acceptedLoss)
else
shortBEStopLoss=shortTP4hit?strategy.position_avg_price:shortTP3hit?short_starting_level*(1+max_acceptedLoss)+3*((strategy.position_avg_price-short_starting_level*(1+max_acceptedLoss))/4):shortTP2hit?short_starting_level*(1+max_acceptedLoss)+2*((strategy.position_avg_price-short_starting_level*(1+max_acceptedLoss))/4):shortTP1hit?short_starting_level*(1+max_acceptedLoss)+((strategy.position_avg_price-short_starting_level*(1+max_acceptedLoss))/4):short_starting_level*(1+max_acceptedLoss)
ShortStopLossLevel:=math.min(shortBEStopLoss,nz(ShortStopLossLevel[1]))
boolshortSLHIT=high>ShortStopLossLevel
//LONGANDSHORTLINESPLOTS===============================================================================================================================================================================================================
//--TPLINESPLOT--//
floatplotEntry=na
ifisActiveLongandinRange_bothandi_show_Entry
ifstrategy.position_size<0
plotEntry:=close
else
ifstrategy.position_size>=0
plotEntry:=strategy.position_avg_price
ifisActiveShortandinRange_bothandi_show_Entry
ifstrategy.position_size>0
plotEntry:=close
else
ifstrategy.position_size<=0
plotEntry:=strategy.position_avg_price
floatplotSL=na
ifisActiveLongandinRange_bothandi_show_CurrentSLandstrategy.position_size>0
plotSL:=LongStopLossLevel
ifisActiveShortandinRange_bothandi_show_CurrentSLandstrategy.position_size<0
plotSL:=ShortStopLossLevel
floatplotTP1=na
ifisActiveLongandinRange_bothandi_show_TPLevelsandstrategy.position_size>0
plotTP1:=longTP1L
ifisActiveShortandinRange_bothandi_show_TPLevelsandstrategy.position_size<0
plotTP1:=shortTP1L
floatplotTP2=na
ifisActiveLongandinRange_bothandi_show_TPLevelsandstrategy.position_size>0andnumberLongs_two
plotTP2:=longTP2L
ifisActiveShortandinRange_bothandi_show_TPLevelsandstrategy.position_size<0andnumberShorts_two
plotTP2:=shortTP2L
floatplotTP3=na
ifisActiveLongandinRange_bothandi_show_TPLevelsandstrategy.position_size>0andnumberLongs_three
plotTP3:=longTP3L
ifisActiveShortandinRange_bothandi_show_TPLevelsandstrategy.position_size<0andnumberShorts_three
plotTP3:=shortTP3L
floatplotTP4=na
ifisActiveLongandinRange_bothandi_show_TPLevelsandstrategy.position_size>0andnumberLongs_four
plotTP4:=longTP4L
ifisActiveShortandinRange_bothandi_show_TPLevelsandstrategy.position_size<0andnumberShorts_four
plotTP4:=shortTP4L
floatplotTP5=na
ifisActiveLongandinRange_bothandi_show_TPLevelsandstrategy.position_size>0andnumberLongs_five
plotTP5:=longTP5L
ifisActiveShortandinRange_bothandi_show_TPLevelsandstrategy.position_size<0andnumberShorts_five
plotTP5:=shortTP5L
//
plot(plotEntry,title='EntryPrice',color=#FFFFFF,linewidth=1,style=plot.style_cross)
plot(plotSL,'StopLossPrice',color=isActiveLong?#0044ff:isActiveShort?#ff7800:na,linewidth=2,style=plot.style_linebr,offset=0)
plot(plotTP1,title='TP1',color=#00e2ff80,linewidth=1,style=plot.style_linebr,offset=0)
plot(plotTP2,title='TP2',color=#0bff0080,linewidth=1,style=plot.style_linebr,offset=0)
plot(plotTP3,title='TP3',color=#ffe50080,linewidth=1,style=plot.style_linebr,offset=0)
plot(plotTP4,title='TP4',color=#ff780080,linewidth=1,style=plot.style_linebr,offset=0)
plot(plotTP5,title='TP5',color=#ff000080,linewidth=1,style=plot.style_linebr,offset=0)
bodyMiddle=plot(ST_Filter_Show?(open+close)/2:na,display=display.none)
upTrnd=plot(direction<0andST_Filter_Show?supertrend:na,"+SuperTrend",color=color.green,style=plot.style_linebr)
dnTrnd=plot(direction>0andST_Filter_Show?supertrend:na,"-SuperTrend",color=color.red,style=plot.style_linebr)
fill(bodyMiddle,upTrnd,color.new(color.green,95),fillgaps=false,title="BullishSuperTrend")
fill(bodyMiddle,dnTrnd,color.new(color.red,95),fillgaps=false,title="BearishSuperTrend")
bgcolor(autoFilterandinRange_autoandnotrangePlotError?#00ff0008:autoFilterandnotrangePlotError?#ff000008:autoFilter?#ffffff15:na,title="Datefiltercolor")
//BACKTESTING=============================================================================================================================================================================================================================
//LONGORDERS============================
order_quantity_longs=numberLongs_five?20:numberLongs_four?25:numberLongs_three?33:numberLongs_two?50:100
longTPhit_last=numberLongs_five?longTP5hit:numberLongs_four?longTP4hit:numberLongs_three?longTP3hit:numberLongs_two?longTP2hit:longTP1hit
ifsignalLongsandinRange_both
if(notpos_RideFree?closeLongSignalorlongTPhit_last:closeLongSignal)
strategy.close(id="Long",alert_message='Long('+syminfo.ticker+'):Closedposition',comment="C")
ifopenLongSignal
strategy.entry(id="Long",direction=strategy.long,alert_message='Long('+syminfo.ticker+'):Started',comment="OpenL",qty=leveraged_size)
ifisActiveLong
strategy.exit(id="LongScalingTP1",from_entry="Long",stop=LongStopLossLevel,limit=longTP1L,alert_message='Long('+syminfo.ticker+'):TP1Hit',comment="L1",qty_percent=notnumberLongs_two?100:order_quantity_longs)
ifnumberLongs_two
strategy.exit(id="LongScalingTP2",from_entry="Long",stop=LongStopLossLevel,limit=notnumberLongs_threeandpos_RideFree?na:longTP2L,alert_message='Long('+syminfo.ticker+'):TP2Hit',comment="L2",qty_percent=notnumberLongs_three?100:order_quantity_longs)
ifnumberLongs_three
strategy.exit(id="LongScalingTP3",from_entry="Long",stop=LongStopLossLevel,limit=notnumberLongs_fourandpos_RideFree?na:longTP3L,alert_message='Long('+syminfo.ticker+'):TP3Hit',comment="L3",qty_percent=notnumberLongs_four?100:order_quantity_longs)
ifnumberLongs_four
strategy.exit(id="LongScalingTP4",from_entry="Long",stop=LongStopLossLevel,limit=notnumberLongs_fiveandpos_RideFree?na:longTP4L,alert_message='Long('+syminfo.ticker+'):TP4Hit',comment="L4",qty_percent=notnumberLongs_five?100:order_quantity_longs)
ifnumberLongs_five
strategy.exit(id="LongScalingTP5",from_entry="Long",stop=LongStopLossLevel,limit=pos_RideFree?na:longTP5L,alert_message='Long('+syminfo.ticker+'):TP5Hit',comment="L5",qty_percent=100)
//SHORTORDERS============================
order_quantity_shorts=numberShorts_five?20:numberShorts_four?25:numberShorts_three?33:numberShorts_two?50:100
shortTPhit_last=numberShorts_five?shortTP5hit:numberShorts_four?shortTP4hit:numberShorts_three?shortTP3hit:numberShorts_two?shortTP2hit:shortTP1hit
ifsignalShortsandinRange_both
if(notpos_RideFree?closeShortSignalorshortTPhit_last:closeShortSignal)
strategy.close(id="Short",alert_message='Short('+syminfo.ticker+'):Closedposition',comment="C")
ifopenShortSignal
strategy.entry(id="Short",direction=strategy.short,alert_message='Short('+syminfo.ticker+'):Started',comment="OpenS",qty=leveraged_size)
ifisActiveShort
strategy.exit(id="ShortScalingTP1",from_entry="Short",stop=ShortStopLossLevel,limit=shortTP1L,alert_message='Short('+syminfo.ticker+'):TP1Hit',comment="S1",qty_percent=notnumberShorts_two?100:order_quantity_shorts)
ifnumberShorts_two
strategy.exit(id="ShortScalingTP2",from_entry="Short",stop=ShortStopLossLevel,limit=notnumberShorts_threeandpos_RideFree?na:shortTP2L,alert_message='Short('+syminfo.ticker+'):TP2Hit',comment="S2",qty_percent=notnumberShorts_three?100:order_quantity_shorts)
ifnumberShorts_three
strategy.exit(id="ShortScalingTP3",from_entry="Short",stop=ShortStopLossLevel,limit=notnumberShorts_fourandpos_RideFree?na:shortTP3L,alert_message='Short('+syminfo.ticker+'):TP3Hit',comment="S3",qty_percent=notnumberShorts_four?100:order_quantity_shorts)
ifnumberShorts_four
strategy.exit(id="ShortScalingTP4",from_entry="Short",stop=ShortStopLossLevel,limit=notnumberShorts_fiveandpos_RideFree?na:shortTP4L,alert_message='Short('+syminfo.ticker+'):TP4Hit',comment="S4",qty_percent=notnumberShorts_five?100:order_quantity_shorts)
ifnumberShorts_five
strategy.exit(id="ShortScalingTP5",from_entry="Short",stop=ShortStopLossLevel,limit=pos_RideFree?na:shortTP5L,alert_message='Short('+syminfo.ticker+'):TP5Hit',comment="S5",qty_percent=100)
//
plotshape(strategy.position_size<=0?openLongSignal:na,style=shape.triangleup,location=location.bottom,color=#00ff00,size=size.small)
plotshape(strategy.position_size>=0?openShortSignal:na,style=shape.triangledown,location=location.bottom,color=#ff0000,size=size.small)
//#=========================================================================#
//#|Portfoliotable|
//#=========================================================================#
table_initial_capital=strategy.initial_capital
table_net_profit=strategy.netprofit
table_realised_balance=strategy.initial_capital+strategy.netprofit
table_open_profit=strategy.openprofit
table_equity=strategy.equity
table_position_size=math.abs(strategy.position_size)/setLeverage
table_avg_price=nz(strategy.position_avg_price)
table_position_cost=table_position_size*table_avg_price
table_cash=strategy.initial_capital+strategy.netprofit-table_position_size*table_avg_price
table_position_ROI=nz(table_open_profit/table_position_cost)*100
show_PF_table=input.string(defval="Normal",title="Portfoliotable",options=["Large","Normal","Small","Tiny","Disabled"],group="Extrasettings",inline="Portfoliotable")
boolPF_table_size_tiny=show_PF_table=="Tiny"
boolPF_table_size_small=show_PF_table=="Small"
boolPF_table_size_normal=show_PF_table=="Normal"
boolPF_table_size_large=show_PF_table=="Large"
boolPF_table_shown=show_PF_table!="Disabled"
PF_table_location=input.string(defval="Topright",title="",options=["Topmid","Topright","Midright","Botleft","Botmid","Botright"],group="Extrasettings",inline="Portfoliotable")
stringPF_table_loc=PF_table_location=="Topmid"?position.top_center:PF_table_location=="Topright"?position.top_right:PF_table_location=="Midright"?position.middle_right:PF_table_location=="Botleft"?position.bottom_left:PF_table_location=="Botmid"?position.bottom_center:PF_table_location=="Botright"?position.bottom_right:na
vartableportfolio_table=PF_table_shown?table.new(PF_table_loc,4,5,border_width=1):na
ftable(_table_id,_column,_row,_text,_bgcolor)=>
table.cell(_table_id,_column,_row,_text,0,0,color.black,text.align_right,text.align_center,PF_table_size_tiny?size.tiny:PF_table_size_small?size.small:PF_table_size_normal?size.normal:PF_table_size_large?size.large:na,_bgcolor)
ftable(portfolio_table,0,0,'Equity:',#9598a1)
ftable(portfolio_table,1,0,str.tostring(table_equity,'#.##')+''+syminfo.currency,table_equity>=0?color.green:color.red)
ftable(portfolio_table,0,1,'OpenProfit:',#9598a1)
ftable(portfolio_table,1,1,str.tostring(table_open_profit,'#.##')+''+syminfo.currency,table_open_profit>=0?color.green:color.red)
ftable(portfolio_table,0,2,'RealisedBalance:',#9598a1)
ftable(portfolio_table,1,2,str.tostring(table_realised_balance,'#.##')+''+syminfo.currency,table_realised_balance>=0?color.green:color.red)
ftable(portfolio_table,0,3,'NetProfit:',#9598a1)
ftable(portfolio_table,1,3,str.tostring(table_net_profit,'#.##')+''+syminfo.currency,table_net_profit>=0?color.green:color.red)
ftable(portfolio_table,0,4,'InitialCapital:',#9598a1)
ftable(portfolio_table,1,4,str.tostring(table_initial_capital,'#.##')+''+syminfo.currency,#fff7d5)
ftable(portfolio_table,2,0,'Cash:',#9598a1)
ftable(portfolio_table,3,0,str.tostring(table_cash,'#.##')+''+syminfo.currency,#fff7d5)
ftable(portfolio_table,2,1,'PositionCost:',#9598a1)
ftable(portfolio_table,3,1,str.tostring(table_position_cost,'#.##')+''+syminfo.currency,#fff7d5)
ftable(portfolio_table,2,2,'PositionSize:',#9598a1)
ftable(portfolio_table,3,2,str.tostring(table_position_size,'#.####')+''+syminfo.basecurrency,#fff7d5)
ftable(portfolio_table,2,3,'AveragePrice:',#9598a1)
ftable(portfolio_table,3,3,str.tostring(table_avg_price,'#.##')+''+syminfo.currency,#fff7d5)
ftable(portfolio_table,2,4,'PositionROI:',#9598a1)
ftable(portfolio_table,3,4,str.tostring(table_position_ROI,'#.##')+'%',table_position_ROI>0?color.green:table_position_ROI<0?color.red:table_position_ROI==0?#fff7d5:na)
//#=========================================================================#
//#|Returnstable|Modifiedversionoftwo@QuantNomadscripts.Won'tworkonlowTF.LowerTFcompatibilitymightbeaddedinthefuture.
//#=========================================================================#
TableReturnsSetting=input.string(defval="Disabled",title="Tableperformancesetting",options=["Weekly","Monthly","Disabled"],group="Extrasettings",tooltip="Requiresrecalculationoneverytickinordertowork.\nMaynotworkinverylowtimeframes")
boolTableWeekly=TableReturnsSetting=="Weekly"
boolTableMonthly=TableReturnsSetting=="Monthly"
prec=2
new_week=weekofyear(time)!=weekofyear(time[1])
new_month=month(time)!=month(time[1])
new_year=year(time)!=year(time[1])
eq=strategy.equity
bar_pnl=eq/eq[1]-1
cur_week_pnl=0.0
cur_month_pnl=0.0
cur_year_pnl=0.0
cur_week_pnl:=new_week?0.0:(1+cur_week_pnl[1])*(1+bar_pnl)-1
cur_month_pnl:=new_month?0.0:(1+cur_month_pnl[1])*(1+bar_pnl)-1
cur_year_pnl:=new_year?0.0:(1+cur_year_pnl[1])*(1+bar_pnl)-1
varweek_pnl=array.new_float(0)
varweek_time=array.new_int(0)
varmonth_pnl=array.new_float(0)
varmonth_time=array.new_int(0)
varyear_pnl=array.new_float(0)
varyear_time=array.new_int(0)
last_computed=false
ifnotna(cur_week_pnl[1])and(new_weekorbarstate.islast)
iflast_computed[1]
array.pop(week_pnl)
array.pop(week_time)
array.push(week_pnl,cur_week_pnl[1])
array.push(week_time,time[1])
ifnotna(cur_month_pnl[1])and(new_monthorbarstate.islast)
iflast_computed[1]
array.pop(month_pnl)
array.pop(month_time)
array.push(month_pnl,cur_month_pnl[1])
array.push(month_time,time[1])
ifnotna(cur_year_pnl[1])and(new_yearorbarstate.islast)
iflast_computed[1]
array.pop(year_pnl)
array.pop(year_time)
array.push(year_pnl,cur_year_pnl[1])
array.push(year_time,time[1])
last_computed:=barstate.islast?true:nz(last_computed[1])
//WeeklyP&LTable
table_size=size.tiny
varweekly_table=table(na)
ifarray.size(year_pnl)>0andTableWeekly
weekly_table:=table.new(position.bottom_right,
columns=56,rows=array.size(year_pnl)*3+5,border_width=1)
table.cell(weekly_table,0,0,'Perf',
bgcolor=#999999,text_size=table_size)
fornumW=1to53by1
table.cell(weekly_table,numW,0,str.tostring(numW),
bgcolor=#999999,text_size=table_size)
table.cell(weekly_table,54,0,'',
bgcolor=#999999,text_size=table_size)
table.cell(weekly_table,55,0,'Year',
bgcolor=#999999,text_size=table_size)
max_abs_y=math.max(math.abs(array.max(year_pnl)),math.abs(array.min(year_pnl)))
max_abs_m=math.max(math.abs(array.max(week_pnl)),math.abs(array.min(week_pnl)))
foryi=0toarray.size(year_pnl)-1by1
table.cell(weekly_table,0,yi+1,
str.tostring(year(array.get(year_time,yi))),
bgcolor=#cccccc,text_size=table_size)
table.cell(weekly_table,53,yi+1,'',
bgcolor=#999999,text_size=table_size)
table.cell(weekly_table,54,yi+1,'',
bgcolor=#999999,text_size=table_size)
y_color=array.get(year_pnl,yi)==0?#e6b996:array.get(year_pnl,yi)>0?color.new(color.green,transp=20):color.new(color.red,transp=20)
table.cell(weekly_table,55,yi+1,
str.tostring(math.round(array.get(year_pnl,yi)*100,prec)),
bgcolor=y_color,text_size=table_size)
intiw_row=na
intiw_col=na
forwi=0toarray.size(week_time)-2by1
w_row=year(array.get(week_time,wi))-year(array.get(year_time,0))+1
w_col=weekofyear(array.get(week_time,wi))
w_color=array.get(week_pnl,wi)==0?#e6b996:array.get(week_pnl,wi)>0?color.new(color.green,transp=20):color.new(color.red,transp=20)
ifiw_row+1==w_rowandiw_col+1==w_col
table.cell(weekly_table,w_col,w_row-1,
str.tostring(math.round(array.get(week_pnl,wi)*100,prec)),
bgcolor=w_color,text_size=table_size)
else
table.cell(weekly_table,w_col,w_row,
str.tostring(math.round(array.get(week_pnl,wi)*100,prec)),
bgcolor=w_color,text_size=table_size)
iw_row:=w_row
iw_col:=w_col
//MonthlyP&LTable
varmonthly_table=table(na)
ifbarstate.islastandTableMonthly
monthly_table:=table.new(position.bottom_right,columns=14,rows=array.size(year_pnl)+1,border_width=1)
table.cell(monthly_table,0,0,'',bgcolor=#cccccc)
table.cell(monthly_table,1,0,'Jan',bgcolor=#cccccc)
table.cell(monthly_table,2,0,'Feb',bgcolor=#cccccc)
table.cell(monthly_table,3,0,'Mar',bgcolor=#cccccc)
table.cell(monthly_table,4,0,'Apr',bgcolor=#cccccc)
table.cell(monthly_table,5,0,'May',bgcolor=#cccccc)
table.cell(monthly_table,6,0,'Jun',bgcolor=#cccccc)
table.cell(monthly_table,7,0,'Jul',bgcolor=#cccccc)
table.cell(monthly_table,8,0,'Aug',bgcolor=#cccccc)
table.cell(monthly_table,9,0,'Sep',bgcolor=#cccccc)
table.cell(monthly_table,10,0,'Oct',bgcolor=#cccccc)
table.cell(monthly_table,11,0,'Nov',bgcolor=#cccccc)
table.cell(monthly_table,12,0,'Dec',bgcolor=#cccccc)
table.cell(monthly_table,13,0,'Year',bgcolor=#999999)
foryi=0toarray.size(year_pnl)-1by1
table.cell(monthly_table,0,yi+1,str.tostring(year(array.get(year_time,yi))),bgcolor=#cccccc)
y_color=array.get(year_pnl,yi)>0?#4caf50:#ff5252
table.cell(monthly_table,13,yi+1,str.tostring(math.round(array.get(year_pnl,yi)*100,prec)),bgcolor=y_color)
formi=0toarray.size(month_time)-1by1
m_row=year(array.get(month_time,mi))-year(array.get(year_time,0))+1
m_col=month(array.get(month_time,mi))
m_color=array.get(month_pnl,mi)>0?#4caf50:#ff5252
table.cell(monthly_table,m_col,m_row,str.tostring(math.round(array.get(month_pnl,mi)*100,prec)),bgcolor=m_color)
//
//#=========================================================================#
//#|SupportandResistanceBands|VolumebasedS/Rlevels.Notmadebyme,theoriginaluseris@shtcoinr.Safetoremove
//#=========================================================================#
intlengthSR=20
change=volume/volume[1]-1
stdev=ta.stdev(change,lengthSR)
difference=change/stdev[1]
floatTreshold=5
zero=0
signalSR=math.abs(difference)
leveluphi=ta.valuewhen(signalSR>Treshold,high[1],0)
leveluplo=ta.valuewhen(signalSR>Treshold,low[1],0)
plotSRareas=input.bool(true,"EnableVolumeS/R",group="Extrasettings")
p1=plot(plotSRareas?leveluphi:na,style=plot.style_circles,color=#ffffff80)
p2=plot(plotSRareas?leveluplo:na,style=plot.style_circles,color=#ffffff80)
fill(p1,p2,color=#ffffff1a,title="VolumeS/RBands")
Expand (582 lines)
