Script Name: PresentTrend - Strategy [presentTrading]
Author: PresentTrading
Description: - Introduction and how it is different
The PresentTrend strategy is a unique custom trend-following strategy. This combination allows the strategy to take advantage of both short-term and long-term market trends, making it suitable for various market conditions.

BTCUSDT 4hr chart


 (700.hk) 3D chart


- Strategy, How it Works
RSI or MFI: The first part uses a...
PineScript code:

Pine Script™ strategy
PresentTrend - Strategy [presentTrading]
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  PresentTrading
//@version=5
//  Define  the  strategy  settings
strategy('PresentTrend  -  Strategy  [presentTrading]'  ,  overlay=true,  precision=3,  default_qty_type=strategy.cash,
  commission_value=  0.1,  commission_type=strategy.commission.percent,  slippage=  1,
    currency=currency.USD,  default_qty_type  =  strategy.percent_of_equity,  default_qty_value  =  10,  initial_capital=  10000)
//  Define  the  input  parameters
priceSource    =  input.source(title='Source',  defval=hlc3,  group='PresentTrend')  //  The  price  source  to  use
lengthParam    =  input.int(title='Length',  defval=14,  group='PresentTrend')  //  The  length  of  the  moving  average
multiplier  =  input.float(title='Multiplier',  defval=1.618,  step=0.1,  group='PresentTrend')  //  The  multiplier  for  the  ATR
indicatorChoice    =  input.bool(title='Whether  to  use  RSI  or  MFI',  defval=false,  group='PresentTrend')  //  Whether  to  use  RSI  or  MFI
//  Add  a  parameter  for  choosing  Long  or  Short
tradeDirection  =  input.string(title="Trade  Direction",  defval="Both",  options=["Long",  "Short",  "Both"])
//  Calculate  the  ATR  and  the  upT  and  downT  values
ATR  =  ta.sma(ta.tr,  lengthParam)
upperThreshold  =  low  -  ATR  *  multiplier
lowerThreshold    =  high  +  ATR  *  multiplier
//  Initialize  the  PresentTrend  indicator
PresentTrend  =  0.0
//  Calculate  the  PresentTrend  indicator
PresentTrend  :=  (indicatorChoice  ?  ta.rsi(priceSource,  lengthParam)  >=  50  :  ta.mfi(hlc3,  lengthParam)  >=  50)  ?  upperThreshold  <  nz(PresentTrend[1])  ?  nz(PresentTrend[1])  :  upperThreshold  :  lowerThreshold  >  nz(PresentTrend[1])  ?  nz(PresentTrend[1])  :  lowerThreshold
//  Calculate  the  buy  and  sell  signals
longSignal    =  ta.crossover(PresentTrend,PresentTrend[2])
shortSignal=ta.crossunder(PresentTrend,PresentTrend[2])
//Calculatethenumberofbarssincethelastbuyandsellsignals
barsSinceBuy=ta.barssince(longSignal)
barsSinceSell=ta.barssince(shortSignal)
previousBuy=ta.barssince(longSignal[1])
previousSell=ta.barssince(shortSignal[1])
//Initializethedirectionvariable
trendDirection=0
//Calculatethedirectionofthetrend
trendDirection:=longSignalandpreviousBuy>barsSinceSell?1:shortSignalandpreviousSell>barsSinceBuy?-1:trendDirection[1]
//Checkthetradedirectionparameterbeforeenteringatrade
if(trendDirection==1and(tradeDirection=="Long"ortradeDirection=="Both"))
strategy.entry("Buy",strategy.long)
if(trendDirection==-1and(tradeDirection=="Short"ortradeDirection=="Both"))
strategy.entry("Sell",strategy.short)
//AddastopmechanismwhenthetradeDirectionisone-sided
if(tradeDirection=="Long"andtrendDirection==-1)
strategy.close("Buy")
if(tradeDirection=="Short"andtrendDirection==1)
strategy.close("Sell")
//Visualization
plot(PresentTrend,color=color.blue,title="PresentTrend")
plotshape(series=longSignal,location=location.belowbar,color=color.green,style=shape.labelup,title="BuySignal")
plotshape(series=shortSignal,location=location.abovebar,color=color.red,style=shape.labeldown,title="SellSignal")
Expand (63 lines)
