Script Name: robotrading linreg
Author: ROBO_Trading
Description: What is Linear Regression?

(English) www.tradingview.com
(English) www.tradingview.com
(Russian)  Link

 This script

Straight lines show the last linear regression channel. The smooth lines show the coordinates of the same channel in the past. This allows you to backtest this strategy using past prices.

It also makes sure that the linear regression channel...
PineScript code:

Pine Scriptâ„¢ strategy
robotrading linreg
//Robotrading
//@version=4
strategy("robotrading  linreg",  "linreg",  overlay=true,  default_qty_type  =  strategy.percent_of_equity,  default_qty_value  =  10,  commission_value  =  0.1)
//Settings
source            =  input(close)
length            =  input(100,  minval=1)
offset            =  input(0,  minval=0)
dev                  =  input(2.0,  "Deviation")
smoothing      =  input(1,  minval=1)
mtf_val          =  input("",  "Resolution",  input.resolution)
signals          =  input("Recent",  "Signals  Display",  options=["Recent",  "All"])
goto                =  input(0,  "End  At  Bar  Index")
//Lin.reg.
cc(x)  =>  x=="Red"?color.red:x=="Lime"?color.lime:x=="Orange"?color.orange:x=="Teal"?color.teal:x=="Yellow"?color.yellow:x=="Black"?color.black:color.white
data(x)  =>  sma(security(syminfo.tickerid,  mtf_val!=""  ?  mtf_val  :  timeframe.period,  x),  smoothing)
linreg  =  data(linreg(source,  length,  offset))
linreg_p  =  data(linreg(source,  length,  offset+1))
//Deviation
x  =  bar_index
slope  =  linreg  -  linreg_p
intercept  =  linreg  -  x*slope
deviationSum  =  0.0
for  i  =  0  to  length-1
        deviationSum:=  deviationSum  +  pow(source[i]-(slope*(x-i)+intercept),  2)
deviation  =  sqrt(deviationSum/(length))
x1  =  x-length
x2  =  x
y1  =  slope*(x-length)+intercept
y2  =  linreg
//Cross
dm_current  =  -deviation*dev  +  y2
dp_current  =  deviation*dev  +  y2
ex_current  =  (dm_current  +  dp_current)  /  2
buy  =  crossunder(close,  dm_current)
sell  =  crossover(close,  dp_current)
exit  =  crossover(close,  ex_current)  or  crossunder(close,  ex_current)
//Channel
updating  =  goto  <=  0  or  x  <  goto
if  updating
        line  b  =  line.new(x1,  y1,  x2,  y2,  xloc.bar_index,  extend.right,  color.aqua,  width  =  3)
        line.delete(b[1])
        line  dp  =  line.new(x1,  deviation*dev  +  y1,  x2,  deviation*dev  +  y2,  xloc.bar_index,  extend.right,  color.red,  width  =  3)
        line.delete(dp[1])
        line  dm  =  line.new(x1,  -deviation*dev  +  y1,  x2,  -deviation*dev  +  y2,  xloc.bar_index,  extend.right,  color.lime,  width  =  3)
        line.delete(dm[1])
//Lines
plot(dm_current,  color  =  color.lime)
plot(dp_current,  color  =  color.red)
plot(ex_current)

//Trading
if  ex_current  >  0
        strategy.entry("Long",  strategy.long,  na,  limit  =  dm_current)
        strategy.entry("Short",  strategy.short,  na,  limit  =  dp_current)
        strategy.exit("ExitLong",  "Long",  limit  =  ex_current)
        strategy.exit("ExitShort",  "Short",  limit  =  ex_current)
Expand (63 lines)
