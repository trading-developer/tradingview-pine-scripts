Script Name: Kahlman HullMA - WT Cross Strategy
Author: pigsq
Description: A strategy created using Hull Moving Average and WT Cross .

Hull Moving Average turns green and WT Cross crossover this is a long. Otherwise short.

Stop Loss and Take Profit settings are available. You can set it to the level you want or turn it off.

According to my measurements, it shows the best performance in the 4-hour period. But you can find the best...
PineScript code:

Pine Script™ strategy
Kahlman HullMA / WT Cross Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  WT  CROSS  @author  [LazyBear]
//  Kahlman  HullMA  /  WT  Cross  Strategy  ©author  [pigsq]
//@version=5
strategy("Kahlman  HullMA  /  WT  Cross  Strategy",  overlay=true,  default_qty_type=strategy.percent_of_equity,  default_qty_value=100,  initial_capital=100)
//Inputs
_1  =  input(false,  '||  LONG  TP  SETTINGS  ||')
long  =  input(true,  'Long  On')
LongprofitPercent  =  input.float(10,  "TP1  Profit  Percent",  minval  =  0,  maxval  =  100,  step  =  5,  tooltip="Percentage  of  balance  to  be  taken  for  take  profit  1-2.")
LongprofitPercent2  =  input.float(15,  "TP2  Profit  Percent",  minval  =  0,  maxval  =  100,  step  =  5,  tooltip="Percentage  of  balance  to  be  taken  for  take  profit  1-2.")
takeprofitLong  =  input.float(8.9,  "Long  Take  Profit  1",  minval  =  0.1,  step  =  0.1,  tooltip="Long  take  profit  1  percent  setting")/100
var  tp2L  =  "tp2L"
takeprofit2Long  =  input.float(13.6,  "Long  Take  Profit  2",  minval  =  0.1,  step  =  0.1,  tooltip="Long  take  profit  2  percent  setting.  /  Close  TP2",  inline=tp2L)/100
tp2OnOffL  =  input(true,  'On',  inline=tp2L)
var  tp3L  =  "tp3L"
takeprofit3Long  =  input.float(13.6,  "Long  Take  Profit  3",  minval  =  0.1,  step  =  0.1,  tooltip="Long  take  profit  3  percent  setting.  /  Close  TP3",  inline=tp3L)/100
tp3OnOffL  =  input(false,  'On',  inline=tp3L)
src_long  =  input.string(title='Long  TP1  Source',  defval="hc2",
          options=["hc2",  "co2",  "hco3",  "hlo3",  "ho2",  "lo2",  "open",  "close",  "hlc3",  "hl2",  "ohlc4",  "hlcc4",  "low",  "high"],
          tooltip="TP1  up  or  down  control.  Close  process  if  selected  'source'  is  less  than  TP1")
src_long2  =  input.string(title='Long  TP2  Source',  defval="hc2",
          options=["hc2",  "co2",  "hco3",  "hlo3",  "ho2",  "lo2",  "open",  "close",  "hlc3",  "hl2",  "ohlc4",  "hlcc4",  "low",  "high"],
          tooltip="TP2  up  or  down  control.  Close  process  if  selected  'source'  is  less  than  TP2")
_2  =  input(false,  '||  SHORT  TP  SETTINGS  ||')
short  =  input(true,  'Short  On')
ShortprofitPercent  =  input.float(50,  "TP1  Profit  Percent",  minval  =  0,  maxval  =  100,  step  =  5,  tooltip="Percentage  of  balance  to  be  taken  for  take  profit  1-2.")
ShortprofitPercent2  =  input.float(70,  "TP2  Profit  Percent",  minval  =  0,  maxval  =  100,  step  =  5,  tooltip="Percentage  of  balance  to  be  taken  for  take  profit  1-2.")
takeprofitShort  =  input.float(8.2,  "Short  Take  Profit  1",  minval  =  0.1,  step  =  0.1,  tooltip="Short  take  profit  1  percent  setting")/100
var  tp2S  =  "tp2S"
takeprofit2Short  =  input.float(13.4,  "Short  Take  Profit  2",  minval  =  0.1,  step  =  0.1,  tooltip="Short  take  profit  2  percent  setting.  /  Close  TP3",  inline=tp2S)/100
tp2OnOffS  =  input(true,  'On',  inline=tp2S)
var  tp3S  =  "tp3S"
takeprofit3Short  =  input.float(13.9,  "Short  Take  Profit  3",  minval  =  0.1,  step  =  0.1,  tooltip="Short  take  profit  3  percent  setting.  /  Close  TP3",  inline=tp3S)/100
tp3OnOffS  =  input(false,  'On',  inline=tp3S)
src_short  =  input.string(title='Short  TP1  Source',  defval="lc2",
          options=["lc2",  "lco3",  "hco3",  "hc2",  "co2",  "hlo3",  "lo2",  "ho2",  "close",  "hlc3",  "hl2",  "ohlc4",  "hlcc4",  "low",  "high",  "open"],
          tooltip="TP1  up  or  down  control.  Close  process  if  selected  'source'  is  greater  than  TP1")
src_short2  =  input.string(title='Short  TP2  Source',  defval="lco3",
          options=["lc2",  "lco3",  "hco3",  "hc2",  "co2",  "hlo3",  "lo2",  "ho2",  "close",  "hlc3",  "hl2",  "ohlc4",  "hlcc4",  "low",  "high",  "open"],
          tooltip="TP2  up  or  down  control.  Close  process  if  selected  'source'  is  greater  than  TP2")
_3  =  input(false,  '||  STOP  LOSS  SETTINGS  ||')
stoplossLong  =  input.float(7.1,  "Long",  minval  =  0.1,  step  =  0.1,  tooltip="Stop  loss  percent(Red  line)")/100
stoplossShort  =  input.float(7.9,  "Short",  minval  =  0.1,  step  =  0.1)/100
_4  =  input(false,  '||  TRAILING  STOP  SETTINGS  ||')
trailingSLOnOff  =  input(true,  'Long  Trailing  SL  On',  tooltip="Trailing  stop  loss  mode.")
trailingStopChangeL  =  input(true,  'Change  Line',  tooltip="On:  If  price  is  greater  than  TP1.  Off:  If  price  is  greater  than  Long  Position  Check.")
trailingPercent  =  input.float(3.6,  "Long",  minval  =  0.1,  step  =  0.1,
          tooltip="Trailing  stop  loss  percent.  Note:  Activated  if  greater  than  TP1.  Otherwise,  the  stop  level  is  the  value  on  a  bottom  line.(Yellow  dot  line)")/100
trailingSLOnOff2  =  input(false,  'Short  Trailing  SL  On',  tooltip="Trailing  stop  loss  mode.")
trailingStopChangeS  =  input(true,  'Change  Line',  tooltip="On:  If  price  is  greater  than  TP1.  Off:  If  price  is  greater  than  Short  Position  Check.")
trailingPercent2  =  input.float(3.4,  "Short",  minval  =  0.1,  step  =  0.1,
          tooltip="Trailing  stop  loss  percent.  Note:  Activated  if  greater  than  TP1.  Otherwise,  the  stop  level  is  the  value  on  a  bottom  line.(Yellow  dot  line)")/100
_5  =  input(false,  '||  POSITION  CHECK  SETTINGS  ||')
LongpositionCheckOnOff  =  input(true,  'Long  Position  Check  On',
          tooltip="Long  Position  check  mode.  Depends  on  TP1  percentage.  It  works  as  a  '%X'  /  'Senstive  Value'.")
src_LongpositionCheck  =  input.string(title='Source',  defval="co2",
          options=["hco3",  "lco3",  "hc2",  "lc2",  "co2",  "ho2",  "lo2",  "hlo3",  "close",  "open",  "hl2",  "hlc3",  "ohlc4",  "hlcc4",  "low",  "high"],
          tooltip="Long  check  senstive  up  or  down  control.  Close  process  if  selected  'source'  is  less  than  Position  Check  Line(Yellow  solid  line)")
LongpositionCheck  =  input.float(1.7,  "Senstive",  minval  =  1,  step  =  0.01)
ShortpositionCheckOnOff  =  input(true,  'Short  Position  Check  On',
          tooltip="Short  Position  check  mode.  It  works  as  a  '%X'  /  'Senstive  Value'.")
src_ShortpositionCheck  =  input.string(title='Source',  defval="low",
          options=["lco3",  "hco3",  "lc2",  "hc2",  "co2",  "lo2",  "ho2",  "hlo3",  "close",  "open",  "hl2",  "hlc3",  "ohlc4",  "hlcc4",  "low",  "high"],
          tooltip="Short  check  senstive  up  or  down  control.  Close  process  if  selected  'source'  is  greater  than  Position  Check  Line(Yellow  solid  line)")
ShortpositionCheck  =  input.float(1.4,  "Senstive",  minval  =  1,  step  =  0.01)
//Long  TP1  source
float  source_long  =  switch  src_long
        "hc2"  =>  (high  +  close)/2
        "hco3"  =>  (high  +  close  +  open)/3
        "co2"  =>  (open  +  close)/2
        "hlo3"  =>  (open  +  high  +  low)/3
        "ho2"  =>  (open  +  high)/2
        "lo2"  =>  (low  +  open)/2
        "lc2"  =>  (low  +  close)/2
        "lco3"  =>  (low  +  close  +  open)/3
        "open"  =>  open
        "close"  =>  close
        "hlc3"  =>  hlc3
        "hl2"  =>  hl2
        "ohlc4"  =>  ohlc4
        "hlcc4"  =>  hlcc4
        "low"  =>  low
        "high"  =>  high
//Long  TP2  source
float  source_long2  =  switch  src_long2
        "hc2"  =>  (high  +  close)/2
        "hco3"=>(high+close+open)/3
"co2"=>(open+close)/2
"lc2"=>(low+close)/2
"lco3"=>(low+close+open)/3
"hlo3"=>(open+high+low)/3
"lo2"=>(open+low)/2
"ho2"=>(high+open)/2
"open"=>open
"close"=>close
"hlc3"=>hlc3
"hl2"=>hl2
"ohlc4"=>ohlc4
"hlcc4"=>hlcc4
"low"=>low
"high"=>high
//ShortTP1source
floatsource_short=switchsrc_short
"lc2"=>(low+close)/2
"lco3"=>(low+close+open)/3
"co2"=>(open+close)/2
"hlo3"=>(open+high+low)/3
"lo2"=>(open+low)/2
"ho2"=>(high+open)/2
"hc2"=>(high+close)/2
"hco3"=>(high+close+open)/3
"close"=>close
"hlc3"=>hlc3
"hl2"=>hl2
"ohlc4"=>ohlc4
"hlcc4"=>hlcc4
"low"=>low
"high"=>high
"open"=>open
//ShortTP2source
floatsource_short2=switchsrc_short2
"lc2"=>(low+close)/2
"lco3"=>(low+close+open)/3
"co2"=>(open+close)/2
"hlo3"=>(open+high+low)/3
"lo2"=>(open+low)/2
"ho2"=>(high+open)/2
"hc2"=>(high+close)/2
"hco3"=>(high+close+open)/3
"close"=>close
"hlc3"=>hlc3
"hl2"=>hl2
"ohlc4"=>ohlc4
"hlcc4"=>hlcc4
"low"=>low
"high"=>high
"open"=>open
//Longpositionchecksource
floatsource_CheckLong=switchsrc_LongpositionCheck
"hco3"=>(high+close+open)/3
"lco3"=>(low+close+open)/3
"hc2"=>(high+close)/2
"lc2"=>(low+close)/2
"hlo3"=>(open+high+low)/3
"co2"=>(open+close)/2
"ho2"=>(open+high)/2
"lo2"=>(low+open)/2
"close"=>close
"hl2"=>hl2
"hlc3"=>hlc3
"ohlc4"=>ohlc4
"hlcc4"=>hlcc4
"low"=>low
"high"=>high
"open"=>open
//Shortpositionchecksource
floatsource_CheckShort=switchsrc_ShortpositionCheck
"lco3"=>(low+close+open)/3
"hco3"=>(high+close+open)/3
"lc2"=>(low+close)/2
"hc2"=>(high+close)/2
"hlo3"=>(open+high+low)/3
"co2"=>(open+close)/2
"lo2"=>(open+low)/2
"ho2"=>(high+open)/2
"close"=>close
"hl2"=>hl2
"hlc3"=>hlc3
"ohlc4"=>ohlc4
"hlcc4"=>hlcc4
"high"=>high
"open"=>open
"low"=>low
//WTCrossSetup
_6=input(false,'||WTCROSSSETTINGS||')
varwtlong="WTLONG"
n1L=input(6,'ChannelLength')
n2L=input(23,'AverageLength')
apL=input.string(title='Source',defval='hlc3',
options=["hc2","hco3","lc2","lco3","co2","hlo3","lo2","close","hlc3","hl2","ohlc4","hlcc4","low","high","open"])
floatapL_src=switchapL
"hc2"=>(high+close)/2
"hco3"=>(high+close+open)/3
"lc2"=>(low+close)/2
"lco3"=>(low+close+open)/3
"co2"=>(open+close)/2
"hlo3"=>(open+high+low)/3
"lo2"=>(open+low)/2
"close"=>close
"hlc3"=>hlc3
"hl2"=>hl2
"ohlc4"=>ohlc4
"hlcc4"=>hlcc4
"low"=>low
"high"=>high
"open"=>open

esaL=ta.ema(apL_src,n1L)
rL=ta.ema(math.abs(apL_src-esaL),n1L)
ciL=(apL_src-esaL)/(0.015*rL)
tciL=ta.ema(ciL,n2L)
wt1L=tciL
wt2L=ta.sma(wt1L,4)
//WTSHORT
varwtshort="WTSHORT"
n1S=input(8,'ChannelLength')
n2S=input(19,'AverageLength')
apS=input.string(title='Source',defval='hlc3',
options=["hc2","hco3","lc2","lco3","co2","hlo3","lo2","close","hlc3","hl2","ohlc4","hlcc4","low","high","open"])
floatapS_src=switchapS
"hc2"=>(high+close)/2
"hco3"=>(high+close+open)/3
"lc2"=>(low+close)/2
"lco3"=>(low+close+open)/3
"co2"=>(open+close)/2
"hlo3"=>(open+high+low)/3
"lo2"=>(open+low)/2
"close"=>close
"hlc3"=>hlc3
"hl2"=>hl2
"ohlc4"=>ohlc4
"hlcc4"=>hlcc4
"low"=>low
"high"=>high
"open"=>open
esaS=ta.ema(apS_src,n1S)
rS=ta.ema(math.abs(apS_src-esaS),n1S)
ciS=(apS_src-esaS)/(0.015*rS)
tciS=ta.ema(ciS,n2S)
wt1S=tciS
wt2S=ta.sma(wt1S,4)
//HullKahlmanSetup
_7=input(false,'||HULLMASETTINGS||')
hull_source=input.string(title='Source',defval='hl2',
options=["hc2","hco3","lc2","lco3","co2","hlo3","lo2","close","hlc3","hl2","ohlc4","hlcc4","low","high","open"])
lengthhull=input(24,'Lookback')
gain=input(10000,'Gain')
floathull_src=switchhull_source
"hc2"=>(high+close)/2
"hco3"=>(high+close+open)/3
"lc2"=>(low+close)/2
"lco3"=>(low+close+open)/3
"co2"=>(open+close)/2
"hlo3"=>(open+high+low)/3
"lo2"=>(open+low)/2
"close"=>close
"hlc3"=>hlc3
"hl2"=>hl2
"ohlc4"=>ohlc4
"hlcc4"=>hlcc4
"low"=>low
"high"=>high
"open"=>open
hma(_hull_src,_lengthhull)=>
ta.wma((2*ta.wma(_hull_src,_lengthhull/2))-ta.wma(_hull_src,_lengthhull),math.round(math.sqrt(_lengthhull)))
hma3(_hull_src,_lengthhull)=>
p=lengthhull/2
ta.wma(ta.wma(close,p/3)*3-ta.wma(close,p/2)-ta.wma(close,p),p)
kahlman(x,g)=>
kf=0.0
dk=x-nz(kf[1],x)
smooth=nz(kf[1],x)+dk*math.sqrt(g/10000*2)
velo=0.0
velo:=nz(velo[1],0)+g/10000*dk
kf:=smooth+velo
kf
a=kahlman(hma(hull_src,lengthhull),gain)
b=kahlman(hma3(hull_src,lengthhull),gain)
c=b>a?color.lime:color.red
crossdn=a>banda[1]<b[1]
crossup=b>aandb[1]<a[1]
p1hma=plot(a,color=color.new(c,75),linewidth=1,title='LongPlot')
p2hma=plot(b,color=color.new(c,75),linewidth=1,title='ShortPlot')
fill(p1hma,p2hma,color=color.new(c,75),title='Fill')
//StochRSISettings
_8=input(false,'||STOCHRSISETTINGS||')
rsistochOnOff=input(true,'StochRSI',tooltip="StochRSIOn/Off")
smoothK=input.int(2,"K",minval=1)
smoothD=input.int(3,"D",minval=1)
lengthRSI=input.int(13,"RSILength",minval=1)
lengthStoch=input.int(13,"StochasticLength",minval=1)
src=input.string(title='RSISource',defval='hl2',
options=["hc2","hco3","lc2","lco3","co2","hlo3","lo2","close","hlc3","hl2","ohlc4","hlcc4","low","high","open"])
floatsrc_src=switchsrc
"hc2"=>(high+close)/2
"hco3"=>(high+close+open)/3
"lc2"=>(low+close)/2
"lco3"=>(low+close+open)/3
"co2"=>(open+close)/2
"hlo3"=>(open+high+low)/3
"lo2"=>(open+low)/2
"close"=>close
"hlc3"=>hlc3
"hl2"=>hl2
"ohlc4"=>ohlc4
"hlcc4"=>hlcc4
"low"=>low
"high"=>high
"open"=>open
rsi1=ta.rsi(src_src,lengthRSI)
k=ta.sma(ta.stoch(rsi1,rsi1,rsi1,lengthStoch),smoothK)
d=ta.sma(k,smoothD)
LStoch=rsistochOnOff?k>d:close
SStoch=rsistochOnOff?k<d:close
//VolSetup
_15=input(false,'||VOLUMESETTINGS||')
volumeonoff=input(true,'On/Off')
volume_f=input.float(0.6,title="Mult.",minval=0,step=0.1)
sma_length=input.int(3,title="Smavolumelenght",minval=1)
vwma_length=input.int(3,title="Vwmavolumelenght",minval=1)
wma_length=input.int(4,title="Wmavolumelenght",minval=1)
vol=((ta.sma(volume,sma_length)+ta.vwma(volume,vwma_length)+ta.wma(volume,wma_length))/3)*volume_f
volEntry=volumeonoff?volume>vol:volume
_16=input(false,'||ADXSETTINGS||')
adxon=input(false,'On')
adxlen=input(14,title="ADXSmoothing")
dilen=input(14,title="DILength")
adxBuyLevel=input(20,title="BuyLevel")
dirmov(len)=>
up=ta.change(high)
down=-ta.change(low)
plusDM=na(up)?na:(up>downandup>0?up:0)
minusDM=na(down)?na:(down>upanddown>0?down:0)
truerange=ta.rma(ta.tr,len)
plus=fixnan(100*ta.rma(plusDM,len)/truerange)
minus=fixnan(100*ta.rma(minusDM,len)/truerange)
[plus,minus]
adx(dilen,adxlen)=>
[plus,minus]=dirmov(dilen)
sum=plus+minus
adx=100*ta.rma(math.abs(plus-minus)/(sum==0?1:sum),adxlen)
sig=adx(dilen,adxlen)
ADXEntry=ifadxon
sig>adxBuyLevel
else
sig<100
//WunderbitSettings
_9=input(false,'||WUNDERBITSETTINGS||')
varwunder="WunderbitComments"
longentryComment=input("ENTER-LONG",title="LongEntryComment",group=wunder)
longexitComment=input("EXIT-LONG",title="LongExitComment",group=wunder)
shortentryComment=input("ENTER-SHORT",title="ShortEntryComment",group=wunder)
shortexitComment=input("EXIT-SHORT",title="ShortExitComment",group=wunder)
//DateSetup
_10=input(false,'||DATE&DATERANGESETTINGS||')
startDate=input.time(timestamp("1Jan202000:00+0000"),"StartDate")
endDate=input.time(timestamp("1Jan999903:00+0000"),"EndDate")
varrangeL="LONG"
sessionOnOff=input(true,'Long/TimeRange&WeekdaysOn/Off',tooltip="StartDateandEndDatenotinclueded",group=rangeL)
timeSession=input.session("0000-0000",'TimeRange',group=rangeL)
d_monday=input.bool(title="Monday",defval=true,inline="D1",group=rangeL)
d_tuesday=input.bool(title="Tuesday",defval=true,inline="D1",group=rangeL)
d_wednesday=input.bool(title="Wednesday",defval=true,inline="D1",group=rangeL)
d_thursday=input.bool(title="Thursday",defval=true,inline="D2",group=rangeL)
d_friday=input.bool(title="Friday",defval=true,inline="D2",group=rangeL)
d_saturday=input.bool(title="Saturday",defval=false,inline="D2",group=rangeL)
d_sunday=input.bool(title="Sunday",defval=true,tooltip="Tradedays?",inline="D2",group=rangeL)
days=d_sunday?"1":""
days:=days+(d_monday?"2":"")
days:=days+(d_tuesday?"3":"")
days:=days+(d_wednesday?"4":"")
days:=days+(d_thursday?"5":"")
days:=days+(d_friday?"6":"")
days:=days+(d_saturday?"7":"")
strategyTime=time>=startDateandtime<=endDate?true:false
inSession(session)=>
ifsessionOnOff
na(time(timeframe.period,session+":"+days))==falseandstrategyTime
else
strategyTime

//ForShort
varrangeS="SHORT"
sessionOnOff2=input(false,'Short/TimeRange&WeekdaysOn/Off',tooltip="StartDateandEndDatenotinclueded",group=rangeS)
timeSession2=input.session("0300-0300",'TimeRange',group=rangeS)
d_monday2=input.bool(title="Monday",defval=true,inline="D3",group=rangeS)
d_tuesday2=input.bool(title="Tuesday",defval=true,inline="D3",group=rangeS)
d_wednesday2=input.bool(title="Wednesday",defval=true,inline="D3",group=rangeS)
d_thursday2=input.bool(title="Thursday",defval=true,inline="D4",group=rangeS)
d_friday2=input.bool(title="Friday",defval=true,inline="D4",group=rangeS)
d_saturday2=input.bool(title="Saturday",defval=true,inline="D4",group=rangeS)
d_sunday2=input.bool(title="Sunday",defval=true,tooltip="Tradedays?",inline="D4",group=rangeS)
days2=d_sunday2?"1":""
days2:=days2+(d_monday2?"2":"")
days2:=days2+(d_tuesday2?"3":"")
days2:=days2+(d_wednesday2?"4":"")
days2:=days2+(d_thursday2?"5":"")
days2:=days2+(d_friday2?"6":"")
days2:=days2+(d_saturday2?"7":"")
inSession2(session2)=>
ifsessionOnOff2
na(time(timeframe.period,session2+":"+days2))==falseandtime>=startDateandtime<=endDate
else
time>=startDateandtime<=endDate?true:false
//SL-TPSetups
longConditionDirection=strategy.position_size>=0
shortConditionDirection=strategy.position_size<=0
//LongLineSetup
exitSL=iflongConditionDirection
strategy.position_avg_price*(1-stoplossLong)
else
strategy.position_avg_price*(1+stoplossShort)
exitTP=iflongConditionDirection
strategy.position_avg_price*(1+takeprofitLong)
else
strategy.position_avg_price*(1-takeprofitShort)
exitTP2=iflongConditionDirection
strategy.position_avg_price*(1+takeprofit2Long)
else
strategy.position_avg_price*(1-takeprofit2Short)
exitTP3=iflongConditionDirection
strategy.position_avg_price*(1+takeprofit3Long)
else
strategy.position_avg_price*(1-takeprofit3Short)

positionCheckLong=ifLongpositionCheckOnOff
longConditionDirection?strategy.position_avg_price*(1+takeprofitLong/LongpositionCheck):na
positionCheckShort=ifShortpositionCheckOnOff
shortConditionDirection?strategy.position_avg_price*(1-takeprofitShort/ShortpositionCheck):na
//Long-ShortConditionSetup
longCondition=crossupandta.crossover(wt1L,wt2L)andLStochor
crossupandta.crossover(wt1L[1],wt2L[1])andLStochor
crossupandta.crossover(wt1L[2],wt2L)andLStoch
shortCondition=crossdnandta.crossunder(wt1S,wt2S)andSStoch
//TrailingLongStopSetup
trailingStopChangeL1=trailingStopChangeL?high>=exitTPorhigh[1]>=exitTP:
high>=positionCheckLongorhigh[1]>=positionCheckLong
priceStopL=0.0
priceStopL:=iflongConditionDirectionandtrailingStopChangeL1andtrailingSLOnOff
stopMeasure=close*(1-trailingPercent)
math.max(stopMeasure,priceStopL[1])
elseiflongConditionDirection
exitSL
//TrailingShortStopSetup
trailingStopChangeS1=trailingStopChangeS?low<=exitTPorlow[1]<=exitTP:
low<=positionCheckShortorlow[1]<=positionCheckShort
priceStopS=0.0
priceStopS:=ifshortConditionDirectionandtrailingStopChangeS1andtrailingSLOnOff2
stopMeasure=close*(1+trailingPercent2)
math.min(stopMeasure,priceStopS[1])
elseifshortConditionDirection
exitSL
//PositionCheckControl
positionCheckLong2=
high>=positionCheckLongandta.crossunder(wt1L,wt2L)andsource_CheckLong<positionCheckLongor
high>=positionCheckLongandta.crossunder(wt1S,wt2S)andsource_CheckLong<positionCheckLongor
high>=positionCheckLonganda>bandsource_CheckLong<positionCheckLongandwt1L<wt2LandnotvolEntryor
high>=positionCheckLonganda>bandsource_CheckLong<positionCheckLongandwt1S<wt2SandnotvolEntryor
high>=positionCheckLongandcrossdnandsource_CheckLong<positionCheckLong
positionCheckShort2=
low<=positionCheckShortandta.crossover(wt1S,wt2S)andsource_CheckShort>positionCheckShortor
low<=positionCheckShortandta.crossover(wt1L,wt2L)andsource_CheckShort>positionCheckShortor
low<=positionCheckShortanda<bandsource_CheckShort>positionCheckShortandwt1S>wt2SandnotvolEntryor
low<=positionCheckShortanda<bandsource_CheckShort>positionCheckShortandwt1L>wt2LandnotvolEntryor
low<=positionCheckShortandcrossupandsource_CheckShort>positionCheckShort
//TP'sControl
longTStop=high>=exitTPandsource_long<=exitTPor
high>=exitTP2andsource_long2<=exitTP2or
high>=exitTP2anda>b
shortTStop=low<=exitTPandsource_short>=exitTPor
low<=exitTP2andsource_short2>=exitTP2or
low<=exitTP2anda<b
//Long-ShortConditionClose
longConditionExit=ifhigh<=strategy.position_avg_priceorhigh>=positionCheckLong
shortConditionorpositionCheckLong2
shortConditionExit=iflow>=strategy.position_avg_priceorlow<=positionCheckShort
longConditionorpositionCheckShort2
ifstrategyTime
iflongConditionDirectionandlongConditionandlongandvolEntryandADXEntry
ifinSession(sessionOnOff?timeSession:na)
strategy.entry("LONG",strategy.long,comment=longentryComment)
strategy.exit("LONG",stop=priceStopL,qty_percent=tp2OnOffL?LongprofitPercent:100,limit=exitTP,comment=longexitComment)
iftp2OnOffL
strategy.exit("LONG1",stop=priceStopL,qty_percent=tp3OnOffL?LongprofitPercent2:100,limit=exitTP2,comment=longexitComment)
iftp3OnOffL
strategy.exit("LONG2",stop=priceStopL,qty_percent=100,limit=exitTP3,comment=longexitComment)
iflongConditionExitorlongTStop
strategy.close("LONG",comment=longexitComment)
ifshortConditionDirectionandshortConditionandshortandvolEntryandADXEntry
ifinSession2(sessionOnOff2?timeSession2:na)
strategy.entry("SHORT",strategy.short,comment=shortentryComment)
strategy.exit("SHORT",stop=priceStopS,qty_percent=tp2OnOffS?ShortprofitPercent:100,limit=exitTP,comment=shortexitComment)
iftp2OnOffS
strategy.exit("SHORT1",stop=priceStopS,qty_percent=tp3OnOffS?ShortprofitPercent2:100,limit=exitTP2,comment=shortexitComment)
iftp3OnOffS
strategy.exit("SHORT2",stop=priceStopS,qty_percent=100,limit=exitTP3,comment=shortexitComment)
ifshortConditionExitorshortTStop
strategy.close("SHORT",comment=shortexitComment)
//SL-TPLines
LSTP2Lines=longConditionDirection?tp2OnOffL?exitTP2:na:shortConditionDirection?tp2OnOffS?exitTP2:na:na
LSTP3Lines=longConditionDirection?tp3OnOffL?tp2OnOffL?exitTP3:na:na:shortConditionDirection?tp3OnOffS?tp2OnOffS?exitTP3:na:na:na
plot(exitTP,title='Long/ShortTP1',color=color.lime,style=plot.style_linebr,linewidth=1)
plot(LSTP2Lines,title='Long/ShortTP2',color=color.lime,style=plot.style_linebr,linewidth=1)
plot(LSTP3Lines,title='Long/ShortTP3',color=color.lime,style=plot.style_linebr,linewidth=1)
//L/SStopLossLines
plot(exitSL,title='Long/ShortSL',color=color.red,style=plot.style_linebr,linewidth=1)
//PositionCheckLines
PositionCheckColors=LongpositionCheckOnOffandpositionCheckLong?color.yellow:
ShortpositionCheckOnOffandpositionCheckShort?color.yellow:na
PositionCheckLines=LongpositionCheckOnOffandlongConditionDirection?positionCheckLong:
ShortpositionCheckOnOffandshortConditionDirection?positionCheckShort:na
plot(PositionCheckLines,title='Long/ShortPositionCheck',color=PositionCheckColors,style=plot.style_linebr,linewidth=1)
//TrailingStopLines
TrailingStopLines=trailingSLOnOff?longConditionDirectionandtrailingStopChangeL1?priceStopL:na:na
TrailingStopLines2=trailingSLOnOff2?shortConditionDirectionandtrailingStopChangeS1?priceStopS:na:na
plot(TrailingStopLines,title='LongTrailingStop',color=color.yellow,style=plot.style_circles,linewidth=1)
plot(TrailingStopLines2,title='ShortTrailingStop',color=color.yellow,style=plot.style_circles,linewidth=1)
//DateRangeBackgroundColor
//bgcolor(sessionOnOff?inSession(timeSession)?color.rgb(91,255,0,95):na:na,title="LongTimeRangeBgColor")
//bgcolor(sessionOnOff2?inSession2(timeSession2)?color.rgb(91,255,0,95):na:na,title="ShortTimeRangeBgColor")
Expand (561 lines)
