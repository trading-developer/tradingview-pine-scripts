Script Name: Moving Average Displaced Envelope Backtest
Author: HPotter
Description: Moving Average Displaced Envelope. These envelopes are calculated
 by multiplying percentage factors with their displaced expotential
 moving average (EMA) core.
 How To Trade Using:
 Adjust the envelopes percentage factors to control the quantity and
 quality of the signals. If a previous high goes above the envelope
 a sell signal is generated. Conversely,...
PineScript code:

Pine Scriptâ„¢ strategy
Moving Average Displaced Envelope Backtest
//@version=4
////////////////////////////////////////////////////////////
//    Copyright  by  HPotter  v1.0  14/08/2020
//  Moving  Average  Displaced  Envelope.  These  envelopes  are  calculated
//  by  multiplying  percentage  factors  with  their  displaced  expotential
//  moving  average  (EMA)  core.
//  How  To  Trade  Using:
//  Adjust  the  envelopes  percentage  factors  to  control  the  quantity  and
//  quality  of  the  signals.  If  a  previous  high  goes  above  the  envelope
//  a  sell  signal  is  generated.  Conversely,  if  the  previous  low  goes  below
//  the  envelope  a  buy  signal  is  given.
//
//  WARNING:
//  -  For  purpose  educate  only
//  -  This  script  to  change  bars  colors.
////////////////////////////////////////////////////////////
strategy(title="Moving  Average  Displaced  Envelope  Backtest",  shorttitle="MA  DE",  overlay  =  true)
Price  =  input(title="Source",  type=input.source,  defval=close)
Period  =input(defval=9,  minval=1)
perAb  =  input(title  =  "Percent  above",  defval=.5,  minval=0.01,  step  =  0.1)
perBl  =  input(title  =  "Percent  below",  defval=.5,  minval=0.01,  step  =  0.1)
disp  =  input(title  =  "Displacement",  defval=13,  minval=1)
reverse  =  input(false,  title="Trade  reverse")
pos  =  0
sEMA  =  ema(Price,  Period)
top  =  sEMA[disp]  *  ((100  +  perAb)/100)
bott  =  sEMA[disp]*  ((100  -  perBl)/100)
pos  :=  iff(close  <  bott  ,  1,
                  iff(close  >  top,  -1,  pos[1]))
possig  =  iff(reverse  and  pos  ==  1,  -1,
                    iff(reverse  and  pos  ==  -1  ,  1,  pos))
if  (possig  ==  1)
        strategy.entry("Long",  strategy.long)
if  (possig  ==  -1)
        strategy.entry("Short",  strategy.short)
if  (possig  ==  0)
        strategy.close_all()
barcolor(possig  ==  -1  ?  #b50404:  possig  ==  1  ?  #079605  :  #0536b3  )
Expand (38 lines)
