Script Name: TICK Scalping strategy, SPY 1 min
Author: PtGambler
Description: 1 min chart scalping version of my other TICK strategy with adjusted parameters and additional entry and exit conditions better suited for 1 min SPY chart. Please refer to my original TICK strategy for explanation.


 Important notes:
1. This strategy is designed for same day  SPY option scalping  on the  1 min chart . All profit shown in back testing report is...
PineScript code:

Pine Script™ strategy
TICK Scalping strategy, SPY 1 min
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  platsn
//  How  it  works:
//  When  trading  the  indices,  many  rely  on  the  TICK  for  market  directions.  This  strategy  is  a  trend  following  strategy  that  uses  a  combination  of  conditions  using  the  following  indicators:
//  -  TICK
//  -  RSI
//  -  VIX  volatility  index
//  -  EMA
//  For  entries,  the  conditions  are:
//  1.  TICK  moving  average  crossover  with  a  delayed  signal  line
//  2.  Bullish  or  bearish  RSI  signal,  RSI  >  50  for  bullish  ,  <  50  for  bearish
//  3.  VIX  must  be  above  a  certain  threshold  to  take  advantage  of  high  market  volatility
//  4.  Price  must  be  on  top  of  EMA  line  for  long,  and  below  for  short
//  5.  Price  has  not  moved  significantly  already  (this  delta  can  be  set)
//  For  exits,  there  are  3  scenarios:
//  1.  Stop  loss  set  by  a  percentage  of  the  daily  ATR  value
//  2.  Trend  changes  on  the  TICK  and  the  RSI
//  3.  Bearish  or  bullish  divergence  on  price  with  TICK
//  This  strategy  automatically  signal  to  close  all  trades  at  3:50  pm  EST  at  the  end  of  the  day.
//  Extras:
//  -  There  is  an  option  to  show  P/L  for  reinvesting  profits
//@version=5
strategy("TICK  strategy,  SPY  1  min",  overlay=false,  pyramiding=3,  initial_capital=5000,  commission_type=strategy.commission.cash_per_contract,  commission_value  =  0.0625)
indicator_only  =  input.bool(false,"Use  As  Indicator  Only",  tooltip  =  "Disables  strategy  signals")
//  ********************  Trade  Period  **************************************
startY  =  input(title='Start  Year',  defval=2011,  group  =  "Trading  window")
startM  =  input.int(title='Start  Month',defval=1,minval=1,maxval=12,group="Tradingwindow")
startD=input.int(title='StartDay',defval=1,minval=1,maxval=31,group="Tradingwindow")
finishY=input(title='FinishYear',defval=2050,group="Tradingwindow")
finishM=input.int(title='FinishMonth',defval=12,minval=1,maxval=12,group="Tradingwindow")
finishD=input.int(title='FinishDay',defval=31,minval=1,maxval=31,group="Tradingwindow")
timestart=timestamp(startY,startM,startD,00,00)
timefinish=timestamp(finishY,finishM,finishD,23,59)
t1=time(timeframe.period,"0930-1545:23456")
window=time>=timestartandtime<=timefinishandt1?true:false
t2=time(timeframe.period,"0930-1555:23456")
window2=time>=timestartandtime<=timefinishandt2?true:false
trade_options=input.bool(defval=true,title="TradingOptionsonly",group="TradingOptions")
option_amt=input.int(defval=10,title="#ofoptionspertrade",group="TradingOptions")
option_multiplier=input.float(0.007,title="Multiplierfortradingoptions(adjusttoapprox.optionsP&L)",step=0.001,group="TradingOptions")
reinvest=input.bool(defval=false,title="Reinvestprofit",group="TradingOptions")
reinvest_percent=input.float(defval=20,title="Reinvestpercentage",group="TradingOptions")
trade_TICKdiverg=input.bool(true,title="TradewithTICKdivergences",group="TradingOptions")
diverg_lookback=input.int(defval=5,title="TICKdivergencelookbackperiod(onlyiftradingTICKdivergence",group="TradingOptions")
trade_optimal=input.bool(true,title="TradewithoptimalStochastic",group="TradingOptions")
entry_lookback=input.int(defval=12,title="Lookbackperiodforentrycondition,waitingforStochastic",group="TradingOptions")
k_entry_thres=input.int(defval=0,title="StochasticRSIkvalueoffsetfrom50forentrythreshold(ie.10meanslongentryunderk=60",group="TradingOptions")
trade_chase=input.bool(true,title="TradewithChasingentries",group="TradingOptions")
chase_lookback=input.int(defval=10,title="Chaseentrylookbackperiod",group="TradingOptions")
k_chase_thres=input.int(defval=30,title="StochasticRSIkvalueoffsetfrom50forchaseentrythreshold(ie.30meanslongentryunderk=80",group="TradingOptions")
trade_PT=input.bool(true,title="TradewithPriceTarget",group="TradingOptions")
no_longat10=input.bool(false,title="Noentrybetween10-10:30",group="TradingOptions")
hold_ON=input.bool(true,title="Hold1/2positionovernightonTues/Thurs",group="TradingOptions")
//*****************************************************************************************************DailyATR*****************************************************
atrlen=input.int(4,minval=1,title="ATRperiod",group="DailyATR")
SL_atr_perc=input.float(9,minval=1,maxval=100,step=0.5,title="%ATRtouseforSL",group="DailyATR")
PT_atr_perc=input.float(17.5,minval=1,maxval=100,step=0.5,title="%ATRtouseforPT(onlyiftradingw/PT)",group="DailyATR")

SL_atr=SL_atr_perc*0.01
PT_atr=PT_atr_perc*0.01
datr=request.security(syminfo.tickerid,"1D",ta.rma(ta.tr,atrlen))
d_SL_atr=datr*SL_atr
d_PT_atr=datr*PT_atr
//plot(datr,"DailyATR")
//plot(d_SL_atr,"Daily%ATR")
//***********************************************************VIXvolatilityindex****************************************
VIX=request.security("VIX",timeframe.period,close)
vix_thres=input.float(20.0,"VIXThresholdforentry",step=0.5,group="VIXVolatilityIndex")
//*****************************************************TICKIndictor*****************************************************
malen1=input.int(21,title="FastEMAperiod",group="TICKIndicator")
malen2=input.int(102,title="SlowEMAperiod",group="TICKIndicator")
malen3=input.int(135,title="HullMAperiod",group="TICKIndicator")
malen4=input.int(25,title="HullMASmoothing",group="TICKIndicator")
//getTICKdata
//tickO=request.security("USI:TICK",timeframe.period,open)
tickH=request.security("USI:TICK","5",high)
tickC=request.security("USI:TICK","5",close)
tickL=request.security("USI:TICK","5",low)
tickAVG=ta.ema(tickC,malen1)
tickAVG_L=ta.ema(tickC,malen2)
f_hma(_src,_length)=>
_return=ta.wma(2*ta.wma(_src,_length/2)-ta.wma(_src,_length),math.round(math.sqrt(_length)))
_return
tickHMA=f_hma(tickC,malen3)
tickHMA_MA=ta.sma(tickHMA,malen4)
tick_bull=tickAVG>tickAVG[5]
tick_bear=tickAVG<tickAVG[5]
//PlotTickdata
plot(barstate.isconfirmed?tickC:na,title='TICK',color=color.new(color.white,30),style=plot.style_line,linewidth=1)//color=tickC>0?color.green:color.red
plot(tickAVG,title='TICK9EMA',color=color.yellow,style=plot.style_line,linewidth=1)
plot(tickAVG_L,title='TICK21EMA',color=color.new(color.red,70),style=plot.style_line,linewidth=1)
plot(tickHMA,title='TICK21HMA',color=color.blue,style=plot.style_line,linewidth=2)
plot(tickHMA_MA,title='TICKHMASmoothed',color=color.purple,style=plot.style_line,linewidth=2)
hline(0,color=color.white,linewidth=1,linestyle=hline.style_solid)
hline(1000,color=color.green,linestyle=hline.style_solid,linewidth=2)
hline(500,color=color.gray,linestyle=hline.style_dashed)
hline(-1000,color=color.red,linestyle=hline.style_solid,linewidth=2)
hline(-500,color=color.gray,linestyle=hline.style_dashed)
//plotshape(ta.crossunder(tickHMA,tickAVG),"Crossdown",color=color.red,style=shape.triangledown,location=location.top,size=size.tiny)
//plotshape(ta.crossover(tickHMA,tickAVG),"Crossup",color=color.green,style=shape.triangleup,location=location.bottom,size=size.tiny)
plotshape(ta.crossunder(tickHMA,tickHMA_MA),"Crossdown",color=color.red,style=shape.triangledown,location=location.top,size=size.tiny)
plotshape(ta.crossover(tickHMA,tickHMA_MA),"Crossup",color=color.green,style=shape.triangleup,location=location.bottom,size=size.tiny)
//Background
bgcolor(tickAVG_L>0?color.new(color.green,90):color.new(color.red,90))
bgcolor(tickC>499?color.new(color.green,70):na)
bgcolor(tickC<-499?color.new(color.red,70):na)
bgcolor(tickC>999?color.new(color.green,30):na)
bgcolor(tickC<-999?color.new(color.red,30):na)
lbR=input(title='PivotLookbackRight',defval=5,group="TICKDivergence")
lbL=input(title='PivotLookbackLeft',defval=10,group="TICKDivergence")
rangeUpper=input(title='MaxofLookbackRange',defval=300,group="TICKDivergence")
rangeLower=input(title='MinofLookbackRange',defval=25,group="TICKDivergence")
plotBull=input(title='PlotBullish',defval=true,group="TICKDivergence")
plotHiddenBull=input(title='PlotHiddenBullish',defval=false,group="TICKDivergence")
plotBear=input(title='PlotBearish',defval=true,group="TICKDivergence")
plotHiddenBear=input(title='PlotHiddenBearish',defval=false,group="TICKDivergence")
bearColor=color.red
bullColor=color.green
hiddenBullColor=color.new(color.green,80)
hiddenBearColor=color.new(color.red,80)
textColor=color.white
noneColor=color.new(color.white,100)
plFound=na(ta.pivotlow(tickC,lbL,lbR))?false:true
phFound=na(ta.pivothigh(tickC,lbL,lbR))?false:true
_inRange(cond)=>
bars=ta.barssince(cond==true)
rangeLower<=barsandbars<=rangeUpper
//-----------------------------------------------TICKDivergence-------------------------------
//RegularBullish
//Osc:HigherLow
oscHL=tickC[lbR]>ta.valuewhen(plFound,tickC[lbR],1)and_inRange(plFound[1])
//Price:LowerLow
priceLL=low[lbR]<ta.valuewhen(plFound,low[lbR],1)
bullCond=plotBullandpriceLLandoscHLandplFound
plot(plFound?tickC[lbR]:na,offset=-lbR,title='RegularBullish',linewidth=2,color=bullCond?bullColor:noneColor)
plotshape(bullCond?tickC[lbR]:na,offset=-lbR,title='RegularBullishLabel',text='Bull',style=shape.labelup,location=location.absolute,color=color.new(bullColor,0),textcolor=color.new(textColor,0))
//------------------------------------------------------------------------------
//HiddenBullish
//Osc:LowerLow
oscLL=tickC[lbR]<ta.valuewhen(plFound,tickC[lbR],1)and_inRange(plFound[1])
//Price:HigherLow
priceHL=low[lbR]>ta.valuewhen(plFound,low[lbR],1)
hiddenBullCond=plotHiddenBullandpriceHLandoscLLandplFound
plot(plFound?tickC[lbR]:na,offset=-lbR,title='HiddenBullish',linewidth=2,color=hiddenBullCond?hiddenBullColor:noneColor)
plotshape(hiddenBullCond?tickC[lbR]:na,offset=-lbR,title='HiddenBullishLabel',text='HBull',style=shape.labelup,location=location.absolute,color=color.new(bullColor,0),textcolor=color.new(textColor,0))
//------------------------------------------------------------------------------
//RegularBearish
//Osc:LowerHigh
oscLH=tickC[lbR]<ta.valuewhen(phFound,tickC[lbR],1)and_inRange(phFound[1])
//Price:HigherHigh
priceHH=high[lbR]>ta.valuewhen(phFound,high[lbR],1)
bearCond=plotBearandpriceHHandoscLHandphFound
plot(phFound?tickC[lbR]:na,offset=-lbR,title='RegularBearish',linewidth=2,color=bearCond?bearColor:noneColor)
plotshape(bearCond?tickC[lbR]:na,offset=-lbR,title='RegularBearishLabel',text='Bear',style=shape.labeldown,location=location.absolute,color=color.new(bearColor,0),textcolor=color.new(textColor,0))
//------------------------------------------------------------------------------
//HiddenBearish
//Osc:HigherHigh
oscHH=tickC[lbR]>ta.valuewhen(phFound,tickC[lbR],1)and_inRange(phFound[1])
//Price:LowerHigh
priceLH=high[lbR]<ta.valuewhen(phFound,high[lbR],1)
hiddenBearCond=plotHiddenBearandpriceLHandoscHHandphFound
plot(phFound?tickC[lbR]:na,offset=-lbR,title='HiddenBearish',linewidth=2,color=hiddenBearCond?hiddenBearColor:noneColor)
plotshape(hiddenBearCond?tickC[lbR]:na,offset=-lbR,title='HiddenBearishLabel',text='HBear',style=shape.labeldown,location=location.absolute,color=color.new(bearColor,0),textcolor=color.new(textColor,0))
//--------------------------------------------------------RSI------------------------------------
src=close//request.security(syminfo.ticker,"5",close)
rsi_len=input.int(70,minval=1,title="RSILength",group="RSI")
rsi_ma_len=input.int(6,minval=1,title="RSISignalLength",group="RSI")
rsi_up=ta.rma(math.max(ta.change(src),0),rsi_len)
rsi_down=ta.rma(-math.min(ta.change(src),0),rsi_len)
rsi=rsi_down==0?100:rsi_up==0?0:100-(100/(1+rsi_up/rsi_down))
rsi_ma=ta.wma(rsi,rsi_ma_len)
rsi_avg=rsi_ma//math.avg(rsi,rsi_ma)
rsi_bull=rsi_avg>rsi_avg[1]
rsi_bear=rsi_avg<rsi_avg[1]
rsi_thres=input.int(15,"RSIOverbought/Oversoldlevels+/-from50",group="RSI")
rsi_len2=input.int(14,minval=1,title="FastRSILength",group="RSI")
rsi_up2=ta.rma(math.max(ta.change(src),0),rsi_len2)
rsi_down2=ta.rma(-math.min(ta.change(src),0),rsi_len2)
rsi2=rsi_down2==0?100:rsi_up2==0?0:100-(100/(1+rsi_up2/rsi_down2))
//--------------------------------------------------------StochasticRSI------------------------------------
//StochasticMainParameters
smoothK=input.int(3,minval=1,title='StochK',group="StochasticRSI")
smoothD=input.int(3,minval=1,title='StochD',group="StochasticRSI")
lengthRSI=input.int(14,"RSILength",minval=1,group="StochasticRSI")
lengthStoch=input.int(14,"StochasticLength",minval=1,group="StochasticRSI")
rsi_stoch=ta.rsi(src,lengthRSI)
k=ta.sma(ta.stoch(rsi_stoch,rsi_stoch,rsi_stoch,lengthStoch),smoothK)
d=ta.sma(k,smoothD)
//--------------------------------------------------------MovingAverage------------------------------------
ma_src=close
emalen1=input.int(20,minval=1,title='FilteringEMA',group="MovingAverages")
ema1=ta.ema(ma_src,emalen1)
//-------------------------------------------------------------Tradeoptions------------------------
profit=strategy.netprofit
trade_amount=math.floor(strategy.initial_capital/close)
BSLE()=>
strategy.opentrades>0?(bar_index-strategy.opentrades.entry_bar_index(strategy.opentrades-1)):na

BSLExit()=>
strategy.opentrades==0?(bar_index-strategy.closedtrades.exit_bar_index(strategy.closedtrades-1)):na
min_hold=input.int(6,"Minimumbarstoholdorder",group="TradingOptions")
iftrade_options
ifstrategy.netprofit>0andreinvest//andstrategy.closedtrades.profit(strategy.closedtrades-1)>0
trade_amount:=math.floor(strategy.initial_capital*option_multiplier)*(option_amt+math.floor(((profit*reinvest_percent*0.01)/strategy.initial_capital)*10))
else
trade_amount:=math.floor(strategy.initial_capital*option_multiplier)*option_amt
//****************************************************************************************************************************************TradePauses****************************************
booltrade_pause=false
booltrade_pause2=false
trade_pause:=false
ifno_longat10andtime(timeframe.period,"1000-1030:23456")
trade_pause2:=true
else
trade_pause2:=false

//----------------------------------------------------------------EntryConditions------------------------------------------------------------
L_entry0=ta.crossover(tickHMA,tickHMA_MA)andrsi_avg>50andrsi<50+rsi_thresandVIX>vix_thresandtickAVG>0andclose>ema1
S_entry0=ta.crossunder(tickHMA,tickHMA_MA)andrsi_avg<50andrsi>50-rsi_thresandVIX>vix_thresandtickAVG<0andclose<ema1
L_entry1=L_entry0
S_entry1=S_entry0
BSL=ta.barssince(L_entry0)
BSS=ta.barssince(S_entry0)
//plot(BSL,"Barssincelongentrycondition")
//plot(BSS,"Barssinceshortentrycondition")
iftrade_optimalandstrategy.opentrades==0
ifBSL<entry_lookback
L_entry1:=k<50+k_entry_thresandk>k[1]
else
L_entry1:=L_entry0
ifBSS<entry_lookback
S_entry1:=k>50-k_entry_thresandk<k[1]
else
S_entry1:=S_entry0
//plotshape(L_entry0,"Longentrycondition",color=color.blue,style=shape.triangleup,location=location.bottom,size=size.tiny)
//plotshape(S_entry0,"Shortentrycondition",color=color.orange,style=shape.triangledown,location=location.top,size=size.tiny)
L_entry2=bullCondandtickHMA>tickHMA_MAandrsi>rsi_maandVIX>vix_thresandtickAVG>0andclose>ema1
S_entry2=bearCondandtickHMA<tickHMA_MAandrsi<rsi_maandVIX>vix_thresandtickAVG<0andclose<ema1
L_entry3=BSLExit()<chase_lookbackandclose>close[BSLExit()]andtickHMA>tickHMA_MAandtickHMA>tickHMA[1]andrsi_avg>50andrsi<50+rsi_thresandVIX>vix_thresandtickAVG>tickAVG[1]andclose>ema1andk<50+k_chase_thres
S_entry3=BSLExit()<chase_lookbackandclose<close[BSLExit()]andtickHMA<tickHMA_MAandtickHMA<tickHMA[1]andrsi_avg<50andrsi>50-rsi_thresandVIX>vix_thresandtickAVG<tickAVG[1]andclose<ema1andk>50-k_chase_thres
ifnotindicator_only
ifL_entry1andwindowandnot(trade_pause)andnot(trade_pause2)andbarstate.isconfirmed
strategy.entry("Long",strategy.long,trade_amount,comment="Long")

iftrade_TICKdivergandL_entry2andwindowandnot(trade_pause)andnot(trade_pause2)andbarstate.isconfirmedandstrategy.opentrades==0//limitto1entry,ignoringpyramiding
strategy.entry("Long",strategy.long,trade_amount,comment="Long,TICKdivergence")
iftrade_chaseandL_entry3andwindowandnot(trade_pause)andnot(trade_pause2)andbarstate.isconfirmedandstrategy.opentrades==0//limitto1entry,ignoringpyramiding
strategy.entry("Long",strategy.long,trade_amount,comment="Long,Chase")
ifS_entry1andwindowandnot(trade_pause)andnot(trade_pause2)andbarstate.isconfirmed
strategy.entry("Short",strategy.short,trade_amount,comment="Short")
iftrade_TICKdivergandS_entry2andwindowandnot(trade_pause)andnot(trade_pause2)andbarstate.isconfirmedandstrategy.opentrades==0//limitto1entry,ignoringpyramiding
strategy.entry("Short",strategy.short,trade_amount,comment="Short,TICKdivergence")
iftrade_chaseandS_entry3andwindowandnot(trade_pause)andnot(trade_pause2)andbarstate.isconfirmedandstrategy.opentrades==0//limitto1entry,ignoringpyramiding
strategy.entry("Short",strategy.short,trade_amount,comment="Short,Chase")
//----------------------------------------------------------------SL/PT-------------------------------------------------------------------
long_SL=ta.lowest(low,5)-d_SL_atr
short_SL=ta.highest(high,5)+d_SL_atr
ifstrategy.opentrades>0
long_SL:=math.min(long_SL[BSLE()],low[1]-d_SL_atr)
short_SL:=math.max(short_SL[BSLE()],high[1]+d_SL_atr)
//plot(long_SL,"LongSL")
//plot(short_SL,"ShortSL")
long_PT=close+d_PT_atr
short_PT=close-d_PT_atr
ifstrategy.opentrades>0
long_PT:=strategy.opentrades.entry_price(0)+d_PT_atr
short_PT:=strategy.opentrades.entry_price(0)-d_PT_atr
//----------------------------------------------------------------ExitConditions------------------------------------------------------------
L_exit1=tickHMA<tickHMA_MAandrsi_bear
S_exit1=tickHMA>tickHMA_MAandrsi_bull
L_exit2=bearCond
S_exit2=bullCond
L_exit3=tickH>1000
S_exit3=tickL<-1000
L_exit4=strategy.opentrades.profit(strategy.opentrades-1)>0andtickHMA<tickHMA[1]andrsi2<50
S_exit4=strategy.opentrades.profit(strategy.opentrades-1)>0andtickHMA>tickHMA[1]andrsi2>50
ifBSLE()>min_holdandwindow2
iftrade_PT
strategy.exit("Exit","Long",stop=long_SL,limit=long_PT,comment="SL/PThit")
strategy.exit("Exit","Short",stop=short_SL,limit=short_PT,comment="SL/PThit")
else
strategy.exit("Exit","Long",stop=long_SL,comment="SLhit")
strategy.exit("Exit","Short",stop=short_SL,comment="SLhit")
strategy.close("Long",when=L_exit1,comment="Exit,TICK/RSIreversal")
strategy.close("Short",when=S_exit1,comment="Exit,TICK/RSIreversal")
strategy.close("Long",when=L_exit2,comment="Exit,BearishDivergence")
strategy.close("Short",when=S_exit2,comment="Exit,BullishDivergence")
strategy.close("Long",when=L_exit3,comment="Exit,TICKoverbought")
strategy.close("Short",when=S_exit3,comment="Exit,TICKoversold")
//strategy.close("Long",when=L_exit4,comment="Exit,TICK/RSIreversal2")
//strategy.close("Short",when=S_exit4,comment="Exit,TICK/RSIreversal2")

ifhold_ON
iftime(timeframe.period,"1550-1551:246")
strategy.close_all()
iftime(timeframe.period,"1550-1551:35")
strategy.close("Long",qty_percent=50,comment="Close1/2EOD")
strategy.close("Short",qty_percent=50,comment="Close1/2EOD")
else
iftime(timeframe.period,"1550-1551:23456")
strategy.close_all()
Expand (401 lines)
