Script Name: Super Momentum Strategy
Author: burgercrisis
Description: This is a strategy utilizing multiple of Evergets RMI (thanks to him for permission to publish) and a Chance Momentum.

It buys when 4 of the RMIs are below their thresholds and sells when they are above. There is a 5th one I added last night that works in Reverse - buy when its above and sell when below, which should work better for pyramiding strats by using it...
PineScript code:

Pine Scriptâ„¢ strategy
Super Momentum Strategy
//@version=4
strategy(title="Super  Momentum  Strat",  shorttitle="SMS",  format=format.price,  precision=2)
//*  Backtesting  Period  Selector  |  Component  *//
//*  https://www.tradingview.com/script/eCC1cvxQ-Backtesting-Period-Selector-Component  *//
//*  https://www.tradingview.com/u/pbergden/  *//
//*  Modifications  made  *//
testStartYear  =  input(2021,  "Backtest  Start  Year")
testStartMonth  =  input(1,  "Backtest  Start  Month")
testStartDay  =  input(1,  "Backtest  Start  Day")
testPeriodStart  =  timestamp(testStartYear,testStartMonth,testStartDay,0,0)
testStopYear  =  input(999999,  "Backtest  Stop  Year")
testStopMonth  =  input(9,  "Backtest  Stop  Month")
testStopDay  =  input(26,  "Backtest  Stop  Day")
testPeriodStop  =  timestamp(testStopYear,testStopMonth,testStopDay,0,0)
testPeriod()  =>
        time  >=  testPeriodStart  and  time  <=  testPeriodStop  ?  true  :  false
///////////////  END  -  Backtesting  Period  Selector  |  Component  ///////////////
src  =  input(close,  "Price",  type  =  input.source)
highlightBreakouts  =  input(title="Highlight  Overbought/Oversold  Breakouts  ?",  type=input.bool,  defval=true)
CMOlength  =  input(9,  minval=1,  title="Alpha  Chande  Momentum  Length")
//CMO
momm  =  change(src)
f1(m)  =>  m  >=  0.0  ?  m  :  0.0
f2(m)  =>  m  >=  0.0  ?  0.0  :  -m
m1  =  f1(momm)
m2  =  f2(momm)
sm1  =  sum(m1,  CMOlength)
sm2  =  sum(m2,  CMOlength)
percent(nom,  div)  =>  100  *  nom  /  div
chandeMO  =  percent(sm1-sm2,  sm1+sm2)+50
plot(chandeMO,  "Chande  MO",  color=color.blue)
obLevel  =  input(75,  title="Chande  Sellline")
osLevel  =  input(25,  title="Chande  Buyline")
hline(obLevel,  color=#0bc4d9)
hline(osLevel,  color=#0bc4d9)
///
///RMIS
//
//  Copyright  (c)  2018-present,  Alex  Orekhov  (everget)
//  Relative  Momentum  Index  script  may  be  freely  distributed  under  the  MIT  license.
//
///
///
//RMI1
length1  =  input(title="RMI1  Length",  type=input.integer,  minval=1,  defval=8)
momentumLength1  =  input(title="RMI1  Momentum  ",  type=input.integer,  minval=1,  defval=3)
up1  =  rma(max(change(src,  momentumLength1),  0),  length1)
down1  =  rma(-min(change(src,  momentumLength1),  0),  length1)
rmi1  =  down1  ==  0  ?  100  :  up1  ==  0  ?  0  :  100  -  (100  /  (1  +  up1  /  down1))
obLevel1  =  input(57,  title="RMI1  Sellline")
osLevel1  =  input(37,  title="RMI1  Buyline")
rmiColor1  =  rmi1  >  obLevel1  ?  #0ebb23  :  rmi1  <  osLevel1  ?  #ff0000  :  #ffe173
plot(rmi1,  title="RMI  1",  linewidth=2,  color=rmiColor1,  transp=0)
hline(obLevel1,  color=#0b57d9)
hline(osLevel1,  color=#0b57d9)
//RMI2
length2  =  input(title="RMI2  Length",  type=input.integer,  minval=1,  defval=12)
momentumLength2  =  input(title="RMI2  Momentum  ",  type=input.integer,  minval=1,  defval=3)
up2  =  rma(max(change(src,  momentumLength2),  0),  length2)
down2  =  rma(-min(change(src,  momentumLength2),  0),  length2)
rmi2  =  down2  ==  0  ?  100  :  up1  ==  0  ?  0  :  100  -  (100  /  (1  +  up2  /  down2))
obLevel2  =  input(72,  title="RMI2  Sellline")
osLevel2  =  input(37,  title="RMI2  Buyline")
rmiColor2  =  rmi1  >  obLevel1  ?  #0ebb23  :  rmi2  <  osLevel2  ?  #ff0000  :  #c9ad47
plot(rmi2,  title="RMI  2",  linewidth=2,  color=rmiColor2,  transp=0)
hline(obLevel2,  color=#5a0bd9)
hline(osLevel2,  color=#5a0bd9)
//RMI3
length3  =  input(title="RMI3  Length",  type=input.integer,  minval=1,  defval=30)
momentumLength3  =  input(title="RMI3  Momentum  ",  type=input.integer,  minval=1,  defval=53)
up3  =  rma(max(change(src,  momentumLength3),  0),  length3)
down3  =  rma(-min(change(src,  momentumLength3),  0),  length3)
rmi3=down3==0?100:up3==0?0:100-(100/(1+up3/down3))
obLevel3=input(46,title="RMI3Sellline")
osLevel3=input(24,title="RMI3Buyline")
rmiColor3=rmi3>obLevel3?#0ebb23:rmi3<osLevel3?#ff0000:#967d20
plot(rmi3,title="RMI3",linewidth=2,color=rmiColor3,transp=0)
hline(obLevel3,color=#cf0bd9)
hline(osLevel3,color=#cf0bd9)
//RMI4
length4=input(title="RMI4Length",type=input.integer,minval=1,defval=520)
momentumLength4=input(title="RMI4Momentum",type=input.integer,minval=1,defval=137)
up4=rma(max(change(src,momentumLength4),0),length4)
down4=rma(-min(change(src,momentumLength4),0),length4)
rmi4=down4==0?100:up4==0?0:100-(100/(1+up4/down4))
obLevel4=input(0,title="RMI4Sellline")
osLevel4=input(100,title="RMI4Buyline")
rmiColor4=rmi4>obLevel4?#0ebb23:rmi4<osLevel4?#ff0000:#7a630b
plot(rmi4,title="RMI4",linewidth=2,color=rmiColor4,transp=0)
hline(obLevel4,color=#bd1150)
hline(osLevel4,color=#bd1150)
//RMI5
length5=input(title="RMI5Length",type=input.integer,minval=1,defval=520)
momentumLength5=input(title="RMI5Momentum",type=input.integer,minval=1,defval=137)
up5=rma(max(change(src,momentumLength5),0),length5)
down5=rma(-min(change(src,momentumLength5),0),length5)
rmi5=down5==0?100:up4==0?0:100-(100/(1+up5/down5))
buy5=input(0,title="RMI5BuyAbove")
sell5=input(100,title="RMI5SellBelow")
rmiColor5=rmi5>buy5?#0ebb23:rmi5<sell5?#ff0000:#7a630b
plot(rmi5,title="RMI5",linewidth=2,color=rmiColor5,transp=0)
hline(buy5,color=#bd1150)
hline(sell5,color=#bd1150)
///
///ENDRMIS
//
//
//RelativeMomentumIndexscriptmaybefreelydistributedundertheMITlicense.
//
///
///
hline(50,color=#C0C0C0,linestyle=hline.style_dashed,title="ZeroLine")
//Conditions
longcondition1=crossover(chandeMO,osLevel)
shortcondition1=crossunder(chandeMO,obLevel)
longcondition2=rmi5>buy5andrmi4<osLevel4andrmi3<osLevel3andrmi2<osLevel2andrmi1<osLevel1andlongcondition1
shortcondition2=rmi5<sell5andrmi4>obLevel4andrmi3>obLevel3andrmi2>obLevel2andrmi1>obLevel1andshortcondition1
commission=input(0.1)
comms=(100+commission)/100
//StopLosses
stopLossFear=input(100.0,step=0.2,title="HardStopLoss")
sl1=(100-stopLossFear)/100
stopLossSafe=input(100.0,step=0.2,title="SoftStopLoss")
sl2=(100-stopLossSafe)/100
stopLossSafest=input(100.0,step=0.2,title="SafeStopLoss")
sl3=(100-stopLossSafest)/100
//TakeProfits
TakeProfit1=input(100.0,step=0.2,title="HardTakeProfit")
tp1=(100+TakeProfit1)/100*comms
TakeProfit2=input(100.0,step=0.2,title="SoftTakeProfit")
tp2=(100+TakeProfit2)/100*comms
TakeProfit3=input(0.0,step=0.2,title="MinimumSaleProfit")
tp3=(100+TakeProfit3)/100*comms
iftestPeriod()
iflongcondition2
strategy.entry(id="EL",comment="Buy",long=true)
ifshortcondition2and((strategy.position_avg_price*tp3<high)or(strategy.position_avg_price*tp3<close))
strategy.entry("Profit",strategy.short)
if(strategy.position_avg_price*sl1>close)
strategy.close(id="EL",comment="HardStopLoss")
if(strategy.position_avg_price*sl2>close)andshortcondition1
strategy.close(id="EL",comment="SoftStopLoss")
if(strategy.position_avg_price*sl3>close)andshortcondition2
strategy.close(id="EL",comment="SafeStopLoss")
if((strategy.position_avg_price*tp1<high)or(strategy.position_avg_price*tp1<close))
strategy.close(id="EL",comment="HardTakeProfit")
if((strategy.position_avg_price*tp2<high)or(strategy.position_avg_price*tp2<close))andshortcondition1
strategy.close(id="EL",comment="SoftTakeProfit")
//if((strategy.position_avg_price*tp3<high)or(strategy.position_avg_price*tp3<close))andshortcondition2
//strategy.close(id="EL",comment="SafeTakeProfit")
Expand (193 lines)
