Script Name: Channels Strategy [Dimkud]
Author: dimkud
Description: Channels trading Strategy. Based on "Channels Strategy" by JoseMetal.

To the original strategy added additional options and filters : Static SL/TP in percents (%),  time delay between orders, ATR Filter, second Keltner Channel (Multi TimeFrame).
Interface translated to English.

Were good backtest results on many crypto tokens on 15m - 45m - 1h periods.
Mostly...
PineScript code:

Pine Script™ strategy
Channels Strategy [Dimkud]
//  Based  on  Channels  Strategy  [JoseMetal]
//  Edited  by  Dimkud
//@version=5
strategy("Channels  Strategy  [Dimkud]",  overlay=true,  calc_on_order_fills=true,  use_bar_magnifier=true,  pyramiding=0,  commission_type=strategy.commission.percent,  commission_value=0.04,  max_labels_count=500,  default_qty_type=strategy.cash,  default_qty_value=200,  initial_capital=1000  )
//  DIMAK    Static  SL/TP  -  Begin
GRUPO_statSLTP  =  "Static  SL/TP"
USEdisplTPSL  =    input(defval=false,  title='Display  Visualisation  for  TP/SL  ?',  group  =  GRUPO_statSLTP)
//  Make  inputs  that  set  the  take  profit  %  (optional)
var  longProfitPerc  =  input.float(defval=2.6,  title="Take  Profit  (%)",  group=GRUPO_statSLTP,  minval=0.0,  step=0.1)  /  100
var  shortProfitPerc  =  longProfitPerc
var  longSLPerc  =  input.float(defval=1.3,  title="Stop  Loss  (%)",  group=GRUPO_statSLTP,  minval=0.0,  step=0.1)  /  100
var  shortSLPerc  =  longSLPerc
//  Figure  out  take  profit  price    (placed  after  strategy.entry("Abrir  Long",  strategy.long)  )
longExitPrice    =  strategy.position_avg_price  *  (1  +  longProfitPerc)
shortExitPrice  =  strategy.position_avg_price  *  (1  -  shortProfitPerc)
longSLExitPrice    =  strategy.position_avg_price  *  (1  -  longSLPerc)
shortSLExitPrice  =  strategy.position_avg_price  *  (1  +  shortSLPerc)
//  use  tak:  limit=shortExitPrice,  stop=shortSLExitPrice
SendSLsingonReal  =    input(defval=false,  title='Send  SL  alerts  on  Real  Trading  ?',  group  =  GRUPO_statSLTP)
//  DIMAK    Static  SL/TP  -  END
//  Time  filter  =================================
testPeriod()  =>
        //  Testing  Start  dates
        grTIME  =  "============Time  Filter  (use  for  Tests)==============="
        testStartYear  =  input.int(2022,  'Start  Year',  inline='date1',  group=grTIME)
        testStartMonth  =  input.int(5,  '',  inline='date1',  group=grTIME)
        testStartDay  =  input.int(1,  '',  inline='date1',  group=grTIME)
        testPeriodStart  =  timestamp(testStartYear,  testStartMonth,  testStartDay,  0,  0)
        //Stop  date  if  you  want  to  use  a  specific  range  of  dates
        testStopYear  =  input.int(2030,  'Stop  Year',  inline='date2',  group=grTIME)
        testStopMonth  =  input.int(12,  '',  inline='date2',  group=grTIME)
        testStopDay  =  input.int(30,  '',  inline='date2',  group=grTIME)
        testPeriodStop  =  timestamp(testStopYear,  testStopMonth,  testStopDay,  0,  0)
        //time  >=  testPeriodStart  and  time  <  testPeriodStop  ?  true  :  false
        //  pass  some  date
        testPeriodStop2  =    timestamp(2022,11,7,0,0)
        testPeriodStop3  =    timestamp(2022,11,9,0,0)
        (time  >=  testPeriodStart)  and  (time  <  testPeriodStop)  and  ((time  <  testPeriodStop2)  or  (time  >  testPeriodStop3))  ?  true  :  false
//  Time  filter  =================================
//  Two  ATR  (Volatility  Check)
grDATR="=======Two  ATR  (Volatility  Check)  Base  Settings========="
//useDATR  =  input(defval=false,  title='Use  Two  ATR  (Volatility  Check)  ?',  group  =  grDATR)
lengthDATR  =  input.int(title='ATR  length1  (20)(5)',  defval=20,  minval=1,  group  =  grDATR)
length2DATR  =  input.int(title='ATR  length2  (100)(20)',  defval=100,  minval=1,  group  =  grDATR)
smoothingDATR  =  input.string(title='ATR  Smoothing',  defval='WMA',  options=['RMA',  'SMA',  'EMA',  'WMA'],  group  =  grDATR)
DATR_ma_function(sourceDATR,  lengthDATR1)  =>
        if  smoothingDATR  ==  'RMA'
                ta.rma(sourceDATR,  lengthDATR1)
        else
                if  smoothingDATR  ==  'SMA'
                        ta.sma(sourceDATR,  lengthDATR1)
                else
                        if  smoothingDATR  ==  'EMA'
                                ta.ema(sourceDATR,  lengthDATR1)
                        else  //  WMA
                                ta.wma(sourceDATR,  lengthDATR1)
datr1  =  DATR_ma_function(ta.tr(true),  lengthDATR)
datr2  =  DATR_ma_function(ta.tr(true),  length2DATR)
//  ATR  Histograme
datr_hist  =  datr1-datr2
//plot(datr1+0.4,  title='ATR',  color=color.new(#77C5E1,  0))
//plot(datr2+0.4,  title='ATR',  color=color.new(#FF5252,  0))
//plot(datr_hist,  color=color.red,  style=plot.style_histogram)
//  block  for  filters  "ATR1  <  ATR2"  BEGIN
//  "ATR1  <  ATR2  -  Volatility  is  Small  in  last  bars,  ATR1  >  ATR2  -  Volatility  is  High  in  last  bars"
grATR1ATR2  =  "===============  Two  ATR  (ATR1  <>  ATR2)=============="
use_atr1toart2_more_less  =  input(defval=false,  title='Use  ATR1  <>  ATR2  ?  ',  group  =  grATR1ATR2)
atr1toart2_more_less  =  input.string(title='ATR1  to  ATR2',  defval='ATR1  <  ATR2',  options=['ATR1  <  ATR2',  'ATR1  >  ATR2'],  group  =  grATR1ATR2,  tooltip  =  "ATR1  <  ATR2  -  Volatility  is  Small  in  last  bars,  ATR1  >  ATR2  -  Volatility  is  High  in  last  bars")
datr1todatr3  =  use_atr1toart2_more_less  and  (atr1toart2_more_less  ==  "ATR1  <  ATR2")  and  (datr1  <  datr2)  ?  true  :    use_atr1toart2_more_less  and  (atr1toart2_more_less  ==  "ATR1  >  ATR2")  and  (datr1  >  datr2)  ?  true  :  false
longCondition2  =  true
shortCondition2  =  true
if  use_atr1toart2_more_less
        longCondition2  :=  false
        shortCondition2  :=  false

        longCondition2  :=  datr1todatr3
        shortCondition2  :=  longCondition2
else
        longCondition2  :=  true
        shortCondition2  :=  true
//  shortCondition2  and  longCondition2  is  if  Fast  ATR  Must  be  higher  (or  Lower)  than  Slow  ATR  !!!
//  block  for  filters  "ATR1  <  ATR2"  END
//  ==========================================================================
//  NOTE  "ATR1  <  ATR2"  and  (  Barssince_Highest/Lowest  +  falling/rising  )  are  working  separately.  But  Same  ATR  settings
//  ==========================================================================
//  ==========  Two  Average  True  Range  ===============================
c_verde_radiactivo  =  color.rgb(0,  255,  0,  0)
c_verde                        =  color.rgb(0,  128,  0,  0)
c_verde_oscuro          =  color.rgb(0,  80,  0,  0)
c_rojo_radiactivo    =  color.rgb(255,  0,  0,  0)
c_rojo                          =  color.rgb(128,  0,  0,  0)
c_rojo_oscuro            =  color.rgb(80,  0,  0,  0)
noneColor                    =  color.new(color.white,  100)
//  GRUPO_per_pruebas  =  "Tests  period"
//  fecha_inicio          =  input.time(0,  "Start  date",  group=GRUPO_per_pruebas)
//  fecha_fin_usar      =  input.bool(false,  "Finish  date",  group=GRUPO_per_pruebas,  inline="fecha_finalizacion")
//  fecha_fin                =  input.time(timestamp("1Jan2022"),"",group=GRUPO_per_pruebas,inline="fecha_finalizacion")
//vela_en_fecha=time>=fecha_inicioand(fecha_fin_usar?time<=fecha_fin:true)
posicion_abierta=strategy.position_size!=0
LONG_abierto=strategy.position_size>0
SHORT_abierto=strategy.position_size<0
//==Strategyentryandexitconditions
GRUPO_P="MainChannelSettings"
P_indicador=input.string("KeltnerChannel","Indicator",["BollingerBands","KeltnerChannel"],group=GRUPO_P)
P_permitir_LONGS=input.bool(title="UseLONGS?",group=GRUPO_P,defval=true)
P_permitir_SHORTS=input.bool(title="UseSHORTS?",group=GRUPO_P,defval=false)
P_cond_entrada=input.string("Wickoutofband","EnterCondition",["Wickoutofband","Wickoutofthebandthenclosein","Out-of-bandclosure","Closeoutofthebandthenclosein"],"Sepuedeescoger(enorden)queelpreciohayasalidodelabanda,queademáslasiguientevelacierredenuevodentrodelamisma,queelpreciotengaquecerrarfuera,yqueademáslasiguientevelatengaquecerrardentrodenuevo.",group=GRUPO_P)
GRUPO_TPSL="StopLossandTakeProfit"
TP_SL_tipo_SL=input.string("useStaticSLTP","StopLossType",options=["PreviousWick","ExtendedBand","ATR","useStaticSLTP"],group=GRUPO_TPSL)
TP_SL_tipo_TP=input.string("useStaticSLTP","TakeProfitType",options=["OppositeBand","MovingAverage","ATR","useStaticSLTP"],group=GRUPO_TPSL)
TPSL_SL_ATR_mult=input.float(title="•(SoloATR)MultiplicadorStopLoss",group=GRUPO_TPSL,defval=1,minval=0.1,step=0.1,inline="tp_sl",tooltip="ThesearetheATRmultiplierstocalculateSTOPLOSSandTAKEPROFITifselectedassuch.")
TPSL_TP_ATR_mult=input.float(title="•(SoloATR)MultiplicadorTakeProfit",group=GRUPO_TPSL,defval=1.8,minval=0.1,step=0.1,inline="tp_sl")
TPSL_SL_BB_dev=input.float(title="•(SoloSTOPLOSSconBB)Desviaciónestándar",group=GRUPO_TPSL,defval=4.0,minval=0.01,step=0.5,tooltip="IncaseofusingBollingerBandsasSTOPLOSS,thiswillbethevalueofitsstandarddeviation.")
TPSL_SL_KC_mult=input.float(title="•(SoloSTOPLOSSconKC)Multiplicador",group=GRUPO_TPSL,defval=3,minval=0.01,step=0.5,tooltip="IncaseofusingKeltnerchannelsasSTOPLOSS,thiswillbethevalueofyourATRmultiplier.")
TP_SL_TP_dinamico=input.bool(title="TakeProfitdinámico",group=GRUPO_TPSL,defval=false,tooltip="ThiswillmaketheTakeProfitadjustbarbybarinsteadofstayingfixedatitsinitialvalue.")
GRUPO_KC="KeltnerChannel"
KC_length=input.int(title="KeltnerLong.",group=GRUPO_KC,defval=14,minval=1,inline="kc")
KC_mult=input.float(title="KeltnerMult.",group=GRUPO_KC,defval=1.5,minval=0.01,step=0.05,inline="kc")
[KC_mid,KC_upper,KC_lower]=ta.kc(close,KC_length,KC_mult,true)
[_,KC_upper_SL,KC_lower_SL]=ta.kc(close,KC_length,TPSL_SL_KC_mult,true)
GRUPO_BB="BollingerBands"
BB_length=input.int(title="BBLong.",group=GRUPO_BB,defval=20,minval=1,inline="bb")
BB_dev=input.float(title="BBDeviation(Desv.)",group=GRUPO_BB,defval=2.0,minval=0.01,step=0.05,inline="bb")
[BB_mid,BB_upper,BB_lower]=ta.bb(close,BB_length,BB_dev)
[_,BB_upper_SL,BB_lower_SL]=ta.bb(close,BB_length,TPSL_SL_BB_dev)
//dimakKCtimeframe
//NOTUSED
//GRUPO_KC_TF="KeltnerChannel-MultiTimeFrame"
//useTF_KC=input.bool(false,"UseKCTimeFrame",group=GRUPO_KC_TF)
//KC_TF_length=input.int(title="KeltnerTFLong:",group=GRUPO_KC_TF,defval=20,minval=1,inline="kc")
//KC_TF_mult=input.float(title="KeltnerTFMult:",group=GRUPO_KC_TF,defval=2,minval=0.01,step=0.05,inline="kc")
//tf_indicator=input.timeframe(title="KCTimeFrame:",defval='',group=GRUPO_KC_TF,inline="03")
////EMAi=ta.ema(close,KC_TF_length)
//[Keltmiddle,Keltupper,Keltlower]=ta.kc(close,KC_TF_length,KC_TF_mult)
//KC_TF_upper=request.security(syminfo.tickerid,tf_indicator,Keltupper,gaps=barmerge.gaps_off)
//KC_TF_lower=request.security(syminfo.tickerid,tf_indicator,Keltlower,gaps=barmerge.gaps_off)
////KC_TF_mid=request.security(syminfo.tickerid,tf_indicator,EMAi,gaps=barmerge.gaps_off)
////=================================================================
//longCondition3=true
//shortCondition3=true
//if(useTF_KC)
//longCondition3:=false
//shortCondition3:=false
//if(P_cond_entrada=="Mechafueradelabanda")
//longCondition3:=low<KC_TF_lower
//shortCondition3:=high>KC_TF_upper
//elseif(P_cond_entrada=="Mechafueradelabandayluegocierredentro")
//longCondition3:=low[1]<KC_TF_lowerandclose>KC_TF_lower
//shortCondition3:=high[1]>KC_TF_upperandclose<KC_TF_upper
//elseif(P_cond_entrada=="Cierrefueradelabanda")
//longCondition3:=close<KC_TF_lower
//shortCondition3:=close>KC_TF_upper
//else//Cierrefueradelabandayluegocierredentro
//longCondition3:=close[1]<KC_TF_lowerandclose>KC_TF_lower
//shortCondition3:=close[1]>KC_TF_upperandclose<KC_TF_upper
//else
//longCondition3:=true
//shortCondition3:=true
////KCTF
//plot(KC_TF_upper,"Bandasuperior",color.rgb(3,81,92))
////plot(KC_TF_mid,"Mediamóvil",color.rgb(192,122,17))
//plot(KC_TF_lower,"Bandainferior",color.rgb(3,81,92))
//===============dimakKCtimeframe================END
//==Inputsdeindicadores
//ATR
GRUPO_ATR="ATR(onlyforATRSL/TP)"
//ATR_referencia=input.source(title="ATRReference",group=GRUPO_ATR,defval=close,inline="atr_calc")//ThefontisnotappliedtotheATRcalculation,itisforthepositioningwithrespecttothepriceonthechart
ATR_referencia=close
ATR_length=input.int(title="ATRLength",group=GRUPO_ATR,defval=7,minval=1,inline="atr_calc")
ATR=ta.atr(ATR_length)
ATR_sl=ATR*TPSL_SL_ATR_mult
ATR_tp=ATR*TPSL_TP_ATR_mult
ATR_LONG_sl=ATR_referencia-ATR_sl//Conversely,theloweronecanbeusedasSTOPLOSSorTRAILINGSTOP
ATR_LONG_tp=ATR_referencia+ATR_tp//TheATRonthecandlescanbeusedasTAKEPROFIT
ATR_SHORT_sl=ATR_referencia+ATR_sl//""
ATR_SHORT_tp=ATR_referencia-ATR_tp//ForShortsit'stheotherwayaround
//==Calculationofconditions
//Assigncommonvariablesbasedontheselectedindicator
banda_superior=BB_upper
media_movil=BB_mid
banda_inferior=BB_lower
banda_extendida_sup_SL=BB_upper_SL
banda_extendida_inf_SL=BB_lower_SL
if(P_indicador=="KeltnerChannel")
banda_superior:=KC_upper
media_movil:=KC_mid
banda_inferior:=KC_lower
banda_extendida_sup_SL:=KC_upper_SL
banda_extendida_inf_SL:=KC_lower_SL
//Calcularcondicionesdeentrada
longCondition1=false
shortCondition1=false
if(P_cond_entrada=="Wickoutofband")
longCondition1:=low<banda_inferior
shortCondition1:=high>banda_superior
elseif(P_cond_entrada=="Wickoutofthebandthenclosein")
longCondition1:=low[1]<banda_inferiorandclose>banda_inferior
shortCondition1:=high[1]>banda_superiorandclose<banda_superior
elseif(P_cond_entrada=="Out-of-bandclosure")
longCondition1:=close<banda_inferior
shortCondition1:=close>banda_superior
else//Closeoutofthebandthenclosein
longCondition1:=close[1]<banda_inferiorandclose>banda_inferior
shortCondition1:=close[1]>banda_superiorandclose<banda_superior
//==Entrada(debencumplirsetodasparaentrar)
//==================================================================================
//======DimakDelay======================================================================
i_qtyTimeUnits=-input.float(1,"Delaybetweenorders:",inline="1",minval=0,tooltip="Use0fornodelay",group="Time_Delay")
i_timeUnits=input.string("minutes","",inline="1",options=["seconds","minutes","hours","days","chart"],group="Time_Delay")
useDelay=input.bool(false,"UseDelay",group="Time_Delay")
//—————Convertscurrentcharttimeframeintoafloatminutesvalue.
f_tfInMinutes()=>
_tfInMinutes=timeframe.multiplier*(
timeframe.isseconds?1./60:
timeframe.isminutes?1.:
timeframe.isdaily?60.*24:
timeframe.isweekly?60.*24*7:
timeframe.ismonthly?60.*24*30.4375:na)
f_timeFrom(_from,_qty,_units)=>
int_timeFrom=na
//Removeany"s"letterinthe_unitsargument,sowedon'tneedtocomparesingularandpluralunitnames.
_unit=str.replace_all(_units,"s","")
//Determineifwewillcalculateoffsetfromthebar'stimeorfromcurrenttime.
_t=_from=="bar"?time:_from=="close"?time_close:timenow
//Calculatetimeatoffset.
if_units=="chart"
//Offsetinchartresmultiples.
_timeFrom:=int(_t+(f_tfInMinutes()*60*1000*_qty))
else
//Addtherequired_qtyoftime_unitstothe_fromstartingtime.
_year=year(_t)+(_unit=="year"?int(_qty):0)
_month=month(_t)+(_unit=="month"?int(_qty):0)
_day=dayofmonth(_t)+(_unit=="day"?int(_qty):0)
_hour=hour(_t)+(_unit=="hour"?int(_qty):0)
_minute=minute(_t)+(_unit=="minute"?int(_qty):0)
_second=second(_t)+(_unit=="econd"?int(_qty):0)
//ReturntheresultingtimeinmsUnixtimeformat.
_timeFrom:=timestamp(_year,_month,_day,_hour,_minute,_second)
//Timedelayfilter
varfloatlastTradeTime=na
ifnz(ta.change(strategy.position_size),time)!=0
//Anorderhasbeenexecuted;savethebar'stime.
lastTradeTime:=time
//Ifuserhaschosentodoso,wait`i_qtyTimeUnits``i_timeUnits`betweenorders
delayElapsed=useDelay?f_timeFrom("close",i_qtyTimeUnits,i_timeUnits)>=lastTradeTime:true
//====DimakDelayEnd======================================================================
//=======================dimakRSItimeframeBegin1111111====================
GRUPO_RSI_TF="==========RSI-MultiTimeFrame[1]============"
lengthRSI=input.int(title="RSITFLong(14):",group=GRUPO_RSI_TF,defval=14,minval=1)
tf_rsi_indicator=input.timeframe("",title="RSITimeFrame:",group=GRUPO_RSI_TF)
useRSITFoverSold=input.bool(false,'UseRSILONGRange',group=GRUPO_RSI_TF)
overSoldRSITF=input.int(title='(LONG)RSIisMore',group=GRUPO_RSI_TF,defval=30,step=5,minval=1,inline='22')
overSold2RSITF=input.int(title='&Less',group=GRUPO_RSI_TF,defval=70,minval=1,maxval=100,step=5,inline='22')
useRSITFFoverBought=input.bool(false,'UseRSISHORTRange',group=GRUPO_RSI_TF)
overBoughtRSITF=input.int(title='(SHORT)RSIisLess',group=GRUPO_RSI_TF,defval=70,step=5,minval=1,maxval=100,inline='33')
overBought2RSITF=input.int(title='&More',group=GRUPO_RSI_TF,defval=30,minval=1,step=5,inline='33')
rsi_tf1=request.security(syminfo.tickerid,tf_rsi_indicator,ta.rsi(close,lengthRSI),barmerge.gaps_off)
//=====================================================
longCondition8=true
shortCondition8=true
ifuseRSITFoverSoldoruseRSITFFoverBought
longCondition8:=false
shortCondition8:=false
ifuseRSITFoverSoldand(rsi_tf1>=overSoldRSITF)and(rsi_tf1<=overSold2RSITF)
longCondition8:=true

ifuseRSITFFoverBoughtand(rsi_tf1<=overBoughtRSITF)and(rsi_tf1>=overBought2RSITF)
shortCondition8:=true
else
longCondition8:=true
shortCondition8:=true
//dimakRSItimeframeEND
//=====================================================
//=======================dimakRSItimeframeBegin22222222====================
GRUPO_RSI_TF2="==========RSI-MultiTimeFrame[2]============"
lengthRSI2=input.int(title="RSITFLong(14)[2]:",group=GRUPO_RSI_TF2,defval=14,minval=1)
tf_rsi_indicator2=input.timeframe("",title="RSITimeFrame[2]:",group=GRUPO_RSI_TF2)
useRSITFoverSold2=input.bool(false,'UseRSILONGRange[2]',group=GRUPO_RSI_TF2)
overSoldRSITF2=input.int(title='(LONG)RSIisMore[2]',group=GRUPO_RSI_TF2,defval=30,step=5,minval=1,inline='22')
overSold2RSITF2=input.int(title='&Less[2]',group=GRUPO_RSI_TF2,defval=70,minval=1,maxval=100,step=5,inline='22')
useRSITFFoverBought2=input.bool(false,'UseRSISHORTRange[2]',group=GRUPO_RSI_TF2)
overBoughtRSITF2=input.int(title='(SHORT)RSIisLess[2]',group=GRUPO_RSI_TF2,defval=70,maxval=100,step=5,minval=1,inline='33')
overBought2RSITF2=input.int(title='&More[2]',group=GRUPO_RSI_TF2,defval=30,minval=1,step=5,inline='33')
rsi_tf2=request.security(syminfo.tickerid,tf_rsi_indicator2,ta.rsi(close,lengthRSI2),barmerge.gaps_off)
//=====================================================
longCondition10=true
shortCondition10=true
ifuseRSITFoverSold2oruseRSITFFoverBought2andnotna(rsi_tf2)
longCondition10:=false
shortCondition10:=false
ifuseRSITFoverSold2and(rsi_tf2>=overSoldRSITF2)and(rsi_tf2<=overSold2RSITF2)
longCondition10:=true

ifuseRSITFFoverBought2and(rsi_tf2<=overBoughtRSITF2)and(rsi_tf2>=overBought2RSITF2)
shortCondition10:=true
else
longCondition10:=true
shortCondition10:=true
//dimakRSItimeframeEND
//=====================================================
//============dimak"MoneyFlowIndex"FilterTimeframe[111]=============
GRUPO_MFI_TF='===========MoneyFlowIndexFilterTimeFrame[1]==========='
lengthMFI=input.int(title='MFITFLong:',group=GRUPO_MFI_TF,defval=14,minval=1)
tf_mfi_indicator=input.timeframe('',title='MFITimeFrame:',group=GRUPO_MFI_TF)
useMFITFoverSold=input.bool(false,'UseMFILONGRange',group=GRUPO_MFI_TF)
overSold=input.int(title='(LONG)MFIisMore',group=GRUPO_MFI_TF,defval=10,step=5,minval=1,inline='22')
overSold2=input.int(title='&Less',group=GRUPO_MFI_TF,defval=60,maxval=100,step=5,minval=1,inline='22')
useMFITFoverBought=input.bool(false,'UseMFISHORTRange',group=GRUPO_MFI_TF)
overBought=input.int(title='(SHORT)MFIisLess',group=GRUPO_MFI_TF,defval=95,maxval=100,step=5,minval=1,inline='33')
overBought2=input.int(title='&More',group=GRUPO_MFI_TF,defval=50,maxval=100,step=5,minval=1,inline='33')
mfi_tf1=request.security(syminfo.tickerid,tf_mfi_indicator,ta.mfi(hlc3,lengthMFI),barmerge.gaps_off)
//mfi_tf1-test=ta.mfi(hlc3,lengthMFI)
//use_mfi_tf1_rising=input.bool(false,'UseMFITFRising?',group=GRUPO_MFI_TF)
//mfi_tf1_rising_len=input.int(3,title='MFITFRisingBars:',group=GRUPO_MFI_TF,minval=1,maxval=20)
//use_mfi_tf1_falling=input.bool(false,'UseMFITFFalling?',group=GRUPO_MFI_TF)
//mfi_tf1_falling_len=input.int(3,title='MFITFFallingBars:',group=GRUPO_MFI_TF,minval=1,maxval=20)
////mfi_tf1_falling=ta.falling(mfi_tf1,mfi_tf1_falling_len)
////mfi_tf1_rising=ta.rising(mfi_tf1,mfi_tf1_rising_len)
//mfi_tf1_falling=ta.falling(ta.mfi(hlc3,lengthMFI),mfi_tf1_falling_len)
//mfi_tf1_rising=ta.rising(ta.mfi(hlc3,lengthMFI),mfi_tf1_rising_len)
//mfi_tf1_falling_tf=request.security(syminfo.tickerid,tf_mfi_indicator,mfi_tf1_falling,barmerge.gaps_off)
//mfi_tf1_rising_tf=request.security(syminfo.tickerid,tf_mfi_indicator,mfi_tf1_rising,barmerge.gaps_off)
//plot(mfi_tf1)
//plot(mfi_tf2,color=color.new(#f84343,1))
//=====================================================
longCondition4=true
shortCondition4=true

ifuseMFITFoverSoldoruseMFITFoverBought
longCondition4:=false
shortCondition4:=false
ifuseMFITFoverSoldand(mfi_tf1>overSold)and(mfi_tf1<overSold2)
longCondition4:=true

ifuseMFITFoverBoughtand(mfi_tf1<overBought)and(mfi_tf1>overBought2)
shortCondition4:=true


//if(use_mfi_tf1_fallingandmfi_tf1_falling_tf)or(use_mfi_tf1_risingandmfi_tf1_rising_tf)
//shortCondition4:=true

//if(use_mfi_tf1_fallingandmfi_tf1_falling_tf)or(use_mfi_tf1_risingandmfi_tf1_rising_tf)
//longCondition4:=true

else
longCondition4:=true
shortCondition4:=true

//dimakMFItimeframe[111]END
//=====================================================
//============dimak"MoneyFlowIndex"FilterTimeframe[222]=============
GRUPO_MFI_TF2='===========MoneyFlowIndexFilterTimeFrame[2]==========='
lengthMFI2=input.int(title='MFITFLong:[2]',group=GRUPO_MFI_TF2,defval=14,minval=1)
tf_mfi_indicator2=input.timeframe('',title='MFITimeFrame[2]:',group=GRUPO_MFI_TF2)
useMFITFoverSold2=input.bool(false,'UseMFILONGRange[2]',group=GRUPO_MFI_TF2)
overSold12=input.int(title='(LONG)MFIisMore[2]',group=GRUPO_MFI_TF2,defval=10,step=5,minval=1,inline='22')
overSold22=input.int(title='&Less[2]',group=GRUPO_MFI_TF2,defval=60,maxval=100,step=5,minval=1,inline='22')
useMFITFoverBought2=input.bool(false,'UseMFISHORTRange[2]',group=GRUPO_MFI_TF2)
overBought12=input.int(title='(SHORT)MFIisLess[2]',group=GRUPO_MFI_TF2,defval=95,maxval=110,step=5,minval=1,inline='33')
overBought22=input.int(title='&More[2]',group=GRUPO_MFI_TF2,defval=50,maxval=100,step=5,minval=1,inline='33')
mfi_tf2=request.security(syminfo.tickerid,tf_mfi_indicator2,ta.mfi(hlc3,lengthMFI2),barmerge.gaps_off)
//=====================================================
longCondition5=true
shortCondition5=true

ifuseMFITFoverSold2oruseMFITFoverBought2
longCondition5:=false
shortCondition5:=false
ifuseMFITFoverSold2and(mfi_tf2>=overSold12)and(mfi_tf2<=overSold22)
longCondition5:=true

ifuseMFITFoverBought2and(mfi_tf2<=overBought12)and(mfi_tf2>=overBought22)
shortCondition5:=true

else
longCondition5:=true
shortCondition5:=true

//dimakMFItimeframe[222]END
//=====================================================
//=======================dimakCCItimeframeBegin1111111====================
GRUPO_CCI_TF="==========CCI-MultiTimeFrame[1]============"
lengthCCI=input.int(title="CCITFLong(14):",group=GRUPO_CCI_TF,defval=14,minval=1)
tf_CCI_indicator=input.timeframe("",title="CCITimeFrame:",group=GRUPO_CCI_TF)
useCCITFoverSold=input.bool(false,'UseCCILONGRange',group=GRUPO_CCI_TF)
overSoldCCITF=input.int(title='(LONG)CCIisMore',group=GRUPO_CCI_TF,defval=-400,step=5,minval=-400,inline='22')
overSold2CCITF=input.int(title='&Less',group=GRUPO_CCI_TF,defval=400,minval=-401,maxval=400,step=5,inline='22')
useCCITFFoverBought=input.bool(false,'UseCCISHORTRange',group=GRUPO_CCI_TF)
overBoughtCCITF=input.int(title='(SHORT)CCIisLess',group=GRUPO_CCI_TF,defval=400,step=5,minval=-401,maxval=400,inline='33')
overBought2CCITF=input.int(title='&More',group=GRUPO_CCI_TF,defval=10,minval=-401,step=5,inline='33')
CCI_tf1=request.security(syminfo.tickerid,tf_CCI_indicator,ta.cci(close,lengthCCI),barmerge.gaps_off)
//=====================================================
longCondition15=true
shortCondition15=true
ifuseCCITFoverSoldoruseCCITFFoverBought
longCondition15:=false
shortCondition15:=false
ifuseCCITFoverSoldand(CCI_tf1>=overSoldCCITF)and(CCI_tf1<=overSold2CCITF)
longCondition15:=true

ifuseCCITFFoverBoughtand(CCI_tf1<=overBoughtCCITF)and(CCI_tf1>=overBought2CCITF)
shortCondition15:=true
else
longCondition15:=true
shortCondition15:=true
//dimakCCItimeframeEND
//=====================================================
//===================================================================================
long_conditions=longCondition1andlongCondition2andlongCondition4andlongCondition5andlongCondition8andlongCondition10andlongCondition15
entrar_en_LONG=P_permitir_LONGSandlong_conditionsandtestPeriod()andATR>0.0//LodelATR>0.0esporseguridadyaquepuededarseunaentradadondeaúnnoescalculableelATRporquenoexistanvelasynuncacerrarposiciónpuesnosecreócorrectamente//Solopermitir1posiciónalmismotiempo
short_conditions=shortCondition1andshortCondition2andshortCondition4andshortCondition5andshortCondition8andshortCondition10andshortCondition15
entrar_en_SHORT=P_permitir_SHORTSandshort_conditionsandtestPeriod()andATR>0.0//LodelATR>0.0esporseguridadyaquepuededarseunaentradadondeaúnnoescalculableelATRporquenoexistanvelasynuncacerrarposiciónpuesnosecreócorrectamente//Solopermitir1posiciónalmismotiempo
varLONG_take_profit=0.0
varLONG_stop_loss=0.0
varSHORT_take_profit=0.0
varSHORT_stop_loss=0.0
//if(entrar_en_LONGandnotposicion_abiertaanddelayElapsed)
if(entrar_en_LONGandnotposicion_abiertaanddelayElapsedand((strategy.closedtrades==0)or(bar_index!=strategy.closedtrades.entry_bar_index(strategy.closedtrades-1))))
strategy.entry("L",strategy.long,alert_message="enter_cycle")

//elseif(entrar_en_SHORTandnotposicion_abiertaanddelayElapsed)
elseif(entrar_en_SHORTandnotposicion_abiertaanddelayElapsedand((strategy.closedtrades==0)or(bar_index!=strategy.closedtrades.entry_bar_index(strategy.closedtrades-1))))
strategy.entry("S",strategy.short,alert_message="enter_cycle")
SHORT_stop_loss:=TP_SL_tipo_SL=="useStaticSLTP"?shortSLExitPrice:TP_SL_tipo_SL=="PreviousWick"?(P_cond_entrada=="Wickoutofband"orP_cond_entrada=="Out-of-bandclosure"?high[1]:high):TP_SL_tipo_SL=="ExtendedBand"?banda_extendida_sup_SL:ATR_SHORT_sl
SHORT_take_profit:=TP_SL_tipo_TP=="useStaticSLTP"?shortExitPrice:TP_SL_tipo_TP=="OppositeBand"?banda_inferior:TP_SL_tipo_TP=="MovingAverage"?media_movil:ATR_SHORT_tp

LONG_stop_loss:=TP_SL_tipo_SL=="useStaticSLTP"?longSLExitPrice:TP_SL_tipo_SL=="PreviousWick"?(P_cond_entrada=="Wickoutofband"orP_cond_entrada=="Out-of-bandclosure"?low[1]:low):TP_SL_tipo_SL=="ExtendedBand"?banda_extendida_inf_SL:ATR_LONG_sl
LONG_take_profit:=TP_SL_tipo_TP=="useStaticSLTP"?longExitPrice:TP_SL_tipo_TP=="OppositeBand"?banda_superior:TP_SL_tipo_TP=="MovingAverage"?media_movil:ATR_LONG_tp
ifbarstate.ishistoryorSendSLsingonReal
strategy.exit("CL","L",limit=LONG_take_profit,stop=LONG_stop_loss,alert_message="stoploss")
strategy.exit("CS","S",limit=SHORT_take_profit,stop=SHORT_stop_loss,alert_message="stoploss")
//use{{strategy.order.alert_message}}inAlerts
//NotusingbyDimak
if(posicion_abiertaandTP_SL_TP_dinamico)
if(LONG_abierto)
LONG_take_profit:=TP_SL_tipo_TP=="OppositeBand"?banda_superior:TP_SL_tipo_TP=="MovingAverage"?media_movil:ATR_LONG_tp
strategy.exit("CerrarLong","AbrirLong",limit=LONG_take_profit,stop=LONG_stop_loss,alert_message="stoploss")
else
SHORT_take_profit:=TP_SL_tipo_TP=="OppositeBand"?banda_inferior:TP_SL_tipo_TP=="MovingAverage"?media_movil:ATR_SHORT_tp
strategy.exit("CerrarShort","AbrirShort",limit=SHORT_take_profit,stop=SHORT_stop_loss,alert_message="stoploss")
//==Ploteoenpantalla
bgcolor(entrar_en_LONG?color.new(color.green,90):entrar_en_SHORT?color.new(color.red,90):noneColor)
//ATR
plot(TP_SL_tipo_TP=="ATR"?ATR_LONG_tp:na,style=plot.style_stepline,color=color.new(color.green,80),linewidth=1)
plot(TP_SL_tipo_SL=="ATR"?ATR_LONG_sl:na,style=plot.style_stepline,color=color.new(color.red,80),linewidth=1)
plot(TP_SL_tipo_TP=="ATR"?ATR_SHORT_tp:na,style=plot.style_stepline,color=color.new(color.green,80),linewidth=1)
plot(TP_SL_tipo_SL=="ATR"?ATR_SHORT_sl:na,style=plot.style_stepline,color=color.new(color.red,80),linewidth=1)
//Canalymedia
plot(banda_superior,"Bandasuperior",color.aqua)
plot(media_movil,"MovingAverage",color.orange)
plot(banda_inferior,"Bandainferior",color.aqua)
//Bandasextendidas
plot(TP_SL_tipo_SL=="ExtendedBand"?banda_extendida_sup_SL:na,"Bandasuperiorextendida(StopLoss)",color.red,style=plot.style_circles)
plot(TP_SL_tipo_SL=="ExtendedBand"?banda_extendida_inf_SL:na,"Bandainferiorextendida(StopLoss)",color.red,style=plot.style_circles)
displTPSL=notUSEdisplTPSL?display.none:display.all
//visualTPSL
avg_position_price_plot=plot(series=strategy.position_size!=0?strategy.position_avg_price:na,color=color.new(#c2bfbf,25),style=plot.style_linebr,linewidth=2,title="PrecioEntrada",display=displTPSL)
LONG_tp_plot=plot(strategy.position_size>0andlongExitPrice>0.0?longExitPrice:na,color=color.new(color.lime,60),style=plot.style_linebr,linewidth=2,title="LONGTakeProfit",display=displTPSL)
LONG_sl_plot=plot(strategy.position_size>0andlongSLExitPrice>0.0?longSLExitPrice:na,color=color.new(color.red,60),style=plot.style_linebr,linewidth=2,title="LongStopLoss",display=displTPSL)
fill(avg_position_price_plot,LONG_tp_plot,color=color.new(color.olive,90),display=displTPSL)
fill(avg_position_price_plot,LONG_sl_plot,color=color.new(color.maroon,90),display=displTPSL)
SHORT_tp_plot=plot(strategy.position_size<0andshortExitPrice>0.0?shortExitPrice:na,color=color.new(color.lime,60),style=plot.style_linebr,linewidth=2,title="SHORTTakeProfit",display=displTPSL)
SHORT_sl_plot=plot(strategy.position_size<0andshortSLExitPrice>0.0?shortSLExitPrice:na,color=color.new(color.red,60),style=plot.style_linebr,linewidth=2,title="ShortStopLoss",display=displTPSL)
fill(avg_position_price_plot,SHORT_tp_plot,color=color.new(color.olive,90),display=displTPSL)
fill(avg_position_price_plot,SHORT_sl_plot,color=color.new(color.maroon,90),display=displTPSL)
Expand (676 lines)
