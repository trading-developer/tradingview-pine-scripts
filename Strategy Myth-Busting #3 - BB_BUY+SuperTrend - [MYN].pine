Script Name: Strategy Myth-Busting #3 - BB_BUY+SuperTrend - [MYN]
Author: myncrypto
Description: This is part of a new series we are calling "Strategy Myth-Busting" where we take open public manual trading strategies and automate them. The goal is to not only validate the authenticity of the claims but to provide an automated version for traders who wish to trade autonomously.

Our third one we are automating is one of the strategies from  "The Best 3 Buy And...
PineScript code:

Pine Script™ strategy
Strategy Myth-Busting #3 - BB_BUY+SuperTrend - [MYN]
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  myn
//@version=5
strategy('Strategy  Myth-Busting  #3  -  BB_BUY+SuperTrend  -  [MYN]',  max_bars_back=5000,  overlay=true,  pyramiding=0,  initial_capital=20000,  currency='USD',  default_qty_type=strategy.percent_of_equity,  default_qty_value=100.0,  commission_value=0.075,  use_bar_magnifier  =  true)
///Derek-Multiple-Take-Profit-Strategy-Template-v5-2022-04-03.pine
//  04-03-2022  Added  ADX
//  08-17-2022  Added  Dashboard
/////////////////////////////////////
//*  Put  your  strategy  logic  below  *//
/////////////////////////////////////
//  Q0txMfU623Y
//  Trading  Rules
//long  condition  when  BB_BUY  indicates  buy  signal  and  SuperTrend  is  green
//short  condition  when  BB_BUY  indicates  Sell  signal  and  SuperTrend  is  red
//@version=5
//  BB_Buy  and  sell  strategy  logic
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//indicator(shorttitle='BB_Buy  and  Sell',  title='BB_Buy  and  Sell',  overlay=true)
//  ===  INPUTS  ===
//  Bollinger  Bands  Inputs
bb_use_ema  =  input(false,  title='Use  EMA  for  Bollinger  Band')
bb_length  =  input.int(42,  minval=1,  title='Bollinger  Length')
bb_source  =  input(close,  title='Bollinger  Source')
bb_mult  =  input.float(2.0,  title='Base  Multiplier',  minval=0.5,  maxval=10)
//  EMA  inputs
fast_ma_len  =  input.int(10,  title='Fast  EMA  length',  minval=2)
//  Awesome  Inputs
nLengthSlow  =  input.int(77,  minval=1,  title='Awesome  Length  Slow')
nLengthFast  =  input.int(10,  minval=1,  title='Awesome  Length  Fast')
//  ===  /INPUTS  ===
//  Breakout  Indicator  Inputs
ema_1  =  ta.ema(bb_source,  bb_length)
sma_1  =  ta.sma(bb_source,  bb_length)
bb_basis  =  bb_use_ema  ?  ema_1  :  sma_1
fast_ma  =  ta.ema(bb_source,  fast_ma_len)
//  Deviation
//  *  I'm  sure  there's  a  way  I  couldwritesomeofthiscleaner,butmeh.
dev=ta.stdev(bb_source,bb_length)
bb_dev_inner=bb_mult*dev
//Upperbands
inner_high=bb_basis+bb_dev_inner
//LowerBands
inner_low=bb_basis-bb_dev_inner
//CalculateAwesomeOscillator
xSMA1_hl2=ta.sma(hl2,nLengthFast)
xSMA2_hl2=ta.sma(hl2,nLengthSlow)
xSMA1_SMA2=xSMA1_hl2-xSMA2_hl2
//CalculatedirectionofAO
AO=xSMA1_SMA2>=0?xSMA1_SMA2>xSMA1_SMA2[1]?1:2:xSMA1_SMA2>xSMA1_SMA2[1]?-1:-2
//DeternineifwearecurrentlyLONG
isLong=false
isLong:=nz(isLong[1],false)
//DetermineifwearecurrentlySHORT
isShort=false
isShort:=nz(isShort[1],false)
//Buyonlyifthebuysignalistriggeredandwearenotalreadylong
LONG=notisLongandta.crossover(fast_ma,bb_basis)andclose>bb_basisandmath.abs(AO)==1
c_green=fast_ma>bb_basis
//Sellonlyifthesellsignalistriggeredandwearenotalreadyshort
SHORT=notisShortandta.crossunder(fast_ma,bb_basis)andclose<bb_basisandmath.abs(AO)==2
c_red=fast_ma<bb_basis
ifLONG
isLong:=true
isShort:=false
isShort
barcolor(LONG?color.green:na)
ifSHORT
isLong:=false
isShort:=true
isShort
barcolor(c_green?color.green:na)
barcolor(c_red?color.red:na)
//ShowBreakAlerts
plotshape(SHORT,title='Sell',style=shape.labeldown,location=location.abovebar,size=size.normal,text='Sell',textcolor=color.new(color.white,0),color=color.new(color.red,0))
plotshape(LONG,title='Buy',style=shape.labelup,location=location.belowbar,size=size.normal,text='Buy',textcolor=color.new(color.white,0),color=color.new(color.green,0))
//===/PLOTTING===
//SendalerttoTValarmsub-system
alertcondition(LONG,title='Buy',message='Buy')
alertcondition(LONG,title='Buy',message='Buy')
alertcondition(LONG,title='Buy',message='Buy')
alertcondition(SHORT,title='Sell',message='Sell')
//SuperTrend
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//@version=5
//indicator("Supertrend",overlay=true,timeframe="",timeframe_gaps=true)
atrPeriod=input(10,"ATRLength")
factor=input.float(3.0,"Factor",step=0.01)
[supertrend,direction]=ta.supertrend(factor,atrPeriod)
bodyMiddle=plot((open+close)/2,display=display.none)
upTrend=plot(direction<0?supertrend:na,"UpTrend",color=color.green,style=plot.style_linebr)
downTrend=plot(direction<0?na:supertrend,"DownTrend",color=color.red,style=plot.style_linebr)
fill(bodyMiddle,upTrend,color.new(color.green,90),fillgaps=false)
fill(bodyMiddle,downTrend,color.new(color.red,90),fillgaps=false)
//////////////////////////////////////
//*Putyourstrategyrulesbelow*//
/////////////////////////////////////
//longconditionwhenBB_BUYindicatesbuysignalandSuperTrendisgreen
//shortconditionwhenBB_BUYindicatesSellsignalandSuperTrendisred
longCondition=LONGanddirection<0
shortCondition=SHORTanddirection>0
//defineas0ifdonotwanttouse
closeLongCondition=0
closeShortCondition=0
//ADX
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
adxEnabled=input.bool(defval=false,title="AverageDirectionalIndex(ADX)",tooltip="",group="ADX")
adxlen=input(14,title="ADXSmoothing",group="ADX")
adxdilen=input(14,title="DILength",group="ADX")
adxabove=input(25,title="ADXThreshold",group="ADX")
adxdirmov(len)=>
adxup=ta.change(high)
adxdown=-ta.change(low)
adxplusDM=na(adxup)?na:(adxup>adxdownandadxup>0?adxup:0)
adxminusDM=na(adxdown)?na:(adxdown>adxupandadxdown>0?adxdown:0)
adxtruerange=ta.rma(ta.tr,len)
adxplus=fixnan(100*ta.rma(adxplusDM,len)/adxtruerange)
adxminus=fixnan(100*ta.rma(adxminusDM,len)/adxtruerange)
[adxplus,adxminus]
adx(adxdilen,adxlen)=>
[adxplus,adxminus]=adxdirmov(adxdilen)
adxsum=adxplus+adxminus
adx=100*ta.rma(math.abs(adxplus-adxminus)/(adxsum==0?1:adxsum),adxlen)
adxsig=adxEnabled?adx(adxdilen,adxlen):na
isADXEnabledAndAboveThreshold=adxEnabled?(adxsig>adxabove):true
//BacktestingTimePeriod(Input.timenotworkingasexpectedasof03/30/2021.Givingoddstart/enddates
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
useStartPeriodTime=input.bool(true,'Start',group='DateRange',inline='StartPeriod')
startPeriodTime=input.time(timestamp('1Jan2019'),'',group='DateRange',inline='StartPeriod')
useEndPeriodTime=input.bool(true,'End',group='DateRange',inline='EndPeriod')
endPeriodTime=input.time(timestamp('31Dec2030'),'',group='DateRange',inline='EndPeriod')
start=useStartPeriodTime?startPeriodTime>=time:false
end=useEndPeriodTime?endPeriodTime<=time:false
calcPeriod=notstartandnotend
//TradeDirection
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tradeDirection=input.string('LongandShort',title='TradeDirection',options=['LongandShort','LongOnly','ShortOnly'],group='TradeDirection')
//PercentasPoints
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
per(pcnt)=>
strategy.position_size!=0?math.round(pcnt/100*strategy.position_avg_price/syminfo.mintick):float(na)
//Takeprofit1
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp1=input.float(title='TakeProfit1-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit1')
q1=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit1')
//Takeprofit2
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp2=input.float(title='TakeProfit2-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit2')
q2=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit2')
//Takeprofit3
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp3=input.float(title='TakeProfit3-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit3')
q3=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit3')
//Takeprofit4
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp4=input.float(title='TakeProfit4-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit')
///StopLoss
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
stoplossPercent=input.float(title='StopLoss(%)',defval=999,minval=0.01,group='StopLoss')*0.01
slLongClose=close<strategy.position_avg_price*(1-stoplossPercent)
slShortClose=close>strategy.position_avg_price*(1+stoplossPercent)
///Leverage
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
leverage=input.float(1,'Leverage',step=.5,group='Leverage')
contracts=math.min(math.max(.000001,strategy.equity/close*leverage),1000000000)
///TradeStateManagement
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
isInLongPosition=strategy.position_size>0
isInShortPosition=strategy.position_size<0
///ProfitViewAlertSyntaxStringGeneration
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
alertSyntaxPrefix=input.string(defval='CRYPTANEX_99FTX_Strategy-Name-Here',title='AlertSyntaxPrefix',group='ProfitViewAlertSyntax')
alertSyntaxBase=alertSyntaxPrefix+'\n#'+str.tostring(open)+','+str.tostring(high)+','+str.tostring(low)+','+str.tostring(close)+','+str.tostring(volume)+','
///TradeExecution
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
longConditionCalc=(longConditionandisADXEnabledAndAboveThreshold)
shortConditionCalc=(shortConditionandisADXEnabledAndAboveThreshold)
ifcalcPeriod
iflongConditionCalcandtradeDirection!='ShortOnly'andisInLongPosition==false
strategy.entry('Long',strategy.long,qty=contracts)
alert(message=alertSyntaxBase+'side:long',freq=alert.freq_once_per_bar_close)
ifshortConditionCalcandtradeDirection!='LongOnly'andisInShortPosition==false
strategy.entry('Short',strategy.short,qty=contracts)
alert(message=alertSyntaxBase+'side:short',freq=alert.freq_once_per_bar_close)

//InspiredfromMultiple%%profitexitsexamplebyadolgohttps://www.tradingview.com/script/kHhCik9f-Multiple-profit-exits-example/
strategy.exit('TP1',qty_percent=q1,profit=per(tp1))
strategy.exit('TP2',qty_percent=q2,profit=per(tp2))
strategy.exit('TP3',qty_percent=q3,profit=per(tp3))
strategy.exit('TP4',profit=per(tp4))
strategy.close('Long',qty_percent=100,comment='SLLong',when=slLongClose)
strategy.close('Short',qty_percent=100,comment='SLShort',when=slShortClose)
strategy.close_all(when=closeLongConditionorcloseShortCondition,comment='ClosePostion')
///Dashboard
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Inspiredbyhttps://www.tradingview.com/script/uWqKX6A2/-ThanksVertMT
showDashboard=input.bool(group="Dashboard",title="ShowDashboard",defval=true)
f_fillCell(_table,_column,_row,_title,_value,_bgcolor,_txtcolor)=>
_cellText=_title+"\n"+_value
table.cell(_table,_column,_row,_cellText,bgcolor=_bgcolor,text_color=_txtcolor,text_size=size.auto)
//Drawdashboardtable
ifshowDashboard
varbgcolor=color.new(color.black,0)

//KeeptrackofWins/Lossesstreaks
newWin=(strategy.wintrades>strategy.wintrades[1])and(strategy.losstrades==strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
newLoss=(strategy.wintrades==strategy.wintrades[1])and(strategy.losstrades>strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
varipintwinRow=0
varipintlossRow=0
varipintmaxWinRow=0
varipintmaxLossRow=0
ifnewWin
lossRow:=0
winRow:=winRow+1
ifwinRow>maxWinRow
maxWinRow:=winRow

ifnewLoss
winRow:=0
lossRow:=lossRow+1
iflossRow>maxLossRow
maxLossRow:=lossRow
//Preparestatstable
vartabledashTable=table.new(position.bottom_right,1,15,border_width=1)


ifbarstate.islastconfirmedhistory
//Updatetable
dollarReturn=strategy.netprofit
f_fillCell(dashTable,0,0,"Start:",str.format("{0,date,long}",strategy.closedtrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.closedtrades.entry_time(0))
f_fillCell(dashTable,0,1,"End:",str.format("{0,date,long}",strategy.opentrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.opentrades.entry_time(0))
_profit=(strategy.netprofit/strategy.initial_capital)*100
f_fillCell(dashTable,0,2,"NetProfit:",str.tostring(_profit,'##.##')+"%",_profit>0?color.green:color.red,color.white)
_numOfDaysInStrategy=(strategy.opentrades.entry_time(0)-strategy.closedtrades.entry_time(0))/(1000*3600*24)
f_fillCell(dashTable,0,3,"PercentPerDay",str.tostring(_profit/_numOfDaysInStrategy,'#########################.#####')+"%",_profit>0?color.green:color.red,color.white)
_winRate=(strategy.wintrades/strategy.closedtrades)*100
f_fillCell(dashTable,0,4,"PercentProfitable:",str.tostring(_winRate,'##.##')+"%",_winRate<50?color.red:_winRate<75?#999900:color.green,color.white)
f_fillCell(dashTable,0,5,"ProfitFactor:",str.tostring(strategy.grossprofit/strategy.grossloss,'##.###'),strategy.grossprofit>strategy.grossloss?color.green:color.red,color.white)
f_fillCell(dashTable,0,6,"TotalTrades:",str.tostring(strategy.closedtrades),bgcolor,color.white)
f_fillCell(dashTable,0,8,"MaxWinsInARow:",str.tostring(maxWinRow,'######'),bgcolor,color.white)
f_fillCell(dashTable,0,9,"MaxLossesInARow:",str.tostring(maxLossRow,'######'),bgcolor,color.white)
Expand (324 lines)
