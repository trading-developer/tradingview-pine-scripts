Script Name: Support and Resistance Signals MTF [LuxAlgo]
Author: LuxAlgo
Description: The  Support and Resistance Signals MTF   indicator aims to identify undoubtedly one of the key concepts of technical analysis  Support and Resistance Levels  and more importantly, the script aims to capture and highlight major price action movements, such as  Breakouts ,  Tests of the Zones ,  Retests of the Zones , and  Rejections .

The script supports...
PineScript code:

Pine Script™ indicator
Support and Resistance Signals MTF [LuxAlgo]
//  This  work  is  licensed  under  a  Attribution-NonCommercial-ShareAlike  4.0  International  (CC  BY-NC-SA  4.0)  https://creativecommons.org/licenses/by-nc-sa/4.0/
//  ©  LuxAlgo

//@version=5
indicator("Support  and  Resistance  Signals  MTF  [LuxAlgo]",  'LuxAlgo  -  Support  and  Resistance  Signals  MTF',  true,  max_boxes_count  =  500,  max_lines_count  =  500,  max_labels_count  =  500)
//------------------------------------------------------------------------------
//  Settings
//-----------------------------------------------------------------------------{
srGR      =  'Support  &  Resistance  Settings'
srTF      =  input.string('Chart',  'Detection  Timeframe',  options=['Chart',  '15  Minutes',  '1  Hour',  '4  Hours',  '1  Day',  '1  Week'],  group  =  srGR)
srLN      =  input(15,  'Detection  Length',  group  =  srGR)
srHST    =  input(true,  'Check  Previous  Historical  S&R  Level',  group  =  srGR)
srMR      =  input.float(1.3,  'Support  Resistance  Margin',  minval  =  .1,  maxval  =  10,  step  =  .1,  group  =  srGR)
srSLC    =  input(color.new(#089981,  53),  '   -  Support,      Lines',  inline  =  'srS',  group  =  srGR)
srSZC    =  input(color.new(#089981,  83),  'Zones',  inline  =  'srS',  group  =  srGR)
srRLC    =  input(color.new(#f23645,  53),  '   -  Resistance,  Lines',  inline  =  'srR',  group  =  srGR)
srRZC    =  input(color.new(#f23645,  83),  'Zones',  inline  =  'srR',  group  =  srGR)
mnMR      =  input.float(2,  'Manupulation  Margin',  minval  =  .1,  maxval  =  10,  step  =  .1,  group  =  srGR)
mnSZC    =  input(color.new(#089981,  43),  '   -  Support  Zones',  inline  =  'mn',  group  =  srGR)
mnRZC    =  input(color.new(#f23645,  43),  'Resistance  Zones',  inline  =  'mn',  group  =  srGR)
sigGR    =  'Signals'
srBUC    =  input(color.new(#089981,  33),  'Breakouts,  Bullish',  inline  =  'srB',  group  =  sigGR)
srBDC    =  input(color.new(#f23645,  33),  'Bearish',  inline  =  'srB',  group  =  sigGR)
srBS      =  input.string('Tiny',  "",  options=['Auto',  'Tiny',  'Small',  'Normal',  'None'],  inline  =  'srB',  group  =  sigGR)
srTUC    =  input(color.new(#2962ff,  33),  'Tests,         Bullish',  inline  =  'srT',  group  =  sigGR)
srTDC    =  input(color.new(#e040fb,  33),  'Bearish',  inline  =  'srT',  group  =  sigGR)
srTS      =  input.string('Tiny',  "",  options=['Auto',  'Tiny',  'Small',  'Normal',  'None'],  inline  =  'srT',  group  =  sigGR)
srRUC    =  input(color.new(#089981,  33),  'Retests,      Bullish',  inline  =  'srR',  group  =  sigGR)
srRDC    =  input(color.new(#f23645,  33),  'Bearish',  inline  =  'srR',  group  =  sigGR)
srRS      =  input.string('Tiny',  "",  options=['Auto',  'Tiny',  'Small',  'Normal',  'None'],  inline  =  'srR',  group  =  sigGR)
srPUC    =  input(color.new(#089981,  33),  'Rejections,  Bullish',  inline  =  'srP',  group  =  sigGR)
srPDC    =  input(color.new(#f23645,  33),  'Bearish',  inline  =  'srP',  group  =  sigGR)
srPS      =  input.string('Tiny',  "",  options=['Auto',  'Tiny',  'Small',  'Normal',  'None'],  inline  =  'srP',  group  =  sigGR)
othGR    =  'Others'
swSH      =  input.string('None',  "Swing  Levels",  options=['Auto',  'Small',  'Normal',  'Large',  'None'],  inline  =  'sw',  group  =  othGR)
swHC      =  input(color.new(#f23645,  33),  'H',  inline  =  'sw',  group  =  othGR)
swLC      =  input(color.new(#089981,  33),  'L',  inline='sw',group=othGR)
//-----------------------------------------------------------------------------}
//UserDefinedTypes
//-----------------------------------------------------------------------------{
//@typebarpropertieswiththeirvalues
//
//@fieldo(float)openpriceofthebar
//@fieldh(float)highpriceofthebar
//@fieldl(float)lowpriceofthebar
//@fieldc(float)closepriceofthebar
//@fieldv(float)volumeofthebar
//@fieldi(int)indexofthebar
typebar
floato=open
floath=high
floatl=low
floatc=close
floatv=volume
inti=bar_index
//@typestorepivothigh/lowandindexdata
//
//@fieldx(int)lastpivotbarindex
//@fieldx1(int)previouspivotbarindex
//@fieldh(float)lastpivothigh
//@fieldh1(float)previouspivothigh
//@fieldl(float)lastpivotlow
//@fieldl1(float)previouspivotlow
//@fieldhx(bool)pivothighcrossstatus
//@fieldlx(bool)pivotlowcrossstatus
typepivotPoint
intx
intx1
floath
floath1
floatl
floatl1
boolhx
boollx
//@typestoressupportandresistancevisualsandsignalstatus
//
//@fieldbx(box)supportandresistancezones
//@fieldlq(box)liquiditysweeps
//@fieldln(line)supportandresistancelevels
//@fieldb(bool)breakoutstatus
//@fieldb(bool)teststatus
//@fieldb(bool)reteststatus
//@fieldb(bool)liqudationstatus
typeSnR
boxbx
boxlq
lineln
boolb
boolt
boolr
booll
//-----------------------------------------------------------------------------}
//Variables
//-----------------------------------------------------------------------------{
barb=bar.new()
varpivotPointpp=pivotPoint.new()
varSnR[]R=array.new<SnR>(1,SnR.new(box(na),box(na),line(na),false,false,false,false))
varSnR[]S=array.new<SnR>(1,SnR.new(box(na),box(na),line(na),false,false,false,false))
varSnRlR=SnR.new(box(na),box(na),line(na),false,false,false,false)
varSnRlS=SnR.new(box(na),box(na),line(na),false,false,false,false)
varfloatRpCHG=na
varfloatSpCHG=na
varintmss=0
//-----------------------------------------------------------------------------}
//GeneralCalculations
//-----------------------------------------------------------------------------{
inttf_m=switchsrTF
"Chart"=>timeframe.isintraday?timeframe.multiplier:timeframe.isdaily?1440:timeframe.isweekly?10080:10080*30
"15Minutes"=>15
"1Hour"=>60
"4Hours"=>240
"1Day"=>1440
"1Week"=>10080
ch_m=iftimeframe.isintraday
timeframe.multiplier
elseiftimeframe.isdaily
1440
elseiftimeframe.isweekly
10080
elseiftimeframe.ismonthly
10080*30
srLN:=srLN*tf_m/ch_m
pHST=ta.highest(b.h,srLN)
pLST=ta.lowest(b.l,srLN)
atr=ta.atr(17)
isLLS=math.abs(b.l-math.min(b.o,b.c))>=1.618*atr
isLUS=math.abs(b.h-math.max(b.o,b.c))>=1.618*atr
vSMA=ta.sma(nz(b.v),17)
isHV=nz(b.v)>=1.618*vSMA
isLV=nz(b.v)<=0.618*vSMA
vST=isHV?'\n*HighTradingActivity':isLV?'\n*LowTradingActivity':'\n*AverageTradingActivity'
ifisHV
ifnz(b.v)>vSMA*4.669
alert('VolumeSPIKEdetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
srBUC:=srBS!='None'?srBUC:color(na)
srBDC:=srBS!='None'?srBDC:color(na)
srBTC=srBS!='None'?color.white:color(na)
srTUC:=srTS!='None'?srTUC:color(na)
srTDC:=srTS!='None'?srTDC:color(na)
srTTC=srTS!='None'?color.white:color(na)
srRUC:=srRS!='None'?srRUC:color(na)
srRDC:=srRS!='None'?srRDC:color(na)
srRTC=srRS!='None'?color.white:color(na)
//-----------------------------------------------------------------------------}
//Functions/Methods
//-----------------------------------------------------------------------------{
//@functioncalcuatescumulativevolumeofthegivenrange
//
//@param_l(int)lengthoftherange
//@param_o(int)offset
//
//@returns(float)cumulativevolume
f_getTradedVolume(_l,_o)=>
v=0.
forx=0to_l-1
v+=volume[_o+x]
v
//@functionconvertssizestringstoenumeratedvalues
//
//@param_l(string)sizestring
//
//@returns(enumeration)sizeenumeratedvalue
f_getSize(_s)=>
switch_s
'Tiny'=>size.tiny
'Small'=>size.small
'Normal'=>size.normal
'Large'=>size.large
'Huge'=>size.huge
=>size.auto
//-----------------------------------------------------------------------------}
//Calculations
//-----------------------------------------------------------------------------{
pp_h=ta.pivothigh(srLN,srLN)
ifnotna(pp_h)
pp.h1:=pp.h
pp.h:=pp_h
pp.x1:=pp.x
pp.x:=b.i[srLN]
pp.hx:=false
RpCHG:=(pHST-pLST)/pHST
ifR.size()>1
lR:=R.get(0)
lRt=R.get(1)
ifpp.h<lR.bx.get_bottom()*(1-RpCHG*.17*srMR)orpp.h>lR.bx.get_top()*(1+RpCHG*.17*srMR)
ifpp.x<lR.bx.get_left()andpp.x+srLN>lR.bx.get_left()
na
else
ifpp.h<lRt.bx.get_bottom()*(1-RpCHG*.17*srMR)orpp.h>lRt.bx.get_top()*(1+RpCHG*.17*srMR)
R.unshift(
SnR.new(
box.new(pp.x,pp.h,b.i,pp.h*(1-RpCHG*.17*srMR),border_color=color(na),bgcolor=srRZC),
box.new(na,na,na,na,bgcolor=color(na),border_color=color(na)),
line.new(pp.x,pp.h,b.i,pp.h,color=srRLC,width=srMR<=.5?2:3),
false,false,false,false))
lS.t:=false
else
lRt.bx.set_right(b.i)
lRt.ln.set_x2(b.i)
else
lR.bx.set_right(b.i)
lR.ln.set_x2(b.i)
else
R.unshift(
SnR.new(
box.new(pp.x,pp.h,b.i,pp.h*(1-RpCHG*.17*srMR),border_color=color(na),bgcolor=srRZC),
box.new(na,na,na,na,bgcolor=color(na),border_color=color(na)),
line.new(pp.x,pp.h,b.i,pp.h,color=srRLC,width=srMR<=.5?2:3),
false,false,false,false))
lS.t:=false
ifswSH!='None'
StS=pp.x-pp.x1
tradedVolume=f_getTradedVolume(StS,srLN)
swH=pp.h>pp.h1?"HigherHigh":pp.h<pp.h1?"LowerHigh":na
rTT='SwingHigh('+swH+'):'+str.tostring(pp.h,format.mintick)+
(mss==-1andpp.h<pp.h1?'\n*Counter-TrendMove':'')+
'\n-PriceChange:↑%'+str.tostring((pp.h-pp.l)*100/pp.l,'#.##')+
(nz(b.v)?'\n-TradedVolume:'+str.tostring(tradedVolume,format.volume)+'('+str.tostring(StS-1)+'bars)'+
'\n*AverageVolume/Bar:'+str.tostring(tradedVolume/(StS-1),format.volume):'')
label.new(pp.x,pp.h,'◈',color=color(na),style=label.style_label_down,textcolor=swHC,size=f_getSize(swSH),tooltip=rTT)
alert('New'+swH+(mss==-1andpp.h<pp.h1?'(counter-trendmove)':'')+'formed\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
ifb.c[1]>pp.handb.c>pp.handnotpp.hx
pp.hx:=true
mss:=1
pp_l=ta.pivotlow(srLN,srLN)
ifnotna(pp_l)
pp.l1:=pp.l
pp.l:=pp_l
pp.x1:=pp.x
pp.x:=b.i[srLN]
pp.lx:=false
SpCHG:=(pHST-pLST)/pHST
ifS.size()>2
lS:=S.get(0)
lSt=S.get(1)
ifpp.l<lS.bx.get_bottom()*(1-SpCHG*.17*srMR)orpp.l>lS.bx.get_top()*(1+SpCHG*.17*srMR)
ifpp.x<lS.bx.get_left()andpp.x+srLN>lS.bx.get_left()//notlR.b
na
else
ifpp.l<lSt.bx.get_bottom()*(1-SpCHG*.17*srMR)orpp.l>lSt.bx.get_top()*(1+SpCHG*.17*srMR)
S.unshift(
SnR.new(
box.new(pp.x,pp.l*(1+SpCHG*.17*srMR),b.i,pp.l,border_color=color(na),bgcolor=srSZC),
box.new(na,na,na,na,bgcolor=color(na),border_color=color(na)),
line.new(pp.x,pp.l,b.i,pp.l,color=srSLC,width=srMR<=.5?2:3),
false,false,false,false))
lR.t:=false
else
lSt.bx.set_right(b.i)
lSt.ln.set_x2(b.i)
else
lS.bx.set_right(b.i)
lS.ln.set_x2(b.i)
else
S.unshift(
SnR.new(
box.new(pp.x,pp.l*(1+SpCHG*.17*srMR),b.i,pp.l,border_color=color(na),bgcolor=srSZC),
box.new(na,na,na,na,bgcolor=color(na),border_color=color(na)),
line.new(pp.x,pp.l,b.i,pp.l,color=srSLC,width=srMR<=.5?2:3),
false,false,false,false))
lR.t:=false
ifswSH!='None'
StS=pp.x-pp.x1
tradedVolume=f_getTradedVolume(StS,srLN)
swL=pp.l<pp.l1?"LowerLow":pp.l>pp.l1?"HigherLow":na
sTT='SwingLow('+swL+'):'+str.tostring(pp.l,format.mintick)+
(mss==1andpp.l>pp.l1?'\n*Counter-TrendMove':'')+
'\n-PriceChange:↓%'+str.tostring((pp.h-pp.l)*100/pp.h,'#.##')+
(nz(b.v)?'\n-TradedVolume:'+str.tostring(tradedVolume,format.volume)+'('+str.tostring(StS-1)+'bars)'+
'\n*AverageVolume/Bar:'+str.tostring(tradedVolume/(StS-1),format.volume):'')
label.new(pp.x,pp.l,'◈',color=color(na),style=label.style_label_up,textcolor=swLC,size=f_getSize(swSH),tooltip=sTT)
alert('New'+swL+(mss==1andpp.l>pp.l1?'(counter-trendmove)':'')+'formed\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
ifb.c[1]<pp.landb.c<pp.landnotpp.lx
pp.lx:=true
mss:=-1
ifR.size()>0
lR:=R.get(0)
ifb.c[1]>lR.bx.get_top()*(1+RpCHG*.17)andnotlR.b
lR.bx.set_right(b.i[1])
lR.ln.set_x2(b.i[1])
ifb.c>lR.bx.get_top()*(1+RpCHG*.17)
lR.b:=true
lR.r:=false
label.new(b.i[1],b.l[1]*(1-RpCHG*.017),'▲\n\nB',color=srBUC,style=label.style_label_up,textcolor=srBTC,size=f_getSize(srBS),tooltip='BullishBreakout'+vST[1])

S.unshift(
SnR.new(
box.new(b.i[1],lR.bx.get_top(),b.i+1,lR.bx.get_bottom(),border_color=color(na),bgcolor=srSZC),
box.new(na,na,na,na,bgcolor=color(na),border_color=color(na)),
line.new(b.i[1],lR.bx.get_bottom(),b.i+1,lR.bx.get_bottom(),color=srSLC,width=srMR<=.5?2:3),
false,false,false,false))
ifsrBS!='None'
alert('Bullishbreakoutdetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
else
lS.lq.set_lefttop(b.i[1]-1,lR.bx.get_top())
lS.lq.set_rightbottom(b.i+1,lR.bx.get_top()*(1+RpCHG*.17*mnMR))
lS.lq.set_bgcolor(mnRZC)
lS.l:=true
elseiflS.bandb.o<lR.bx.get_top()andb.h>lR.bx.get_bottom()andb.c<lR.bx.get_bottom()andnotlR.randnotlS.l
label.new(b.i,b.h*(1+RpCHG*.017),'R',color=srRDC,style=label.style_label_down,textcolor=srRTC,size=f_getSize(srRS),tooltip='Re-testofResistanceLevel'+vST)
lR.r:=true//
lR.bx.set_right(b.i)
lR.ln.set_x2(b.i)
ifsrRS!='None'
alert('Re-testofresistanceleveldetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
elseifb.h[1]>lR.bx.get_bottom()andb.c[1]<lR.bx.get_top()andb.c<lR.bx.get_top()andnotlR.tandnotlR.randnotlR.bandnotlS.bandb.i[1]!=lR.bx.get_left()
label.new(b.i[1],b.h[1]*(1+RpCHG*.017),'T',color=srTDC,style=label.style_label_down,textcolor=srTTC,size=f_getSize(srTS),tooltip='TestofResistanceLevel'+vST[1])
lR.t:=true
lR.bx.set_right(b.i)
lR.ln.set_x2(b.i)
ifsrTS!='None'
alert('Testofresistanceleveldetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
elseifb.h>lR.bx.get_bottom()*(1-RpCHG*.17)andnotlR.b
lR.ln.set_x2(b.i)
ifisLLS[1]andisHV[1]andsrPS!='None'
label.new(b.i[1],b.l[1]*(1-RpCHG*.017),'',color=srPUC,style=label.style_label_up,textcolor=color.white,size=f_getSize(srPS),tooltip='RejectionofLowerPrices'+vST[1])
alert('Rejection(PinBar)detected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
ifR.size()>1andlR.bandsrHST
lRt=R.get(1)
ifb.c[1]>lRt.bx.get_top()*(1+RpCHG*.17)andnotlRt.b
lRt.bx.set_right(b.i[1])
lRt.ln.set_x2(b.i[1])
ifb.c>lRt.bx.get_top()*(1+RpCHG*.17)
lRt.b:=true
lRt.r:=false
label.new(b.i[1],b.l[1]*(1-RpCHG*.017),'▲\n\nB',color=srBUC,style=label.style_label_up,textcolor=srBTC,size=f_getSize(srBS),tooltip='BullishBreakout'+vST[1])
S.unshift(
SnR.new(
box.new(b.i[1],lRt.bx.get_top(),b.i+1,lRt.bx.get_bottom(),border_color=color(na),bgcolor=srSZC),
box.new(na,na,na,na,bgcolor=color(na),border_color=color(na)),
line.new(b.i[1],lRt.bx.get_bottom(),b.i+1,lRt.bx.get_bottom(),color=srSLC,width=srMR<=.5?2:3),
false,false,false,false))
ifsrBS!='None'
alert('Bullishbreakoutdetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
else
lS.lq.set_lefttop(b.i[1]-1,lRt.bx.get_top())
lS.lq.set_rightbottom(b.i+1,lRt.bx.get_top()*(1+RpCHG*.17*mnMR))
lS.lq.set_bgcolor(mnRZC)
lS.l:=true
elseiflS.bandb.o<lRt.bx.get_top()andb.h>lRt.bx.get_bottom()andb.c<lRt.bx.get_bottom()andnotlRt.r
label.new(b.i,b.h*(1+RpCHG*.017),'R',color=srRDC,style=label.style_label_down,textcolor=srRTC,size=f_getSize(srRS),tooltip='Re-testofResistanceLevel'+vST)
lRt.r:=true//
lRt.bx.set_right(b.i)
lRt.ln.set_x2(b.i)
ifsrRS!='None'
alert('Re-testofresistanceleveldetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
elseifb.h[1]>lRt.bx.get_bottom()andb.c[1]<lRt.bx.get_top()andb.c<lRt.bx.get_top()andnotlRt.tandnotlRt.bandnotlS.bandb.i[1]!=lRt.bx.get_left()
label.new(b.i[1],b.h[1]*(1+RpCHG*.017),'T',color=srTDC,style=label.style_label_down,textcolor=srTTC,size=f_getSize(srTS),tooltip='TestofResistanceLevel'+vST[1])
lRt.t:=true
lRt.bx.set_right(b.i)
lRt.ln.set_x2(b.i)
ifsrTS!='None'
alert('Testofresistanceleveldetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
elseifb.h>lRt.bx.get_bottom()*(1-RpCHG*.17)andnotlRt.b
lRt.ln.set_x2(b.i)
ifS.size()>0
lS:=S.get(0)
ifb.c[1]<lS.bx.get_bottom()*(1-SpCHG*.17)andnotlS.b
lS.bx.set_right(b.i[1])
lS.ln.set_x2(b.i[1])
ifb.c<lS.bx.get_bottom()*(1-SpCHG*.17)
lS.b:=true
lS.r:=false
label.new(b.i[1],b.h[1]*(1+SpCHG*.017),'B\n\n▼',color=srBDC,style=label.style_label_down,textcolor=srBTC,size=f_getSize(srBS),tooltip='BearishBreakout'+vST[1])
R.unshift(
SnR.new(
box.new(b.i[1],lS.bx.get_top(),b.i+1,lS.bx.get_bottom(),border_color=color(na),bgcolor=srRZC),
box.new(na,na,na,na,bgcolor=color(na),border_color=color(na)),
line.new(b.i[1],lS.bx.get_top(),b.i+1,lS.bx.get_top(),color=srRLC,width=srMR<=.5?2:3),
false,false,false,false))
ifsrBS!='None'
alert('Bearishbreakoutdetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
else
lR.lq.set_lefttop(b.i[1]-1,lS.bx.get_bottom())
lR.lq.set_rightbottom(b.i+1,lS.bx.get_bottom()*(1-SpCHG*.17*mnMR))
lR.lq.set_bgcolor(mnSZC)
lR.l:=true
elseiflR.bandb.o>lS.bx.get_bottom()andb.l<lS.bx.get_top()andb.c>lS.bx.get_top()andnotlS.randnotlR.l
label.new(b.i,b.l*(1-SpCHG*.017),'R',color=srRUC,style=label.style_label_up,textcolor=srRTC,size=f_getSize(srRS),tooltip='Re-testofSupportLevel'+vST)
lS.r:=true//
lS.bx.set_right(b.i)
lS.ln.set_x2(b.i)
ifsrRS!='None'
alert('Re-testofsupportleveldetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
elseifb.l[1]<lS.bx.get_top()andb.c[1]>lS.bx.get_bottom()andb.c>lS.bx.get_bottom()andnotlS.tandnotlS.bandnotlR.bandb.i[1]!=lS.bx.get_left()
label.new(b.i[1],b.l[1]*(1-SpCHG*.017),'T',color=srTUC,style=label.style_label_up,textcolor=srTTC,size=f_getSize(srTS),tooltip='TestofSupportLevel'+vST[1])
lS.t:=true
lS.bx.set_right(b.i)
lS.ln.set_x2(b.i)
ifsrTS!='None'
alert('Testofsupportleveldetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
elseifb.l<lS.bx.get_top()*(1+SpCHG*.17)andnotlS.b
lS.ln.set_x2(b.i)
ifisLUS[1]andisHV[1]andsrPS!='None'
label.new(b.i[1],b.h[1]*(1+SpCHG*.017),'',color=srPDC,style=label.style_label_down,textcolor=color.white,size=f_getSize(srPS),tooltip='RejectionofHigherPrices'+vST[1])
alert('Rejection(PinBar)detected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
ifS.size()>1andlS.bandsrHST
lSt=S.get(1)
ifb.c[1]<lSt.bx.get_bottom()*(1-SpCHG*.17)andnotlSt.b
lSt.bx.set_right(b.i[1])
lSt.ln.set_x2(b.i[1])
ifb.c<lSt.bx.get_bottom()*(1-SpCHG*.17)
lSt.b:=true
lSt.r:=false
label.new(b.i[1],b.h[1]*(1+SpCHG*.017),'B\n\n▼',color=srBDC,style=label.style_label_down,textcolor=srBTC,size=f_getSize(srBS),tooltip='BearishBreakout'+vST[1])
R.unshift(
SnR.new(
box.new(b.i[1],lSt.bx.get_top(),b.i+1,lSt.bx.get_bottom(),border_color=color(na),bgcolor=srRZC),
box.new(na,na,na,na,bgcolor=color(na),border_color=color(na)),
line.new(b.i[1],lSt.bx.get_top(),b.i+1,lSt.bx.get_top(),color=srRLC,width=srMR<=.5?2:3),
false,false,false,false))
ifsrBS!='None'
alert('Bearishbreakoutdetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
else
lR.lq.set_lefttop(b.i[1]-1,lSt.bx.get_bottom())
lR.lq.set_rightbottom(b.i+1,lSt.bx.get_bottom()*(1-SpCHG*.17*mnMR))
lR.lq.set_bgcolor(mnSZC)
lR.l:=true
elseiflR.bandb.o>lSt.bx.get_bottom()andb.l<lSt.bx.get_top()andb.c>lSt.bx.get_top()andnotlSt.r
label.new(b.i,b.l*(1-SpCHG*.017),'R',color=srRUC,style=label.style_label_up,textcolor=srRTC,size=f_getSize(srRS),tooltip='Re-testofSupportLevel'+vST)
lSt.r:=true//
lSt.bx.set_right(b.i)
lSt.ln.set_x2(b.i)
ifsrRS!='None'
alert('Re-testofsupportleveldetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
elseifb.l[1]<lSt.bx.get_top()andb.c[1]>lSt.bx.get_bottom()andb.c>lSt.bx.get_bottom()andnotlSt.tandnotlSt.bandnotlR.bandb.i[1]!=lSt.bx.get_left()
label.new(b.i[1],b.l[1]*(1-SpCHG*.017),'T',color=srTUC,style=label.style_label_up,textcolor=srTTC,size=f_getSize(srTS),tooltip='TestofSupportLevel'+vST[1])
lSt.t:=true
lSt.bx.set_right(b.i)
lSt.ln.set_x2(b.i)
ifsrTS!='None'
alert('Testofsupportleveldetected\n'+syminfo.ticker+'price('+str.tostring(b.c,format.mintick)+'),timeframe'+timeframe.period+'\n')
elseifb.l<lSt.bx.get_top()*(1+SpCHG*.17)andnotlSt.b
lSt.ln.set_x2(b.i)
//-----------------------------------------------------------------------------}
Expand (539 lines)
