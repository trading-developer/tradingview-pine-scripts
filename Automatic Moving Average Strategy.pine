Script Name: Automatic Moving Average Strategy
Author: fondDealer96636
Description: A strategy based on

Use in wavy markets on high timeframes.
PineScript code:

Pine Script™ strategy
Automatic Moving Average Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  fondDealer96636
//@version=5
strategy('Automatic  Moving  Average',  overlay=true,  max_bars_back=201,  pyramiding=0,  currency=currency.USD,  default_qty_type=strategy.cash,  default_qty_value=10000,  initial_capital=10000)
//  input
start  =  20
lookback  =  input(20,  "Sensitivity",  tooltip="Low  (High  Sensitivity),  High  (Low  Sensitivity).\n\nAdjust  according  to  timeframe  and  asset.")
smoothing  =  input(3,  "Smoothing")
source  =  input(close,  "Source")
startYear  =  input(2020,  "Start  year")
resp  =  1
in_date_range  =  time  >=  timestamp(syminfo.timezone,  startYear,  1,  1,  0,  0)
//  global
var  ix  =  -1
var  mal  =  array.new_int(0)
//  functions
avg(source,  len)  =>
        sum  =  0.0
        for  i  =  0  to  len-1
                sum  +=  source[i]
        sum/len
bull  =  close  >  open
wick_touch(x)  =>
        bull  ?  ((close  <=  x  and  x  <=  high)  or  (low  <=  x  and  x  <=  open))  :  ((open  <=  x  and  x  <=  high)  or  (low  <=  x  and  x  <=  close))
body_touch(x)  =>
        bull  ?  (open  <  x  and  x  <  close)  :  (close  <  x  and  x  <  open)
touches(t)  =>
        touches  =  0
        for  i  =  0  to  lookback-1
                touches  +=  t[i]  ?  1  :  0
        touches
//  local
ix  :=  ix+1
prev_mal  =  ix  >=  1  ?  array.get(mal,  ix-1)  :  start
cma  =  avg(source,  prev_mal)
cma_p1  =  avg(source,  prev_mal+1)
cma_m1  =  avg(source,  prev_mal-1)
d  =  touches(wick_touch(cma))
d_p1  =  touches(wick_touch(cma_p1))
d_m1  =  touches(wick_touch(cma_m1))
d_b  =  touches(body_touch(cma))
d_p1_b  =  touches(body_touch(cma_p1))
d_m1_b  =  touches(body_touch(cma_m1))
any_body_touch  =  d_b  >  0  or  d_p1_b  >  0  or  d_m1_b  >  0
no_wick_touch  =  d  <=  0  and  d_p1  <=  0  and  d_m1  <=  0
wick_maximized  =  d  >=  d_p1  and  d  >=  d_m1  ?  prev_mal  :  (d_p1  >=  d  and  d_p1  >=  d_m1  ?  prev_mal+resp  :  (d_m1  >=  d  and  d_m1  >=  d_p1  ?  prev_mal-resp  :  na))
up  =  cma  >  cma[1]
down  =  cma  <  cma[1]
against_trend  =  (up  and  close  <  cma)  or  (down  and  close  >  cma)
new_mal  =  no_wick_touch  or  against_trend  ?  prev_mal-resp  :  (any_body_touch  ?  prev_mal+resp  :  wick_maximized)
next_mal  =  na(new_mal)  ?  prev_mal  :  new_mal
array.push(mal,  next_mal  <  2  ?  2  :  (next_mal  >  200  ?  200  :  next_mal))
//  graph
scma  =  ta.ema(cma,  smoothing)
uptrend  =  scma  >  scma[1]
downtrend  =  scma  <  scma[1]
plot(scma,  "Automatic  MA",  color=uptrend  ?  color.green  :  color.red)
uptrending  =  close  >  scma  and  uptrend
downtrending  =  close  <  scma  and  downtrend
defy  =  not  uptrending  and  not  downtrending
defy_cross  =  defy  and  body_touch(scma)
barcolor(uptrending  ?  color.lime  :  (downtrending  ?  color.red  :  (defy_cross  ?  color.black  :  color.white)))
//  strategy
change_to_uptrend  =  uptrending  and  not  uptrending[1]
change_to_downtrend  =  downtrending  and  not  downtrending[1]
if  in_date_range
        if  change_to_uptrend
                strategy.entry("Long",  strategy.long)
        if  change_to_downtrend
                strategy.entry("Short",  strategy.short)
Expand (101 lines)
