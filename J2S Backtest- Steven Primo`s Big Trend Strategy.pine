Script Name: J2S Backtest- Steven Primo`s Big Trend Strategy
Author: julianossilva
Description: Is it possible to benefit from big trend moves?  In this study I present you a strategy that aims to capture big trend moves.

Created by trader Steven Primo, The Big Trend strategy is advocates and shared through his YouTube channel without restrictions.

 Note:
This is not an investment recommendation. The purpose of this study is only to share knowledge with...
PineScript code:

Pine Script™ strategy
J2S Backtest: Steven Primo`s Big Trend Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  julianossilva
//@version=5
strategy(title="J2S  Backtest:  Steven  Primo`s  Big  Trend  Strategy",  shorttitle="J2S  Backtest:  Steven  Primo`s  Big  Trend  Strategy",  overlay=true,  initial_capital=1000,  default_qty_value=10,  default_qty_type=strategy.percent_of_equity,  pyramiding=0)
//  Variables  to  control  open  orders
var  myLongOrders    =  array.new_int(0)
var  myShortOrders  =  array.new_int(0)
//  Initial  Backtest  Date  Range
useStartDate  =  timestamp("01  Jan  2020  21:00:00")
useEndDate      =  timestamp("01  Jan  2023  21:00:00")
//  User  Inputs
SIGNAL_CONFIG                    =  "BACKTEST:  STEVEN  PRIMO'S  BIG  TREND  STRATEGY"
longEntryInput                  =  input.bool(defval=true,                    group=SIGNAL_CONFIG,  title="Long  entry")
shortEntryInput                =  input.bool(defval=true,    group=SIGNAL_CONFIG,title="Shortentry")
METHOD_CONFIG="BACKTEST:METHOD"
maturityIndexInput=input.int(defval=5,group=METHOD_CONFIG,title="Barindicatingtrendmaturity",tooltip="Entriesaremadefromthebarthatindicatesthetrendmaturity.",minval=1)
barsLimitForEntryInput=input.int(defval=5,group=METHOD_CONFIG,title="Barlimitfortradingentry",tooltip="Givenasignal,entrymustbereachedwithinhowmanybars?",minval=1)
barLimitForCloseInput=input.int(defval=30,group=METHOD_CONFIG,title="Barlimitfortradingclose",tooltip="Onceapositionisopened,closewhenitreachesthenumberofbarsintrading.",minval=1)
profitOverRiskInput=input.float(defval=15,group=METHOD_CONFIG,title="Profitoverrisk",tooltip="Multiplicationfactorbasedontheriskassumedintrading.",minval=1,step=0.5)
BB_CONFIG="BACKTEST:BOLLINGERBANDS"
smaLengthInput=input.int(defval=20,group=BB_CONFIG,inline="01",title="Length",minval=1)
smaColorInput=input.color(defval=color.orange,group=BB_CONFIG,inline="01",title="")
sourceInput=input.source(defval=close,group=BB_CONFIG,inline="02",title="Source")
bbFactorInput=input.float(defval=0.382,group=BB_CONFIG,inline="03",title="Factor",minval=0.001,maxval=50,step=0.05)
bbColorInput=input.color(defval=color.blue,group=BB_CONFIG,inline="03",title="")
offsetInput=input.int(defval=1,group=BB_CONFIG,inline="04",title="Offset")
PERIOD_CONFIG="BACKTEST:TIMEPERIOD"
useDateFilterInput=input.bool(defval=true,group=PERIOD_CONFIG,title="Filterdaterangeofbacktest")
backtestStartDateInput=input.time(defval=useStartDate,group=PERIOD_CONFIG,title="Startdate")
backtestEndDateInput=input.time(defval=useEndDate,group=PERIOD_CONFIG,title="Enddate")
//Colors
bbBackgroundColor=color.rgb(33,150,243,90)
candleColorDown=color.rgb(239,83,80,80)
candleColorUp=color.rgb(38,166,154,70)
insideBarColorDown=color.rgb(239,83,80,40)
insideBarColorUp=color.rgb(38,166,154,20)
downTrendColor=color.rgb(239,83,80,80)
sidewaysTrendColor=color.rgb(252,232,131,80)
upTrendColor=color.rgb(38,166,154,80)
buySignalColor=color.lime
sellSignalColor=color.orange
//Candles
isCandleUp()=>close>open
isCandleDown()=>close<=open
barcolor(isCandleUp()?candleColorUp:isCandleDown()?candleColorDown:na)
//BollingerBandsandSimpleMovingAverage
sma=ta.sma(sourceInput,smaLengthInput)
bbWidth=ta.stdev(sourceInput,smaLengthInput)*bbFactorInput
bbHigh=sma+bbWidth
bbLow=sma-bbWidth
plot(sma,title="SMA",color=smaColorInput,offset=offsetInput)
bbUpper=plot(bbHigh,title="BBHigh",color=bbColorInput,offset=offsetInput)
bbLower=plot(bbLow,title="BBLow",color=bbColorInput,offset=offsetInput)
fill(bbUpper,bbLower,title="BBBackground",color=bbBackgroundColor)
//BacktestTimePeriod
inTradeWindow=notuseDateFilterInputor(time>=backtestStartDateInputandtime<backtestEndDateInput)
isInTradeWindow()=>inTradeWindow
isBacktestDateRangeOver()=>notinTradeWindowandinTradeWindow[1]
//Rulethatindicatesmaturityoftrendtobuy
isPrimoBuy()=>
result=true
barIndex=0
whileresultandbarIndex<maturityIndexInput
result:=close[barIndex]>=bbHigh[barIndex]
barIndex+=1
result:=resultandclose[maturityIndexInput]<bbHigh[maturityIndexInput]
//Rulethatindicatesmaturityoftrendtosell
isPrimoSell()=>
result=true
barIndex=0
whileresultandbarIndex<maturityIndexInput
result:=close[barIndex]<=bbLow[barIndex]
barIndex+=1
result:=resultandclose[maturityIndexInput]>bbLow[maturityIndexInput]
//Entrysignals
longEntryHasBeenMet()=>longEntryInputandisInTradeWindow()andisPrimoBuy()
shortEntryHasBeenMet()=>shortEntryInputandisInTradeWindow()andisPrimoSell()
//SchedulingLONGentry
iflongEntryHasBeenMet()
array.push(myLongOrders,bar_index)
longEntryID="LongEntry:\n"+str.tostring(bar_index)
longExitID="LongExit:\n"+str.tostring(bar_index)
longEntryTrigger=high+1*syminfo.mintick
stopLossInLong=low[maturityIndexInput-1]-1*syminfo.mintick
takeProfitInLong=high+(high-low)*profitOverRiskInput
strategy.order(longEntryID,strategy.long,stop=longEntryTrigger)
strategy.exit(longExitID,longEntryID,stop=stopLossInLong,limit=takeProfitInLong)
//Inpinescript,anyorderscheduledbutnotyetfilledcanbecanceled.
//Onceaorderisfilled,thetradeisonlyfinishedwithuseofcloseorexitfunctions.
//Asscheduledordersarenotstoredinthestrategy.opentradesarray,manualcontrolisrequired.
intmyLongOrderIndex=0
whilemyLongOrderIndex<array.size(myLongOrders)andarray.size(myLongOrders)>0
myLongOrder=array.get(myLongOrders,myLongOrderIndex)
ifbar_index-myLongOrder==barsLimitForEntryInput
longEntryID="LongEntry:\n"+str.tostring(myLongOrder)
strategy.cancel(longEntryID)
array.remove(myLongOrders,myLongOrderIndex)
continue
myLongOrderIndex+=1
//SchedulingSHORTentry
ifshortEntryHasBeenMet()
array.push(myShortOrders,bar_index)
shortEntryID="ShortEntry:\n"+str.tostring(bar_index)
shortExitID="ShortExit:\n"+str.tostring(bar_index)
shortEntryTrigger=low-1*syminfo.mintick
stopLossInShort=high[maturityIndexInput-1]+1*syminfo.mintick
takeProfitInShort=low-(high-low)*profitOverRiskInput
strategy.order(shortEntryID,strategy.short,stop=shortEntryTrigger)
strategy.exit(shortExitID,shortEntryID,stop=stopLossInShort,limit=takeProfitInShort)
//Inpinescript,anyorderscheduledbutnotyetfilledcanbecanceled.
//Onceaorderisfilled,thetradeisonlyfinishedwithuseofcloseorexitfunctions.
//Asscheduledordersarenotstoredinthestrategy.opentradesarray,manualcontrolisrequired.
intmyShortOrderIndex=0
whilemyShortOrderIndex<array.size(myShortOrders)andarray.size(myShortOrders)>0
myShortOrder=array.get(myShortOrders,myShortOrderIndex)
ifbar_index-myShortOrder==barsLimitForEntryInput
shortEntryID="ShortEntry:\n"+str.tostring(myShortOrder)
strategy.cancel(shortEntryID)
array.remove(myShortOrders,myShortOrderIndex)
continue
myShortOrderIndex+=1
//Tradingmustbestoppedwhencandlesticklimitreachedinatrading
fortradeNumber=0tostrategy.opentrades-1
tradeEntryID=strategy.opentrades.entry_id(tradeNumber)
splitPosition=str.pos(tradeEntryID,":")
entryBar=str.tonumber(str.substring(tradeEntryID,splitPosition+1))
ifbar_index-entryBar==barLimitForCloseInput
closeID="ClosePosition:\n"+str.tostring(entryBar)
strategy.close(id=tradeEntryID,comment=closeID,immediately=true)
//Closeallpositionsattheendofthebacktestperiod
ifisBacktestDateRangeOver()
strategy.cancel_all()
strategy.close_all(comment="DateRangeExit")
//DisplaySignals
plotshape(series=longEntryHasBeenMet(),title="PrimoBuy",style=shape.triangleup,location=location.abovebar,color=buySignalColor,text="Buy",textcolor=buySignalColor)
plotshape(series=shortEntryHasBeenMet(),title="PrimoSell",style=shape.triangledown,location=location.belowbar,color=sellSignalColor,text="Sell",textcolor=sellSignalColor)
Expand (154 lines)
