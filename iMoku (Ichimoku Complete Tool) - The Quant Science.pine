Script Name: iMoku (Ichimoku Complete Tool) - The Quant Science
Author: thequantscience
Description: iMoku™ is a professional all-in-one solution for the famous Ichimoku Kinko Hyo indicator.

The algorithm includes:

1. Backtesting spot
2. Visual tool
3. Auto-trading functions

With iMoku you can test four different strategies.

 Strategy 1: Cross Tenkan Sen - Kijun Sen
A long position is opened with 100% of the invested capital ($1000) when "Tenkan Sen"...
PineScript code:

Pine Script™ strategy
iMoku (Ichimoku Complete Tool) - The Quant Science
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  thequantscience
///////////////////////////////  Design  by  The  Quant  Science  ™    ////////////////////////////////////
start  =  1000
//@version=5
strategy("  iMoku  -  The  Quant  Science  ™  ",
                          overlay  =  true,
                          default_qty_type  =  strategy.percent_of_equity,
                          default_qty_value  =  100,
                          currency  =  currency.EUR,
                          initial_capital  =  start,
                          commission_type  =  strategy.commission.percent,
                          commission_value  =  0.10,
                          slippage  =  1)
conversionPeriods  =  input.int(
                  9,
                  minval=1,
                  title="Tenkan  Sen  Length",
                  group  =  "Indicator  configuration"
                  )
basePeriods  =  input.int(
                  26,  minval=1,
                  title="Kjun  Sen  Length",
                  group  =  "Indicator  configuration"
            )
laggingSpan2Periods=input.int(
52,
minval=1,
title="LeadingSpanBLength",
group="Indicatorconfiguration"
)
displacement=input.int(
26,minval=1,
title="LaggingSpan",
group="Indicatorconfiguration"
)
strategy_1=input.bool(
false,
title="TenkanSen-KijunSenStrategy",
group="TenkanSen-KijunSenStrategyConfiguration"
)
strategy_2=input.bool(
false,
title="Price-KijunSenStrategy",
group="Price-KijunSenStrategyConfiguration"
)
strategy_3=input.bool(
false,
title="KumoBreakoutStrategy",
group="KumoBreakoutStrategyConfiguration"
)
strategy_4=input.bool(
false,
title="KumoTwistStrategy",
group="KumoTwistStrategyConfiguration"
)
stop_loss=input.float(
defval=1,
minval=0.01,
step=0.05,
maxval=500,
title="StopLoss",
group="KumoBreakoutStrategyConfiguration"
)
take_profit=input.float(
defval=1,
minval=0.01,
step=0.05,
maxval=500,
title="TakeProfit",
group="KumoBreakoutStrategyConfiguration"
)
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
donchian(len)=>math.avg(
ta.lowest(
len
),
ta.highest(
len
))
conversionLine=donchian(
conversionPeriods
)
baseLine=donchian(
basePeriods
)
leadLine1=math.avg(
conversionLine,
baseLine
)
leadLine2=donchian(
laggingSpan2Periods
)
adj_leadLine1=leadLine1[displacement-1]
adj_leadLine2=leadLine2[displacement-1]
//1.CrossTenkanSen-KijunSen
price_over_kumo=close>adj_leadLine1
price_under_kumo=close<adj_leadLine2
price_in_kumo=close>adj_leadLine1
andclose<adj_leadLine2
strong_xover_tenkan_kijun=ta.crossover(
conversionLine,
baseLine
)
andprice_over_kumo
neutro_xover_tenkan_kijun=ta.crossover(
conversionLine,
baseLine
)
andprice_in_kumo
light_xover_tenkan_kijun=ta.crossover(
conversionLine,
baseLine
)
andprice_under_kumo
close_tenkan_kijun=ta.crossunder(
conversionLine,
baseLine
)
SelectTenkanKijun(type)=>
switchtype
"StrongCrossoverTenkanSen-KijunSen"=>strong_xover_tenkan_kijun
"NeutroCrossoverTenkanSen-KijunSen"=>neutro_xover_tenkan_kijun
"LightCrossoverTenkanSen-KijunSen"=>light_xover_tenkan_kijun
type_input=input.string(
"StrongCrossoverTenkanSen-KijunSen",
title="Selectstrategy:",
options=["StrongCrossoverTenkanSen-KijunSen","NeutroCrossoverTenkanSen-KijunSen","LightCrossoverTenkanSen-KijunSen"],
tooltip="",
group="TenkanSen-KijunSenStrategyConfiguration"
)
select_tenkan_kijun=SelectTenkanKijun(
type_input
)
andbarstate.isconfirmed
price_entry_tenkan_kijun=ta.valuewhen(
select_tenkan_kijun,
close,
0
)
//2.CrossPrice-KijunSen
strong_xover_price_kijun=ta.crossover(
close,
baseLine
)
andprice_over_kumo
neutro_xover_price_kijun=ta.crossover(
close,
baseLine
)
andprice_in_kumo
light_xover_price_kijun=ta.crossover(
close,
baseLine
)
andprice_under_kumo
close_price_kijun=ta.crossunder(
close,
baseLine
)
SelectPriceKijun(type)=>
switchtype
"StrongCrossoverPrice-KijunSen"=>strong_xover_price_kijun
"NeutroCrossoverPrice-KijunSen"=>neutro_xover_price_kijun
"LightCrossoverPrice-KijunSen"=>light_xover_price_kijun
type_input_2=input.string(
"StrongCrossoverPrice-KijunSen",
title="Selectstrategy:",
options=["StrongCrossoverPrice-KijunSen","NeutroCrossoverPrice-KijunSen","LightCrossoverPrice-KijunSen"],
tooltip="",
group="Price-KijunSenStrategyConfiguration"
)
select_price_kijun=SelectPriceKijun(
type_input_2
)
andbarstate.isconfirmed
price_entry_price_kijun=ta.valuewhen(
select_price_kijun,
close,
0
)
//3.Kumobreakout
kumo_breakout=ta.crossover(
close,
adj_leadLine1
)
//4.KumoTwist
strong_kumo_twist=ta.crossover(
adj_leadLine1,
adj_leadLine2
)
andprice_over_kumo
light_kumo_twist=ta.crossover(
adj_leadLine1,
adj_leadLine2
)
andprice_under_kumo
close_kumo_twist=ta.crossunder(
adj_leadLine1,
adj_leadLine2)
SelectKumoTwist(type)=>
switchtype
"StrongCrossoverKumoTwist"=>strong_kumo_twist
"LightCrossoverKumoTwist"=>light_kumo_twist
type_input_3=input.string(
"StrongCrossoverKumoTwist",
title="Selectstrategy:",
options=["StrongCrossoverKumoTwist","LightCrossoverKumoTwist"],
tooltip="",
group="KumoTwistStrategyConfiguration"
)
select_kumo_twist=SelectKumoTwist(
type_input_3
)
andbarstate.isconfirmed
price_entry_kumo_twist=ta.valuewhen(
select_kumo_twist,
close,
0
)
//########################################################################################################################
vartb=table.new(
position.bottom_left,
1,1,
bgcolor=color.new(
color.blue,
90
))
ifbarstate.isfirst
table.cell(
tb,
0,0,
'DevelopedbyTheQuantScience™'
,text_size=size.normal
,text_color=color.new(
color.blue,
20
))
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
entry_string_1=input.string(
title="Entrystring:",
defval="#######",
confirm=false,
group="TenkanSen-KijunSenStrategyConfiguration",
tooltip="Enter3CommasorCryptohopperstringlink.Enteronlytheopenentrylinkinthisfield."
)
exit_string_1=input.string(
title="Exitstring:",
defval="#######",
confirm=false,
group="TenkanSen-KijunSenStrategyConfiguration",
tooltip="Enter3CommasorCryptohopperstringlink.Enteronlythecloseexitlinkinthisfield."
)
isLong=false
isLong:=nz(
isLong[1],
false
)
isSellLong=false
isSellLong:=nz(
isSellLong[1],
false
)
LONG=notisLongandselect_tenkan_kijun
price_1=ta.valuewhen(
LONG,
close,
0
)
lot_1=start/price_1
CLOSE_LONG=notisSellLongandclose_tenkan_kijun
if(LONG)andstrategy_1==true
isLong:=true
isSellLong:=false
strategy.entry(
id="TenkanKijunOpen",
direction=strategy.long,
qty=lot_1,
limit=price_entry_tenkan_kijun
)
alert(
entry_string_1,
alert.freq_once_per_bar
)

if(CLOSE_LONG)andstrategy_1==true
isLong:=false
isSellLong:=true
strategy.close_all(
comment="TenkanKijunClosing"
)
alert(
exit_string_1,
alert.freq_once_per_bar
)
//########################################################################################################################
entry_string_2=input.string(
title="Entrystring:",
defval="#######",
confirm=false,
group="Price-KijunSenStrategyConfiguration",
tooltip="Enter3CommasorCryptohopperstringlink.Enteronlytheopenentrylinkinthisfield."
)
exit_string_2=input.string(
title="Exitstring:",
defval="#######",
confirm=false,
group="Price-KijunSenStrategyConfiguration",
tooltip="Enter3CommasorCryptohopperstringlink.Enteronlythecloseexitlinkinthisfield."
)
isLong_2=false
isLong_2:=nz(
isLong_2[1],
false
)
isSellLong_2=false
isSellLong_2:=nz(
isSellLong_2[1],
false
)
LONG_2=notisLong_2andselect_price_kijun
price_2=ta.valuewhen(
LONG_2,
close,
0
)
lot_2=start/price_2
CLOSE_LONG_2=notisSellLong_2andclose_price_kijun
if(LONG_2)andstrategy_2==true
isLong_2:=true
isSellLong_2:=false
strategy.entry(
id="PriceKijunOpen",
direction=strategy.long,
qty=lot_2,
limit=price_entry_price_kijun
)
alert(
entry_string_2,
alert.freq_once_per_bar
)
if(CLOSE_LONG_2)andstrategy_2==true
isLong_2:=false
isSellLong_2:=true
strategy.close_all(comment="PriceKijunClosing")
alert(
exit_string_2,
alert.freq_once_per_bar
)
//########################################################################################################################
entry_string_3=input.string(
title="Entrystring:",
defval="#######",
confirm=false,
group="KumoBreakoutStrategyConfiguration",
tooltip="Enter3CommasorCryptohopperstringlink.Enteronlytheopenentrylinkinthisfield."
)
exit_string_3=input.string(
title="Exitstring:",
defval="#######",
confirm=false,
group="KumoBreakoutStrategyConfiguration",
tooltip="Enter3CommasorCryptohopperstringlink.Enteronlythecloseexitlinkinthisfield."
)
isLong_3=false
isLong_3:=nz(
isLong_3[1],
false
)
isSellLong_3=false
isSellLong_3:=nz(
isSellLong_3[1],
false
)
LONG_3=notisLong_3andkumo_breakout
price_kumobrk=ta.valuewhen(
LONG_3,
close,
0
)
lot_3=start/price_kumobrk
take_profit_kumobrk_price=(
price_kumobrk*(
100+
take_profit
)/100
)
stop_loss_kumobrk_price=(
price_kumobrk*(
100-
stop_loss
)/100
)
if(LONG_3)andstrategy_3==true
isLong_3:=true
isSellLong_3:=false
strategy.entry(
id="KumoBreakoutOpen",
direction=strategy.long,
qty=lot_3,
limit=price_kumobrk
)
alert(
entry_string_3,
alert.freq_once_per_bar
)
if(take_profit_kumobrk_price)
isLong_3:=false
isSellLong_3:=true
strategy.exit(
id="KumoBreakoutClosing",
from_entry="KumoBreakoutOpen",
limit=take_profit_kumobrk_price,
stop=stop_loss_kumobrk_price
)
alert(
exit_string_3,
alert.freq_once_per_bar
)
if(stop_loss_kumobrk_price)
isLong_3:=false
isSellLong_3:=true
strategy.exit(
id="KumoBreakoutClosing",
from_entry="KumoBreakoutOpen",
limit=take_profit_kumobrk_price,
stop=stop_loss_kumobrk_price
)
alert(
exit_string_3,
alert.freq_once_per_bar
)
//########################################################################################################################
entry_string_4=input.string(
title="Entrystring:",
defval="#######",
confirm=false,
group="KumoTwistStrategyConfiguration",
tooltip="Enter3CommasorCryptohopperstringlink.Enteronlytheopenentrylinkinthisfield."
)
exit_string_4=input.string(
title="Exitstring:",
defval="#######",
confirm=false,
group="KumoTwistStrategyConfiguration",
tooltip="Enter3CommasorCryptohopperstringlink.Enteronlythecloseexitlinkinthisfield."
)
isLong_4=false
isLong_4:=nz(
isLong_4[1],
false
)
isSellLong_4=false
isSellLong_4:=nz(
isSellLong_4[1],
false
)
LONG_4=notisLong_4andselect_kumo_twist
price_4=ta.valuewhen(
LONG_4,
close,
0
)
lot_4=start/price_4
CLOSE_LONG_4=notisSellLong_4andclose_kumo_twist
if(LONG_4)andstrategy_4==true
isLong_4:=true
isSellLong_4:=false
strategy.entry(
id="KumoTwistOpen",
direction=strategy.long,
qty=lot_4,
limit=price_entry_kumo_twist
)
alert(
entry_string_4,
alert.freq_once_per_bar
)
if(CLOSE_LONG_4)andstrategy_4==true
isLong_4:=false
isSellLong_4:=true
strategy.close_all(comment="KumoTwistClosing")
alert(
exit_string_4,
alert.freq_once_per_bar
)
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
plot(
conversionLine,
color=color.new(
color.aqua,
65),
title="ConversionLineorTenkanSen"
)
plot(
baseLine,
color=color.new(
color.purple,
65),
title="BaseLineorKijunSen"
)
plot(
close,
offset=-displacement+1,
color=color.new(
color.gray,
85
),
title="LaggingSpanChokou"
)
p1=plot(
leadLine1,
offset=displacement-1,
color=color.aqua,
title="LeadingSpanA"
)
p2=plot(
leadLine2,
offset=displacement-1,
color=color.aqua,
title="LeadingSpanB"
)
fill(
p1,
p2,
color=leadLine1>leadLine2?color.rgb(
21,149,253,90
):color.rgb(
21,149,253,90
))
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
//########################################################################################################################
Expand (639 lines)
