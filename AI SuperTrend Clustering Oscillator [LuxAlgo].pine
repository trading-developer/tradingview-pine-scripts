Script Name: AI SuperTrend Clustering Oscillator [LuxAlgo]
Author: LuxAlgo
Description: The AI SuperTrend Clustering Oscillator is an oscillator returning the most bullish/average/bearish centroids given by multiple instances of the difference between SuperTrend indicators.

This script is an extension of our previously posted SuperTrend AI indicator that makes use of k-means clustering. If you want to learn more about it see:



ðŸ”¶  USAGE



The...
PineScript code:

Pine Scriptâ„¢ indicator
AI SuperTrend Clustering Oscillator [LuxAlgo]
//  This  work  is  licensed  under  a  Attribution-NonCommercial-ShareAlike  4.0  International  (CC  BY-NC-SA  4.0)  https://creativecommons.org/licenses/by-nc-sa/4.0/
//  Â©  LuxAlgo
//@version=5
indicator("AI  SuperTrend  Clustering  Oscillator  [LuxAlgo]",  "LuxAlgo  -  AI  SuperTrend  Clustering  Oscillator")
//------------------------------------------------------------------------------
//Settings
//-----------------------------------------------------------------------------{
length  =  input(10,  'ATR  Length')
minMult  =  input.int(1,  'Factor  Range',  minval  =  0,  inline  =  'factor')
maxMult  =  input.int(5,  '',  minval  =  0,  inline  =  'factor')
step        =  input.float(.5,  'Step',  minval  =  0,  step  =  0.1)
smooth  =  input.float(1,  minval  =  1)
//Trigger  error
if  minMult  >  maxMult
        runtime.error('Minimum  factor  is  greater  than  maximum  factor  in  the  range')
//Optimization
maxIter  =  input.int(1000,  'Maximum  Iteration  Steps',  minval  =  0,  group  =  'Optimization')
maxData  =  input.int(10000,  'Historical  Bars  Calculation',  minval  =  0,  group  =  'Optimization')
//Style
bullCss  =  input(color.new(#5b9cf6,  50),  'Bullish',  inline  =  'bull',  group  =  'Style')
strongBullCss  =  input(color.new(#5b9cf6,  28),  'Strong',  inline  =  'bull',  group  =  'Style')
neutCss  =input(#9598a1,'Neutral',inline='neut',group='Style')
bearCss=input(color.new(#f77c80,50),'Bearish',inline='bear',group='Style')
strongBearCss=input(color.new(#f77c80,28),'Strong',inline='bear',group='Style')
//-----------------------------------------------------------------------------}
//UDT's
//-----------------------------------------------------------------------------{
typesupertrend
floatupper=hl2
floatlower=hl2
floatoutput
inttrend
typevector
array<float>out
//-----------------------------------------------------------------------------}
//Supertrend
//-----------------------------------------------------------------------------{
varholder=array.new<supertrend>(0)
varfactors=array.new<float>(0)
//Populatesupertrendtypearray
ifbarstate.isfirst
fori=0toint((maxMult-minMult)/step)
factors.push(minMult+i*step)
holder.push(supertrend.new())
atr=ta.atr(length)
//ComputeSupertrendformultiplefactors
k=0
forfactorinfactors
get_spt=holder.get(k)
up=hl2+atr*factor
dn=hl2-atr*factor

get_spt.upper:=close[1]<get_spt.upper?math.min(up,get_spt.upper):up
get_spt.lower:=close[1]>get_spt.lower?math.max(dn,get_spt.lower):dn
get_spt.trend:=close>get_spt.upper?1:close<get_spt.lower?0:get_spt.trend
get_spt.output:=get_spt.trend==1?get_spt.lower:get_spt.upper
k+=1
//-----------------------------------------------------------------------------}
//K-meansclustering
//-----------------------------------------------------------------------------{
data=array.new<float>(0)
//Populatedataarrays
iflast_bar_index-bar_index<=maxData
forelementinholder
data.push(close-element.output)
//Intitalizecentroidsusingquartiles
centroids=array.new<float>(0)
centroids.push(data.percentile_linear_interpolation(25))
centroids.push(data.percentile_linear_interpolation(50))
centroids.push(data.percentile_linear_interpolation(75))
//Intializeclusters
vararray<vector>clusters=na
iflast_bar_index-bar_index<=maxData
for_=0tomaxIter
clusters:=array.from(vector.new(array.new<float>(0)),vector.new(array.new<float>(0)),vector.new(array.new<float>(0)))

//Assignvaluetocluster
forvalueindata
dist=array.new<float>(0)
forcentroidincentroids
dist.push(math.abs(value-centroid))
idx=dist.indexof(dist.min())
ifidx!=-1
clusters.get(idx).out.push(value)

//Updatecentroids
new_centroids=array.new<float>(0)
forcluster_inclusters
new_centroids.push(cluster_.out.avg())
//Testifcentroidchanged
ifnew_centroids.get(0)==centroids.get(0)andnew_centroids.get(1)==centroids.get(1)andnew_centroids.get(2)==centroids.get(2)
break
centroids:=new_centroids
//-----------------------------------------------------------------------------}
//Getcentroids
//-----------------------------------------------------------------------------{
//Getassociatedsupertrend
varfloatbull=0
varfloatneut=0
varfloatbear=0
varden=0
ifnotna(clusters)
bull+=2/(smooth+1)*nz(centroids.get(2)-bull)
neut+=2/(smooth+1)*nz(centroids.get(1)-neut)
bear+=2/(smooth+1)*nz(centroids.get(0)-bear)
den+=1
//-----------------------------------------------------------------------------}
//Plots
//-----------------------------------------------------------------------------{
plot_bull=plot(math.max(bull,0),color=na,editable=false)
plot_bull_ext=plot(math.max(bear,0),'StrongBullish'
,bear>0?strongBullCss:na
,style=plot.style_circles)
plot_bear=plot(math.min(bear,0),color=na,editable=false)
plot_bear_ext=plot(math.min(bull,0),'StrongBearish'
,bull<0?strongBearCss:na
,style=plot.style_circles)
plot(neut,'Consensus',neutCss)
fill(plot_bull,plot_bull_ext,bull,math.max(bear,0),bullCss,color.new(chart.bg_color,100))
fill(plot_bear_ext,plot_bear,math.min(bull,0),bear,color.new(chart.bg_color,100),bearCss)
hline(0,linestyle=hline.style_solid)
//-----------------------------------------------------------------------------}
Expand (152 lines)
