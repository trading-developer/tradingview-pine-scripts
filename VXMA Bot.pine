Script Name: VXMA Bot
Author: Vvaz_
Description: This strategy is separated version of Cloud MA form VXD Cloud Edition, Let called it "VXMA".
what's changed?

 renew TP/SL Work
 Simplify code and clean look.

 Risk:Reward Calculation
Risk of Ruin Setting can now selected between Fixed $ or %

 if Buy your Stoploss will be Swing low
 if Sell your Stoploss will be Swing high and can be setting at Pivot...
PineScript code:

Pine Script™ strategy
VXMA Bot
//@version=5
//This  Strategy  is  form  VXD  Cloud  Edition  but  separated  version  for  Clound  MA  only  let  called  it  "VXMA"
strategy("VXMA  Bot",  "VXMA",  overlay=true  ,  initial_capital=100  ,currency  =  currency.USD  ,  pyramiding  =  1  ,  process_orders_on_close=true  ,calc_on_every_tick=  false,  commission_type=strategy.commission.percent,commission_value=0.04,slippage=2,precision=6)
passphrase                            =  input.string(defval='xxxx',  title  ='SECRET_KEY',group='═  Bot  Setting  ═',  inline  =  'bot')
leveragex                              =  input.int(25,title='leverage',group='═  Bot  Setting  ═',tooltip='"NOTHING"  to  do  with  Position  size',minval=1,  inline  =  'bot')
//payload
Alert_OpenLong                    =  '{"side":  "OpenLong",  "amount":  "@{{strategy.order.contracts}}",  "symbol":  "{{ticker}}",  "passphrase":  "'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
Alert_OpenShort                  =  '{"side":  "OpenShort",  "amount":  "@{{strategy.order.contracts}}",  "symbol":  "{{ticker}}",  "passphrase":  "'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
Alert_LongTP                        =  '{"side":  "CloseLong",  "amount":  "@{{strategy.order.contracts}}",  "symbol":  "{{ticker}}",  "passphrase":  "'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
Alert_ShortTP                      =  '{"side":  "CloseShort",  "amount":  "@{{strategy.order.contracts}}",  "symbol":  "{{ticker}}",  "passphrase":  "'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
Alert_Stoplong                    =  '{"side":  "CloseLong",  "amount":  "%100",  "symbol":  "{{ticker}}",  "passphrase":  "'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
Alert_Stopshort                  =  '{"side":  "CloseShort",  "amount":  "%100",  "symbol":  "{{ticker}}",  "passphrase":  "'+passphrase+'","leverage":"'+str.tostring(leveragex)+'"}'
//  INPUT  BACKTEST  RANGE
BTR1                  =  '════════  INPUT  BACKTEST  TIME  RANGE  ════════'
i_startTime                          =  input.time(defval  =  timestamp("01  Jan  1945  00:00  +0000"),  title  =  "Start",  inline="timestart",  group=BTR1)
i_endTime                              =  input.time(defval  =  timestamp("01  Jan  2074  23:59  +0000"),  title  =  "End",  inline="timeend",  group=BTR1)
timeCond                                =  (time  >  i_startTime)  and  (time  <  i_endTime)
//  Strategy  Setting
maxsize                                =  input.int(title="Max  Position  Size($)",  defval  =  50  ,  group='═  Strategy  Setting  ═',  tooltip  =  'To  Avoid  Large  Position  Size')
riskPer                                  =  input.int(10,  "Risk",  minval  =  1,  group='═  Strategy  Setting  ═',  tooltip  =  'Lost  per  trade',inline='risk')
risktype                                =  input.string('$',  "",  options=['$','%']  ,group='═  Strategy  Setting  ═',inline='risk')
uselong                                  =  input.bool(title="Open  Buy?",  defval  =  true  ,  group='═  Strategy  Setting  ═',  inline  =  'bs')
useshort                                =  input.bool(title="Open  Sell?",  defval  =  true  ,  group='═  Strategy  Setting  ═',  inline  =  'bs')
useSL                                      =  input.bool(title="Use  Take  Profit/StopLoss?",  defval  =  true  ,  group='═  Strategy  Setting  ═',inline='Set')
useSLbox                                =  input.bool(title="Show  Profit/StopLoss  Box?",  defval  =  false  ,  group='═  Strategy  Setting  ═')
useSLcl                                  =  input.color(defval=color.new(color.orange,0),  title='Color',  inline='Set',  group='═  Strategy  Setting  ═')
ReEntry                                  =  input.bool(title="Re  Entry  after  SL?",  defval  =  true  ,  group='═  Strategy  Setting  ═',  tooltip='Re  entry  position  after  SL  if  trend  did  not  changed')
rrPer                                      =  input.float(3.00,  "RR:TP1",  minval  =  1,  step=0.1,  group='═  Strategy  Setting  ═',inline='rr')
rrPer2                                    =  input.float(4.00,  "RR:TP2",  minval  =  1,  step=0.1,  group='═  Strategy  Setting  ═',inline='rr'  ,  tooltip  =  'Target  price')
TPper                                      =  input.int(50,  "%TP1",  minval  =  0  ,maxval  =  100,  step=5,  group='═  Strategy  Setting  ═',  tooltip='%  of  amount  in  open  position.',inline='tp%')
TPper2                                    =  input.int(100,  "%TP2",  minval  =  0  ,maxval  =  100,  step=5,  group='═  Strategy  Setting  ═',inline='tp%')
/////////////////////////    ATR    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Periods                                  =  input.int(title="ATR  Period",  defval=12  ,group='═  ATR  Setting  ═')
Multiplier                            =  input.float(title="ATR  Multiplier",  step=0.1,  defval=1.6,group='═  ATR  Setting  ═')
ATR                                          =  ta.sma(ta.tr,Periods)
downT                                      =  high  +  ATR  *  Multiplier  ,  upT                                          =  low    -  ATR  *  Multiplier
/////////////////////////    RSI    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
LengthRSI                              =  input.int(25,'RSI',  minval=1,  group='═  RSI  Setting  ═')
rsibb                                      =  ta.rsi(close,LengthRSI)
/////////////////////////    Andean  Oscillator      /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
LengthAO                                =  input.int(30,'AO  Length',  minval=1,  group='═  Andean  Oscillator  Setting  ═')
var  alpha  =  2/(LengthAO+1)
up1  =  0.0  ,  up2  =  0.0  ,  dn1  =  0.0  ,  dn2  =  0.0
C  =  close  ,  O  =  open
up1  :=  nz(math.max(C,  O,  up1[1]  -  (up1[1]  -  C)  *  alpha),  C)
up2  :=  nz(math.max(C  *  C,  O  *  O,  up2[1]  -  (up2[1]  -  C  *  C)  *  alpha),  C  *  C)
dn1  :=  nz(math.min(C,  O,  dn1[1]  +  (C  -  dn1[1])  *  alpha),  C)
dn2  :=  nz(math.min(C  *  C,  O  *  O,  dn2[1]  +  (C  *  C  -  dn2[1])  *  alpha),  C  *  C)
//Components
bull  =  math.sqrt(dn2  -  dn1  *  dn1)
bear  =  math.sqrt(up2  -  up1  *  up1)
/////////////////////////    MA    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
LengthMA                                =  input.int(30,'EMA  fast',  minval=1,  group='═  MA  Setting  ═',  tooltip  =  'Act  as  Trend  line')
sma2cl                                    =  input.color(defval=color.new(color.purple,0),  title='EMA  Slow',  group='═  MA  Setting  ═'  ,inline  =  'sma200')
LengthMA2                              =  input.int(200,'EMA  Slow',  minval=1,  group='═  MA  Setting  ═',inline  =  'sma200')
MA_1                                        =  ta.ema(close,  LengthMA)  ,  MA_2                                        =  ta.ema(close,  LengthMA2)
//////////////////////////  Linear  regression  curve    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
length                                    =  input.int(30,'Linear  Length',  minval=1,  group='═  Subhag  Setting  ═')
smoothing                              =  input.int(30,  'Smoothing',  minval=1,  group='═  Subhag  Setting  ═')
linreg                                    =  ta.ema(ta.linreg(close,  length,  0),smoothing)
isUplinreg                            =  ta.rising(linreg,2)  ,  isDnlinreg  =  ta.falling(linreg,2)
/////////////////////////    Pivot  Setting    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
plotPVT                                  =  input.bool(defval=true,  title='Plot  Pivots',  group='═  Pivots  ═')
pivotLookup                          =  input.int(defval=5,  minval=1,  maxval=8,title='Pivot  Lookup',  group='═  Pivots  ═',  tooltip='Minimum  =  1,  Maximum  =  8')
pivotsizing                          =  input.int(defval=50,  minval=1,  maxval=100,title='Pivot  bars  back  for  sizing',  group='═  Pivots  ═',  tooltip='Minimum  =  1,  Maximum  =  100')
plotInThePast                      =  input(false,  "Plot  When  Pivot  is  Detected"  ,group='═  Pivots  ═')
pvtTopColor                          =  input.color(defval=color.new(#76b579,60),  title='Pivot  Top  Color',  group='═  Pivots  ═',  inline='PVT  Top  Color')
pvtBottomColor                    =  input.color(defval=color.new(#d85884,60),  title='Pivot  Bottom  Color',  group='═  Pivots  ═',  inline='PVT  Top  Color')
////////////////////////////////////  High  Volume  Bars  Setting  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
plotHVB                                  =  input.bool(defval=true,  title='Plot  HVB',  group='═  High  Volume  Bar  ═',  tooltip='A  candle  where  the  average  volume  is  higher  than  last  few  bars.')
hvbBullColor                        =  input.color(defval=color.new(color.green,0),  title='Bullish  HVB  Color',  inline='Set  Custom  Color',  group='═  High  Volume  Bar  ═')
hvbBearColor                        =  input.color(defval=color.new(color.orange,0),  title='Bearish  HVB  Color',  inline='Set  Custom  Color',  group='═  High  Volume  Bar  ═')
hvbEMAPeriod                        =  input.int(defval=6,  minval=1,  title='Volume  EMA  Period',  group='═  High  Volume  Bar  ═')
hvbMultiplier                      =  input.float(defval=1.2,  title='Volume  Multiplier',  minval=1,  maxval=100,  group='═  High  Volume  Bar  ═')
////////////////////////////////////  Cloud  Setting  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
clbgclbull                            =  input.color(defval=color.green,  title='Bull  Cloud    Color',  group='═  Cloud  Setting  ═')
clbgclbear                            =  input.color(defval=color.red,  title='Bear  Cloud    Color',  group='═  Cloud  Setting  ═')
clbgclsway                            =  input.color(defval=color.yellow,  title='Sideway  Cloud    Color',  group='═  Cloud  Setting  ═')
///////////////////////////////    define  trend    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
AlphaTrend  =  0.0  ,  CloudMA  =  0.0  ,cloudtrend  =  0,ATcl  =  color.new(color.yellow,0)
AlphaTrend                            :=  rsibb  >=  50  ?  upT  <  nz(AlphaTrend[1])  ?  nz(AlphaTrend[1])  :  upT  :  downT  >  nz(AlphaTrend[1])  ?  nz(AlphaTrend[1])  :  downT
fastl                                      =  ta.ema(close,2)
clohi                                      =  math.max(MA_1,linreg,AlphaTrend[2])
clolo                                      =  math.min(MA_1,linreg,AlphaTrend[2])
//CloudMA
CloudMA                                  :=  (bull  >  bear)  ?  clolo  <  nz(CloudMA[1])  ?  nz(CloudMA[1])  :  clolo  :  (bear  >  bull)  ?  clohi  >  nz(CloudMA[1])  ?  nz(CloudMA[1])  :  clohi  :  nz(CloudMA[1])
ATisup  =  ta.rising(CloudMA,2),  ATisdn  =  ta.falling(CloudMA,2),  greenzone  =  close  >  CloudMA,  redzone  =  close  <  CloudMA
cloudtrend                            :=  ATisup  ?  1  :  ATisdn  ?  -1  :  cloudtrend[1]
ATcl                                        :=  ATisup  ?  clbgclbull    :  ATisdn  ?  clbgclbear    :  CloudMA[1]  ==  CloudMA  ?  clbgclsway  :  ATcl[1]
//plot  cloud
kline                                      =  plot(CloudMA,  color=color.new(ATcl,0),  linewidth=2)
main3                                      =  plot(MA_2  ,  title="SMA"  ,  color=sma2cl  ,  linewidth=2)
////////////////////  Pivots  ////////////////////
hih                                          =  ta.pivothigh(high,  pivotLookup,  pivotLookup)
lol                                          =  ta.pivotlow(low  ,  pivotLookup,  pivotLookup)
top                                          =  ta.valuewhen(hih,  high[pivotLookup],  0)
bottom                                    =  ta.valuewhen(lol,  low  [pivotLookup],  0)
pvtop  =  plot(top        ,  offset=plotInThePast  ?  0  :  -pivotLookup  ,  linewidth=1,  color=(top          !=  top[1]  ?  na            :  (plotPVT  ?  pvtTopColor  :  na)),  title="Pivot  Top")
pvdow  =  plot(bottom  ,  offset=plotInThePast  ?  0  :  -pivotLookup  ,  linewidth=1,  color=(bottom    !=  bottom[1]  ?  na      :  (plotPVT  ?  pvtBottomColor  :  na)),  title="Pivot  Bottom")
//////////////////  High  Volume  Bars  //////////////////
volEma                                    =  ta.sma(volume,  hvbEMAPeriod)
isHighVolume    =volume>(hvbMultiplier*volEma)
//Functions
isUp(index)=>
close[index]>open[index]
isDown(index)=>
close[index]<open[index]
barcolor(plotHVBandisUp(0)andisHighVolume?hvbBullColor:na,title="BullishHVB")
barcolor(plotHVBandisDown(0)andisHighVolume?hvbBearColor:na,title="BearishHVB")
//////////////////////////////////Strategycondition////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
position_size=strategy.position_size,Eqty=strategy.equity,lotsize=0.0,RR0=0.0,SLbuy=0.0,SLsell=0.0
in_bull=ta.change(cloudtrend)andcloudtrend==1
in_bear=ta.change(cloudtrend)andcloudtrend==-1
//exitorder
if(in_bear==true)
strategy.close('long',comment='TailingStop-L',alert_message=Alert_Stoplong)
if(in_bull==true)
strategy.close('Short',comment='TailingStop-S',alert_message=Alert_Stopshort)
//sizingbyswinghighandlow
highest=ta.highest(top,pivotsizing)
lowest=ta.lowest(bottom,pivotsizing)
percentrisk=risktype=='%'?(riskPer/100)*Eqty:riskPer
////condition
LongConditionC=(cloudtrend>0)andgreenzoneandtimeCondandposition_size<=0
ShortConditionC=(cloudtrend<0)andredzoneandtimeCondandposition_size>=0
changetbull=ta.change(LongConditionC),changetbear=ta.change(ShortConditionC),buyprice=0.0,sellprice=0.0
openprice=strategy.opentrades.entry_price(0),TPbear=0.0,TPbull=0.0,onebuy=0,onesell=0,TPbull2=0.0,TPbear2=0.0,stat_H=0.0,stat_L=0.0
lotsize:=changetbull?math.abs((percentrisk)/(close-lowest)):changetbear?math.abs((percentrisk)/(highest-close)):lotsize[1]
iflotsize*close>maxsize
lotsize:=maxsize/close
buyprice:=position_size>=0?changetbull?openprice:buyprice[1]:na
sellprice:=position_size<=0?changetbear?openprice:sellprice[1]:na
TPbull:=changetbull?buyprice*(1+(((openprice-lowest)/openprice))*rrPer):(position_size>0)?TPbull[1]:(position_size<0)?0.0:0.0
TPbull2:=changetbull?buyprice*(1+(((openprice-lowest)/openprice))*rrPer2):(position_size>0)?TPbull2[1]:(position_size<0)?0.0:0.0
TPbear:=changetbear?sellprice*(1-(((highest-openprice)/openprice))*rrPer):(position_size<0)?TPbear[1]:(position_size>0)?0.0:0.0
TPbear2:=changetbear?sellprice*(1-(((highest-openprice)/openprice))*rrPer2):(position_size<0)?TPbear2[1]:(position_size>0)?0.0:0.0
//stat
stat_H:=(position_size!=0)?high>high[1]?high:stat_H[1]:high
stat_L:=(position_size!=0)?low<low[1]?low:stat_L[1]:low
SLbuy:=in_bull?lowest:cloudtrend==1?SLbuy[1]:lowest
SLsell:=in_bear?highest:cloudtrend==-1?SLsell[1]:highest
isslbuy=ta.crossunder(stat_L,SLbuy),isslsell=ta.crossover(stat_H,SLsell)
onebuy:=(cloudtrend[1]!=1)and(cloudtrend==1)?1:ReEntryandisslbuy?0:(position_size>0)?1:(cloudtrend==-1)?0:onebuy[1]
onesell:=(cloudtrend[1]!=-1)and(cloudtrend==-1)?1:ReEntryandisslsell?0:(position_size<0)?1:(cloudtrend==1)?0:onesell[1]
//plot
linetp=plot(useSLbox?(useSLand(position_size>0)?TPbull:useSLand(position_size<0)?TPbear:na):useSLandchangetbull?TPbull:useSLandchangetbear?TPbear:na,'TP',useSLbox?color.green:useSLcl,style=plot.style_linebr,linewidth=1)
linetp2=plot(useSLbox?(useSLand(position_size>0)?TPbull2:useSLand(position_size<0)?TPbear2:na):useSLandchangetbull?TPbull2:useSLandchangetbear?TPbear2:na,'TP2',useSLbox?color.green:useSLcl,style=plot.style_linebr,linewidth=1)
lintsl=plot(useSLbox?(useSLand(position_size>0)?SLbuy:useSLand(position_size<0)?SLsell:na):useSLandchangetbull?SLbuy:useSLandchangetbear?SLsell:na,'SL',useSLbox?color.red:useSLcl,style=plot.style_linebr,linewidth=1)
lineentry=plot(useSLboxand(position_size>0)?buyprice:useSLboxand(position_size<0)?sellprice:na,'Entry',color.white,style=plot.style_linebr,linewidth=1)
fill(lineentry,linetp2,color.new(color.green,80))
fill(lineentry,lintsl,color.new(color.red,80))
//long
if(uselong==true)andchangetbulland(onebuy[1]==0)
strategy.entry('long',strategy.long,qty=lotsize,comment='Long',alert_message=Alert_OpenLong)
//Short
if(useshort==true)andchangetbearand(onesell[1]==0)
strategy.entry('Short',strategy.short,qty=lotsize,comment='Short',alert_message=Alert_OpenShort)
//TPSL
if(position_size>0)anduseSL
strategy.exit('TP1','long',comment='SL/TP1',limit=TPbull,alert_message=Alert_LongTP,qty_percent=TPper,stop=SLbuy)
strategy.exit('TP2','long',comment='SL/TP2',limit=TPbull2,alert_message=Alert_LongTP,qty_percent=TPper2,stop=SLbuy)
strategy.exit('SL','long',comment='SL',stop=SLbuy,alert_message=Alert_Stoplong)
if(position_size<0)anduseSL
strategy.exit('STP1','Short',comment='SL/TP1',limit=TPbear,alert_message=Alert_ShortTP,qty_percent=TPper,stop=SLsell)
strategy.exit('STP2','Short',comment='SL/TP2',limit=TPbear2,alert_message=Alert_ShortTP,qty_percent=TPper2,stop=SLsell)
strategy.exit('SSL','Short',comment='SL',stop=SLsell,alert_message=Alert_Stopshort)
//////////////////////////////////DATAWINDOW////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
importNaruephat/Cayoshi_Library/1asfuLi
show_Net=input.bool(true,'ShowNet',inline='Lnet')
position_=input.string('top_right','Position',options=['top_right','middle_right','bottom_right','top_center','middle_center','bottom_center','middle_left','bottom_left'],inline='Lnet')
size_i=input.string('normal','size',options=['auto','tiny','small','normal'],inline='Lnet')
color_Net=input.color(color.blue,"",inline='Lnet')
fuLi.NetProfit_Show(show_Net,position_,size_i,color_Net)
//////////////////////////////////END////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//██╗░░░██╗░█████╗░███████╗
//██║░░░██║██╔══██╗╚════██║
//╚██╗░██╔╝███████║░░███╔═╝
//░╚████╔╝░██╔══██║██╔══╝░░
//░░╚██╔╝░░██║░░██║███████╗
//by.╚═╝░░░╚═╝░░╚═╝╚══════╝
Expand (180 lines)
