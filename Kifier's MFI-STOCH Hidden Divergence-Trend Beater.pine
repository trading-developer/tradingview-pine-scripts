Script Name: Kifier's MFI-STOCH Hidden Divergence-Trend Beater
Author: kifier
Description: MFI/STOCH Hidden Divergence/Trend Beater

 General Idea:
My premise around this strategy was to make a general strategy for crypto that would help out with finding entry positions for when you’re bullish on a crypto and want to hold on for a while, and at the same time avoiding massive drops. Essentially a way to mix long term/ swing trading; I somewhat achieved...
PineScript code:

Pine Script™ strategy
Kifier's MFI/STOCH Hidden Divergence/Trend Beater
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  kifier
//@version=4
strategy("Kifier's  MFI/STOCH  Hidden  Divergence/Trend  Beater",  shorttitle  =  "Kifier's  MFI/STOCH",  overlay=false,  margin_long=100,  margin_short=100,  default_qty_type    =  strategy.percent_of_equity,  default_qty_value  =  95,  max_boxes_count  =  500)
//Values
enb_date          =  input(false                                                                    ,"Enable  Date  Range?",            type  =  input.bool,  inline  =  "1")
enb_current    =  input(true                                                                      ,"Today  as  End  Date"  ,            type  =  input.bool,  inline  =  "1")
i_start_date  =  input(timestamp("01  Jan  2021  00:00  +0300")      ,"Start  Date"                ,            type=input.time)
i_end_date      =  input(timestamp("16  July  2021  00:00  +0300")    ,"End  Date"                    ,            type=input.time)
time_check      =  iff(enb_date  ?  (time  >=  i_start_date)  and  (enb_current  ?  true  :  time  <=  i_end_date)  :  true,  true,  false)
i_vwma_length      =  input(50,          "VWMA  Length"                              ,type  =  input.integer,      group  =  "Indicator  Settings",  inline  =  "2")
i_sma_length        =  input(50,          "SMA  Length"                                ,type  =  input.integer,      group  =  "Indicator  Settings",  inline  =  "2")
i_stoch_length    =  input(28,          "Stoch  Length"                            ,type  =  input.integer,      group  =  "Indicator  Settings",  inline  =  "3")
i_mfi_length        =  input(7  ,          "MFI  Length"                                ,type  =  input.integer,      group  =  "Indicator  Settings",  inline  =  "3")
i_obv_length        =  input(100,        "OBV  Length"                                ,type  =  input.integer,      group  =  "Indicator  Settings")
i_atr_len              =  input(100,        "ATR  Ranging-trend  len"          ,type  =  input.integer,      group  =  "Indicator  Settings",  tooltip  =  "This  is  the  length  of  the  ATR  Emas  that  check  when  the  market  in  a  general  trend  or  is  just  ranging")
i_div_price          =  input(5              ,"Price  Divergant  Pivots"      ,type  =  input.integer,  group  =  "Divergance  Settings")
i_inacc                  =  input(0.05        ,"Price  Inaccuracy"                  ,type  =  input.float    ,  group  =  "Divergance  Settings")
i_div_length        =  input(3              ,"Divergance  Valid  Period"    ,type  =  input.integer,  group  =  "Divergance  Settings")
i_mfi_left            =  input(5              ,"MFI  Left/Right  Pivots"        ,type  =  input.integer,  group  =  "Divergance  Settings",  inline  =  "4")
i_mfi_right          =  input(2              ,""                                                  ,type  =  input.integer,  group  =  "Divergance  Settings",  inline  =  "4")
tp_percentage      =  input(10    ,      "TP  Percentage"                  ,type  =  input.float                          ,  group  =  "Exit  Settings")/100
_inacc                    =  input(0.03,      "Support  Inaccuracy"        ,type  =  input.float,  step  =  0.01,  group  =  "Exit  Settings")
enb_stoch_mfi          =  input(true,  "Use  Stoch/MFI  Trend"            ,  type  =  input.bool,  group  =  "Individual  Entries")
enb_stoch_mfi_div  =  input(true,  "Use  Stoch/MFI  Divergance  ",  type  =  input.bool,  group  =  "Individual  Entries")
c_mfi                      =  input(color.yellow        ,"MFI/STOCH  Colour          "                ,  type  =  input.color,  group  =  "Indicator  Colours",  inline  =  "os")
c_stoch                  =  input(color.silver        ,""                                                          ,  type  =  input.color,  group  =  "Indicator  Colours",  inline  =  "os")
c_buy                      =  input(color.green          ,"Buy/Sell  Colour            "                ,  type  =  input.color,  group  =  "Indicator  Colours",  inline  =  "pos")
c_sell                    =  input(color.red              ,""                                                          ,  type  =  input.color,  group  =  "Indicator  Colours",  inline  =  "pos")
c_flat                    =  input(color.blue            ,"Flat/Trending  Colours"                ,  type  =  input.color,  group  =  "Indicator  Colours",  inline  =  "trend")
c_longtrend          =  input(color.green          ,""                                                          ,  type  =  input.color,  group  =  "Indicator  Colours",  inline  =  "trend")
//Global  Variables
var  float  tpprice  =  na
f_c_gradientAdvDec(_source,  _center,  _c_bear,  _c_bull)  =>
        var  float  _maxAdvDec  =  0.
varfloat_qtyAdvDec=0.
bool_xUp=crossover(_source,_center)
bool_xDn=crossunder(_source,_center)
float_chg=change(_source)
bool_up=_chg>0
bool_dn=_chg<0
bool_srcBull=_source>_center
bool_srcBear=_source<_center
_qtyAdvDec:=
_srcBull?_xUp?1:_up?_qtyAdvDec+1:_dn?max(1,_qtyAdvDec-1):_qtyAdvDec:
_srcBear?_xDn?1:_dn?_qtyAdvDec+1:_up?max(1,_qtyAdvDec-1):_qtyAdvDec:_qtyAdvDec
_maxAdvDec:=max(_maxAdvDec,_qtyAdvDec)
float_transp=100-(_qtyAdvDec*100/_maxAdvDec)
varcolor_return=na
_return:=_srcBull?color.new(_c_bull,_transp):_srcBear?color.new(_c_bear,_transp):_return
//SimpleSup/Res
varfloat_pH=na
varfloat_pL=na
_ph=pivothigh(high,20,20)
_pl=pivotlow(low,20,20)
_high_inacc=_inacc*high
_low_inacc=_inacc*low
if_ph
_pH:=high
if(high-_high_inacc)>_pHand_ph
_pH:=high
_pH:=nz(_pH)
if_pl
_pL:=low
if(low+_low_inacc)<_pL[1]
_pL:=low
_pL:=nz(_pL)
broke_res=iff(crossover(close,_pH),true,false)
//IndicatorInitialisation
s_stoch=stoch(close,high,low,i_stoch_length)
s_vwma=vwma(close,i_vwma_length)
s_sma=sma(close,i_sma_length)
//MONEYFLOW+BBW
atr1=ema((atr(14)/close),i_atr_len/2)
atr2=ema((atr(14)/close),i_atr_len)
is_ranging=iff(atr1<atr2,true,false)
s_mfi=mfi(close,i_mfi_length)
overTop=iff(s_mfi>=90,true,false)
underBot=iff(s_mfi<=10,true,false)
//PriceDivergance
ph=pivothigh(high,i_div_price,i_div_price)
pl=pivotlow(low,i_div_price,i_div_price)
varfloatpH=0.0
varfloatpL=0.0
high_acc=high*(i_inacc)
low_acc=low*i_inacc
if(high-high_acc)>pHor(high+high_acc<pH)andph
pH:=high
pH:=nz(pH)
if(low+low_acc)<pLor(low-low_acc>pL)andpl
pL:=low
pL:=nz(pL)
higher_low=false
lower_low=false
//Filteroutinnacurate
ifphorpl
ifpL<pL[1]
lower_low:=true
ifpL>pL[1]
higher_low:=true

//MFIDivergance
mh=pivothigh(s_mfi,i_mfi_left,i_mfi_right)
ml=pivotlow(s_mfi,i_mfi_left,i_mfi_right)
bl=bar_index
varfloatmH=0.0
varfloatmL=0.0
varintbL=0
ifmh
mH:=highest(nz(mh),i_mfi_left)
mH:=nz(mH)
ifml
bL:=bar_index
mL:=ml
mL:=nz(mL)
higher_low_m=false
lower_low_m=false
ifml
ifmL<mL[1]
lower_low_m:=true
ifmL>mL[1]
higher_low_m:=true
//Combintion
varintprice_range=na
varintrsi_range=na
varintmfi_range=na
//Higherlowonprice,lowerlowonrsi,thencheckwithstoch
mfi_div_bullish=iff(higher_lowandhigher_low_m,true,false)
ifmfi_div_bullish
price_range:=0
rsi_range:=0
//VWMA/SMA/OBV
_src=s_vwma-s_sma
sd_src=stdev(_src,14)
pooled_src=(_src/sd_src)*2
sd_s_vwma=stdev(s_vwma,14)
sd_s_sma=stdev(s_sma,14)
longTrend=obv>ema(obv,100)andis_ranging==false
crossOver=crossover(s_vwma,s_sma)
crossingOver=(s_vwma>s_sma)and(close>=s_vwma)
crossUnder=crossunder(s_vwma,s_sma)
crossingUnder=(s_vwma<s_sma)and(close<=s_vwma)
hist_color=f_c_gradientAdvDec(s_vwma-s_sma,(s_vwma-s_sma)/2,color.new(c_sell,90),color.new(c_buy,80))
//StrategyEntries
mfi_stoch_trend=iff(enb_stoch_mfi,iff(s_stoch>=50andcrossover(s_mfi,50)andcrossingOverandlongTrendandis_ranging==false,true,false),false)
varbuy_counter_rsi=0
varbuy_counter_mfi=0
mfi_div=iff(enb_stoch_mfi_div,iff(mfi_div_bullishandcrossingOverands_stoch>=50andis_ranging,true,false),false)
ifmfi_div
buy_counter_mfi:=bar_index+5

mfi_divergent_buy=iff(bar_index<=buy_counter_mfiandstrategy.position_size==0,true,false)
//StrategyEntries
order_fired=false
varfloatpreviousRes=0.0
tpprice:=strategy.position_avg_price*(1+tp_percentage)
iftime_check
ifmfi_stoch_trend
strategy.entry("Buy",true,comment="[B]STOCH/MFI")
order_fired:=true
ifmfi_divergent_buy
strategy.entry("Buy",true,comment="[B]MFIHiddenDivergance")
order_fired:=true

iforder_fired
previousRes:=_pL
ifstrategy.position_size>0
strategy.exit("Buy",limit=tpprice,comment="TP")
ifclose<=previousRes
strategy.exit("Buy",stop=previousRes,comment="SL")

//Drawings
hline(0,"Base",color.white)
hline(100,"Max",color.white)
p_stoch=plot(s_stoch,color=c_stoch)
p_mfi=plot(s_mfi,color=c_mfi)
hline(70,"TopLine")
p_mid=plot(50,"MidLine",color.new(color.white,100))
hline(50,"MidLine")
hline(30,"BotLine")
fill(p_stoch,p_mid,color.new(c_stoch,60))
plotshape(crossOver?5:crossUnder?-5:na,style=shape.square,color=crossOver?c_buy:crossUnder?c_sell:na,size=size.tiny,location=location.absolute)
plot((_src/sd_src)*2,color=hist_color,style=plot.style_histogram)
//Boxes
varstringsame=""
varbox_box=na
iflongTrendandis_ranging==falseandsame!="longtrend"
same:="longtrend"
_box:=box.new(bar_index,105,bar_index,100,bgcolor=c_longtrend,border_color=color.new(color.white,100))
elseifis_rangingandsame!="isranging"
same:="isranging"
_box:=box.new(bar_index,105,bar_index,100,bgcolor=c_flat,border_color=color.new(color.white,100))
ifnotna(_box)
box.set_right(_box,bar_index)
//DivLines
varline_line=na
ifmfi_divergent_buy
_line=line.new(bL[1]-6,s_mfi[bar_index-bL[1]],bar_index+6,s_mfi,color=color.green,width=3)
Expand (246 lines)
