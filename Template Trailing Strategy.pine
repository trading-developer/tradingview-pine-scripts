Script Name: Template Trailing Strategy
Author: jason5480
Description: This script is meant to be used as a generic template for new strategies. Take Profit, Stop Loss logic is provided out of the box with (or without) their trailing variations while the trailing for entry and exit orders can also be enabled and be configured!
Custom quantity risk management is provided along with the ability to set custom signal messages that can be...
PineScript code:

Pine Script™ strategy
Template Trailing Strategy
//@version=5
//#region  PREAMBLE
//  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//    Copyright  ©  2022-2023  Iason  Nikolas  |  jason5480
//    The  "Template  Trailing  Strategy"  script  may  be  freely  distributed  under  the  MIT  license.
//
//    Permission  is  hereby  granted,  free  of  charge,
//    to  any  person  obtaining  a  copy  of  this  software  and  associated  documentation  files  (the  "Software"),
//    to  deal  in  the  Software  without  restriction,  including  without  limitation  the  rights  to  use,  copy,  modify,  merge,
//    publish,  distribute,  sublicense,  and/or  sell  copies  of  the  Software,  and  to  permit  persons  to  whom  the  Software
//    is  furnished  to  do  so,  subject  to  the  following  conditions:
//
//    The  above  copyright  notice  and  this  permission  notice  shall  be  included  in  ALL  COPIES  or  substantial  portions  of
//    the  Software.
//
//    THE  SOFTWARE  IS  PROVIDED  "AS  IS",  WITHOUT  WARRANTY  OF  ANY  KIND,  EXPRESS  OR  IMPLIED,  INCLUDING  BUT  NOT  LIMITED  TO  THE
//    WARRANTIES  OF  MERCHANTABILITY,  FITNESS  FOR  A  PARTICULAR  PURPOSE  AND  NONINFRINGEMENT.  IN  NO  EVENT  SHALL  THE  AUTHORS
//    OR  COPYRIGHT  HOLDERS  BE  LIABLE  FOR  ANY  CLAIM,  DAMAGES  OR  OTHER  LIABILITY,  WHETHER  IN  AN  ACTION  OF  CONTRACT,  TORT
//    OR  OTHERWISE,  ARISING  FROM,  OUT  OF  OR  IN  CONNECTION  WITH  THE  SOFTWARE  OR  THE  USE  OR  OTHER  DEALINGS  IN  THE  SOFTWARE.
//
//    Description
//    --------------------------------------------------------------------------------------------------------------------
//    This  script  is  designed  to  be  used  as  a  template  for  building  new  strategies.
//    The  framework  provides  you  with  a  configurable  implementation  of  the  entry,  exit,
//    stop  loss  and  take  profit  trailing  logic.  The  proposed  way  to  use  that  script
//    is  in  combination  with  a  customized  signal  indicator  where  you  implemented  your
//    own  logic  of  start  and  end  deal  conditions.  See  my  "Two  MA  Signal  Indicator"
//    and  "Template  Signal  Indicator"  in  my  profile  for  more.  Another  way  to  utilize
//    this  script  (not  recommended)  is  to  copy  it  and  replace  the  startLongDeal,
//    startShortDeal,  endLongDeal,  endShortDeal,  and  optionally  if  you  use  limit  or  stop-
//    limit  orders  for  entry/exit  the  cnlStartLongDeal,  cnlStartShortDeal,  cnlEndtLongDeal,
//    cnlEndtShortDeal  variables  in  the  STRATEGY  1  module  according  to  your  needs!
//    However,  doing  that  way  you  will  have  to  re-implement  your  changes  every  time  I
//    release  a  new  update  if  you  want  to  have  those  new  changes  I  made  in  your  script.
//
//    --------------------------------------------------------------------------------------------------------------------
//    Disclaimer:
//        1.  I  am  not  licensed  financial  advisors  or  broker-dealer.  I  do  not  tell  you  when  or  what  to  buy  or  sell.
//              I  developed  this  software  which  enables  you  execute  manual  or  automated  trades  using  TradingView.
//              The  software  allows  you  to  set  the  criteria  you  want  for  entering  and  exiting  trades.
//        2.  Do  not  trade  with  money  you  cannot  afford  to  lose.
//        3.  I  do  not  guarantee  consistent  profits  or  that  anyone  can  make  money  with  no  effort.
//              And  I  am  not  selling  the  holy  grail.
//        4.  Every  system  can  have  winning  and  losing  streaks.
//        5.  Money  management  plays  a  large  role  in  the  results  of  your  trading.  For  example:  lot  size,  account  size,
//              broker  leverage,  and  broker  margin  call  rules  all  affect  on  results.  Also,  your  Take  Profit  and  Stop  Loss
//              settings  for  individual  pair  trades  and  for  overall  account  equity  have  a  major  impact  on  results.
//              If  you  are  new  to  trading  and  do  not  understand  these  items,  then  I  recommend  you  seek  educational  materials
//              to  further  your  knowledge.
//
//    YOU  NEED  TO  FIND  AND  USE  THE  TRADING  SYSTEM  THAT  WORKS  BEST  FOR  YOU  AND  YOUR  TRADING  TOLERANCE.
//    I  HAVE  PROVIDED  NOTHING  MORE  THAN  A  TOOL  WITH  OPTIONS  FOR  YOU  TO  TRADE  WITH  THIS  PROGRAM  ON  TRADINGVIEW.
//
//    I  accept  suggestions  to  improve  the  script!  For  any  change  proposal  to  the  existing  functionality,
//    any  additional  feature  you  have  in  mind,  or  even  reporting  a  defect  (bug)  you  found,  you  should  write  it
//    down  here  docs.google.com/spreadsheets/d/1xwpr2Ut4CmMX6kX9PxflWuvb4mZ6LFKJ1Y6C7LahQ5o/edit?usp=sharing
//    and  let  me  know  by  sending  me  a  private  message  on  TradingView.
//    If  you  encounter  any  problems,  I  will  be  happy  to  share  them  with  me.
//    --------------------------------------------------------------------------------------------------------------------
//#endregion  ===========================================================================================================
//#region  SETUP
//  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
strategy(title  =  'Template  Trailing  Strategy',
                  shorttitle  =  'TTSv47',
                  overlay  =  true,
                  pyramiding  =  0,
                  backtest_fill_limits_assumption  =  1,
                  default_qty_type  =  strategy.percent_of_equity,
                  default_qty_value  =  100,
                  initial_capital  =  100000,
                  slippage  =  3,
                  commission_type  =  strategy.commission.percent,
                  commission_value  =  0.1,
                  close_entries_rule  =  'ANY',
                  max_lines_count  =  500,
                  max_labels_count  =  500)
//#endregion  ===========================================================================================================
//#region  📆  FILTERS
//  ▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//  Description:  Module  responsible  for  filtering  out  long  and  short  open  signals  that  do  not  meet  user  defined  rules
//  Dependencies:  NONE
//  Results:  longFiltersApproval,  shortFiltersApproval
import  jason5480/time_filters/9  as  tif
//  INPUT  ===============================================================================================================
sourceTimezone  =  input.string(defval  =  'Exchange',  title  =  'Timezones  Src->Dst',  options  =  ['Exchange',  'UTC',  'America/Los_Angeles',  'America/Phoenix',  'America/Vancouver',  'America/El_Salvador',  'America/Bogota',  'America/Chicago',  'America/New_York',  'America/Toronto',  'America/Argentina/Buenos_Aires',  'America/Sao_Paulo',  'Etc/UTC',  'Europe/London',  'Europe/Berlin',  'Europe/Madrid',  'Europe/Paris',  'Europe/Warsaw',  'Europe/Athens',  'Europe/Moscow',  'Asia/Tehran',  'Asia/Dubai',  'Asia/Ashkhabad',  'Asia/Kolkata',  'Asia/Almaty',  'Asia/Bangkok',  'Asia/Hong_Kong',  'Asia/Shanghai',  'Asia/Singapore',  'Asia/Taipei',  'Asia/Seoul',  'Asia/Tokyo',  'Australia/ACT',  'Australia/Adelaide',  'Australia/Brisbane',  'Australia/Sydney',  'Pacific/Auckland',  'Pacific/Fakaofo',  'Pacific/Chatham',  'Pacific/Honolulu'],  inline  =  'Timezone',  group  =  '📆  Filters')
destinationTimezone  =  input.string(defval  =  'Exchange',  title  =  '->',  options  =  ['Exchange',  'UTC',  'America/Los_Angeles',  'America/Phoenix',  'America/Vancouver',  'America/El_Salvador',  'America/Bogota',  'America/Chicago',  'America/New_York',  'America/Toronto',  'America/Argentina/Buenos_Aires',  'America/Sao_Paulo',  'Etc/UTC',  'Europe/London',  'Europe/Berlin',  'Europe/Madrid',  'Europe/Paris',  'Europe/Warsaw',  'Europe/Athens',  'Europe/Moscow',  'Asia/Tehran',  'Asia/Dubai',  'Asia/Ashkhabad',  'Asia/Kolkata',  'Asia/Almaty',  'Asia/Bangkok',  'Asia/Hong_Kong',  'Asia/Shanghai',  'Asia/Singapore',  'Asia/Taipei',  'Asia/Seoul',  'Asia/Tokyo',  'Australia/ACT',  'Australia/Adelaide',  'Australia/Brisbane',  'Australia/Sydney',  'Pacific/Auckland',  'Pacific/Fakaofo',  'Pacific/Chatham',  'Pacific/Honolulu'],  tooltip  =  'The  Src  is  the  source  timezone  to  be  used  as  a  reference  for  the  time  settings.  The  Dst  is  the  destination  timezone  to  convert  into  (e.g.  the  charts\'  timezone)',  inline  =  'Timezone',  group  =  '📆  Filters')
var  dateTimeWindow  =  tif.DateTimeWindow.new(
    fromDateTime  =  input.bool(defval  =  true,  title  =  'From',  inline  =  'From  Date',  group  =  '📆  Filters')  ?  input.time(defval  =  timestamp('01  Jan  2022  00:00'),  title  =  '​',  inline  =  'From  Date',  group  =  '📆  Filters')  :  na,
    toDateTime  =  input.bool(defval  =  false,  title  =  'To ',  inline  =  'To  Date',  group  =  '📆  Filters')  ?  input.time(defval  =  timestamp('01  Jan  2023  00:00'),  title='​​',inline='ToDate',group='📆Filters'):na)
varmarketSession=tif.MarketSession.new(
days=input.bool(defval=false,title='SessionDays',inline='SessionDays',group='📆Filters')?tif.SessionDays.new(
mon=input.bool(defval=true,title='Mon',inline='SessionDays',group='📆Filters'),
tue=input.bool(defval=true,title='Tue',inline='SessionDays',group='📆Filters'),
wed=input.bool(defval=true,title='Wed',inline='SessionDays',group='📆Filters'),
thu=input.bool(defval=true,title='Thu',inline='SessionDays',group='📆Filters'),
fri=input.bool(defval=true,title='Fri',inline='SessionDays',group='📆Filters'),
sat=input.bool(defval=false,title='Sat',inline='SessionDays',group='📆Filters'),
sun=input.bool(defval=false,title='Sun',inline='SessionDays',group='📆Filters')):na,
startTime=input.bool(defval=false,title='SessionStart',inline='SessionStart',group='📆Filters')?tif.SessionTime.new(
hourInDay=input.int(defval=12,title='​​​',minval=0,maxval=23,step=1,inline='SessionStart',group='📆Filters'),
minuteInHour=input.int(defval=00,title=':​',minval=0,maxval=59,step=1,tooltip='Starttimeofthesession.',inline='SessionStart',group='📆Filters')):na,
endTime=input.bool(defval=false,title='SessionEnd',inline='SessionEnd',group='📆Filters')?tif.SessionTime.new(
hourInDay=input.int(defval=20,title='​​​​',minval=0,maxval=23,step=1,inline='SessionEnd',group='📆Filters'),
minuteInHour=input.int(defval=00,title=':​​',minval=0,maxval=59,step=1,tooltip='Endtimeofthesession.',inline='SessionEnd',group='📆Filters')):na)
//LOGIC===============================================================================================================
booldateFilterApproval=dateTimeWindow.is_in_range(srcTimezone=sourceTimezone,dstTimezone=destinationTimezone)
boolsessionFilterApproval=marketSession.is_in_range(srcTimezone=sourceTimezone,dstTimezone=destinationTimezone)
booltimeFilterApproval=dateFilterApprovalandsessionFilterApproval
//PLOT================================================================================================================
bgcolor(color=timeFilterApproval?na:color.new(color.gray,90),offset=1,title='TimeWindow')
//#endregion===========================================================================================================
//#region🛤️TRACKPOSITION
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforgeneral-purposevariablethatneededforseveralothermodules
//Dependencies:NONE
//Results:isLongPosition,isShortPosition,isFlatPosition,enteredLongTrade,enteredShortTrade,lastLongEntryBarIndex,lastShortEntryBarIndex,lastLongExitBarIndex,lastShortExitBarIndex,completedLongTrade,completedShortTrade
//LOGIC===============================================================================================================
//numericlimits
varfloatmaxLimitFloat=999999.9
varfloatminLimitFloat=0.0
varintmaxLimitInt=999999
varintminLimitInt=0
//Thecurrentandpreviouspositionsizes
floatcurrentPositionSize=strategy.opentrades.size(strategy.opentrades-1)
boolisLongPosition=currentPositionSize>0
boolisShortPosition=currentPositionSize<0
boolisFlatPosition=currentPositionSize==0
//fixedorderIdnames
varstringlongOrderIdPrefix='Long'
varstringshortOrderIdPrefix='Short'
varstringentryOrderIdPostfix='Entry'
varstringlongOrderIdEntry=str.format('{0}{1}',longOrderIdPrefix,entryOrderIdPostfix)
varstringshortOrderIdEntry=str.format('{0}{1}',shortOrderIdPrefix,entryOrderIdPostfix)
varstringlongOrderIdClose=str.format('Closeentry(s)order{0}',longOrderIdEntry)
varstringshortOrderIdClose=str.format('Closeentry(s)order{0}',shortOrderIdEntry)
varstringexitOrderIdPattern1='{0}TakeProfit{1,number,integer}/StopLoss/LimitExit'
varstringexitOrderIdPattern2='{0}StopLoss/LimitExit'
//lastexithelperfunctions
closedTradesExitId(intn)=>
strategy.closedtrades.exit_id(strategy.closedtrades-n)
closedTradeExitIdContains(simplestringprefix,intn=1)=>
strategy.closedtrades>=n?str.contains(closedTradesExitId(n),prefix):false
closedTradeExitIdIs(simplestringexitId,intn=1)=>
strategy.closedtrades>=n?closedTradesExitId(n)==exitId:false
closedTradesExitBarIndex(intn)=>
strategy.closedtrades.exit_bar_index(strategy.closedtrades-n)
closedTradesExitPrice(intn)=>
strategy.closedtrades.exit_price(strategy.closedtrades-n)
lastTwoClosedTradesExitedInTheSameBar()=>
strategy.closedtrades>=2?closedTradesExitBarIndex(2)==closedTradesExitBarIndex(1):false
openTradeEntryIdStartsWith(simplestringprefix,intn=1)=>
str.startswith(strategy.opentrades.entry_id(strategy.opentrades-n),prefix)
//lastexitbaridandprice
varintlastLongExitBarIndex=na
varfloatlastLongExitPrice=na
if((closedTradeExitIdContains(longOrderIdPrefix)orclosedTradeExitIdIs(shortOrderIdEntry))andnotisLongPosition)
lastLongExitBarIndex:=closedTradesExitBarIndex(1)
lastLongExitPrice:=closedTradesExitPrice(1)
elseif((closedTradeExitIdContains(longOrderIdPrefix,2)orclosedTradeExitIdIs(shortOrderIdEntry,2))andlastTwoClosedTradesExitedInTheSameBar()andnotisLongPosition)
lastLongExitBarIndex:=closedTradesExitBarIndex(2)
lastLongExitPrice:=closedTradesExitPrice(2)
varintlastShortExitBarIndex=na
varfloatlastShortExitPrice=na
if((closedTradeExitIdContains(shortOrderIdPrefix)orclosedTradeExitIdIs(longOrderIdEntry))andnotisShortPosition)
lastShortExitBarIndex:=closedTradesExitBarIndex(1)
lastShortExitPrice:=closedTradesExitPrice(1)
elseif((closedTradeExitIdContains(shortOrderIdPrefix,2)orclosedTradeExitIdIs(longOrderIdEntry,2))andlastTwoClosedTradesExitedInTheSameBar()andnotisShortPosition)
lastShortExitBarIndex:=closedTradesExitBarIndex(2)
lastShortExitPrice:=closedTradesExitPrice(2)
//flagsthataretruewhenalreadyenteredalongorshorttrade
boolenteredLongTrade=strategy.opentrades>0?bar_index==strategy.opentrades.entry_bar_index(strategy.opentrades-1)andopenTradeEntryIdStartsWith(longOrderIdPrefix):false
boolenteredShortTrade=strategy.opentrades>0?bar_index==strategy.opentrades.entry_bar_index(strategy.opentrades-1)andopenTradeEntryIdStartsWith(shortOrderIdPrefix):false
//flagsthataretruewhencompletedalongorshorttrade
boolcompletedLongTrade=strategy.closedtrades>0?bar_index==lastLongExitBarIndex:false
boolcompletedShortTrade=strategy.closedtrades>0?bar_index==lastShortExitBarIndex:false
//#endregion===========================================================================================================
//#region🛠️STRATEGY1
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsiblefortheopenpositionlogic.Thisisimplementedbasedondealconditionsdefinedinternally(inthisscript)orexternaly(basedonconditionsthattakeasinputotherindicator)
//Dependencies:FILTERS,TRACKPOSITION
//Results:commissionRatio,openLongPosition,openShortPosition,cnlOpenLongPosition,cnlOpenShortPosition,endLongDeal,endShortDeal,cnlEndLongDeal,cnlEndShortDeal,validOpenLongPosition,validOpenShortPosition,validOpenPosition
importjason5480/external_input_utils/6asexiu
importHeWhoMustNotBeNamed/ta/1aseta
//INPUT===============================================================================================================
showOpenLabels=input.bool(defval=true,title='​​​​​',inline='Open',group='🛠️Strategy')
longOpenColor=input.color(defval=color.new(#2962FF,0),title='🎨️OpenColorLong/Short    ',inline='Open',group='🛠️Strategy')
shortOpenColor=input.color(defval=color.new(#FF1744,0),title='​​​​​​',tooltip='Thecoloroftheopenlong/shortlabels.',inline='Open',group='🛠️Strategy')
showCnlOpenLabels=input.bool(defval=true,title='​​​​​​​',inline='CancelOpen',group='🛠️Strategy')
longCnlOpenColor=input.color(defval=color.new(#3179F5,0),title='🎨️CancelOpenColorLong/Short ',inline='CancelOpen',group='🛠️Strategy')
shortCnlOpenColor=input.color(defval=color.new(#F7525F,0),title='​​​​​​​​',tooltip='Thecolorofthecancelopenlong/shortlabels.',inline='CancelOpen',group='🛠️Strategy')
showCloseLabels=input.bool(defval=true,title='​​​​​​​​​',inline='Close',group='🛠️Strategy')
longCloseColor=input.color(defval=color.new(#D500F9,0),title='🎨️CloseColorLong/Short    ',inline='Close',group='🛠️Strategy')
shortCloseColor=input.color(defval=color.new(#D500F9,0),title='​​​​​​​​​​',tooltip='Thecolorofthecloselong/shortlabels.',inline='Close',group='🛠️Strategy')
showCnlCloseLabels=input.bool(defval=true,title='​​​​​​​​​​​',inline='CancelClose',group='🛠️Strategy')
longCnlCloseColor=input.color(defval=color.new(#AB47BC,0),title='🎨️CancelCloseColorLong/Short ',inline='CancelClose',group='🛠️Strategy')
shortCnlCloseColor=input.color(defval=color.new(#AB47BC,0),title='​​​​​​​​​​​​',tooltip='Thecolorofthecancelcloselong/shortlabels.',inline='CancelClose',group='🛠️Strategy')
commissionRatio=input.float(defval=0.1,title='Commission%🛈➡',minval=0.0,maxval=100.0,step=0.05,tooltip='Feespaidforeachtransactionentry,exit,takeprofitandstoploss(percentagewise).INFORMATION!Thisvalueshouldmatchthecommissionvalueinthe"Settings/Properties"tabandthecommissiontypeshouldbesetto"%"foraccurateresults.',group='🛠️Strategy')/100.0
dealMode=input.string(defval='🔧Internal',title='DealConditionsMode',options=['🔨External','🔧Internal'],tooltip='Usethe"Internal"MAcrossover/underlogictostartandendyourdeals.Orusean"External"indicatortoconstructyourownstartandenddealconditions.',group='🛠️Strategy')
reverseOrdersEnabled=input.bool(defval=true,title='ReverseOrders',tooltip='Enablereverseorders.Ifyouarealreadyinapositionwhenanewstartdealconditionismetanditispointingouttotheotherdirectionthen,ifthissettingisenabled,anentrysignaltotheoppositedirectionwillbeemittedcausingtheexistingpositiontoexitwithamarketorderandanewentrywillbeplacedtothedirectionofthesignalaccordingtothe"OrderType"thatisdefinedintheENTRYsection.Ifthissettingisdisabled,thestartdealconditionwillbeignoredandanewstartdealconditionwillbeneededwhenyouarenotinaposition.',group='🛠️Strategy')
cooldownEnabled=input.bool(defval=false,title='Cooldown#ofbars   ',inline='Cooldown',group='🛠️Strategy')
cooldownBars=input.int(defval=7,title='​​​​​​​​​​​​​',minval=1,tooltip='DoNOTemitopenpositionsignalifnomorethanthegivennumberofbarshavepassedsincethepreviouspositionexit.Anewstartdealconditionhastobemetafterthatperiodtoopenanewposition.',inline='Cooldown',group='🛠️Strategy')
externalInput=input.source(defval=close,title='ExternalInput🛈➡',tooltip='Selectinputfromanexternalindicator.INFORMATION!Theindicatorshouldbeaddedtothesamechartwiththisstrategyandthedesiredvaluethatwilltakepartintheconditionsbelowshouldbeplottedinthechart.',group='🔨Strategy-External')
startLongDealOperator=input.string(defval='/10==',title='StartLongDealwheninput   ',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2==','mod3==','mod10==','mod100==','/10==','noop'],inline='StartLongDeal',group='🔨Strategy-External')
startLongDealValue=input.float(defval=2.0,title='​​​​​​​​​​​​​​',tooltip='ConditiontostartaLongDealbasedonexternalinput.',inline='StartLongDeal',group='🔨Strategy-External')
endLongDealOperator=input.string(defval='/10==',title='EndLongDealwheninput    ',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2==','mod3==','mod10==','mod100==','/10==','noop'],inline='EndLongDeal',group='🔨Strategy-External')
endLongDealValue=input.float(defval=1.0,title='​​​​​​​​​​​​​​​',tooltip='ConditiontoendaLongDealbasedonexternalinput.',inline='EndLongDeal',group='🔨Strategy-External')
cnlStartLongDealOperator=input.string(defval='/10==',title='CancelStartLongDealwheninput',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2==','mod3==','mod10==','mod100==','/10==','noop'],inline='CnlStartLongDeal',group='🔨Strategy-External')
cnlStartLongDealValue=input.float(defval=4.0,title='​​​​​​​​​​​​​​​​',tooltip='ConditiontocancelthestartLongDealifnotalreadyenteredthepositionbasedonexternalinput.',inline='CnlStartLongDeal',group='🔨Strategy-External')
cnlEndLongDealOperator=input.string(defval='/10==',title='CancelEndLongDealwheninput ',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2==','mod3==','mod10==','mod100==','/10==','noop'],inline='CnlEndLongDeal',group='🔨Strategy-External')
cnlEndLongDealValue=input.float(defval=3.0,title='​​​​​​​​​​​​​​​​​',tooltip='ConditiontocanceltheendLongDealifnotalreadyexitedthepositionbasedonexternalinput.',inline='CnlEndLongDeal',group='🔨Strategy-External')
startShortDealOperator=input.string(defval='mod10==',title='StartShortDealwheninput   ',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2==','mod3==','mod10==','mod100==','/10==','noop'],inline='StartShortDeal',group='🔨Strategy-External')
startShortDealValue=input.float(defval=2.0,title='​​​​​​​​​​​​​​​​​​',tooltip='ConditiontostartaShortDealbasedonexternalinput.',inline='StartShortDeal',group='🔨Strategy-External')
endShortDealOperator=input.string(defval='mod10==',title='EndShortDealwheninput    ',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2==','mod3==','mod10==','mod100==','/10==','noop'],inline='EndShortDeal',group='🔨Strategy-External')
endShortDealValue=input.float(defval=1.0,title='​​​​​​​​​​​​​​​​​​​',tooltip='ConditiontoendaShortDealbasedonexternalinput.',inline='EndShortDeal',group='🔨Strategy-External')
cnlStartShortDealOperator=input.string(defval='mod10==',title='CancelStartShortDealwheninput',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2==','mod3==','mod10==','mod100==','/10==','noop'],inline='CnlStartShortDeal',group='🔨Strategy-External')
cnlStartShortDealValue=input.float(defval=4.0,title='​​​​​​​​​​​​​​​​​​​​',tooltip='ConditiontocancelthestartShortDealifnotalreadyenteredthepositionbasedonexternalinput.',inline='CnlStartShortDeal',group='🔨Strategy-External')
cnlEndShortDealOperator=input.string(defval='mod10==',title='CancelEndShortDealwheninput ',options=['==','<','>','<=','>=','!=','crossover','crossunder','mod2==','mod3==','mod10==','mod100==','/10==','noop'],inline='CnlEndShortDeal',group='🔨Strategy-External')
cnlEndShortDealValue=input.float(defval=3.0,title='​​​​​​​​​​​​​​​​​​​​​',tooltip='ConditiontocanceltheendShortDealifnotalreadyexitedthepositionbasedonexternalinput.',inline='CnlEndShortDeal',group='🔨Strategy-External')
longDealsEnabled=input.bool(defval=true,title='LongDeals',inline='Long/ShortDeals',group='🔧Strategy-Internal')
shortDealsEnabled=input.bool(defval=true,title='ShortDeals',tooltip='Enablelong/shortstart/end/canceldeals.Anopensignalwillbeemittedwhenthelong/shortstartdealconditionsaremet.Ifthisoptionisuncheckedyouwillnotenterintolong/shortpositions.',inline='Long/ShortDeals',group='🔧Strategy-Internal')
endDealsEnabled=input.bool(defval=false,title='EndDeals',tooltip='Enableenddeals.Aclosesignalwillbeemittedwhentheenddealconditionsaremet.Ifthisoptionisuncheckedyouwillnotexityourexistingpositionbasedonthestrategylogic.Youwillexitonlywhenthestoplossorthetakeprofittargetsarereached.',group='🔧Strategy-Internal')
cnlStartDealsEnabled=input.bool(defval=true,title='CancelStartDeals',inline='Start/EndDeals',group='🔧Strategy-Internal')
cnlEndDealsEnabled=input.bool(defval=true,title='CancelEndDeals',tooltip='Enablecancelstart/enddeals.Acancelstart/closesignalwillbeemittedwhenthecancelstart/enddealconditionsaremet.Ifthisoptionisuncheckedyouwillnotcancelyourentry/exitorderbasedonthestrategylogicwhenuselimit,stoporstop-limitorders.',inline='Start/EndDeals',group='🔧Strategy-Internal')
emaFilterEnabled=input.bool(defval=true,title='EMAFilter',tooltip='Enablelong/shorttradesbasedonEMA.',group='🔧Strategy-Internal')
emaTimeframe=input.timeframe(defval='',title='  EMARes/Len/Src',inline='EMAFilter',group='🔧Strategy-Internal')
emaLength=input.int(defval=200,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=1,inline='EMAFilter',group='🔧Strategy-Internal')
emaSrc=exiu.str_to_src(input.string(defval='close',title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',options=['open','high','low','close','hl2','hlc3','ohlc4','hlcc4'],tooltip='Thetimeframe,periodandsourcefortheEMAcalculation.',inline='EMAFilter',group='🔧Strategy-Internal'))
emaAtrBandEnabled=input.bool(defval=true,title='EMAATRBand',tooltip='EnableATRbandforEMAfilter.',group='🔧Strategy-Internal')
filterAtrMul=input.float(defval=1.0,title='  EMAATRMul/Len',minval=0.1,step=0.1,inline='EMAATR',group='🔧Strategy-Internal')
filterAtrLength=input.int(defval=5,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=1,tooltip='ATRmultiplierandlengthtobeusedfortheATRcalculationthatwillbeaddedontopoftheEMAfilter.',inline='EMAATR',group='🔧Strategy-Internal')
adxFilterEnabled=input.bool(defval=false,title='ADXFilter',tooltip='Enablelong/shorttradesbasedonADX.',group='🔧Strategy-Internal')
adxSmoothing=input.int(defval=14,title='  Smooth/DILen',minval=1,inline='ADXFilter',group='🔧Strategy-Internal')
diLength=input.int(defval=14,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=1,tooltip='ADXSmoothinglengthandDirectionLength.',inline='ADXFilter',group='🔧Strategy-Internal')
adxThreshold=input.float(defval=20.0,title='  Threshold',minval=0.1,maxval=100.0,step=5.0,tooltip='ADXlowerthreshold.',group='🔧Strategy-Internal')
fastMAType=str.lower(input.string(defval='SMA',title='FastMAType/Len',options=['SMA','EMA','RMA','WMA','HMA','VWMA','SWMA','LINREG','MEDIAN'],inline='FastMA',group='🔧Strategy-Internal'))
fastMALen=input.int(defval=21,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=1,tooltip='ThetypeandthelengthofthefastMA.',inline='FastMA',group='🔧Strategy-Internal')
slowMAType=str.lower(input.string(defval='SMA',title='SlowMAType/Len',options=['SMA','EMA','RMA','WMA','HMA','VWMA','SWMA','LINREG','MEDIAN'],inline='SlowMA',group='🔧Strategy-Internal'))
slowMALen=input.int(defval=49,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=1,tooltip='ThetypeandthelengthoftheslowMA.',inline='SlowMA',group='🔧Strategy-Internal')//Lastemptytitle56
//LOGIC===============================================================================================================
varboolstartLongDealInternal=false
varboolstartShortDealInternal=false
varboolendLongDealInternal=false
varboolendShortDealInternal=false
varboolcnlStartLongDealInternal=false
varboolcnlStartShortDealInternal=false
varboolcnlEndLongDealInternal=false
varboolcnlEndShortDealInternal=false
varfloatfastMA=na
varfloatslowMA=na
varfloatemaUpperBand=na
varfloatemaLowerBand=na
floatemaLine=dealMode=='🔧Internal'andemaFilterEnabled?request.security(symbol=syminfo.tickerid,timeframe=emaTimeframe,expression=ta.ema(emaSrc,emaLength)[1]):na
if(dealMode=='🔧Internal')
//TheEMAfilter
varboolemaLongApproval=true
varboolemaShortApproval=true
if(emaFilterEnabled)
floatemaAtr=ta.atr(filterAtrLength)
emaUpperBand:=emaLine+filterAtrMul*emaAtr
emaLowerBand:=emaLine-filterAtrMul*emaAtr
floatemaLongLine=emaAtrBandEnabled?emaUpperBand:emaLine
floatemaShortLine=emaAtrBandEnabled?emaLowerBand:emaLine
emaLongApproval:=close>emaLongLineandopen>emaLongLine
emaShortApproval:=close<emaShortLineandopen<emaShortLine

//TheADXfilter
[_,_,adx]=ta.dmi(diLength,adxSmoothing)
booladxApproval=adxFilterEnabled?adx>adxThreshold:true

//Theoverallfilterapprovalsforeachdirection
boollongFiltersApproval=emaLongApprovalandadxApproval
boolshortFiltersApproval=emaShortApprovalandadxApproval

//Thefastandslowmovingaverages
fastMA:=eta.ma(close,fastMAType,fastMALen)
slowMA:=eta.ma(close,slowMAType,slowMALen)

//Thenmainlogicforstartingandendingdealsisbasedoncrossover/crossunderconditions
boolcrossover=exiu.eval_cond(fastMA,'crossover',slowMA)
boolcrossunder=exiu.eval_cond(fastMA,'crossunder',slowMA)

//Theinternalstartendcancelsignals.Thoseshouldmatchwiththe"TwoMASignalIndicator"dealconditions
startLongDealInternal:=longDealsEnabled?crossoverandlongFiltersApproval:false
startShortDealInternal:=shortDealsEnabled?crossunderandshortFiltersApproval:false
endLongDealInternal:=endDealsEnabledandlongDealsEnabled?crossunder:false
endShortDealInternal:=endDealsEnabledandshortDealsEnabled?crossover:false
cnlStartLongDealInternal:=cnlStartDealsEnabledandlongDealsEnabled?notlongFiltersApprovalandlongFiltersApproval[1]:false
cnlStartShortDealInternal:=cnlStartDealsEnabledandshortDealsEnabled?notshortFiltersApprovalandshortFiltersApproval[1]:false
cnlEndLongDealInternal:=cnlEndDealsEnabledandendDealsEnabledandlongDealsEnabled?longFiltersApprovalandnotlongFiltersApproval[1]:false
cnlEndShortDealInternal:=cnlEndDealsEnabledandendDealsEnabledandshortDealsEnabled?shortFiltersApprovalandnotshortFiltersApproval[1]:false
//Startdealsshouldhappenwhenthemainlogicappliesandthefiltersforthatdirectionareapproved
boolstartLongDeal=dealMode=='🔧Internal'?startLongDealInternal:exiu.eval_cond(externalInput,startLongDealOperator,startLongDealValue)
boolstartShortDeal=dealMode=='🔧Internal'?startShortDealInternal:exiu.eval_cond(externalInput,startShortDealOperator,startShortDealValue)
//Enddealsshouldhappenwhenthemainlogicapplies
boolendLongDeal=dealMode=='🔧Internal'?endLongDealInternal:exiu.eval_cond(externalInput,endLongDealOperator,endLongDealValue)
boolendShortDeal=dealMode=='🔧Internal'?endShortDealInternal:exiu.eval_cond(externalInput,endShortDealOperator,endShortDealValue)
//Ifyouusinglimit,stoporstop-limitordersfortheentryandnotenteredyetyoumaywanttocanceliftheconditionsarenotstillfavorabletotheinitialdirection
boolcnlStartLongDeal=dealMode=='🔧Internal'?cnlStartLongDealInternal:exiu.eval_cond(externalInput,cnlStartLongDealOperator,cnlStartLongDealValue)
boolcnlStartShortDeal=dealMode=='🔧Internal'?cnlStartShortDealInternal:exiu.eval_cond(externalInput,cnlStartShortDealOperator,cnlStartShortDealValue)
//Ifyouusinglimit,stoporstop-limitordersforexitandnotexitedyetyoumaywanttocanceliftheconditionsturnedfavorableagaintotheinitialdirection
boolcnlEndLongDeal=dealMode=='🔧Internal'?cnlEndLongDealInternal:exiu.eval_cond(externalInput,cnlEndLongDealOperator,cnlEndLongDealValue)
boolcnlEndShortDeal=dealMode=='🔧Internal'?cnlEndShortDealInternal:exiu.eval_cond(externalInput,cnlEndShortDealOperator,cnlEndShortDealValue)
//Checkifthereisnocurrentpositionandthereverseordersareenabled
boolreverseOrderApproval=reverseOrdersEnabled?true:isFlatPosition
//Checkthebarssincelasttradecompletionwiththegivennumberofcooldownbars
intbarsSinceCompletedLong=nz(ta.barssince(completedLongTrade),maxLimitInt)
intbarsSinceCompletedShort=nz(ta.barssince(completedShortTrade),maxLimitInt)
boolcooldownApproval=cooldownEnabled?math.min(barsSinceCompletedLong,barsSinceCompletedShort)>=cooldownBars:true
//Opennewpositionifallconditionsaremet
boolopenLongPosition=timeFilterApprovalandstartLongDealandcooldownApprovalandreverseOrderApproval
boolopenShortPosition=timeFilterApprovalandstartShortDealandcooldownApprovalandreverseOrderApproval
//Ifthereisanewenddealconditionthiswillalsocancelthepreviousstartdeal(ifposible)
boolcnlOpenLongPosition=(timeFilterApprovalandcnlStartLongDeal)or(nottimeFilterApprovalandtimeFilterApproval[1])
boolcnlOpenShortPosition=(timeFilterApprovalandcnlStartShortDeal)or(nottimeFilterApprovalandtimeFilterApproval[1])
//Theopensignalswhennotalreadyintoaposition
boolvalidOpenLongPosition=openLongPositionandnotisLongPosition
boolvalidOpenShortPosition=openShortPositionandnotisShortPosition
boolvalidOpenPosition=validOpenLongPositionorvalidOpenShortPosition
//PLOT================================================================================================================
plot(series=externalInput,title='ExternalInput',color=color.olive,display=dealMode=='🔨External'?display.data_window:display.none)
varcoloremaLineColor=color.new(color.silver,0)
plot(series=emaLine,color=emaLineColor,style=plot.style_linebr,linewidth=2,title='EMALine',display=dealMode=='🔧Internal'andemaFilterEnabled?display.all-display.status_line:display.none)
varcoloremaBandFillColor=dealMode=='🔧Internal'andemaFilterEnabledandemaAtrBandEnabled?color.new(emaLineColor,90):na
emaUpperBandPlot=plot(series=emaUpperBand,color=emaBandFillColor,style=plot.style_linebr,title='EMAUpperBand',display=display.data_window)
emaLowerBandPlot=plot(series=emaLowerBand,color=emaBandFillColor,style=plot.style_linebr,title='EMALowerBand',display=display.data_window)
fill(plot1=emaUpperBandPlot,plot2=emaLowerBandPlot,color=emaBandFillColor,title='EMABand')
varcolorfastColor=color.new(color.yellow,0)
plot(series=fastMA,title='FastMA',color=fastColor,linewidth=1,style=plot.style_line,display=dealMode=='🔧Internal'?display.all-display.status_line:display.none)
varcolorslowColor=color.new(color.orange,0)
plot(series=slowMA,title='SlowMA',color=slowColor,linewidth=1,style=plot.style_line,display=dealMode=='🔧Internal'?display.all-display.status_line:display.none)
//#endregion===========================================================================================================
//#region🎢VOLATILITY
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforgeneralpurposevolatilityvariablethatneededforseveralothermodules
//Dependencies:NONE
//Results:negAtr,posAtr,negStDev,posStDev
importHeWhoMustNotBeNamed/arraymethods/1 asarraymethods
importHeWhoMustNotBeNamed/arrayutils/22aspa
//INPUT===============================================================================================================
atrMethod=input.string(defval='STATIC',title='ATRMethod',options=['STATIC','DYNAMIC','LADDER'],tooltip='ThemethodtocalculatetheATRusedforthetrailing.UsetheATRvalueatthetimeofopensignalthroughoutthewholetrade(STATIC),orusethecurrentATRvalue(DYNAMIC),ortheATRonlyofthegreen/redbarswhentrytoenter/exitthetrade(LADDER).',group='🎢Volatility')
atrMaType=str.lower(input.string(defval='RMA',title='  ATRSmoothType/Len   ',options=['SMA','EMA','RMA','WMA','HMA'],inline='ATR',group='🎢Volatility'))
atrLength=input.int(defval=14,title='​​​​​​​​​​​​​​​​​​​​​​',minval=1,tooltip='ThesmoothingtypeandthelengthtobeusedfortheATRcalculation.',inline='ATR',group='🎢Volatility')
stdevMethod=input.string(defval='STATIC',title='StDevMethod',options=['STATIC','DYNAMIC','LADDER'],tooltip='Themethodtocalculatethestandarddeviationusedforthetrailing.UsetheStDevvalueatthetimeofopensignalthroughoutthewholetrade(STATIC),orusethecurrentStDevvalue(DYNAMIC),ortheStDevonlyofthegreen/redbarswhentrytoenter/exitthetrade(LADDER).',group='🎢Volatility')
stdevMode=input.string(defval='PRICE',title='  StDevMode',options=['PRICE','RETURN'],tooltip='Usethe"PRICE"assourceforthestandarddeviationcalculations.Oruse"RETURN"tousethelogreturnsofthepriceassourceforthestandarddeviation.',group='🎢Volatility')
stdevPriceSrc=exiu.str_to_src(input.string(defval='close',title='  StDevSrc/Len      ​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',options=['open','high','low','close','hl2','hlc3','ohlc4','hlcc4'],inline='StDev',group='🎢Volatility'))
stdevLength=input.int(defval=20,title='​​​​​​​​​​​​​​​​​​​​​​​',minval=1,tooltip='ThesourceandthelengthtobeusedfortheStDevcalculation.',inline='StDev',group='🎢Volatility')
//LOGIC===============================================================================================================
//CalculateatrandStDevbasedonmethodselected,staticatrwhenlastopensignalwasemitted,dynamicisthecurrentatr/stdevthatchangeovertime,ladderatr/stdevforpositiveandnegativebars
varfloat[]positiveTrs=array.new<float>()
varfloat[]negativeTrs=array.new<float>()
varfloat[]positiveStDevs=array.new<float>()
varfloat[]negativeStDevs=array.new<float>()
if(atrMethod=='LADDER')
if(close>open)
positiveTrs.push(ta.tr(true),atrLength)
else
negativeTrs.push(ta.tr(true),atrLength)
if(stdevMethod=='LADDER')
floatstdevSrc=stdevMode=='PRICE'?stdevPriceSrc:math.log(stdevPriceSrc/stdevPriceSrc[1])
if(close>open)
positiveStDevs.push(stdevSrc,stdevLength)
else
negativeStDevs.push(stdevSrc,stdevLength)
floatdynamicAtr=eta.ma(ta.tr(true),atrMaType,atrLength)
floatstaticAtr=ta.valuewhen(validOpenPosition,dynamicAtr,0)
floatdynamicStDev=ta.stdev(stdevPriceSrc,stdevLength)
floatstaticStDev=ta.valuewhen(validOpenPosition,dynamicStDev,0)
floatnegAtr=switchatrMethod
'STATIC'=>staticAtr
'DYNAMIC'=>dynamicAtr
'LADDER'=>pa.ma(negativeTrs,atrMaType,atrLength)
=>na
floatposAtr=switchatrMethod
'STATIC'=>staticAtr
'DYNAMIC'=>dynamicAtr
'LADDER'=>pa.ma(positiveTrs,atrMaType,atrLength)
=>na
floatnegStDev=switchstdevMethod
'STATIC'=>staticStDev
'DYNAMIC'=>dynamicStDev
'LADDER'=>stdevMode=='PRICE'?negativeStDevs.stdev(false):stdevPriceSrc*(math.exp(negativeStDevs.stdev(false))-1.0)
=>na
floatposStDev=switchstdevMethod
'STATIC'=>staticStDev
'DYNAMIC'=>dynamicStDev
'LADDER'=>stdevMode=='PRICE'?positiveStDevs.stdev(false):stdevPriceSrc*(math.exp(positiveStDevs.stdev(false))-1.0)
=>na
//#endregion===========================================================================================================
//#region📏DISTANCE
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforgeneralpurposedistancecalculationsusedbyothermodules
//Dependencies:NONE
//Results:NONE
importjason5480/distance_ratio/11asdr
importjason5480/biased_price_target/2 asbiased_price_target
//LOGIC===============================================================================================================
getUpwardsMovingBarrierPrice(simplestringbarrier)=>
barrier=='FRONT'?high:low
getDownwardsMovingBarrierPrice(simplestringbarrier)=>
barrier=='FRONT'?low:high
longBiasedAuxData=dr.AuxData.new(atr=posAtr,stdev=posStDev)
shortBiasedAuxData=dr.AuxData.new(atr=negAtr,stdev=negStDev)
//#endregion===========================================================================================================
//#region🔷ENTRY
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsiblefortheentrylogicimplementationbasedonordertype
//Dependencies:TRACKPOSITION,STRATEGY1,VOLATILITY,DISTANCE
//Results:longIsActive,validCnlOpenLongPosition,longLimitOrStopEntryIsActive,shortIsActive,validCnlOpenShortPosition,shortLimitOrStopEntryIsActive,longEntryPrice,shortEntryPrice
//INPUT===============================================================================================================
longEntryColor=input.color(defval=color.new(#2962FF,0),title='🎨️EntryColorLong/Short ',inline='Entry',group='🔷Entry')
shortEntryColor=input.color(defval=color.new(#FF1744,0),title='​​​​​​​​​​​​​​​​​​​​​​​​',tooltip='Thecolorofthelong/shortlimit,stopandstop-limitentryprices.',inline='Entry',group='🔷Entry')
posColor=input.color(defval=color.new(color.gray,0),title='🎨️PositionEntryPriceColor',tooltip='Thecolorofthepositionentryprice.',group='🔷Entry')
entryOrderType=input.string(defval='MARKET',title='OrderType​',options=['MARKET','LIMIT','STOP','STOP-LIMIT'],tooltip='Usemarketordertoenterattheopenofthenextbar(MARKET),oruselimitordertoenterata"better"pricedefinedbythedistancefromtheclosepriceandthelimitmode(LIMIT),orusestopmarketordertoenterata"worst"pricedefinedbythedistancefromtheclosepriceandthelimitmode(STOP),orusestop-limitordertoenterata"worst"pricedefinedbythedistancefromtheclosepriceandthelimitmode(STOP-LIMIT).',group='🔷Entry')
entryStopLimitMarginMethod=input.string(defval='ATR',title='  Stop-LimitMarMethod',options=['ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethemarginusedfortheentrystop-limitorders.OffsetthelimitpricetargetbyamultipleoftheATRvalue(ATR),orbyamultipleoftheStDevvalue(STDEV),orbyanumberofticks(TICKS)',group='🔷Entry')
entryStopLimitMarMul=input.float(defval=0.5,title='  Stop-LimitMarMul',step=0.1,tooltip='Theacceptablemarginfortheentrystop-limitordersisdefinedbythismultiplieranditisappliedeitheraspercentageoratrmultiplierorticks,basedonthe"Stop-LimitMarginMethod".',group='🔷Entry')
entryLimitMode=input.string(defval='FIXED',title='LimitMode​',options=['FIXED','TRAIL'],tooltip='Whenyouuselimit,stoporstop-limitorderstoenter,useafixedpricedefinedbythedistanceandtheclosepricewhentheopensignaloccurs(FIXED),ortrailbyfollowingthepricetothedirectionoftheentryforlimitordersortheotherdirectionoftheentryforstopandstop-limitorders(TRAIL).',group='🔷Entry')
entryTrailBarrier=input.string(defval='FRONT',title='  TrailBarrier​​',options=['FRONT','REAR'],tooltip='Thepricereferencethatwillbeusedfortheentrytrailinglogic.ForenteringintoapositionwithaLIMITorder,followthehighforlongandlowforshort(FRONT),orfollowthelowforlongandhighforshort(REAR).FortheSTOPandSTOP-LIMITordersthelogicisreversed.',group='🔷Entry')
varentryDistSettings=dr.DistSettings.new(
distMethod=input.string(defval='ATR',title='DistanceMethod​',options=['PERC','ATR','STDEV','TICKS','HHLL'],tooltip='Themethodtocalculatethedistanceofthelimit,stopandstop-limitentry.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV),Tickbased(TICKS)orHighesthigh/Lowestlow(HHLL).',group='🔷Entry'),
distMul=input.float(defval=1.0,title='  DistMul|Len​',minval=0.01,step=0.05,tooltip='Thedistancemultiplierorlengthtodefinetheentrypricefromclosewhentheopensignaloccursorfromthebarrierpricewhentrailing.Themultiplierwillbeappliedtotheunitpricethatisdefinedbythedistancemethodthatisused.IftheHHLLmethodisused,thenthelengthwilldefinethewindowforthehighesthighandlowestlowcalculations.',group='🔷Entry'))
varentryMarSettings=dr.DistSettings.new(
distMethod=input.string(defval='TICKS',title='MarginDistanceMethod​',options=['PERC','ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethemargintooffsetthedistanceofthelimit,stopandstop-limitentrypricetarget.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV)orTickbased(TICKS).',group='🔷Entry'),
distMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​',inline='DistanceEntryMargin',group='🔷Entry')?
input.float(defval=5.0,title='MarDistMul       ​',step=0.5,tooltip='Themarginmultipliertodefinetheentrydistanceoffset.',inline='DistanceEntryMargin',group='🔷Entry'):na)
varentryRestrictSettings=dr.RestrictSettings.new(
restrDistMethod=input.string(defval='PERC',title='RestrictDistanceMethod​',options=['PERC','ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethemaximum/minimumdistanceoftheentryprice.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV)orTickbased(TICKS).',group='🔷Entry'),
minDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='EntryMinDistance',group='🔷Entry')?
input.float(defval=1.0,title='MinDistMul       ​',minval=0.0,step=0.05,tooltip='Enableaminimumdistancedefinedbythismultiplierandtherestrictdistancemethod.Thiscanbeusedtomakesurethattheentrywillnotbeplacedtooclosefromthereferenceprice.Otherwise,atightentrypricewouldmaketheentrytoeasilybereachedduringvolatilemarketconditions.',inline='EntryMinDistance',group='🔷Entry'):na,
maxDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='EntryMaxDistance',group='🔷Entry')?
input.float(defval=4.0,title='MaxDistMul       ​',minval=0.0,step=0.05,tooltip='Enableamaximumdistancedefinedbythismultiplierandtherestrictdistancemethod.Thiscanbeusedtomakesurethattheentrywillnotbeplacedtoofarfromthereferenceprice.Otherwise,alooseentrypricewouldrisktonotbereachedinatimelymanner.',inline='EntryMaxDistance',group='🔷Entry'):na)
treatCloseAsCancel=input.bool(defval=false,title='TreatCloseasCancel',tooltip='Ifenabledtheinvalidclosepositionsignalswillbetreatedascancelopensignalstocancellimit,stopandstop-limitentryorders.',group='🔷Entry')
//LOGIC===============================================================================================================
//Markwhenlongpositionisactive
boollongIsActive=validOpenLongPositionorisLongPosition
//Thelongcancelopensignal
varboolvalidCnlOpenLongPosition=false
//Counthowfararethelastlongvalidcancelopen,open,entryandvalidopensignals
intbarsSinceValidOpenLong=nz(ta.barssince(validOpenLongPosition),maxLimitInt)
intbarsSinceValidCnlOpenLong=nz(ta.barssince(validCnlOpenLongPosition),maxLimitInt)
intbarsSinceEnteredLong=nz(ta.barssince(enteredLongTrade),maxLimitInt)
boolopenLongIsActive=barsSinceValidCnlOpenLong>barsSinceValidOpenLong//validCancelOpen->validOpen
boolenterLongIsPending=barsSinceEnteredLong>=barsSinceValidOpenLong//entered->validOpen
//Validatethelongcancelopensignalwhennotalreadyintoaposition
validCnlOpenLongPosition:=entryOrderType!='MARKET'?(cnlOpenLongPositionorvalidOpenShortPositionor(treatCloseAsCancel?timeFilterApprovalandendLongDeal:false))andnotisLongPositionandopenLongIsActiveandenterLongIsPendingandnotvalidOpenLongPosition:false
floatentryHighestHigh=ta.highest(high,math.max(math.floor(entryDistSettings.distMul),1))
//Calculatetheactualentrypricefromthereferenceusingalongbiaseddistancewithadownwardsmovingpotential
getLongEntryHigherPrice(floatreferencePrice)=>
entryDistSettings.higher_long_biased_price(referencePrice,longBiasedAuxData,entryRestrictSettings,entryMarSettings,entryHighestHigh)
floatentryLowestLow=ta.lowest(low,math.max(math.floor(entryDistSettings.distMul),1))
//Calculatetheactualentrypricefromthereferenceusingalongbiaseddistancewithanupwardsmovingpotential
getLongEntryLowerPrice(floatreferencePrice)=>
entryDistSettings.lower_long_biased_price(referencePrice,longBiasedAuxData,entryRestrictSettings,entryMarSettings,entryLowestLow)
varfloatlongLimitOrStopEntryPrice=na
boolisFirstValidOpenLongPosition=entryOrderType!='MARKET'?validOpenLongPositionand(na(longLimitOrStopEntryPrice[1])orcompletedLongTrade):false
booltryEnterLongPosition=entryOrderType!='MARKET'?timeFilterApprovalandnotisLongPositionandnotcompletedLongTradeandnotna(longLimitOrStopEntryPrice[1])andnotvalidCnlOpenLongPosition:false
longLimitOrStopEntryPrice:=if(isFirstValidOpenLongPosition)
if(entryOrderType=='LIMIT')
getLongEntryLowerPrice(close)
elseif(entryOrderType=='STOP'orentryOrderType=='STOP-LIMIT')
getLongEntryHigherPrice(close)
elseif(tryEnterLongPosition)
if(entryLimitMode=='TRAIL'or(entryLimitMode=='FIXED'andvalidOpenLongPosition))
if(entryOrderType=='LIMIT')
math.max(getLongEntryLowerPrice(getUpwardsMovingBarrierPrice(entryTrailBarrier)),nz(longLimitOrStopEntryPrice[1],minLimitFloat))
elseif(entryOrderType=='STOP'orentryOrderType=='STOP-LIMIT')
math.min(getLongEntryHigherPrice(getDownwardsMovingBarrierPrice(entryTrailBarrier)),nz(longLimitOrStopEntryPrice[1],maxLimitFloat))
else
nz(longLimitOrStopEntryPrice[1],maxLimitFloat)
floatlongStopLimitEntryPrice=entryOrderType=='STOP-LIMIT'?longLimitOrStopEntryPrice+entryStopLimitMarMul*(entryStopLimitMarginMethod=='ATR'?posAtr:entryStopLimitMarginMethod=='STDEV'?posStDev:syminfo.mintick):na
varboollongStopLimitStopEntryExecuted=false
if(ta.crossover(high,longLimitOrStopEntryPrice)andentryOrderType=='STOP-LIMIT')
longStopLimitStopEntryExecuted:=true
elseif(enteredLongTrade)
longStopLimitStopEntryExecuted:=false
boollongLimitOrStopEntryIsActive=notna(longLimitOrStopEntryPrice)
//Markwhenshortpositionisactive
boolshortIsActive=validOpenShortPositionorisShortPosition
//Theshortcancelopensignal
varboolvalidCnlOpenShortPosition=false
//Counthowfararethelastshortvalidcancelopen,open,entryandvalidopensignals
intbarsSinceValidOpenShort=nz(ta.barssince(validOpenShortPosition),maxLimitInt)
intbarsSinceValidCnlOpenShort=nz(ta.barssince(validCnlOpenShortPosition),maxLimitInt)
intbarsSinceEnteredShort=nz(ta.barssince(enteredShortTrade),maxLimitInt)
boolopenShortIsActive=barsSinceValidCnlOpenShort>barsSinceValidOpenShort//validCancelOpen->validOpen
boolenterShortIsPending=barsSinceEnteredShort>=barsSinceValidOpenShort//entered->validOpen
//Validatetheshortcancelopensignalwhennotalreadyintoaposition
validCnlOpenShortPosition:=entryOrderType!='MARKET'?(cnlOpenShortPositionorvalidOpenLongPositionor(treatCloseAsCancel?timeFilterApprovalandendShortDeal:false))andnotisShortPositionandopenShortIsActiveandenterShortIsPendingandnotvalidOpenShortPosition:false
//Calculatetheactualentrypricefromthereferenceusingashortbiaseddistancewithadownwardsmovingpotential
getShortEntryHigherPrice(floatreferencePrice)=>
entryDistSettings.higher_short_biased_price(referencePrice,shortBiasedAuxData,entryRestrictSettings,entryMarSettings,entryHighestHigh)
//Calculatetheactualentrypricefromthereferenceusingashortbiaseddistancewithanupwardsmovingpotential
getShortEntryLowerPrice(floatreferencePrice)=>
entryDistSettings.lower_short_biased_price(referencePrice,shortBiasedAuxData,entryRestrictSettings,entryMarSettings,entryLowestLow)
varfloatshortLimitOrStopEntryPrice=na
boolisFirstValidOpenShortPosition=entryOrderType!='MARKET'?validOpenShortPositionand(na(shortLimitOrStopEntryPrice[1])orcompletedShortTrade):false
booltryEnterShortPosition=entryOrderType!='MARKET'?timeFilterApprovalandnotisShortPositionandnotcompletedShortTradeandnotna(shortLimitOrStopEntryPrice[1])andnotvalidCnlOpenShortPosition:false
shortLimitOrStopEntryPrice:=if(isFirstValidOpenShortPosition)
if(entryOrderType=='LIMIT')
getShortEntryHigherPrice(close)
elseif(entryOrderType=='STOP'orentryOrderType=='STOP-LIMIT')
getShortEntryLowerPrice(close)
elseif(tryEnterShortPosition)
if(entryLimitMode=='TRAIL'or(entryLimitMode=='FIXED'andvalidOpenShortPosition))
if(entryOrderType=='LIMIT')
math.min(getShortEntryHigherPrice(getDownwardsMovingBarrierPrice(entryTrailBarrier)),nz(shortLimitOrStopEntryPrice[1],maxLimitFloat))
elseif(entryOrderType=='STOP'orentryOrderType=='STOP-LIMIT')
math.max(getShortEntryLowerPrice(getUpwardsMovingBarrierPrice(entryTrailBarrier)),nz(shortLimitOrStopEntryPrice[1],minLimitFloat))
else
nz(shortLimitOrStopEntryPrice[1],minLimitFloat)
floatshortStopLimitEntryPrice=entryOrderType=='STOP-LIMIT'?shortLimitOrStopEntryPrice-entryStopLimitMarMul*(entryStopLimitMarginMethod=='ATR'?negAtr:entryStopLimitMarginMethod=='STDEV'?negStDev:syminfo.mintick):na
varboolshortStopLimitStopEntryExecuted=false
if(ta.crossunder(low,shortLimitOrStopEntryPrice)andentryOrderType=='STOP-LIMIT')
shortStopLimitStopEntryExecuted:=true
elseif(enteredShortTrade)
shortStopLimitStopEntryExecuted:=false
boolshortLimitOrStopEntryIsActive=notna(shortLimitOrStopEntryPrice)
//Barindexwhentheenteredthelastlongandshorttrades
intlongEntryBarId=ta.valuewhen(enteredLongTrade,entryOrderType=='MARKET'?bar_index[1]:bar_index,0)
intshortEntryBarId=ta.valuewhen(enteredShortTrade,entryOrderType=='MARKET'?bar_index[1]:bar_index,0)
//Currententrypositionprice
floatposPrice=strategy.opentrades.entry_price(strategy.opentrades-1)
//Pricewhenenteredapositionorpotentialentrypriceincaseoflimit,stopandstop-limitorders
floatlongEntryPrice=notna(posPrice)andisLongPositionandnotvalidOpenLongPosition?posPrice
:longLimitOrStopEntryIsActive?longStopLimitStopEntryExecuted?longStopLimitEntryPrice:longLimitOrStopEntryPrice
:validOpenLongPositionandentryOrderType=='MARKET'?close
:na
floatshortEntryPrice=notna(posPrice)andisShortPositionandnotvalidOpenShortPosition?posPrice
:shortLimitOrStopEntryIsActive?shortStopLimitStopEntryExecuted?shortStopLimitEntryPrice:shortLimitOrStopEntryPrice
:validOpenShortPositionandentryOrderType=='MARKET'?close
:na
//PLOT================================================================================================================
varcolortextColor=color.new(color.white,0)
if(validCnlOpenLongPositionandshowCnlOpenLabelsandbarstate.isconfirmed)
label.new(x=bar_index,y=nz(longLimitOrStopEntryPrice[1],close),text='Cancel',yloc=yloc.price,color=longCnlOpenColor,style=entryOrderType=='LIMIT'?label.style_label_up:label.style_label_down,textcolor=textColor)
if(validCnlOpenShortPositionandshowCnlOpenLabelsandbarstate.isconfirmed)
label.new(x=bar_index,y=nz(shortLimitOrStopEntryPrice[1],close),text='Cancel',yloc=yloc.price,color=shortCnlOpenColor,style=entryOrderType=='LIMIT'?label.style_label_down:label.style_label_up,textcolor=textColor)
longLimitOrStopEntryPlot=plot(series=longLimitOrStopEntryPrice,title='LongLimitorStopEntryPrice',color=longStopLimitStopEntryExecuted?na:longEntryColor,linewidth=1,style=plot.style_linebr,offset=1)
longStopLimitEntryPlot=plot(series=longStopLimitEntryPrice,title='LongStop-LimitEntryPrice',color=longStopLimitStopEntryExecuted?longEntryColor:na,linewidth=1,style=plot.style_linebr,offset=1,display=display.pane+display.data_window)
varcolorlongEntryFillColor=entryOrderType=='STOP-LIMIT'andentryStopLimitMarMul>0.0?color.new(longEntryColor,90):na
fill(plot1=longLimitOrStopEntryPlot,plot2=longStopLimitEntryPlot,color=longEntryFillColor,title='LongStop-LimitMargin')
shortLimitOrStopEntryPlot=plot(series=shortLimitOrStopEntryPrice,title='ShortLimitorStopEntryPrice',color=shortStopLimitStopEntryExecuted?na:shortEntryColor,linewidth=1,style=plot.style_linebr,offset=1)
shortStopLimitEntryPlot=plot(series=shortStopLimitEntryPrice,title='ShortStop-LimitEntryPrice',color=shortStopLimitStopEntryExecuted?shortEntryColor:na,linewidth=1,style=plot.style_linebr,offset=1,display=display.pane+display.data_window)
varcolorshortEntryFillColor=entryOrderType=='STOP-LIMIT'andentryStopLimitMarMul>0.0?color.new(shortEntryColor,90):na
fill(plot1=shortLimitOrStopEntryPlot,plot2=shortStopLimitEntryPlot,color=shortEntryFillColor,title='ShortStop-LimitMargin')
//#endregion===========================================================================================================
//#region🎯TAKEPROFIT1
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforthetakeprofitlogicimplementationbasedonthemethodandthenumberofsteptakeprofittargetsandthetrailingdistance
//Dependencies:TRACKPOSITION
//Results:takeProfitTargetsSize,longTrailTakeProfitExecuted,shortTrailTakeProfitExecuted,longIthTrailTakeProfitExecuted,shortIthTrailTakeProfitExecuted,highestHighSinceLongEntry,lowestLowSinceShortEntry
//INPUT===============================================================================================================
takeProfitColor=input.color(defval=color.new(color.teal,0),title='🎨️TakeProfitColor',tooltip='Thecolorofthetakeprofitpricetargetlines.',group='🎯TakeProfit')
numOfTakeProfitTargets=input.int(defval=1,title='TakeProfitTargets',minval=0,maxval=5,tooltip='Thenumberoftakeprofittargetstobesetforeachentry.Thefirsttargetistheinitialtargetandeveryadditionaltargetisasteptarget.',group='🎯TakeProfit')
//LOGIC===============================================================================================================
//ArrayswiththeupdatedtakeProfitPrices
varfloat[]longTakeProfitPrices=array.new<float>(numOfTakeProfitTargets,na)
varfloat[]shortTakeProfitPrices=array.new<float>(numOfTakeProfitTargets,na)
//Arrayswiththetrailingtakeprofitticks
varint[]longTrailTakeProfitOffsetTicks=array.new<int>(numOfTakeProfitTargets,na)
varint[]shortTrailTakeProfitOffsetTicks=array.new<int>(numOfTakeProfitTargets,na)
//Takeprofithastocommunicatetheexecutionoftakeprofittargetswiththestoplosslogicwhen'TP'modeisselected
varbool[]longTrailTakeProfitExecuted=array.new<bool>(numOfTakeProfitTargets,false)
varbool[]shortTrailTakeProfitExecuted=array.new<bool>(numOfTakeProfitTargets,false)
//Takeprofitrelatedtablessizeusedforfor...toloops
varinttakeProfitTargetsSize=numOfTakeProfitTargets-1>=0?numOfTakeProfitTargets-1:na
//CounttheTakeProfittargetsthatexecuted
intlongTrailTakeProfitExecutedCount=0
intshortTrailTakeProfitExecutedCount=0
//Calculatethehighesthighsincethelongentry
varfloathighestHighSinceLongEntry=na
if(enteredLongTrade)
highestHighSinceLongEntry:=high
elseif(isLongPositionorcompletedLongTrade)
highestHighSinceLongEntry:=math.max(high,nz(highestHighSinceLongEntry[1],high))
for[i,longTakeProfitPrice]inlongTakeProfitPrices
booljustExecuted=false
forj=0totakeProfitTargetsSize+1
justExecuted:=justExecutedor(strategy.closedtrades>j?bar_index==strategy.closedtrades.exit_bar_index(strategy.closedtrades-1-j)andstrategy.closedtrades.exit_id(strategy.closedtrades-1-j)==str.format(exitOrderIdPattern1,longOrderIdPrefix,i+1)andstrategy.closedtrades.profit(strategy.closedtrades-1-j)>0.0:false)
boolexecuted=isLongPositionorcompletedLongTrade?(longTrailTakeProfitExecuted.get(i)or(justExecutedandhighestHighSinceLongEntry>=longTakeProfitPrice)):false
longTrailTakeProfitExecuted.set(i,executed)
if(executed)
longTrailTakeProfitExecutedCount:=longTrailTakeProfitExecutedCount+1
//Calculatethelowestlowsincetheshortentry
varfloatlowestLowSinceShortEntry=na
if(enteredShortTrade)
lowestLowSinceShortEntry:=low
elseif(isShortPositionorcompletedShortTrade)
lowestLowSinceShortEntry:=math.min(low,nz(lowestLowSinceShortEntry[1],low))
for[i,shortTakeProfitPrice]inshortTakeProfitPrices
booljustExecuted=false
forj=0totakeProfitTargetsSize+1
justExecuted:=justExecutedor(strategy.closedtrades>j?bar_index==strategy.closedtrades.exit_bar_index(strategy.closedtrades-1-j)andstrategy.closedtrades.exit_id(strategy.closedtrades-1-j)==str.format(exitOrderIdPattern1,shortOrderIdPrefix,i+1)andstrategy.closedtrades.profit(strategy.closedtrades-1-j)>0.0:false)
boolexecuted=isShortPositionorcompletedShortTrade?(shortTrailTakeProfitExecuted.get(i)or(justExecutedandlowestLowSinceShortEntry<=shortTakeProfitPrice)):false
shortTrailTakeProfitExecuted.set(i,executed)
if(executed)
shortTrailTakeProfitExecutedCount:=shortTrailTakeProfitExecutedCount+1
//Checkifthei-thTakeProfittargetwasexecuted
longIthTrailTakeProfitExecuted(inti)=>
numOfTakeProfitTargets>=i?longTrailTakeProfitExecuted.get(i-1):false
shortIthTrailTakeProfitExecuted(inti)=>
numOfTakeProfitTargets>=i?shortTrailTakeProfitExecuted.get(i-1):false
//#endregion===========================================================================================================
//#region🛑STOPLOSS
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforthestoplosslogicimplementationbasedonthemethodandthetrailingmode
//Dependencies:VOLATILITY,DISTANCE,ENTRY,TAKEPROFIT1
//Results:longStopLossPrice,shortStopLossPrice,longStopLossRatio,shortStopLossRatio,longEntryStopLossRatio,shortEntryStopLossPerc
//INPUT===============================================================================================================
stopLossColor=input.color(defval=color.new(color.maroon,0),title='🎨️StopLossColor',tooltip='Thecolorofthestoplossprice.',group='🛑StopLoss')
varlongStopLossDistSettings=dr.DistSettings.new(
distMethod=input.string(defval='ATR',title='StopLossDistanceMethod',options=['PERC','ATR','STDEV','TICKS','HHLL'],tooltip='Themethodtocalculatethedistanceofthestoplosspricetarget.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV),Tickbased(TICKS)orHighesthigh/Lowestlow(HHLL).',group='🛑StopLoss'),
distMul=input.float(defval=3.0,title='  DistMul|LenLong/Short  ',minval=0.05,step=0.05,inline='StopLossDistancePerc',group='🛑StopLoss'))
varstopLossMarSettings=dr.DistSettings.new(
distMethod=input.string(defval='ATR',title='MarginDistanceMethod​​',options=['PERC','ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethemargintooffsetthedistanceofthestoplosspricetarget.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV)orTickbased(TICKS).',group='🛑StopLoss'),
distMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='StopLossDistanceMargin',group='🛑StopLoss')?
input.float(defval=0.5,title='MarDistMul       ​​',step=0.5,tooltip='Themarginmultipliertodefinethestoplossdistanceoffset.',inline='StopLossDistanceMargin',group='🛑StopLoss'):na)
varstopLossRestrictSettings=dr.RestrictSettings.new(
restrDistMethod=input.string(defval='PERC',title='RestrictDistanceMethod​​',options=['PERC','ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethemaximum/minimumdistanceofthestoplossprice.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV)orTickbased(TICKS).',group='🛑StopLoss'),
minDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='StopLossMinDistance',group='🛑StopLoss')?
input.float(defval=1.0,title='MinDistMul       ​​',minval=0.0,step=0.05,tooltip='Enableaminimumdistancedefinedbythismultiplierandtherestrictdistancemethod.Thiscanbeusedtomakesurethatthestoplosswillnotbeplacedtooclosefromtheentryprice.Otherwise,atightstoplosspricewouldmakethestoplosstoeasilybereachedduringvolatilemarketconditions.',inline='StopLossMinDistance',group='🛑StopLoss'):na,
maxDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='StopLossMaxDistance',group='🛑StopLoss')?
input.float(defval=10.0,title='MaxDistMul       ​​',minval=0.0,step=0.05,tooltip='Enableamaximumdistancedefinedbythismultiplierandtherestrictdistancemethod.Thiscanbeusedtomakesurethatthestoplosswillnotbeplacedtoofarfromtheentryprice.Otherwise,aloosestoplosspricewouldincreasethemaxdrawdownandlosseswhenitisreached.',inline='StopLossMaxDistance',group='🛑StopLoss'):na)
varshortStopLossDistSettings=dr.DistSettings.new(
distMethod=longStopLossDistSettings.distMethod,
distMul=input.float(defval=3.0,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=0.05,step=0.05,tooltip='Thedistancemultipliertodefinethelong/shortstoplosspricefromtheclosepricewhentheopensignaloccursorfromthebarrierpricewhentrailing.Themultiplierwillbeappliedtotheunitpricethatisdefinedbythedistancemethodthatisused.IftheHHLLmethodisused,thenthelengthwilldefinethewindowforthehighesthighandlowestlowcalculations.',inline='StopLossDistancePerc',group='🛑StopLoss'))
stopLossMoveActMode=input.string(defval='OFF',title='MoveActivationMode',options=['OFF','ONCETP','ONCEPRICE','MULTITP','MULTIPRICE'],tooltip='Movethestoplosstotheentryprice(a.k.abreakeven)whentheactivationtakeprofitpricetargetisreached(ONCETP),ormovethestoplosstotheentryprice(a.k.abreakeven)whenthecurrentpricemovesawayfromtheentrybyadistance(ONCEPRICE),ormovethestoplosstotheprevioustakeprofitpricetargeteverytimeanewtakeprofitisreached(MULTITP),ormovethestoplosstothepreviousdistancefromentrypriceeverytimethepricemovesawayfromtheentrybyadistance(MULTIPRICE).Thus,morethanonetakeprofitpricetargetisneededtoseeadifferencebetweentheONCETPandMULTITPmodes!Ifbothmoveandtrailingareactivatedthestoplossisdefinedbythemorestrictpriceatanygiventime.',group='🛑StopLoss')
stopLossMoveTPActNum=input.int(defval=1,title='  ActTakeProfit#​',minval=1,tooltip='TheTakeProfitnumber(uptothe"TakeProfitTargets"numbersetinTAKEPROFITsection)thatwillactivatethemovementofthestoplosstotheentrypriceafteritisreached.TheMoveActivationshouldbesetto"ONCE".',group='🛑StopLoss')
varstopLossMoveDistSettings=dr.DistSettings.new(
distMethod=input.string(defval='PERC',title='  ActPriceDistanceMethod',options=['PERC','ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethedistanceofthecurrentpricefromentry.Percentagebased(PERC),ATRbased(ATR)orStandarddeviationbased(STDEV)orTickbased(TICKS).',group='🛑StopLoss'),
distMul=input.float(defval=2.0,title='    PriceDistMul',minval=0.01,step=0.05,tooltip='Thedistancemultipliertodefinetheactivationpricefromtheentryinordertomovethestoplosstobreakeven.Themultiplierwillbeappliedtotheunitpricethatisdefinedbythedistancemethodthatisused.IftheHHLLmethodisused,thenthelengthwilldefinethewindowforthehighesthighandlowestlowcalculations.',group='🛑StopLoss'))
stopLossTrailActMode=input.string(defval='OFF',title='TrailActivationMode',options=['OFF','START','TP'],tooltip='Enablesthetrailingforthestoplossfromtheverybeginningoftheentryorder(START),orwhentheactivationtakeprofitpricetargetisreached(TP)ornotatall(OFF).',group='🛑StopLoss')
stopLossTrailTPActNum=input.int(defval=1,title='  ActTakeProfit#​​',minval=1,tooltip='TheTakeProfitnumber(uptothe"TakeProfitTargets"numbersetinTAKEPROFITsection)thatwillactivatethetrailingofthestoplossafteritisreached.TheTrailingActivationshouldbesetto"TP".',group='🛑StopLoss')
stopLossTrailBarrier=input.string(defval='REAR',title='  TrailBarrier​​​',options=['FRONT','REAR'],tooltip='Thepricereferencethatwillbeusedforthestoplosstrailinglogic.Forexitingfromaposition,followthehighforlongandlowforshort(FRONT),orfollowthelowforlongandthehighforshort(REAR).',group='🛑StopLoss')
varlongStopLossStepTrailDistSettings=dr.DistSettings.new(
distMethod=input.string(defval='OFF',title='TrailStepMode',options=['ON','OFF'],tooltip='Whenstoplosstrailiningisactivatedthedistancewilltrailthepriceaccordingtothestoplossmethodsoitmaintainsitsmaximumvaluefromthecurrenthigh/low(OFF),orthedistancewillchangeeverytimeanewtakeprofitisreachedandwilladdthecorrespondingstepvaluetotheprevious(ON).Thus,morethanonetakeprofitpricetargetisneededtoseeadifferencebetweentwomodes!Ifbothmoveandtrailingareactivatedthestoplossisdefinedbythemorestrictpriceatanygiventime.',group='🛑StopLoss'),
distMul=input.float(defval=2.0,title='  StepDistMul|LenLong/Short​',step=0.05,inline='StepDistancePerc',group='🛑StopLoss'))
varshortStopLossStepTrailDistSettings=dr.DistSettings.new(
distMethod=longStopLossStepTrailDistSettings.distMethod,
distMul=input.float(defval=2.0,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',step=0.05,tooltip='Thedistancemultiplierorlengthtobeaddedontopofthelong/shortstoplossdistancemultiplierorlengthafteratakeprofittargetisreached,todefinethenewlong/shortstoplosspricetarget.Themultiplierwillbeappliedtotheunitpricethatisdefinedbythedistancemethodthatisused.IftheHHLLmethodisused,thenthesteplengthwillbeaddedtotheexistinglengthofthewindowforthehighesthighandlowestlowcalculations.',inline='StepDistancePerc',group='🛑StopLoss'))
stopLossWaitCloseConfirm=input.bool(defval=false,title='Waitcloseconfirmation',tooltip='Whenthisoptionisenabled,thestoplosswillnotbeexecutedimmediatelybutwillwaitforthebarcloseconfirmation.Thismightcausethestrategytohavegreaterlossesthantheexpected.A"CloseMarket"alertwillbetriggeredinstead.',group='🛑StopLoss')
//LOGIC===============================================================================================================
floatstopLossLowestLow=ta.lowest(low,math.max(longStopLossStepTrailDistSettings.distMethod=='ON'?math.floor(longStopLossDistSettings.distMul)+longTrailTakeProfitExecutedCount*math.floor(longStopLossStepTrailDistSettings.distMul):math.floor(longStopLossDistSettings.distMul),1))
//Calculatetheactuallongstoplosspricethatislowerfromthereferenceusingashortbiaseddistancewithanupwardsmovingpotential
getLongStopLossPrice(floatreferencePrice)=>
longStopLossSteppedDist=longStopLossDistSettings.stepped_dist(step=longStopLossStepTrailDistSettings,count=longTrailTakeProfitExecutedCount)
longStopLossSteppedDist.lower_short_biased_price(referencePrice,shortBiasedAuxData,stopLossRestrictSettings,stopLossMarSettings,stopLossLowestLow)
//Calculatetheactuallongmovedistancepricethatishigherfromthelongentry
getLongStopLossMoveDistPrice()=>
stopLossMoveDistSettings.price(longEntryPrice,shortBiasedAuxData)
floatlongStopLossMoveDistPrice=stopLossMoveActMode=='ONCEPRICE'orstopLossMoveActMode=='MULTIPRICE'?getLongStopLossMoveDistPrice():na
intlongDistMovePriceCount=stopLossMoveActMode=='MULTIPRICE'?math.floor((highestHighSinceLongEntry-longEntryPrice)/longStopLossMoveDistPrice):na
intchgLongDistMovePriceCount=ta.change(longDistMovePriceCount)
varboolstopLossAdjustmentIsNeeded=(entryOrderType=='MARKET'orentryOrderType=='STOP')andlongStopLossDistSettings.distMethod!='HHLL'andstopLossTrailActMode!='START'
//Calculatethestoplosspricewhenenterlongpositionandpeserveitsvalueuntilthepositioncloses
varfloatlongStopLossPrice=na
if(longLimitOrStopEntryIsActiveorvalidOpenLongPosition)
longStopLossPrice:=getLongStopLossPrice(longEntryPrice)
elseif(enteredLongTradeandstopLossAdjustmentIsNeeded)
longStopLossPrice:=longStopLossPrice+(longEntryPrice-nz(longEntryPrice[1],longEntryPrice))
elseif(isLongPosition)
//Trailingstartswhentheselectedtakeprofitpriceisreachedif'TP'modeissetorfromtheverybeginingif'START'modeisselected
boollongStopLossTrailEnabled=stopLossTrailActMode=='START'or(stopLossTrailActMode=='TP'andlongIthTrailTakeProfitExecuted(stopLossTrailTPActNum))
floatstopPrice=longStopLossTrailEnabled?getLongStopLossPrice(getUpwardsMovingBarrierPrice(stopLossTrailBarrier)):longStopLossPrice[1]
stopPrice:=(stopLossMoveActMode=='ONCETP'andlongTrailTakeProfitExecutedCount>=stopLossMoveTPActNum)or(stopLossMoveActMode=='ONCEPRICE'and(highestHighSinceLongEntry-longEntryPrice)>=longStopLossMoveDistPrice)or(stopLossMoveActMode=='MULTITP'andlongTrailTakeProfitExecutedCount==1)?math.max(stopPrice,longEntryPrice)
:stopLossMoveActMode=='MULTITP'andlongTrailTakeProfitExecutedCount>1?math.max(stopPrice,longTakeProfitPrices.get(longTrailTakeProfitExecutedCount-2))
:stopLossMoveActMode=='MULTIPRICE'andchgLongDistMovePriceCount>0?math.max(stopPrice,stopPrice+longDistMovePriceCount*longStopLossMoveDistPrice)
:stopPrice
longStopLossPrice:=math.max(stopPrice,nz(longStopLossPrice[1],minLimitFloat))
floatlongStopLossRatio=(longEntryPrice-longStopLossPrice)/longEntryPrice
floatlongEntryStopLossRatio=ta.valuewhen(enteredLongTrade,longStopLossRatio[1],0)
floatstopLossHighestHigh=ta.highest(high,math.max(shortStopLossStepTrailDistSettings.distMethod=='ON'?math.floor(shortStopLossDistSettings.distMul)+shortTrailTakeProfitExecutedCount*math.floor(shortStopLossStepTrailDistSettings.distMul):math.floor(shortStopLossDistSettings.distMul),1))
//Calculatetheactualshortstoplosspricethatishigherfromthereferenceusingalongbiaseddistancewithadownwardsmovingpotential
getShortStopLossPrice(floatreferencePrice)=>
shortStopLossSteppedDist=shortStopLossDistSettings.stepped_dist(step=shortStopLossStepTrailDistSettings,count=shortTrailTakeProfitExecutedCount)
shortStopLossSteppedDist.higher_long_biased_price(referencePrice,longBiasedAuxData,stopLossRestrictSettings,stopLossMarSettings,stopLossHighestHigh)
//Calculatetheactualshortmovedistancethatislowerfromtheshortentry
getShortStopLossMoveDistPrice()=>
stopLossMoveDistSettings.price(shortEntryPrice,longBiasedAuxData)
floatshortStopLossMoveDistPrice=stopLossMoveActMode=='ONCEPRICE'orstopLossMoveActMode=='MULTIPRICE'?getShortStopLossMoveDistPrice():na
intshortDistMovePriceCount=stopLossMoveActMode=='MULTIPRICE'?math.floor((shortEntryPrice-lowestLowSinceShortEntry)/shortStopLossMoveDistPrice):na
intchgShortDistMovePriceCount=ta.change(shortDistMovePriceCount)
//Calculatethestoplosspricewhenentershortpositionandpeserveitsvalueuntilthepositioncloses
varfloatshortStopLossPrice=na
if(shortLimitOrStopEntryIsActiveorvalidOpenShortPosition)
shortStopLossPrice:=getShortStopLossPrice(shortEntryPrice)
elseif(enteredShortTradeandstopLossAdjustmentIsNeeded)
shortStopLossPrice:=shortStopLossPrice+(shortEntryPrice-nz(shortEntryPrice[1],shortEntryPrice))
elseif(isShortPosition)
//Trailingstartswhentheselectedtakeprofitpriceisreachedif'TP'modeissetorfromtheverybeginingif'START'modeisselected
boolshortStopLossTrailEnabled=stopLossTrailActMode=='START'or(stopLossTrailActMode=='TP'andshortIthTrailTakeProfitExecuted(stopLossTrailTPActNum))
floatstopPrice=shortStopLossTrailEnabled?getShortStopLossPrice(getDownwardsMovingBarrierPrice(stopLossTrailBarrier)):shortStopLossPrice[1]
stopPrice:=(stopLossMoveActMode=='ONCETP'andshortTrailTakeProfitExecutedCount>=stopLossMoveTPActNum)or(stopLossMoveActMode=='ONCEPRICE'and(shortEntryPrice-lowestLowSinceShortEntry)>=shortStopLossMoveDistPrice)or(stopLossMoveActMode=='MULTITP'andshortTrailTakeProfitExecutedCount==1)?math.min(stopPrice,shortEntryPrice)
:stopLossMoveActMode=='MULTITP'andshortTrailTakeProfitExecutedCount>1?math.min(stopPrice,shortTakeProfitPrices.get(shortTrailTakeProfitExecutedCount-2))
:stopLossMoveActMode=='MULTIPRICE'andchgShortDistMovePriceCount>0?math.min(stopPrice,stopPrice-chgShortDistMovePriceCount*shortStopLossMoveDistPrice)
:stopPrice
shortStopLossPrice:=math.min(stopPrice,nz(shortStopLossPrice[1],maxLimitFloat))
floatshortStopLossRatio=(shortStopLossPrice-shortEntryPrice)/shortEntryPrice
floatshortEntryStopLossRatio=ta.valuewhen(enteredShortTrade,shortStopLossRatio[1],0)
//#endregion===========================================================================================================
//#region🛠️STRATEGY2
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsiblefortheclosepositionlogic.Thisisimplementedbasedondealconditionsdefinedinternally(inthisscript)orexternaly(basedonconditionsthattakeasinputotherindicator)
//Dependencies:FILTERS,STRATEGY1,ENTRY
//Results:validCloseLongPosition,validCloseShortPosition
//INPUT===============================================================================================================
closeEarlyEnabled=input.bool(defval=false,title='CloseEarly#ofbars   ',inline='CloseEarly',group='🛠️Strategy')
closeEarlyBars=input.int(defval=7,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=1,tooltip='Emitclosepositionsignalifthegivennumberofbarshavepassedsincetheentryandtheactivationtakeprofitpricetargethasnotbeenreachedyet.',inline='CloseEarly',group='🛠️Strategy')
closeEarlyTPActNum=input.int(defval=1,title='  ActTakeProfit#​​​',minval=1,tooltip='TheTakeProfitnumber(uptothe"TakeProfitTargets"numbersetinTAKEPROFITsection)thatwillactivatethecloseearlyifitisnotreachedwithinthegivennumberofbarsfromtheentry.',group='🛠️Strategy')
closeAtSessionEnd=input.bool(defval=false,title='CloseatSessionEnd',tooltip='Closeallpositionsatthemarketpriceattheendofeachsessionortheendoftimewindow.',group='🛠️Strategy')
//LOGIC===============================================================================================================
boolcloseLongPosition=endLongDealor(closeEarlyEnabled?bar_index-longEntryBarId==closeEarlyBarsandnotlongIthTrailTakeProfitExecuted(closeEarlyTPActNum):false)
boolcloseShortPosition=endShortDealor(closeEarlyEnabled?bar_index-shortEntryBarId==closeEarlyBarsandnotshortIthTrailTakeProfitExecuted(closeEarlyTPActNum):false)
boolcloseAllPositions=closeAtSessionEndandnottimeFilterApproval
//Cancelthepreviousenddealconditionwhenusinglimitorstopforexit(ifnotalreadyexitedtheposition)
boolcnlCloseLongPosition=(timeFilterApprovalandcnlEndLongDeal)or(nottimeFilterApprovalandtimeFilterApproval[1])
boolcnlCloseShortPosition=(timeFilterApprovalandcnlEndShortDeal)or(nottimeFilterApprovalandtimeFilterApproval[1])
//Theclosesignalswhenalreadyintoapositiontothatdirectionorifyouwanttostartapositiontotheotherdirection
boolvalidCloseLongPosition=closeLongPositionandisLongPosition
boolvalidCloseShortPosition=closeShortPositionandisShortPosition
//#endregion===========================================================================================================
//#region🟪EXIT
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsiblefortheexitlogicimplementationbasedontheordertype
//Dependencies:TRACKPOSITION,VOLATILITY,DISTANCE,STRATEGY2
//Results:longLimitOrStopExitPrice,shortLimitOrStopExitPrice,longLimitExitIsActive,shortLimitExitIsActive,longExitPrice,shortExitPrice
//INPUT===============================================================================================================
longExitColor=input.color(defval=color.new(#D500F9,0),title='🎨️ExitColorLong/Short    ',inline='Exit',group='🟪Exit')
shortExitColor=input.color(defval=color.new(#D500F9,0),title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',tooltip='Thecolorofthelong/shortlimitandstopexitprices.',inline='Exit',group='🟪Exit')
exitOrderType=input.string(defval='MARKET',title='OrderType​​',options=['MARKET','LIMIT','STOP'],tooltip='Usemarketordertoexitattheopenofthenextbar(MARKET),oruselimitordertoexitata"better"pricedefinedbythedistancefromtheclosepriceandthelimitmode(LIMIT),orusestopmarketordertoexitata"worst"pricedefinedbythedistancefromtheclosepriceandthelimitmode(STOP).Limitandstoporderslastuntiltheyarefilledorcanceled.',group='🟪Exit')
exitLimitMode=input.string(defval='FIXED',title='LimitMode​​',options=['FIXED','TRAIL'],tooltip='Whenyouuselimitorstoporderstoexit,useafixedpricedefinedbythedistanceandtheclosepricewhentheopensignals(FIXED),ortrailbyfollowingthepricetothedirectionoftheexitforlimitordersortheotherdirectionoftheexitforstoporders(TRAIL).',group='🟪Exit')
exitTrailBarrier=input.string(defval='FRONT',title='  TrailBarrier​​​​',options=['FRONT','REAR'],tooltip='Thepricereferencethatwillbeusedfortheexittrailinglogic.ForexitingfromapositionwithaLIMITorder,followthelowforlongandhighforshort(FRONT),orfollowthehighforlongandthelowforshort(REAR).FortheSTOPordersthelogicisreversed.',group='🟪Exit')
varexitDistSettings=dr.DistSettings.new(
distMethod=input.string(defval='ATR',title='DistanceMethod​​',options=['PERC','ATR','STDEV','TICKS','HHLL'],tooltip='Themethodtocalculatethedistanceofthelimitandstopexit.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV),Tickbased(TICKS)orHighesthigh/Lowestlow(HHLL).',group='🟪Exit'),
distMul=input.float(defval=1.0,title='  DistMul|Len​​',minval=0.01,step=0.05,tooltip='Thedistancemultipliertodefinetheexitpricefromtheclosepricewhentheclosesignaloccursorfromthebarrierpricewhentrailing.Themultiplierwillbeappliedtotheunitpricethatisdefinedbythedistancemethodthatisused.IftheHHLLmethodisused,thenthelengthwilldefinethewindowforthehighesthighandlowestlowcalculations.',group='🟪Exit'))
varexitMarSettings=dr.DistSettings.new(
distMethod=input.string(defval='TICKS',title='MarginDistanceMethod​​​',options=['PERC','ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethemargintooffsetthedistanceoftheexitpricetarget.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV)orTickbased(TICKS).',group='🟪Exit'),
distMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='DistanceExitMargin',group='🟪Exit')?
input.float(defval=5.0,title='MarDistMul       ​​​',step=0.5,tooltip='Themarginmultipliertodefinetheexitdistanceoffset.',inline='DistanceExitMargin',group='🟪Exit'):na)
varexitRestrictSettings=dr.RestrictSettings.new(
restrDistMethod=input.string(defval='PERC',title='RestrictDistanceMethod​​​',options=['PERC','ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethemaximum/minimumdistanceoftheexitprice.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV)orTickbased(TICKS).',group='🟪Exit'),
minDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='ExitMinDistance',group='🟪Exit')?
input.float(defval=1.0,title='MinDistMul       ​​​',minval=0.0,step=0.05,tooltip='Enableaminimumdistancedefinedbythismultiplierandtherestrictdistancemethod.Thiscanbeusedtomakesurethattheexitwillnotbeplacedtooclosefromthereferenceprice.Otherwise,atightexitpricewouldmaketheexittoeasilybereachedduringvolatilemarketconditions.',inline='ExitMinDistance',group='🟪Exit'):na,
maxDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='ExitMaxDistance',group='🟪Exit')?
input.float(defval=4.0,title='MaxDistMul       ​​​',minval=0.0,step=0.05,tooltip='Enableamaximumdistancedefinedbythismultiplierandtherestrictdistancemethod.Thiscanbeusedtomakesurethattheexitwillnotbeplacedtoofarfromthereferenceprice.Otherwise,alooseexitpricewouldrisktonotbereachedinatimelymanner.',inline='ExitMaxDistance',group='🟪Exit'):na)
treatOpenAsCancel=input.bool(defval=false,title='TreatOpenasCancel',tooltip='Ifenabledtheinvalidopenpositionsignalswillbetreatedascancelclosesignalstocancelstopexitorders.',group='🟪Exit')
//LOGIC===============================================================================================================
//Thelongcancelclosesignal
varboolvalidCnlCloseLongPosition=false
//Counthowfararethelastlongvalidcloseandexitsignals
intbarsSinceValidCloseLong=nz(ta.barssince(validCloseLongPositionorvalidOpenShortPosition),maxLimitInt)
intbarsSinceValidCnlCloseLong=nz(ta.barssince(validCnlCloseLongPosition),maxLimitInt)
boolcloseLongIsActive=barsSinceValidCnlCloseLong>barsSinceValidCloseLong//validCancelClose->validClose
boolexitLongIsPending=barsSinceCompletedLong>=barsSinceValidCloseLong//completed->validClose
//Validatethelongcancelclosesignalwhenalreadyintoaposition
validCnlCloseLongPosition:=exitOrderType!='MARKET'?(cnlCloseLongPositionor(treatOpenAsCancel?timeFilterApprovalandstartLongDeal:false))andisLongPositionandcloseLongIsActiveandexitLongIsPendingandnotvalidCloseLongPosition:false
floatexitLowestLow=ta.lowest(low,math.max(math.floor(exitDistSettings.distMul),1))
//Calculatetheactuallongexitpricefromthereferenceusingashortbiaseddistancewithanupwardsmovingpotential
getLongExitLowerPrice(floatreferencePrice)=>
exitDistSettings.lower_short_biased_price(referencePrice,shortBiasedAuxData,exitRestrictSettings,exitMarSettings,exitLowestLow)
floatexitHighestHigh=ta.highest(high,math.max(math.floor(exitDistSettings.distMul),1))
//Calculatetheactuallongexitpricefromthereferenceusingashortbiaseddistancewithadownwardsmovingpotential
getLongExitHigherPrice(floatreferencePrice)=>
exitDistSettings.higher_short_biased_price(referencePrice,shortBiasedAuxData,exitRestrictSettings,exitMarSettings,exitHighestHigh)
varfloatlongLimitOrStopExitPrice=na
boolisFirstValidCloseLongPosition=exitOrderType!='MARKET'?validCloseLongPositionandisLongPositionandna(longLimitOrStopExitPrice[1])andnot(validOpenShortPositionandentryOrderType=='MARKET'):false
booltryExitLongPosition=exitOrderType!='MARKET'?isLongPositionandnotna(longLimitOrStopExitPrice[1])andnotvalidCnlCloseLongPosition:false
longLimitOrStopExitPrice:=if(isFirstValidCloseLongPosition)
if(exitOrderType=='LIMIT')
getLongExitHigherPrice(close)
elseif(exitOrderType=='STOP')
getLongExitLowerPrice(close)
elseif(tryExitLongPosition)
if(exitLimitMode=='TRAIL'or(exitLimitMode=='FIXED'andvalidCloseLongPosition))
if(exitOrderType=='LIMIT')
math.min(getLongExitHigherPrice(getDownwardsMovingBarrierPrice(exitTrailBarrier)),nz(longLimitOrStopExitPrice[1],maxLimitFloat))
elseif(exitOrderType=='STOP')
math.max(getLongExitLowerPrice(getUpwardsMovingBarrierPrice(exitTrailBarrier)),nz(longLimitOrStopExitPrice[1],minLimitFloat))
else
nz(longLimitOrStopExitPrice[1],minLimitFloat)
boollongLimitExitIsActive=notna(longLimitOrStopExitPrice)
//Theshortcancelclosesignal
varboolvalidCnlCloseShortPosition=false
//Counthowfararethelastshortvalidcloseandexitsignals
intbarsSinceValidCloseShort=nz(ta.barssince(validCloseShortPositionorvalidOpenLongPosition),maxLimitInt)
intbarsSinceValidCnlCloseShort=nz(ta.barssince(validCnlCloseShortPosition),maxLimitInt)
boolcloseShortIsActive=barsSinceValidCnlCloseShort>barsSinceValidCloseShort//validCancelClose->validClose
boolexitShortIsPending=barsSinceCompletedShort>=barsSinceValidCloseShort//completed->validClose
//Validatetheshortcancelclosesignalwhenalreadyintoaposition
validCnlCloseShortPosition:=exitOrderType!='MARKET'?(cnlCloseShortPositionor(treatOpenAsCancel?timeFilterApprovalandstartShortDeal:false))andisShortPositionandcloseShortIsActiveandexitShortIsPendingandnotvalidCloseShortPosition:false
//Calculatetheactualshortexitpricefromthereferenceusingalongbiaseddistancewithanupwardsmovingpotential
getShortExitLowerPrice(floatreferencePrice)=>
exitDistSettings.lower_long_biased_price(referencePrice,longBiasedAuxData,exitRestrictSettings,exitMarSettings,exitLowestLow)
//Calculatetheactualshortexitpricefromthereferenceusingalongbiaseddistancewithadownwardsmovingpotential
getShortExitHigherPrice(floatreferencePrice)=>
exitDistSettings.higher_long_biased_price(referencePrice,longBiasedAuxData,exitRestrictSettings,exitMarSettings,exitHighestHigh)
varfloatshortLimitOrStopExitPrice=na
boolisFirstValidCloseShortPosition=exitOrderType!='MARKET'?validCloseShortPositionandisShortPositionandna(shortLimitOrStopExitPrice[1])andnot(validOpenLongPositionandentryOrderType=='MARKET'):false
booltryExitShortPosition=exitOrderType!='MARKET'?isShortPositionandnotna(shortLimitOrStopExitPrice[1])andnotvalidCnlCloseShortPosition:false
shortLimitOrStopExitPrice:=if(isFirstValidCloseShortPosition)
if(exitOrderType=='LIMIT')
getShortExitLowerPrice(close)
elseif(exitOrderType=='STOP')
getShortExitHigherPrice(close)
elseif(tryExitShortPosition)
if(exitLimitMode=='TRAIL'or(exitLimitMode=='FIXED'andvalidCloseShortPosition))
if(exitOrderType=='LIMIT')
math.max(getShortExitLowerPrice(getUpwardsMovingBarrierPrice(exitTrailBarrier)),nz(shortLimitOrStopExitPrice[1],minLimitFloat))
elseif(exitOrderType=='STOP')
math.min(getShortExitHigherPrice(getDownwardsMovingBarrierPrice(exitTrailBarrier)),nz(shortLimitOrStopExitPrice[1],maxLimitFloat))
else
nz(shortLimitOrStopExitPrice[1],maxLimitFloat)
boolshortLimitExitIsActive=notna(shortLimitOrStopExitPrice)
//Pricewhenexitedapositionorpotentialexitpriceincaseoflimitorstoporders
floatlongExitPrice=(validOpenShortPositionand(isLongPositionorexitOrderType=='MARKET'))or(stopLossWaitCloseConfirmandclose<longStopLossPrice)?close
:longLimitExitIsActive?longLimitOrStopExitPrice
:na
floatshortExitPrice=(validOpenLongPositionand(isShortPositionorexitOrderType=='MARKET'))or(stopLossWaitCloseConfirmandclose>shortStopLossPrice)?close
:shortLimitExitIsActive?shortLimitOrStopExitPrice
:na
//PLOT================================================================================================================
if(validCloseLongPositionandshowCloseLabelsandbarstate.isconfirmed)
label.new(x=bar_index,y=exitOrderType=='LIMIT'?longLimitOrStopExitPrice:na,text='Close',yloc=exitOrderType=='LIMIT'?yloc.price:yloc.abovebar,color=longCloseColor,style=label.style_label_down,textcolor=textColor)
if(validCloseShortPositionandshowCloseLabelsandbarstate.isconfirmed)
label.new(x=bar_index,y=exitOrderType=='LIMIT'?shortLimitOrStopExitPrice:na,text='Close',yloc=exitOrderType=='LIMIT'?yloc.price:yloc.belowbar,color=shortCloseColor,style=label.style_label_up,textcolor=textColor)
if(validCnlCloseLongPositionandshowCnlCloseLabelsandbarstate.isconfirmed)
label.new(x=bar_index,y=longLimitOrStopExitPrice[1],text='Cancel',yloc=yloc.price,color=longCnlCloseColor,style=exitOrderType=='LIMIT'?label.style_label_down:label.style_label_up,textcolor=textColor)
if(validCnlCloseShortPositionandshowCnlCloseLabelsandbarstate.isconfirmed)
label.new(x=bar_index,y=shortLimitOrStopExitPrice[1],text='Cancel',yloc=yloc.price,color=shortCnlCloseColor,style=exitOrderType=='LIMIT'?label.style_label_up:label.style_label_down,textcolor=textColor)
plot(series=longLimitOrStopExitPrice,title='LongLimitorStopExitPrice',color=longExitColor,linewidth=1,style=plot.style_linebr,offset=1)
plot(series=shortLimitOrStopExitPrice,title='ShortLimitorStopExitPrice',color=shortExitColor,linewidth=1,style=plot.style_linebr,offset=1)
//#endregion===========================================================================================================
//#region💰QUANTITY/RISKMANAGEMENT
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforthecalculationofthequantitypercentagethatwillbeusedoneachentry
//Dependencies:ENTRY,STRATEGY2,EXIT
//Results:longEntryBaseQuantity,shortEntryBaseQuantity,longTakeProfitQuantity,shortTakeProfitQuantity,longRemainingQuantity,shortRemainingQuantity,longRemainingQuantityRatio,shortRemainingQuantityRatio
importjason5480/math_utils/8 asmath_utils
//INPUT===============================================================================================================
quantityMethod=input.string(defval='RISK',title='QuantityMethod',options=['RISK','EQUITY','SIZE','CONTR'],tooltip='Themethodtocalculatethequantitytoentereachnewposition.Useanamountsothatifthestoplossisreachednomorethanapercentofequityislost(RISK),oruseafixedpercentofequity(EQUITY),oruseafixedamountinquotecurrencye.g.USD(SIZE),oruseafixedamountofcontracts(CONTR).',group='💰Quantity/RiskManagement')
capitalRiskRatio=input.float(defval=1.0,title='  CapitalRisk%',minval=0.1,maxval=10.0,step=0.5,tooltip='Themaximumpercentageofthetotalequitytoriskineverytradewhennoleverageisused.',group='💰Quantity/RiskManagement')/100.0
equityRatio=input.float(defval=10.0,title='  Equity%        ',minval=1.0,maxval=100.0,step=0.5,tooltip='Thepercentageoftheequitytoenterineverytradewhennoleverageisused.',group='💰Quantity/RiskManagement')/100.0
orderSize=input.float(defval=10000.0,title='  OrderSize    ',minval=1.0,tooltip='Thefixedtradesizeinquotecurrencyusedtoenterineverytradewhennoleverageisused.',group='💰Quantity/RiskManagement')
contracts=input.int(defval=1,title='  Contracts     ',minval=1,tooltip='Thefixednumberofcontractstoenterineverytradewhennoleverageisused.',group='💰Quantity/RiskManagement')
minOrderSize=input.float(defval=10.0,title='MinimumOrderSize',minval=0.0,step=1.0,tooltip='Theminimumtradesizeinquotecurrencythatisallowedintheexchangeforavalidnewposition(e.g.inBinanceyoucannottradeamountsthatareequalorlessthan10USD).',group='💰Quantity/RiskManagement')
longLeverage=input.int(defval=1,title='LeverageLong/Short🛈➡   ',minval=1,inline='Leverage',group='💰Quantity/RiskManagement')
shortLeverage=input.int(defval=1,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=1,tooltip='Leveragefactorusedtomultiplytheinitialriskquantityofeachtrade(byborrowingtheremainingamount).Thus,theprofitsandlossesaremultipliedrespectively.INFORMATION!Themarginforlong/shortpositionsvalueinthe"Settings/Properties"shouldbeadjustedaccoridnglytocorrectlytriggermargincalls.',inline='Leverage',group='💰Quantity/RiskManagement')
moonbagQuantityRatio=input.float(defval=0.0,title='MoonbagQuantity%',minval=0.0,maxval=99.9,step=0.5,tooltip='ThepercentageofthepositionthatwillNOTbeexitedwhenALLthetakeprofitpricetargetsarereached.Ifmorethanonetakeprofitpricetargetisset,thenALLtargetswillshareequallytheremainingamountandexitwhentakeprofittargetsarereached.Themoonbagamountwillexitonlywhenstoplossisreachedoraclosesignalisreceived.',group='💰Quantity/RiskManagement')/100.0
maxDrawdownEnabled=input.bool(defval=false,title='MaxDrawdown%    ',inline='Drawdown',group='💰Quantity/RiskManagement')
maxDrawdownPerc=input.float(defval=25.0,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=1.0,maxval=100.0,step=0.5,tooltip='Themaximumdrawdowntostoptrading.',inline='Drawdown',group='💰Quantity/RiskManagement')
//LOGIC===============================================================================================================
varfloattakeProfitAproxQuantityRatio=0.0005+(1.0-moonbagQuantityRatio)/numOfTakeProfitTargets
varfloattakeProfitQuantityRatio=numOfTakeProfitTargets==0?0:takeProfitAproxQuantityRatio.clamp_up(0.0,1.0,3)
varintquoteDecimalDigits=(syminfo.mintick*syminfo.pointvalue).num_of_decimal_digits()+1
getEntryQuantityDecimalDigits(floatentryPrice)=>
(minOrderSize/entryPrice).num_of_decimal_digits()+1
getExitQuantityDecimalDigits(floatentryPrice)=>
getEntryQuantityDecimalDigits(entryPrice)+1
varintnumOfExitsPerTrade=math.max(moonbagQuantityRatio==0.0?numOfTakeProfitTargets:numOfTakeProfitTargets+1,1)
varfloatminEntrySize=minOrderSize*numOfExitsPerTrade
getRiskQuoteQuantity(simpleintleverage,floatstopLossRatio)=>
(strategy.equity*capitalRiskRatio*leverage/stopLossRatio).clamp_down(minEntrySize,strategy.equity*leverage,quoteDecimalDigits)
getEquityQuoteQuantity(simpleintleverage)=>
(strategy.equity*equityRatio*leverage).clamp_down(minEntrySize,strategy.equity*leverage,quoteDecimalDigits)
getSizeQuoteQuantity(simpleintleverage)=>
(orderSize*leverage).clamp_down(minEntrySize,strategy.equity*leverage,quoteDecimalDigits)
getContractsQuoteQuantity(simpleintleverage,floatentryPrice)=>
(contracts*entryPrice*leverage).clamp_down(minEntrySize,strategy.equity*leverage,quoteDecimalDigits)
getBaseQuantity(floatquoteQuantity,floatentryPrice)=>
(quoteQuantity/entryPrice).floor(getEntryQuantityDecimalDigits(entryPrice))
getQuoteQuantity(simpleintleverage,floatstopLossRatio,floatentryPrice)=>
switchquantityMethod
'RISK'=>getRiskQuoteQuantity(leverage,stopLossRatio)
'EQUITY'=>getEquityQuoteQuantity(leverage)
'SIZE'=>getSizeQuoteQuantity(leverage)
'CONTR'=>getContractsQuoteQuantity(leverage,entryPrice)
=>na
getCapitalRisk(floatstopLossRatio,floatentryPrice)=>
switchquantityMethod
'RISK'=>capitalRiskRatio
'EQUITY'=>equityRatio*stopLossRatio
'SIZE'=>(orderSize/strategy.equity)*stopLossRatio
'CONTR'=>(contracts*entryPrice/strategy.equity)*stopLossRatio
=>na
floatlongRemainingQuantityRatio=math.max(0.0,1.0-longTrailTakeProfitExecutedCount*takeProfitQuantityRatio)
varfloatlongEntryQuoteQuantity=na
varfloatlongEntryQuoteQuantityRatio=na
varfloatlongEntryBaseQuantity=na
varfloatlongTakeProfitQuantity=na
varfloatlongCapitalRiskRatio=na
if(longLimitOrStopEntryIsActiveorvalidOpenLongPosition)
longEntryQuoteQuantity:=getQuoteQuantity(longLeverage,longStopLossRatio,longEntryPrice)
longEntryQuoteQuantityRatio:=longEntryQuoteQuantity/strategy.equity
longEntryBaseQuantity:=getBaseQuantity(longEntryQuoteQuantity,longEntryPrice)
longTakeProfitQuantity:=(longEntryBaseQuantity*takeProfitQuantityRatio).ceil(getExitQuantityDecimalDigits(longEntryPrice))
longCapitalRiskRatio:=getCapitalRisk(longStopLossRatio,longEntryPrice)
varfloatlongRemainingQuantity=na
if(validOpenLongPositionorenteredLongTradeorisLongPositionorcompletedLongTrade)
longRemainingQuantity:=(longEntryBaseQuantity*longRemainingQuantityRatio).ceil(getExitQuantityDecimalDigits(longEntryPrice))
floatshortRemainingQuantityRatio=math.max(0.0,1.0-shortTrailTakeProfitExecutedCount*takeProfitQuantityRatio)
varfloatshortEntryQuoteQuantity=na
varfloatshortEntryQuoteQuantityRatio=na
varfloatshortEntryBaseQuantity=na
varfloatshortTakeProfitQuantity=na
varfloatshortCapitalRiskRatio=na
if(shortLimitOrStopEntryIsActiveorvalidOpenShortPosition)
shortEntryQuoteQuantity:=getQuoteQuantity(shortLeverage,shortStopLossRatio,shortEntryPrice)
shortEntryQuoteQuantityRatio:=shortEntryQuoteQuantity/strategy.equity
shortEntryBaseQuantity:=getBaseQuantity(shortEntryQuoteQuantity,shortEntryPrice)
shortTakeProfitQuantity:=(shortEntryBaseQuantity*takeProfitQuantityRatio).ceil(getExitQuantityDecimalDigits(shortEntryPrice))
shortCapitalRiskRatio:=getCapitalRisk(shortStopLossRatio,shortEntryPrice)
varfloatshortRemainingQuantity=na
if(validOpenShortPositionorenteredShortTradeorisShortPositionorcompletedShortTrade)
shortRemainingQuantity:=(shortEntryBaseQuantity*shortRemainingQuantityRatio).ceil(getExitQuantityDecimalDigits(shortEntryPrice))
//#endregion===========================================================================================================
//#region🎯TAKEPROFIT2
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforthetakeprofitlogicimplementationbasedonthemethodandthenumberofsteptakeprofittargetsandthetrailingdistance
//Dependencies:VOLATILITY,DISTANCE,ENTRY,TAKEPROFIT1
//Results:longTakeProfitPrices,shortTakeProfitPrices,longTrailTakeProfitOffsetTicks,shortTrailTakeProfitOffsetTicks,takeProfitTrailEnabled
//INPUT===============================================================================================================
varlongTakeProfitDistInitSettings=dr.DistSettings.new(
distMethod=input.string(defval='ATR',title='InitTPDistanceMethod',options=['PERC','ATR','STDEV','TICKS','PROF','RR','HHLL'],tooltip='Themethodtocalculatethedistanceofthefirsttakeprofitpricetarget.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV),Tickbased(TICKS),FixedProfit(PROF),Risk-Rewardbased(RR)orHighesthigh/Lowestlow(HHLL).',group='🎯TakeProfit'),
distMul=input.float(defval=5.0,title='  InitDistMul|LenLong/Short',minval=0.05,step=0.05,inline='InitTakeProfitPerc',group='🎯TakeProfit'),
commissionRatio=commissionRatio)
vartakeProfitInitMarSettings=dr.DistSettings.new(
distMethod=input.string(defval='TICKS',title='InitMarginDistanceMethod',options=['PERC','ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethemargintooffsetthedistanceofthetakeprofitpricetarget.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV)orTickbased(TICKS).',group='🎯TakeProfit'),
distMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='InitTakeProfitMargin',group='🎯TakeProfit')?
input.float(defval=5.0,title='InitMarDistMul     ',step=0.5,tooltip='Themarginmultipliertodefinetheinitialtakeprofitdistanceoffset.',inline='InitTakeProfitMargin',group='🎯TakeProfit'):na)
vartakeProfitInitRestrictSettings=dr.RestrictSettings.new(
restrDistMethod=input.string(defval='PERC',title='InitRestrictDistanceMethod',options=['PERC','ATR','STDEV','TICKS','PROF','RR'],tooltip='Themethodtocalculatethemaximum/minimumdistanceoftheinitialtakeprofitprice.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV),Tickbased(TICKS),Profitbased(PROF)orRisk-Rewardbased(RR).',group='🎯TakeProfit'),
minDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='InitTakeProfitMinDistance',group='🎯TakeProfit')?
input.float(defval=0.1,title='MinDistMul       ​​​​',minval=0.0,step=0.05,tooltip='Enableaminimumdistancedefinedbythismultiplierandtherestrictdistancemethod.Theminimumcanbeusedtomakesurethatyouwillcompensatefor(atleast)thecommissionrates,especiallywhenyouaretradingonlowertimeframes.',inline='InitTakeProfitMinDistance',group='🎯TakeProfit'):na,
maxDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='InitTakeProfitMaxDistance',group='🎯TakeProfit')?
input.float(defval=10.0,title='MaxDistMul       ​​​​',minval=0.0,step=0.05,tooltip='Enableamaximumdistancedefinedbythismultiplierandtherestrictdistancemethod.Themaximumcanbeusedtomakesurethatyougetsomeprofitswhenthepricemovesinthedesireddirection.',inline='InitTakeProfitMaxDistance',group='🎯TakeProfit'):na,
commissionRatio=commissionRatio)
varshortTakeProfitInitDistSettings=dr.DistSettings.new(
distMethod=longTakeProfitDistInitSettings.distMethod,
distMul=input.float(defval=5.0,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=0.05,step=0.05,tooltip='Thedistancemultipliertodefinethelong/shortfirsttakeprofitpricefromtheopenprice.Themultiplierwillbeappliedtotheunitpricethatisdefinedbythedistancemethodthatisused.IftheHHLLmethodisused,thenthelengthwilldefinethewindowforthehighesthighandlowestlowcalculations.',inline='InitTakeProfitPerc',group='🎯TakeProfit'),
commissionRatio=commissionRatio)
varlongTakeProfitStepDistSettings=dr.DistSettings.new(
distMethod=input.string(defval='PERC',title='StepTPDistanceMethod',options=['PERC','ATR','STDEV','TICKS','PROF','RR'],tooltip='Themethodtocalculatethedistanceofadditionalsteptakeprofitpricetargets.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV),Tickbased(TICKS),FixedProfit(PROF)orRisk-Rewardbased(RR).',group='🎯TakeProfit'),
distMul=input.float(defval=5.0,title='  StepDistMulLong/Short  ​​',minval=0.05,step=0.05,inline='StepTakeProfitPerc',group='🎯TakeProfit'),
commissionRatio=commissionRatio)
vartakeProfitStepRestrictSettings=dr.RestrictSettings.new(
restrDistMethod=input.string(defval='PERC',title='StepRestrictDistanceMethod',options=['PERC','ATR','STDEV','TICKS','PROF','RR'],tooltip='Themethodtocalculatethemaximum/minimumdistanceofthesteptakeprofitprice.Percentagebased(PERC),ATRbased(ATR),Standarddeviationbased(STDEV),Tickbased(TICKS),Profitbased(PROF)orRisk-Rewardbased(RR).',group='🎯TakeProfit'),
minDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='StepTakeProfitMinDistance',group='🎯TakeProfit')?
input.float(defval=0.1,title='MinDistMul       ​​​​​',minval=0.0,step=0.05,tooltip='Enableaminimumdistancedefinedbythismultiplierandtherestrictdistancemethod.Theminimumcanbeusedtomakesurethatyouwillcompensatefor(atleast)thecommissionrates,especiallywhenyouaretradingonlowertimeframes.',inline='StepTakeProfitMinDistance',group='🎯TakeProfit'):na,
maxDistMul=input.bool(defval=false,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',inline='StepTakeProfitMaxDistance',group='🎯TakeProfit')?
input.float(defval=5.0,title='MaxDistMul       ​​​​​',minval=0.0,step=0.05,tooltip='Enableamaximumdistancedefinedbythismultiplierandtherestrictdistancemethod.Themaximumcanbeusedtomakesurethatyougetsomeprofitswhenthepricemovesinthedesireddirection.',inline='StepTakeProfitMaxDistance',group='🎯TakeProfit'):na,
commissionRatio=commissionRatio)
varshortTakeProfitStepDistSettings=dr.DistSettings.new(
distMethod=longTakeProfitStepDistSettings.distMethod,
distMul=input.float(defval=5.0,title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',minval=0.05,step=0.05,tooltip='Thedistancemultipliertobeaddedontopofthefirstlong/shorttakeprofitdistancemultipliertodefinethelong/shortsteptakeprofitpricetarget.Themultiplierwillbeappliedtotheunitpricethatisdefinedbythedistancemethodthatisused.',inline='StepTakeProfitPerc',group='🎯TakeProfit'),
commissionRatio=commissionRatio)
takeProfitTrailEnabled=input.bool(defval=false,title='EnableTrail⚠️💹',tooltip='Enableordisablethetrailingfortakeprofit.WARNING!Thisfeaturewillrepaint.Makesureyouuseitalongwith"BarMagnifier"and"DeepBacktesting"forrealisticbacktestresults.',group='🎯TakeProfit')
vartakeProfitTrailDistSettings=dr.DistSettings.new(
distMethod=input.string(defval='PERC',title='  TrailTPDistanceMethod',options=['PERC','ATR','STDEV','TICKS'],tooltip='Themethodtocalculatethedistanceofthetrailingtakeprofit.Percentagebased(PERC),ATRbased(ATR)orStandarddeviationbased(STDEV)orTickbased(TICKS).',group='🎯TakeProfit'),
distMul=input.float(defval=2.0,title='    TrailDistMul',minval=0.01,step=0.05,tooltip='Thedistancemultipliertodefinethetakeprofitpriceoffsetfromthehigh/lowpriceafterthetargetisreachedwhentrailing.Themultiplierwillbeappliedtotheunitpricethatisdefinedbythedistancemethodthatisused.',group='🎯TakeProfit'))
//LOGIC===============================================================================================================
floattakeProfitHighestHigh=ta.highest(high,math.max(math.floor(longTakeProfitDistInitSettings.distMul),1))
//Calculatetheactuallongtakeprofitpriceandticksthatishigherfromthereferenceusingthedistance
getLongTakeProfitPrice(dr.DistSettingsdist,floatreference,dr.AuxDatashortBiasedAuxData,dr.RestrictSettingsrestrict,dr.DistSettingsmar=na)=>
dist.higher_short_biased_price(reference,shortBiasedAuxData,restrict,mar,takeProfitHighestHigh)
getlongTakeProfitTicks(dr.DistSettingsdistSettings,floatreferencePrice,dr.AuxDatashortBiasedAuxData)=>
distSettings.ticks(referencePrice,shortBiasedAuxData)
varbooltakeProfitAdjustmentIsNeeded=(entryOrderType=='MARKET'orentryOrderType=='STOP')andlongTakeProfitDistInitSettings.distMethod!='HHLL'
if(longLimitOrStopEntryIsActiveorvalidOpenLongPosition)
longTakeProfitShortBiasedAuxData=dr.AuxData.new(atr=negAtr,stdev=negStDev,baseQuantity=longTakeProfitQuantity,stopLossRatio=longStopLossRatio)
floatcurrentLongTakeProfitPrice=getLongTakeProfitPrice(longTakeProfitDistInitSettings,longEntryPrice,longTakeProfitShortBiasedAuxData,takeProfitInitRestrictSettings,takeProfitInitMarSettings)
fori=0totakeProfitTargetsSize
longTakeProfitPrices.set(i,currentLongTakeProfitPrice)
longTrailTakeProfitOffsetTicks.set(i,getlongTakeProfitTicks(takeProfitTrailDistSettings,currentLongTakeProfitPrice,longTakeProfitShortBiasedAuxData))
if(i<takeProfitTargetsSize)
currentLongTakeProfitPrice:=getLongTakeProfitPrice(longTakeProfitStepDistSettings,currentLongTakeProfitPrice,longTakeProfitShortBiasedAuxData,takeProfitStepRestrictSettings)
elseif(enteredLongTradeandtakeProfitAdjustmentIsNeeded)
floatlongEntryPriceOffset=longEntryPrice-nz(longEntryPrice[1],longEntryPrice)
fori=0totakeProfitTargetsSize
longTakeProfitPrices.set(i,longTakeProfitPrices.get(i)+longEntryPriceOffset)
longTrailTakeProfitOffsetTicks.set(i,longTrailTakeProfitOffsetTicks.get(i)+math.floor(longEntryPriceOffset/syminfo.mintick))
floattakeProfitLowestLow=ta.lowest(low,math.max(math.floor(shortTakeProfitInitDistSettings.distMul),1))
//Calculatetheactualshorttakepriceandticksthatislowerfromthereferenceusingthedistance
getShortTakeProfitPrice(dr.DistSettingsdist,floatreference,dr.AuxDatalongBiasedAuxData,dr.RestrictSettingsrestrict,dr.DistSettingsmar=na)=>
dist.lower_long_biased_price(reference,longBiasedAuxData,restrict,mar,takeProfitLowestLow)
getShortTakeProfitTicks(dr.DistSettingsdistSettings,floatreferencePrice,dr.AuxDatalongBiasedAuxData)=>
distSettings.ticks(referencePrice,longBiasedAuxData)
if(shortLimitOrStopEntryIsActiveorvalidOpenShortPosition)
shortTakeProfitLongBiasedAuxData=dr.AuxData.new(atr=posAtr,stdev=posStDev,baseQuantity=shortTakeProfitQuantity,stopLossRatio=shortStopLossRatio)
floatcurrentShortTakeProfitPrice=getShortTakeProfitPrice(shortTakeProfitInitDistSettings,shortEntryPrice,shortTakeProfitLongBiasedAuxData,takeProfitInitRestrictSettings,takeProfitInitMarSettings)
fori=0totakeProfitTargetsSize
shortTakeProfitPrices.set(i,currentShortTakeProfitPrice)
shortTrailTakeProfitOffsetTicks.set(i,getShortTakeProfitTicks(takeProfitTrailDistSettings,currentShortTakeProfitPrice,shortTakeProfitLongBiasedAuxData))
if(i<takeProfitTargetsSize)
currentShortTakeProfitPrice:=getShortTakeProfitPrice(shortTakeProfitStepDistSettings,currentShortTakeProfitPrice,shortTakeProfitLongBiasedAuxData,takeProfitStepRestrictSettings)
elseif(enteredShortTradeandtakeProfitAdjustmentIsNeeded)
floatshortEntryPriceOffset=shortEntryPrice-nz(shortEntryPrice[1],shortEntryPrice)
fori=0totakeProfitTargetsSize
shortTakeProfitPrices.set(i,shortTakeProfitPrices.get(i)+shortEntryPriceOffset)
shortTrailTakeProfitOffsetTicks.set(i,shortTrailTakeProfitOffsetTicks.get(i)+math.floor(shortEntryPriceOffset/syminfo.mintick))
//PLOT================================================================================================================
if(validOpenLongPositionandshowOpenLabelsandbarstate.isconfirmed)
stringlongOpenTooltip=str.format('Quantity:{0,number,percent}\nCapitalRisk:{1,number,percent}\nEntryPrice:{2,number,currency}\nSL:{3,number,currency}',longEntryQuoteQuantityRatio,longCapitalRiskRatio,longEntryPrice,longStopLossPrice)
for[i,longTakeProfitPrice]inlongTakeProfitPrices
longOpenTooltip:=longOpenTooltip+str.format('\nTP{0,number,integer}:{1,number,currency}',i+1,longTakeProfitPrice)
label.new(x=bar_index,y=entryOrderType=='LIMIT'?nz(longLimitOrStopEntryPrice,close):na,text='Open',yloc=entryOrderType=='LIMIT'?yloc.price:yloc.belowbar,color=longOpenColor,style=label.style_label_up,textcolor=textColor,tooltip=longOpenTooltip)
if(validOpenShortPositionandshowOpenLabelsandbarstate.isconfirmed)
stringshortOpenTooltip=str.format('Quantity:{0,number,percent}\nCapitalRisk:{1,number,percent}\nEntryPrice:{2,number,currency}\nSL:{3,number,currency}',shortEntryQuoteQuantityRatio,shortCapitalRiskRatio,shortEntryPrice,shortStopLossPrice)
for[i,shortTakeProfitPrice]inshortTakeProfitPrices
shortOpenTooltip:=shortOpenTooltip+str.format('\nTP{0,number,integer}:{1,number,currency}',i+1,shortTakeProfitPrice)
label.new(x=bar_index,y=entryOrderType=='LIMIT'?nz(shortLimitOrStopEntryPrice,close):na,text='Open',yloc=entryOrderType=='LIMIT'?yloc.price:yloc.abovebar,color=shortOpenColor,style=label.style_label_down,textcolor=textColor,tooltip=shortOpenTooltip)
//#endregion===========================================================================================================
//#region📊ANALYTICS
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforplottingadditionalinformationforstatisticsandbacktestingpurposes
//Dependencies:TRACKPOSITION,ENTRY,TAKEPROFIT1,TAKEPROFIT2
//Results:NONE
//INPUT===============================================================================================================
winColor=input.color(defval=color.new(color.green,0),title='🎨️Win/LossColor      ',inline='Entry',group='📊Analytics')
lossColor=input.color(defval=color.new(color.red,0),title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',tooltip='Thecolorofthewin/losslabelsandthemarktradelines.',inline='Entry',group='📊Analytics')
showTradeStats=input.bool(defval=false,title='ShowTradeStats⚠️🐌',tooltip='Showthewinning/losingtradestatswhencomplete.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='📊Analytics')
showStatsTable=input.bool(defval=false,title='ShowStatsTable⚠️🐌 ',inline='StatsTable',group='📊Analytics')
statsTablePos=input.string(defval='TOPRIGHT',title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',options=['TOPRIGHT','TOPLEFT','BOTRIGHT','BOTLEFT'],tooltip='Showthetablewiththeoveralltradestatisticsontheselectedcorner.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',inline='StatsTable',group='📊Analytics')
showMetricsTable=input.bool(defval=false,title='ShowMetricsTable⚠️🐌',inline='MetricsTable',group='📊Analytics')
metricsTablePos=input.string(defval='BOTLEFT',title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',options=['TOPRIGHT','TOPLEFT','BOTRIGHT','BOTLEFT'],tooltip='Showthetablewiththetrademetricsontheselectedcorner.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',inline='MetricsTable',group='📊Analytics')
//LOGIC===============================================================================================================
varboolshowTable=showStatsTableorshowMetricsTable
varboolshowStats=showTableorshowTradeStats
getTablePosition(simplestringpos)=>
switchpos
'BOTCENTER'=>position.bottom_center
'BOTLEFT'=>position.bottom_left
'BOTRIGHT'=>position.bottom_right
'MIDCENTER'=>position.middle_center
'MIDLEFT'=>position.middle_left
'MIDRIGHT'=>position.middle_right
'TOPCENTER'=>position.top_center
'TOPLEFT'=>position.top_left
'TOPRIGHT'=>position.top_right
=>position.middle_center
//Countwinning/losingstreaks
varintmaxWinningStreak=0
varintmaxLosingStreak=0
varintcurrentWinningStreak=0
varintcurrentLosingStreak=0
varintnumOfInconclusiveExits=0
//Storethefreewinning/losingprofitpercentages
varfloat[]winTradeFreeProfitsPerc=array.new<float>()
varfloat[]lossTradeFreeProfitsPerc=array.new<float>()
//Storethewinning/losingprofitpercentages
varfloat[]winTradeProfitsPerc=array.new<float>()
varfloat[]lossTradeProfitsPerc=array.new<float>()
//Storethegainsonaccount
varfloat[]winTradeGainsPerc=array.new<float>()
varfloat[]lossTradeGainsPerc=array.new<float>()
//TakeProfitsexecutedcounts
varfloatwinSumTakeProfitExecutedCount=0.0
varfloatlossSumTakeProfitExecutedCount=0.0
//Quantitysums
varfloatwinSumQuantityPerc=0.0
varfloatlossSumQuantityPerc=0.0
//Risks
varfloat[]winRisksPerc=array.new<float>()
varfloat[]lossRisksPerc=array.new<float>()
//Risk/Reawardratios
varfloat[]winRiskRewardRatios=array.new<float>()
varfloat[]lossRiskRewardRatios=array.new<float>()
closedTradesEntryBarIndex(intn)=>
strategy.closedtrades.entry_bar_index(strategy.closedtrades-n)
closedTradesEntryPrice(intn)=>
strategy.closedtrades.entry_price(strategy.closedtrades-n)
closedTradeEntryIdStartsWith(simplestringprefix,intn=1)=>
strategy.closedtrades>=n?str.startswith(strategy.closedtrades.entry_id(strategy.closedtrades-n),prefix):false
lastTwoClosedTradesEnteredInTheSameBar()=>
strategy.closedtrades>=2?closedTradesEntryBarIndex(2)==closedTradesEntryBarIndex(1):false
getNumOfExits(simplestringorderIdClose,inttakeProfitCount)=>
strategy.closedtrades.exit_id(strategy.closedtrades-1)==orderIdClose?takeProfitCount+1:moonbagQuantityRatio==0.0andnumOfTakeProfitTargets>0?numOfTakeProfitTargets:numOfTakeProfitTargets+1
if(completedLongTradeandshowStats)
//Longentrybaridandprice
varintlastLongEntryBarIndex=na
varfloatlastLongEntryPrice=na
if(closedTradeEntryIdStartsWith(longOrderIdPrefix)or(closedTradeEntryIdStartsWith(longOrderIdPrefix,2)andlastTwoClosedTradesEnteredInTheSameBar()))
lastLongEntryBarIndex:=closedTradesEntryBarIndex(1)
lastLongEntryPrice:=closedTradesEntryPrice(1)
elseif(strategy.closedtrades>1?closedTradeEntryIdStartsWith(longOrderIdPrefix,2)andlastTwoClosedTradesExitedInTheSameBar():false)
lastLongEntryBarIndex:=closedTradesEntryBarIndex(2)
lastLongEntryPrice:=closedTradesEntryPrice(2)
floatexRatio=lastLongExitPrice/lastLongEntryPrice
floatlongFreeProfitRatio=exRatio-1.0-exRatio*commissionRatio-commissionRatio
floatlongProfitRatio=-commissionRatio
boollongInconclusiveExit=false
inthistId=longLimitOrStopEntryIsActiveorvalidOpenLongPositionorenteredLongTrade?1:0
intnumOfExits=getNumOfExits(longOrderIdClose,longTrailTakeProfitExecutedCount)
fori=strategy.closedtrades-1tostrategy.closedtrades-numOfExits
floatithExPrice=closedTradeExitIdContains(longOrderIdPrefix)?strategy.closedtrades.exit_price(i):strategy.closedtrades.exit_price(i-1)
floatithExRatio=ithExPrice/lastLongEntryPrice
floatquantityRatio=str.startswith(strategy.closedtrades.exit_id(i),str.format('{0}TakeProfit',longOrderIdPrefix))?takeProfitQuantityRatio:longRemainingQuantityRatio
longProfitRatio+=(ithExRatio-1.0-ithExRatio*commissionRatio)*quantityRatio
inttpId=moonbagQuantityRatio==0.0?numOfTakeProfitTargets+i-strategy.closedtrades:numOfTakeProfitTargets+i-strategy.closedtrades-1
longInconclusiveStopLoss=tpId<numOfTakeProfitTargetsandtpId>=0andlow<longStopLossPrice?highestHighSinceLongEntry>(longTakeProfitPrices[histId]).get(tpId)andnotlongTrailTakeProfitExecuted.get(tpId):false
longInconclusiveTakeProfit=false
forj=strategy.closedtrades-1tostrategy.closedtrades-numOfExits
longInconclusiveTakeProfit:=bar_index==strategy.closedtrades.exit_bar_index(i)andbar_index==strategy.closedtrades.exit_bar_index(j)andstrategy.closedtrades.exit_price(i)!=strategy.closedtrades.exit_price(j)andlow<longStopLossPrice[histId]
longInconclusiveExit:=longInconclusiveExitorlongInconclusiveStopLossorlongInconclusiveTakeProfit
floatlongGainPerc=longProfitRatio*100.0*longEntryQuoteQuantityRatio[histId]
floatlongAvgTakeProfitRatio=nz(((longTakeProfitPrices[histId]).avg()-lastLongEntryPrice)/lastLongEntryPrice)
floatlongRiskRewardRatio=longAvgTakeProfitRatio/longEntryStopLossRatio
boolisWin=longProfitRatio>=0.0
//Keepstatsforlateruse
if(showTable)
if(isWin)
currentWinningStreak:=currentWinningStreak+1
winTradeFreeProfitsPerc.push(100.0*longFreeProfitRatio)
winTradeProfitsPerc.push(100.0*longProfitRatio)
winTradeGainsPerc.push(longGainPerc)
winSumTakeProfitExecutedCount:=winSumTakeProfitExecutedCount+longTrailTakeProfitExecutedCount
winSumQuantityPerc:=winSumQuantityPerc+100.0*longEntryQuoteQuantityRatio[histId]
currentLosingStreak:=0
if(quantityMethod!='RISK')
winRisksPerc.push(100.0*longCapitalRiskRatio[histId])
winRiskRewardRatios.push(longRiskRewardRatio)
else
currentLosingStreak:=currentLosingStreak+1
lossTradeFreeProfitsPerc.push(100.0*longFreeProfitRatio)
lossTradeProfitsPerc.push(100.0*longProfitRatio)
lossTradeGainsPerc.push(longGainPerc)
lossSumTakeProfitExecutedCount:=lossSumTakeProfitExecutedCount+longTrailTakeProfitExecutedCount
lossSumQuantityPerc:=lossSumQuantityPerc+100.0*longEntryQuoteQuantityRatio[histId]
currentWinningStreak:=0
if(quantityMethod!='RISK')
lossRisksPerc.push(100.0*longCapitalRiskRatio[histId])
lossRiskRewardRatios.push(longRiskRewardRatio)
maxWinningStreak:=math.max(currentWinningStreak,maxWinningStreak)
maxLosingStreak:=math.max(currentLosingStreak,maxLosingStreak)
if(longInconclusiveExit)
numOfInconclusiveExits:=numOfInconclusiveExits+1
//Plottrades'lineandlabel
if(showTradeStats)
stringlongFreeProfitPercStr=(longFreeProfitRatio>=0.0?'+':'')+str.tostring(100.0*longFreeProfitRatio,format.percent)
stringlongProfitPercStr=(isWin?'+':'')+str.tostring(100.0*longProfitRatio,format.percent)
stringlongGainPercStr=(isWin?'+':'')+str.tostring(longGainPerc,format.percent)
floattradePrice=isWinandlongTrailTakeProfitExecutedCount>0?math.max((longTakeProfitPrices[histId]).get(longTrailTakeProfitExecutedCount-1),longStopLossPrice[histId],lastLongExitPrice):lastLongExitPrice
intlabelBarId=math.floor((lastLongEntryBarIndex+lastLongExitBarIndex+1)/2)
line.new(x1=labelBarId,y1=tradePrice,x2=lastLongEntryBarIndex,y2=lastLongEntryPrice,xloc=xloc.bar_index,extend=extend.none,color=isWin?winColor:lossColor,style=line.style_arrow_right,width=1)
line.new(x1=labelBarId,y1=tradePrice,x2=lastLongExitBarIndex,y2=lastLongExitPrice,xloc=xloc.bar_index,extend=extend.none,color=isWin?winColor:lossColor,style=line.style_arrow_right,width=1)
label.new(x=labelBarId,y=tradePrice,text=(longInconclusiveExit?'🚨':'')+(isWin?'Win':'Loss'),xloc=xloc.bar_index,yloc=yloc.price,color=isWin?winColor:lossColor,style=isWin?label.style_label_down:label.style_label_up,textcolor=textColor,size=size.normal,
tooltip=str.format('Quantity:{0,number,percent}\nCapitalRisk:{1,number,percent}\nEntryPrice:{2,number,currency}\nExitPrice:{3,number,currency}\nFreeProfit:{4}\nProfit:{5}\nGain:{6}\nTPExec#:{7,number,integer}\nRiskReward:{8,number,#.##}\nInitSL:{9,number,percent}\nAvgTP:{10,number,percent}',
longEntryQuoteQuantityRatio[histId],longCapitalRiskRatio[histId],lastLongEntryPrice,lastLongExitPrice,longFreeProfitPercStr,longProfitPercStr,longGainPercStr,longTrailTakeProfitExecutedCount,longRiskRewardRatio,longEntryStopLossRatio,longAvgTakeProfitRatio))
if(completedShortTradeandshowStats)
//Shortentrybaridandprice
varintlastShortEntryBarIndex=na
varfloatlastShortEntryPrice=na
if(closedTradeEntryIdStartsWith(shortOrderIdPrefix)or(closedTradeEntryIdStartsWith(shortOrderIdPrefix,2)andlastTwoClosedTradesEnteredInTheSameBar()))
lastShortEntryBarIndex:=closedTradesEntryBarIndex(1)
lastShortEntryPrice:=closedTradesEntryPrice(1)
elseif(strategy.closedtrades>1?closedTradeEntryIdStartsWith(shortOrderIdPrefix,2)andlastTwoClosedTradesExitedInTheSameBar():false)
lastShortEntryBarIndex:=closedTradesEntryBarIndex(2)
lastShortEntryPrice:=closedTradesEntryPrice(2)
floatexRatio=lastShortExitPrice/lastShortEntryPrice
floatshortFreeProfitRatio=1.0-exRatio-exRatio*commissionRatio-commissionRatio
floatshortProfitRatio=-commissionRatio
boolshortInconclusiveExit=false
inthistId=shortLimitOrStopEntryIsActiveorvalidOpenShortPositionorenteredShortTrade?1:0
intnumOfExits=getNumOfExits(shortOrderIdClose,shortTrailTakeProfitExecutedCount)
fori=strategy.closedtrades-1tostrategy.closedtrades-numOfExits
floatithExPrice=closedTradeExitIdContains(shortOrderIdPrefix)?strategy.closedtrades.exit_price(i):strategy.closedtrades.exit_price(i-1)
floatithExRatio=ithExPrice/lastShortEntryPrice
floatquanityRatio=str.startswith(strategy.closedtrades.exit_id(i),str.format('{0}TakeProfit',shortOrderIdPrefix))?takeProfitQuantityRatio:shortRemainingQuantityRatio
shortProfitRatio+=(1.0-ithExRatio-ithExRatio*commissionRatio)*quanityRatio
inttpId=moonbagQuantityRatio==0.0?numOfTakeProfitTargets+i-strategy.closedtrades:numOfTakeProfitTargets+i-strategy.closedtrades-1
shortInconclusiveStopLoss=tpId<numOfTakeProfitTargetsandtpId>=0andhigh>shortStopLossPrice?lowestLowSinceShortEntry<(shortTakeProfitPrices[histId]).get(tpId)andnotshortTrailTakeProfitExecuted.get(tpId):false
shortInconclusiveTakeProfit=false
forj=strategy.closedtrades-1tostrategy.closedtrades-numOfExits
shortInconclusiveTakeProfit:=bar_index==strategy.closedtrades.exit_bar_index(i)andbar_index==strategy.closedtrades.exit_bar_index(j)andstrategy.closedtrades.exit_price(i)!=strategy.closedtrades.exit_price(j)andhigh>shortStopLossPrice[histId]
shortInconclusiveExit:=shortInconclusiveExitorshortInconclusiveStopLossorshortInconclusiveTakeProfit
floatshortGainPerc=shortProfitRatio*100.0*shortEntryQuoteQuantityRatio[histId]
floatshortAvgTakeProfitRatio=nz((lastShortEntryPrice-(shortTakeProfitPrices[histId]).avg())/lastShortEntryPrice)
floatshortRiskRewardRatio=shortAvgTakeProfitRatio/shortEntryStopLossRatio
boolisWin=shortProfitRatio>=0.0
//Keepstatsforlateruse
if(showTable)
if(isWin)
currentWinningStreak:=currentWinningStreak+1
winTradeFreeProfitsPerc.push(100.0*shortFreeProfitRatio)
winTradeProfitsPerc.push(100.0*shortProfitRatio)
winTradeGainsPerc.push(shortGainPerc)
winSumTakeProfitExecutedCount:=winSumTakeProfitExecutedCount+shortTrailTakeProfitExecutedCount
winSumQuantityPerc:=winSumQuantityPerc+100.0*shortEntryQuoteQuantityRatio[histId]
currentLosingStreak:=0
if(quantityMethod!='RISK')
winRisksPerc.push(100.0*shortCapitalRiskRatio[histId])
winRiskRewardRatios.push(shortRiskRewardRatio)
else
currentLosingStreak:=currentLosingStreak+1
lossTradeFreeProfitsPerc.push(100.0*shortFreeProfitRatio)
lossTradeProfitsPerc.push(100.0*shortProfitRatio)
lossTradeGainsPerc.push(shortGainPerc)
lossSumTakeProfitExecutedCount:=lossSumTakeProfitExecutedCount+shortTrailTakeProfitExecutedCount
lossSumQuantityPerc:=lossSumQuantityPerc+100.0*shortEntryQuoteQuantityRatio[histId]
currentWinningStreak:=0
if(quantityMethod!='RISK')
lossRisksPerc.push(100.0*shortCapitalRiskRatio[histId])
lossRiskRewardRatios.push(shortRiskRewardRatio)
maxWinningStreak:=math.max(currentWinningStreak,maxWinningStreak)
maxLosingStreak:=math.max(currentLosingStreak,maxLosingStreak)
if(shortInconclusiveExit)
numOfInconclusiveExits:=numOfInconclusiveExits+1
//Plottradestats(lineandlabel)
if(showTradeStats)
stringshortFreeProfitPercStr=(shortFreeProfitRatio>=0.0?'+':'')+str.tostring(100.0*shortFreeProfitRatio,format.percent)
stringshortProfitPercStr=(isWin?'+':'')+str.tostring(100.0*shortProfitRatio,format.percent)
stringshortGainPercStr=(isWin?'+':'')+str.tostring(shortGainPerc,format.percent)
floattradePrice=isWinandshortTrailTakeProfitExecutedCount>0?math.min((shortTakeProfitPrices[histId]).get(shortTrailTakeProfitExecutedCount-1),shortStopLossPrice[histId],lastShortExitPrice):lastShortExitPrice
intlabelBarId=math.floor((lastShortEntryBarIndex+lastShortExitBarIndex+1)/2)
line.new(x1=labelBarId,y1=tradePrice,x2=lastShortEntryBarIndex,y2=lastShortEntryPrice,xloc=xloc.bar_index,extend=extend.none,color=isWin?winColor:lossColor,style=line.style_arrow_right,width=1)
line.new(x1=labelBarId,y1=tradePrice,x2=lastShortExitBarIndex,y2=lastShortExitPrice,xloc=xloc.bar_index,extend=extend.none,color=isWin?winColor:lossColor,style=line.style_arrow_right,width=1)
label.new(x=labelBarId,y=tradePrice,text=(shortInconclusiveExit?'🚨':'')+(isWin?'Win':'Loss'),xloc=xloc.bar_index,yloc=yloc.price,color=isWin?winColor:lossColor,style=isWin?label.style_label_up:label.style_label_down,textcolor=textColor,size=size.normal,
tooltip=str.format('Quantity:{0,number,percent}\nCapitalRisk:{1,number,percent}\nEntryPrice:{2,number,currency}\nExitPrice:{3,number,currency}\nFreeProfit:{4}\nProfit:{5}\nGain:{6}\nTPExec#:{7,number,integer}\nRiskReward:{8,number,#.##}\nInitSL:{9,number,percent}\nAvgTP:{10,number,percent}',
shortEntryQuoteQuantityRatio[histId],shortCapitalRiskRatio[histId],lastShortEntryPrice,lastShortExitPrice,shortFreeProfitPercStr,shortProfitPercStr,shortGainPercStr,shortTrailTakeProfitExecutedCount,shortRiskRewardRatio,shortEntryStopLossRatio,shortAvgTakeProfitRatio))
//Buy&Hold
varfloatfirstEntry=0.0
varboolfirstBuyInit=false
varfloatbuyAndHoldPerc=0.0
if(showMetricsTableand(notfirstBuyInitand(enteredLongTradeorenteredShortTrade)))
firstEntry:=enteredLongTrade?longEntryPrice:shortEntryPrice
firstBuyInit:=true
if(showMetricsTableand(completedLongTradeorcompletedShortTrade))
buyAndHoldPerc:=100.0*(strategy.closedtrades.exit_price(strategy.closedtrades-1)-firstEntry)/firstEntry
//PLOT================================================================================================================
if(showTableand(barstate.islastconfirmedhistoryorbarstate.islast))
//Trades
intnumOfWins=winTradeProfitsPerc.size()
intnumOfLosses=lossTradeProfitsPerc.size()
intnumOfTrades=numOfWins+numOfLosses
//Rate
floatwinRate=numOfWins/numOfTrades
floatlossRate=numOfLosses/numOfTrades
//AvgFreeProfit
varfloatwinSumFreeProfit=nz(winTradeFreeProfitsPerc.sum())
varfloatlossSumFreeProfit=nz(lossTradeFreeProfitsPerc.sum())
floatwinAvgFreeProfit=nz(winSumFreeProfit/numOfWins)
floatlossAvgFreeProfit=nz(lossSumFreeProfit/numOfLosses)
floatavgFreeProfit=winAvgFreeProfit*winRate+lossAvgFreeProfit*lossRate
//FreeProfitDev
floatwinFreeProfitStDev=nz(winTradeFreeProfitsPerc.stdev())
floatlossFreeProfitStDev=nz(lossTradeFreeProfitsPerc.stdev())
floatfreeProfitStDev=winFreeProfitStDev*winRate+lossFreeProfitStDev*lossRate
//AvgProfit
floatwinSumProfit=nz(winTradeProfitsPerc.sum())
floatwinAvgProfit=nz(winSumProfit/numOfWins)
floatlossSumProfit=nz(lossTradeProfitsPerc.sum())
floatlossAvgProfit=nz(lossSumProfit/numOfLosses)
floatavgProfit=winAvgProfit*winRate+lossAvgProfit*lossRate
//ProfitDev
floatwinProfitStDev=nz(winTradeProfitsPerc.stdev())
floatlossProfitStDev=nz(lossTradeProfitsPerc.stdev())
floatprofitStDev=winProfitStDev*winRate+lossProfitStDev*lossRate
//AvgGain
floatwinSumGain=nz(winTradeGainsPerc.sum())
floatwinAvgGain=nz(winSumGain/numOfWins)
floatlossSumGain=nz(lossTradeGainsPerc.sum())
floatlossAvgGain=nz(lossSumGain/numOfLosses)
floatavgGain=winAvgGain*winRate+lossAvgGain*lossRate
//GainDev
floatwinGainStDev=nz(winTradeGainsPerc.stdev())
floatlossGainStDev=nz(lossTradeGainsPerc.stdev())
floatgainStDev=winGainStDev*winRate+lossGainStDev*lossRate
//Quantity
floatwinAvgQuantityPerc=quantityMethod!='EQUITY'?nz(winSumQuantityPerc/numOfWins):100.0*equityRatio
floatlossAvgQuantityPerc=quantityMethod!='EQUITY'?nz(lossSumQuantityPerc/numOfLosses):100.0*equityRatio
floatavgQuantityPerc=winAvgQuantityPerc*winRate+lossAvgQuantityPerc*lossRate
//Risk
floatwinAvgCapitalRiskPerc=quantityMethod!='RISK'?nz(winRisksPerc.avg()):100.0*capitalRiskRatio
floatlossAvgCapitalRiskPerc=quantityMethod!='RISK'?nz(lossRisksPerc.avg()):100.0*capitalRiskRatio
floatavgCapitalRiskPerc=winAvgCapitalRiskPerc*winRate+lossAvgCapitalRiskPerc*lossRate
//TPExec#
floatwinAvgTPExecutedCount=nz(winSumTakeProfitExecutedCount/numOfWins)
floatlossAvgTPExecutedCount=nz(lossSumTakeProfitExecutedCount/numOfLosses)
floatavgTPExecutedCount=winAvgTPExecutedCount*winRate+lossAvgTPExecutedCount*lossRate
//Risk/Reward
floatwinAvgRiskRewardRatio=nz(winRiskRewardRatios.avg())
floatlossAvgRiskRewardRatio=nz(lossRiskRewardRatios.avg())
floatavgRiskRewardRatio=winAvgRiskRewardRatio*winRate+lossAvgRiskRewardRatio*lossRate
//StatStrings
stringavgFreeProfitStr=(avgFreeProfit>0.0?'+':'')+str.tostring(avgFreeProfit,format.percent)
stringfreeProfitStDevStr='±'+str.tostring(freeProfitStDev,format.percent)
stringlossFreeProfitStDevStr=str.tostring(lossFreeProfitStDev,format.percent)
stringavgProfitStr=(avgProfit>0.0?'+':'')+str.tostring(avgProfit,format.percent)
stringprofitStDevStr='±'+str.tostring(profitStDev,format.percent)
stringlossProfitStDevStr='±'+str.tostring(lossProfitStDev,format.percent)
stringavgQuantityStr=str.tostring(avgQuantityPerc,format.percent)
//Tablecolors
varcolortxtColor=color.new(color.silver,0)
varcolorbgColor=color.new(color.black,95)
varcolorborderColor=color.new(color.black,0)
varcolorpositiveTxtColor=color.new(takeProfitColor,0)
varcolornegativeTxtColor=color.new(lossColor,0)
varcolorpositiveBgColor=color.new(winColor,95)
varcolornegativeBgColor=color.new(stopLossColor,95)
//TheStatstable
if(showStatsTable)
vartablestatsTable=table.new(position=getTablePosition(statsTablePos),columns=4,rows=14,frame_color=borderColor,frame_width=2,border_color=borderColor,border_width=1)
//Horizontalheaders
table.cell(table_id=statsTable,column=1,row=0,text='All',text_color=txtColor,text_size=size.normal,bgcolor=bgColor,tooltip='Alltrades(winningandlosing).')
table.cell(table_id=statsTable,column=2,row=0,text='Wins',text_color=positiveTxtColor,text_size=size.normal,bgcolor=positiveBgColor,tooltip='Thewinningtrades.')
table.cell(table_id=statsTable,column=3,row=0,text='Losses',text_color=negativeTxtColor,text_size=size.normal,bgcolor=negativeBgColor,tooltip='Thelosingtrades.')
//Verticalheaders
table.cell(table_id=statsTable,column=0,row=1,text='Trades',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Thetotalnumberoftradesandthosethathadawinning/losingoutcome.')
table.cell(table_id=statsTable,column=0,row=2,text='Streak',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Themaximumconsecutivenumberofwins/lossesinarow.')
table.cell(table_id=statsTable,column=0,row=3,text='Rate',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Thepercentofthewins/losses.')
table.cell(table_id=statsTable,column=0,row=4,text='AvgFreeProfit',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Thefreeaverageprofit(percentagewise)pertradeofall/winning/losingtrades.Thisistheprofityouwouldhaveifyouenteredandexitedallthetradeswithoutanystoplossandtakeprofitsreached.')
table.cell(table_id=statsTable,column=0,row=5,text='FreeProfitDev',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Thestandarddeviationofall/winning/losingtradefreeprofits.')
table.cell(table_id=statsTable,column=0,row=6,text='AvgProfit',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Theaverageprofit(percentagewise)pertradeofall/winning/losingtrades.')
table.cell(table_id=statsTable,column=0,row=7,text='ProfitDev',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Thestandarddeviationofall/winning/losingtradeprofits.')
table.cell(table_id=statsTable,column=0,row=8,text='AvgGain',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Theaveragegainonaccount(percentagewise)pertradeofall/winning/losingtradesweightedbytheentryquantitypercentage.Thustheresultisnon-compounding.')
table.cell(table_id=statsTable,column=0,row=9,text='GainDev',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Thestandarddeviationofall/winning/losingtradegains.')
table.cell(table_id=statsTable,column=0,row=10,text='Quantity',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Theaveragequantitypercentofall/winning/losingtrades.')
table.cell(table_id=statsTable,column=0,row=11,text='CapitalRisk',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Theaveragecapitalatriskofall/winning/losingtrades.')
table.cell(table_id=statsTable,column=0,row=12,text='TPExec#',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Theaveragenumberoftakeprofittargetsexecutedduringall/winning/losingtrades.')
table.cell(table_id=statsTable,column=0,row=13,text='RiskReward',text_color=txtColor,text_size=size.small,bgcolor=bgColor,tooltip='Theaveragerisktorewardratiowhenenteredall/winning/losingtrades.')
//Trades
table.cell(table_id=statsTable,column=1,row=1,text=str.tostring(numOfTrades),text_color=txtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=1,text=str.tostring(numOfWins),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=1,text=str.tostring(numOfLosses),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//Streak
table.cell(table_id=statsTable,column=1,row=2,text=numOfInconclusiveExits>0?'🚨':'',bgcolor=numOfInconclusiveExits>0?negativeBgColor:bgColor,tooltip=str.format('WARNING!{0,number,integer}inconclusiveexitorder(s)weredetectedthisisthe{1,number,percent}ofallthetrades.Thismeansthatordersexistwerebothtakeprofitandstoplosscouldbereachedatthesamebarandexitthetrade,butduetothe"lossofinformation"inthattimeframearandomexitwerechosen.Pleaseusealowertimeframeorthebarmagnifierfeaturetohavemoreaccurateresults.',numOfInconclusiveExits,numOfInconclusiveExits/numOfTrades))
table.cell(table_id=statsTable,column=2,row=2,text=str.tostring(maxWinningStreak),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=2,text=str.tostring(maxLosingStreak),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//Rate
table.cell(table_id=statsTable,column=1,row=3,text=str.tostring(100.0*(winRate+lossRate),format.percent),text_color=txtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=3,text=str.tostring(100.0*winRate,format.percent),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=3,text=str.tostring(100.0*lossRate,format.percent),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//FreeAvgProfit
table.cell(table_id=statsTable,column=1,row=4,text=avgFreeProfitStr,text_color=avgFreeProfit>0.0?positiveTxtColor:negativeTxtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=4,text='+'+str.tostring(winAvgFreeProfit,format.percent),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=4,text=str.tostring(lossAvgFreeProfit,format.percent),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//FreeProfitDev
table.cell(table_id=statsTable,column=1,row=5,text=freeProfitStDevStr,text_color=txtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=5,text='±'+str.tostring(winFreeProfitStDev,format.percent),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=5,text=lossFreeProfitStDevStr,text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//AvgProfit
table.cell(table_id=statsTable,column=1,row=6,text=avgProfitStr,text_color=avgProfit>0.0?positiveTxtColor:negativeTxtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=6,text='+'+str.tostring(winAvgProfit,format.percent),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=6,text=str.tostring(lossAvgProfit,format.percent),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//ProfitDev
table.cell(table_id=statsTable,column=1,row=7,text=profitStDevStr,text_color=txtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=7,text='±'+str.tostring(winProfitStDev,format.percent),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=7,text=lossProfitStDevStr,text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//AvgGain
table.cell(table_id=statsTable,column=1,row=8,text=(avgGain>0.0?'+':'')+str.tostring(avgGain,format.percent),text_color=avgGain>0.0?positiveTxtColor:negativeTxtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=8,text='+'+str.tostring(winAvgGain,format.percent),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=8,text=str.tostring(lossAvgGain,format.percent),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//GainDev
table.cell(table_id=statsTable,column=1,row=9,text='±'+str.tostring(gainStDev,format.percent),text_color=txtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=9,text='±'+str.tostring(winGainStDev,format.percent),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=9,text='±'+str.tostring(lossGainStDev,format.percent),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//Quantity
table.cell(table_id=statsTable,column=1,row=10,text=avgQuantityStr,text_color=txtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=10,text=str.tostring(winAvgQuantityPerc,format.percent),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=10,text=str.tostring(lossAvgQuantityPerc,format.percent),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//Risk
table.cell(table_id=statsTable,column=1,row=11,text=str.tostring(avgCapitalRiskPerc,format.percent),text_color=txtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=11,text=str.tostring(winAvgCapitalRiskPerc,format.percent),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=11,text=str.tostring(lossAvgCapitalRiskPerc,format.percent),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//TPExec#
table.cell(table_id=statsTable,column=1,row=12,text=str.tostring(avgTPExecutedCount,'#.##'),text_color=txtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=12,text=str.tostring(winAvgTPExecutedCount,'#.##'),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=12,text=str.tostring(lossAvgTPExecutedCount,'#.##'),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//Risk/Reward
table.cell(table_id=statsTable,column=1,row=13,text=str.tostring(avgRiskRewardRatio,'#.##'),text_color=txtColor,text_size=size.small,bgcolor=bgColor)
table.cell(table_id=statsTable,column=2,row=13,text=str.tostring(winAvgRiskRewardRatio,'#.##'),text_color=positiveTxtColor,text_size=size.small,bgcolor=positiveBgColor)
table.cell(table_id=statsTable,column=3,row=13,text=str.tostring(lossAvgRiskRewardRatio,'#.##'),text_color=negativeTxtColor,text_size=size.small,bgcolor=negativeBgColor)
//TableDescription
table.cell(table_id=statsTable,column=0,row=0,text='❓',text_color=txtColor,text_size=size.normal,bgcolor=bgColor,tooltip='Thistablesummarizestheoverallstatisticsofall/winning/losingtradesofthestrategy.IncontrasttotheTVbacktestengine,atradeisconsideredtobecompletewhentheentireentrypositionwasexitedandnotwhenanorderisexecuted(e.g.atakeprofitpricetargetisreached).')
//TheMetricstable
if(showMetricsTable)
vartablemetricsTable=table.new(position=getTablePosition(metricsTablePos),columns=3,rows=2,frame_color=borderColor,frame_width=2,border_color=borderColor,border_width=1)
//MetricsAlpha-Beta-Gamma
floatsumProfit=winSumProfit+lossSumProfit
floatalpha=1.0+nz((sumProfit-buyAndHoldPerc)/math.abs(buyAndHoldPerc))
boolalphaAcceptance=alpha>=1.0
floatnetProfitPerc=100.0*strategy.netprofit/strategy.initial_capital
floatbeta=1.0+nz((netProfitPerc-buyAndHoldPerc)/math.abs(buyAndHoldPerc))
boolbetaAcceptance=beta>=1.0
floatkellyRatioPerc=100.0*(winRate*avgRiskRewardRatio-lossRate)/avgRiskRewardRatio
floatgamma=1.0+nz((kellyRatioPerc-avgQuantityPerc)/avgQuantityPerc)
boolgammaAcceptance=gamma>=1.0
stringbuyAndHoldPercStr=str.tostring(buyAndHoldPerc,format.percent)
table.cell(table_id=metricsTable,column=0,row=0,text=str.format('α:{0,number,percent}',alpha),text_color=alphaAcceptance?positiveTxtColor:negativeTxtColor,text_size=size.normal,bgcolor=alphaAcceptance?positiveBgColor:negativeBgColor,tooltip=str.format('Thisalphametricshowshowbetterorworstthesumoftheprofits/lossesis({0})asapercentagecomparedtothebuyandholdreturn({1}).Ifthealphavalueislessthan100%thismeansthatthestrategyperformedworsethanthebuyandholdfortheperiodofthebacktesting.',str.tostring(sumProfit,format.percent),buyAndHoldPercStr))
table.cell(table_id=metricsTable,column=1,row=0,text=str.format('β:{0,number,percent}',beta),text_color=betaAcceptance?positiveTxtColor:negativeTxtColor,text_size=size.normal,bgcolor=betaAcceptance?positiveBgColor:negativeBgColor,tooltip=str.format('Thisbetametricshowshowbetterorworstthenetprofitis({0})asapercentagecomparedtothebuyandholdreturn({1}).Ifthebetavalueislessthan100%thismeansthatthestrategyperformedworsethanthebuyandholdfortheperiodofthebacktesting.',str.tostring(netProfitPerc,format.percent),buyAndHoldPercStr))
table.cell(table_id=metricsTable,column=2,row=0,text=str.format('γ:{0,number,percent}',gamma),text_color=gammaAcceptance?positiveTxtColor:negativeTxtColor,text_size=size.normal,bgcolor=gammaAcceptance?positiveBgColor:negativeBgColor,tooltip=str.format('Thisgammametricshowshowbetterorworsttheaveragequantitypercentpertradeis({0})asapercentagecomparedtotheKellyratio({1}).Ifthegammavalueislessthan100%andthekellyratioispossitivethismeansyoutaketoomuchriskoneverytradefortheperiodofthebacktestingandyouhavetodecreasethequantitypecentage(orcapitalatrisk%)ofeachtrade.Anotheralternativeistotrytoincreasethekellyratiobyincreasingthewinrateand/ortherisktorewardratio.',avgQuantityStr,str.tostring(kellyRatioPerc,format.percent)))
//MetricsChi-Psi-Zeta
floatchi=1.0+nz((avgProfit-avgFreeProfit)/math.abs(avgFreeProfit))
boolchiAcceptance=chi>=1.0
floatprofitStDevInc=1.0+nz((profitStDev-freeProfitStDev)/math.abs(freeProfitStDev))
floatpsi=chi/profitStDevInc
boolpsiAcceptance=psi>=1.0
floatlossProfitStDevInc=1.0+nz((lossProfitStDev-lossFreeProfitStDev)/math.abs(lossFreeProfitStDev))
floatzeta=chi/lossProfitStDevInc
boolzetaAcceptance=zeta>=1.0
table.cell(table_id=metricsTable,column=0,row=1,text=str.format('χ:{0,number,percent}',chi),text_color=chiAcceptance?positiveTxtColor:negativeTxtColor,text_size=size.normal,bgcolor=chiAcceptance?positiveBgColor:negativeBgColor,tooltip=str.format('Thischimetricshowshowbetterorworsttheaverageprofitis({0})asapercentagecomparedtothefreeprofit({1}).Ifthechivalueislessthan100%thismeansthatthestrategywouldhavemoreprofitswithoutthetakeprofittargetsfortheperiodofthebacktesting.',avgProfitStr,avgFreeProfitStr))
table.cell(table_id=metricsTable,column=1,row=1,text=str.format('ψ:{0,number,percent}',psi),text_color=psiAcceptance?positiveTxtColor:negativeTxtColor,text_size=size.normal,bgcolor=psiAcceptance?positiveBgColor:negativeBgColor,tooltip=str.format('Thispsimetricshowstheratioofthechiwiththestandarddeviationpercentageincrease({0,number,percent}).Thatshowshowbetterorworstthestandarddeviationis({1})asapercentagecomparedtothefreestandarddeviation({2}).Ifthepsivalueislessthan100%thismeansthatthestrategyincreasesthestandarddeviationwaytoomuchfortheadditionalprofitsthatreturnsontopofthefreeprofitfortheperiodofthebacktesting.',profitStDevInc,profitStDevStr,freeProfitStDevStr))
table.cell(table_id=metricsTable,column=2,row=1,text=str.format('ζ:{0,number,percent}',zeta),text_color=zetaAcceptance?positiveTxtColor:negativeTxtColor,text_size=size.normal,bgcolor=zetaAcceptance?positiveBgColor:negativeBgColor,tooltip=str.format('Thezetametricshowstheratioofthechiwiththedownsidedeviationpercentageincrease({0,number,percent}).Thatshowshowbetterorworstthedownwardsdeviationis({1})asapercentagecomparedtothefreedownwardsdeviation({2}).Ifthezetavalueislessthan100%thismeansthatthestrategyincreasesthedownwardsdeviationwaytoomuchfortheadditionalprofitsthatreturnsontopofthefreeprofitfortheperiodofthebacktesting.',lossProfitStDevInc,lossProfitStDevStr,lossFreeProfitStDevStr))
//#endregion===========================================================================================================
//#region🗲EXECUTIONCONDITIONS
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforconditionalvariablestoenterandexitorders
//Dependencies:ENTRY,EXIT
//Results:ALL
//LOGIC===============================================================================================================
booldoCloseMarketLong=(exitOrderType=='MARKET'andvalidCloseLongPosition)or(stopLossWaitCloseConfirmandclose<longStopLossPrice)orvalidOpenShortPosition
booldoCloseMarketShort=(exitOrderType=='MARKET'andvalidCloseShortPosition)or(stopLossWaitCloseConfirmandclose>shortStopLossPrice)orvalidOpenLongPosition
booldoEnterMarketLong=entryOrderType=='MARKET'?validOpenLongPosition:longLimitOrStopEntryIsActive
booldoCnlLimitEntryLong=longLimitOrStopEntryIsActive[1]andvalidCnlOpenLongPosition
booldoSLorExitLimitLong=longLimitExitIsActiveorlongIsActive
booldoCnlLimitExitLong=longLimitExitIsActiveandvalidCnlCloseLongPosition
booldoEnterMarketShort=entryOrderType=='MARKET'?validOpenShortPosition:shortLimitOrStopEntryIsActive
booldoCnlLimitEntryShort=shortLimitOrStopEntryIsActive[1]andvalidCnlOpenShortPosition
booldoSLorExitLimitShort=shortLimitExitIsActiveorshortIsActive
booldoCnlLimitExitShort=shortLimitExitIsActiveandvalidCnlCloseShortPosition
//#endregion===========================================================================================================
//#region🔔ALERTMESSAGES
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforthemessageoutputswhenstrategyordersarebeingexecuted
//Dependencies:ENTRY,TAKEPROFIT1,EXIT,STOPLOSS,TAKEPROFIT2,QUANTITY/RISKMANAGEMENT,EXECUTIONCONDITIONS
//Results:ALL
importjason5480/string_utils/3assu
//INPUT===============================================================================================================
tickerPrefix=input.string(defval='',title='TickerIdPrefix/Postfix',inline='Ticker',group='🔔AlertMessages')
tickerPostfix=input.string(defval='',title='​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​​',tooltip='Prepend/AppendacustomstringtotheTVstickeridwhenyouuse{{ticker}}asvariableinthealertmessages.',inline='Ticker',group='🔔AlertMessages')
usePercRange100=input.bool(defval=true,title='PercentageRange[0,100]',tooltip='Enabletomultiplyallthepercentatgeswith100sothatthevaluesrangefrom[0,100]insteadof[0,1].',group='🔔AlertMessages')
marginMsgTicks=input.int(defval=5,title='MarginTicks',minval=1,tooltip='Theticksthatwillbeadded/substractedfromentry/exitpricetocalculatethe{${ENTRY+}},{${ENTRY-}},{${EXIT+}},{${EXIT-}}variables.Thosevaluescouldbeusedifyouwanttosendalimitordertoyourexchangeandthepricemightgotothe"wrong"sideduetothehighvolatilityofthemarketanddelaybetweenthetimeofcomputationandexecution.',group='🔔AlertMessages')
msgEnteredEnabled=input.bool(defval=false,title='EnableEntryAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"entryorderfills"ofthestrategy(e.g.market,limit,stopandstop-limitentry).WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgEnteredMarketLong=msgEnteredEnabled?input.text_area(defval='LongEntry({{ticker}}):Boughtatmarketpriceof{{entry_price}}{{quote_currency}}anamountequalto{{base_quantity}}{{base_currency}}(for{{quote_quantity}}{{quote_currency}})andriskof{{risk_perc}}%.Thestoplosswasplacedat{{stop_loss_price}}{{quote_currency}}andtakeprofittargetsat[{{take_profit_price_1}},{{take_profit_price_2}},{{take_profit_price_3}},{{take_profit_price_4}},{{take_profit_price_5}}]{{quote_currency}}',title='EnterMarketLong',tooltip='Alertmessageemittedwhenenteredlongposition.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
rawMsgEnteredMarketShort=msgEnteredEnabled?input.text_area(defval='ShortEntry({{ticker}}):Soldatmarketpriceof{{entry_price}}{{quote_currency}}anamountequalto{{base_quantity}}{{base_currency}}(for{{quote_quantity}}{{quote_currency}})andriskof{{risk_perc}}%.Thestoplosswasplacedat{{stop_loss_price}}{{quote_currency}}andtakeprofittargetsat[{{take_profit_price_1}},{{take_profit_price_2}},{{take_profit_price_3}},{{take_profit_price_4}},{{take_profit_price_5}}]{{quote_currency}}',title='EnterMarketShort',tooltip='Alertmessageemittedwhenenteredshortposition.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
rawMsgEnteredLimitOrStopLong=msgEnteredEnabled?input.text_area(defval='LongEntry({{ticker}}):Boughtwithlimit,stoporstop-limitentryorderatthepriceof{{entry_price}}{{quote_currency}}anamountequalto{{base_quantity}}{{base_currency}}andriskof{{risk_perc}}%.Thestoplosswasplacedat{{stop_loss_price}}{{quote_currency}}andtakeprofittargetsat[{{take_profit_price_1}},{{take_profit_price_2}},{{take_profit_price_3}},{{take_profit_price_4}},{{take_profit_price_5}}]{{quote_currency}}',title='EnterLimitLong',tooltip='Alertmessageemittedwhenenteredlongpositionwithalimit,stoporstop-limitorder.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
rawMsgEnteredLimitOrStopShort=msgEnteredEnabled?input.text_area(defval='ShortEntry({{ticker}}):Soldwithlimit,stoporstop-limitentryorderatthepriceof{{entry_price}}{{quote_currency}}anamountequalto{{base_quantity}}{{base_currency}}andriskof{{risk_perc}}%.Thestoplosswasplacedat{{stop_loss_price}}{{quote_currency}}andtakeprofittargetsat[{{take_profit_price_1}},{{take_profit_price_2}},{{take_profit_price_3}},{{take_profit_price_4}},{{take_profit_price_5}}]{{quote_currency}}',title='EnterLimitShort',tooltip='Alertmessageemittedwhenenteredshortpositionwithalimit,stoporstop-limitorder.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
msgClosedOrExitedEnabled=input.bool(defval=false,title='EnableClose/ExitAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"close/exitorderfills"ofthestrategy(e.g.market,limitandstopexit).WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgClosedMarketLong=msgClosedOrExitedEnabled?input.text_area(defval='LongClose({{ticker}}):Soldatmarketpriceof{{exit_price}}{{quote_currency}}{{remaining_quantity_perc}}%oftheinitialposition',title='CloseMarketLong',tooltip='Alertmessageemittedwhenclosedlongposition.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
rawMsgClosedMarketShort=msgClosedOrExitedEnabled?input.text_area(defval='ShortClose({{ticker}}):Boughtatmarketpriceof{{exit_price}}{{quote_currency}}{{remaining_quantity_perc}}%oftheinitialposition',title='CloseMarketShort',tooltip='Alertmessageemittedwhenclosedshortposition.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
rawMsgExitedLimitOrStopLong=msgClosedOrExitedEnabled?input.text_area(defval='LongExit({{ticker}}):Soldwithlimitorstopexitorderatthepriceof{{exit_price}}{{quote_currency}}{{remaining_quantity_perc}}%oftheinitialposition',title='ExitLimitLong',tooltip='Alertmessageemittedwhenexitedlongpositionwithalimitorstoporder.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
rawMsgExitedLimitOrStopShort=msgClosedOrExitedEnabled?input.text_area(defval='ShortExit({{ticker}}):Boughtwithlimitorstopexitorderatthepriceof{{exit_price}}{{quote_currency}}{{remaining_quantity_perc}}%oftheinitialposition',title='ExitLimitShort',tooltip='Alertmessageemittedwhenexitedshortpositionwithalimitorstoporder.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
rawMsgClosedAll=msgClosedOrExitedEnabled?input.text_area(defval='CloseAll({{ticker}}):Closedallpositionsatmarketpriceof{{exit_price}}{{quote_currency}}',title='CloseAll',tooltip='Alertmessageemittedwhenclosedallpositions.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
msgTakeProfitEnabled=input.bool(defval=false,title='EnableTakeProfitAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"profitorderfills"ofthestrategy(e.g.takeprofit"partial"exit).WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
varintnumOfMaxTPAlerts=5
varstring[]rawMsgRchTPLong=array.new<string>(numOfMaxTPAlerts,na)
varstring[]rawMsgRchTPShort=array.new<string>(numOfMaxTPAlerts,na)
rawMsgRchTPLong.set(0,msgTakeProfitEnabled?input.text_area(defval='LongExit({{ticker}}):TakeProfit1executedatthepriceof{{take_profit_price_1}}{{quote_currency}}andsold{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP1Long',tooltip='Alertmessageemittedwhenthefirsttakeprofitpricetargetforthelongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
rawMsgRchTPShort.set(0,msgTakeProfitEnabled?input.text_area(defval='ShortExit({{ticker}}):TakeProfit1executedatthepriceof{{take_profit_price_1}}{{quote_currency}}andbought{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP1Short',tooltip='Alertmessageemittedwhenthefirsttakeprofitpricetargetfortheshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
rawMsgRchTPLong.set(1,msgTakeProfitEnabled?input.text_area(defval='LongExit({{ticker}}):TakeProfit2executedatthepriceof{{take_profit_price_2}}{{quote_currency}}andsold{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP2Long',tooltip='Alertmessageemittedwhenthesecondtakeprofitpricetargetforthelongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
rawMsgRchTPShort.set(1,msgTakeProfitEnabled?input.text_area(defval='ShortExit({{ticker}}):TakeProfit2executedatthepriceof{{take_profit_price_2}}{{quote_currency}}andbought{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP2Short',tooltip='Alertmessageemittedwhenthesecondtakeprofitpricetargetfortheshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
rawMsgRchTPLong.set(2,msgTakeProfitEnabled?input.text_area(defval='LongExit({{ticker}}):TakeProfit3executedatthepriceof{{take_profit_price_3}}{{quote_currency}}andsold{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP3Long',tooltip='Alertmessageemittedwhenthethirdtakeprofitpricetargetforthelongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
rawMsgRchTPShort.set(2,msgTakeProfitEnabled?input.text_area(defval='ShortExit({{ticker}}):TakeProfit3executedatthepriceof{{take_profit_price_3}}{{quote_currency}}andbought{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP3Short',tooltip='Alertmessageemittedwhenthethirdtakeprofitpricetargetfortheshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
rawMsgRchTPLong.set(3,msgTakeProfitEnabled?input.text_area(defval='LongExit({{ticker}}):TakeProfit4executedatthepriceof{{take_profit_price_4}}{{quote_currency}}andsold{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP4Long',tooltip='Alertmessageemittedwhentheforthtakeprofitpricetargetforthelongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
rawMsgRchTPShort.set(3,msgTakeProfitEnabled?input.text_area(defval='ShortExit({{ticker}}):TakeProfit4executedatthepriceof{{take_profit_price_4}}{{quote_currency}}andbought{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP4Short',tooltip='Alertmessageemittedwhentheforthtakeprofitpricetargetfortheshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
rawMsgRchTPLong.set(4,msgTakeProfitEnabled?input.text_area(defval='LongExit({{ticker}}):TakeProfit5executedatthepriceof{{take_profit_price_5}}{{quote_currency}}andsold{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP5Long',tooltip='Alertmessageemittedwhenthefifthtakeprofitpricetargetforthelongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
rawMsgRchTPShort.set(4,msgTakeProfitEnabled?input.text_area(defval='ShortExit({{ticker}}):TakeProfit5executedatthepriceof{{take_profit_price_5}}{{quote_currency}}andbought{{take_profit_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{take_profit_base_quantity}}{{base_currency}}',title='TP5Short',tooltip='Alertmessageemittedwhenthefifthtakeprofitpricetargetfortheshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na)
msgStopLossEnabled=input.bool(defval=false,title='EnableStopLossAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"stop_lossorderfills"ofthestrategy(e.g.stoplossexit).WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgRchSLLong=msgStopLossEnabled?input.text_area(defval='LongExit({{ticker}}):StopLossexecutedatthepriceof{{stop_loss_price}}{{quote_currency}}andsold{{remaining_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{remaining_base_quantity}}{{base_currency}}',title='SLLong',tooltip='Alertmessageemittedwhenthelaststoplosstargetforthelongpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
rawMsgRchSLShort=msgStopLossEnabled?input.text_area(defval='ShortExit({{ticker}}):StopLossexecutedatthepriceof{{stop_loss_price}}{{quote_currency}}andbought{{remaining_quantity_perc}}%oftheinitialposition,thatequalstoanamountof{{remaining_base_quantity}}{{base_currency}}',title='SLShort',tooltip='Alertmessageemittedwhenthelaststoplosstargetfortheshortpositionisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
msgChgTrEntryEnabled=input.bool(defval=false,title='EnableTrEntryChangeAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"alert()functioncalls"whenthetrailinglimit,stoporstop-limitentrypricechanges.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgChgTrEntryLong=msgChgTrEntryEnabled?input.text_area(defval='LongTrailingEntryUpdate({{ticker}}):Longtrailinglimit,stoporstop-limitentryorderchangedandsetatanewpriceof{{entry_price}}{{quote_currency}}',title='ChgTrEntryLong',tooltip='Alertmessageemittedwhenlongtrailinglimit,stoporstop-limitentryorderchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
rawMsgChgTrEntryShort=msgChgTrEntryEnabled?input.text_area(defval='ShortTrailingEntryUpdate({{ticker}}):Shorttrailinglimit,stoporstop-limitentryorderchangedandsetatanewpriceof{{entry_price}}{{quote_currency}}',title='ChgTrEntryShort',tooltip='Alertmessageemittedwhenshorttrailinglimit,stoporstop-limitentryorderchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
msgChgTrExitEnabled=input.bool(defval=false,title='EnableTrExitChangeAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"alert()functioncalls"whenthetrailinglimitorstopexitpricechanges.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgChgTrExitLong=msgChgTrExitEnabled?input.text_area(defval='LongTrailingExitUpdate({{ticker}}):Longtrailinglimitorstopexitorderchangedandsetatanewpriceof{{exit_price}}{{quote_currency}}',title='ChgTrExitLong',tooltip='Alertmessageemittedwhenlongtrailinglimitorstopexitorderchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
rawMsgChgTrExitShort=msgChgTrExitEnabled?input.text_area(defval='ShortTrailingExitUpdate({{ticker}}):Shorttrailinglimitorstopexitorderchangedandsetatanewpriceof{{exit_price}}{{quote_currency}}',title='ChgTrExitShort',tooltip='Alertmessageemittedwhenshorttrailinglimitorstopexitorderchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
msgChgSLEnabled=input.bool(defval=false,title='EnableStopLossChangeAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"alert()functioncalls"whenthestoplosspricechanges.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgChgSLLong=msgChgSLEnabled?input.text_area(defval='LongStopLossUpdate({{ticker}}):StopLossvaluechangedandsetatanewpriceof{{stop_loss_price}}{{quote_currency}}',title='ChgSLLong',tooltip='Alertmessageemittedwhenthestoplosstargetforthelongpositionchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
rawMsgChgSLShort=msgChgSLEnabled?input.text_area(defval='ShortStopLossUpdate({{ticker}}):StopLossvaluechangedandsetatanewpriceof{{stop_loss_price}}{{quote_currency}}',title='ChgSLShort',tooltip='Alertmessageemittedwhenthestoplosstargetfortheshortpositionchanged.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
msgCnlLimitOrStopEntryEnabled=input.bool(defval=false,title='EnableLimitEntryCancelAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"alert()functioncalls"whenuselimit,stoporstop-limitorderforentryanditcancels.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgCnlLimitOrStopEntryLong=msgCnlLimitOrStopEntryEnabled?input.text_area(defval='LongLimitEntryCancel({{ticker}}):Longlimit,stoporstop-limitentryordercanceled',title='CnlLimitEntryLong',tooltip='Alertmessageemittedwhenlonglimit,stoporstop-limitentryordercanceled.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
rawMsgCnlLimitOrStopEntryShort=msgCnlLimitOrStopEntryEnabled?input.text_area(defval='ShortLimitEntryCancel({{ticker}}):Shortlimit,stoporstop-limitentryordercanceled',title='CnlLimitEntryShort',tooltip='Alertmessageemittedwhenshortlimit,stoporstop-limitentryordercanceled.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
msgCnlLimitOrStopExitEnabled=input.bool(defval=false,title='EnableLimitExitCancelAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondto"alert()functioncalls"whenuselimitorstoporderforexitanditcancels.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
rawMsgCnlLimitOrStopExitLong=msgCnlLimitOrStopExitEnabled?input.text_area(defval='LongLimitExitCancel({{ticker}}):Longlimitorstopexitordercanceled',title='CnlLimitExitLong',tooltip='Alertmessageemittedwhenlonglimitorstopexitordercanceled.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
rawMsgCnlLimitOrStopExitShort=msgCnlLimitOrStopExitEnabled?input.text_area(defval='ShortLimitExitCancel({{ticker}}):Shortlimitorstopexitordercanceled',title='CnlLimitExitShort',tooltip='Alertmessageemittedwhenshortlimitorstopexitordercanceled.Inthe"Condition"comboboxofthe"CreateAlert"dialog,the"Orderfillsandalert()functioncalls"orthe"alert()functioncallsonly"optionsshouldbeselectedtobeabletoreceivethisalertmessage.',group='🔔AlertMessages'):na
msgMaxDrawdownEnabled=input.bool(defval=false,title='EnableMaxDrawdownAlerts⚠️🐌',tooltip='Enablethealertmessagesthatcorrespondtomaxdrawdownreachedevent.WARNING!Computationalheavyoperation.Ifyougetatimeouterroradjustthetimewindowfilterordisableothercomputationalheavyoperations.',group='🔔AlertMessages')
msgMaxDrawdown=msgMaxDrawdownEnabled?input.text_area(defval='Maxdrawdownwasreached:Allpendingordersarecanceled,allopenpositionsareclosedandnoneworderscanbeplaced!RIP⚰️',title='MaxDrawdown',tooltip='Alertmessageemittedwhenthemaxdrawdownlimitisreached.Textthatwillreplacethe\'{{strategy.order.alert_message}}\'placeholderwhenoneisusedinthe"Message"fieldofthe"CreateAlert"dialog.',group='🔔AlertMessages'):na
showAlertsEnabled=input.bool(defval=false,title='ShowAlerts',tooltip='Showalertmessagesthatcorrespondtoeventsinthechart.',group='🐞Debug')
//LOGIC===============================================================================================================
varstringmsgEnteredMarketLong=na
varstringmsgEnteredMarketShort=na
varstringmsgEnteredLimitOrStopLong=na
varstringmsgEnteredLimitOrStopShort=na
varstringmsgClosedMarketLong=na
varstringmsgClosedMarketShort=na
varstringmsgExitedLimitOrStopLong=na
varstringmsgExitedLimitOrStopShort=na
varstring[]msgRchTPLong=array.new<string>(numOfMaxTPAlerts,na)
varstring[]msgRchTPShort=array.new<string>(numOfMaxTPAlerts,na)
varstringmsgRchSLLong=na
varstringmsgRchSLShort=na
varstringmsgClosedAll=na
varsu.PairStrStr[]stringVariablePairs=array.new<su.PairStrStr>()
varsu.PairStrNum[]numberVariablePairs=array.new<su.PairStrNum>()
varsu.PairStrNum[]numberVariablePairsLong=array.new<su.PairStrNum>()
varsu.PairStrNum[]numberVariablePairsShort=array.new<su.PairStrNum>()
if(msgEnteredEnabledormsgClosedOrExitedEnabledormsgTakeProfitEnabledormsgStopLossEnabledormsgChgTrEntryEnabledormsgChgTrExitEnabledormsgChgSLEnabledormsgCnlLimitOrStopEntryEnabledormsgCnlLimitOrStopExitEnabled)
varboolstringVariablesInit=false
if(notstringVariablesInit)
stringVariablePairs:=array.from(su.PairStrStr.new('{{ticker}}',tickerPrefix+syminfo.ticker+tickerPostfix),su.PairStrStr.new('{{base_currency}}',syminfo.basecurrency),su.PairStrStr.new('{{quote_currency}}',syminfo.currency))
stringVariablesInit:=true
varfloatpercMul=usePercRange100?100.0:1.0
varboolnumberVariablesInit=false
if(notnumberVariablesInit)
numberVariablePairs:=array.from(su.PairStrNum.new('{{take_profit_quantity_perc}}',takeProfitQuantityRatio*percMul))//TakeProfitquantitypercentage
numberVariablesInit:=true

if(longLimitOrStopEntryIsActiveorvalidOpenLongPositionorenteredLongTradeorisLongPositionorcompletedLongTrade)
numberVariablePairsLong:=array.from(su.PairStrNum.new('{{base_quantity}}',longEntryBaseQuantity),su.PairStrNum.new('{{quote_quantity}}',longEntryQuoteQuantity),//Longbase/quotecurrencyentryquantity
su.PairStrNum.new('{{quote_quantity_perc}}',longEntryQuoteQuantityRatio*percMul),su.PairStrNum.new('{{take_profit_base_quantity}}',longTakeProfitQuantity),//Longquotecurrencyentryquantitypercentage,LongTakeProfitbasequantity
su.PairStrNum.new('{{remaining_quantity_perc}}',longRemainingQuantityRatio*percMul),su.PairStrNum.new('{{remaining_base_quantity}}',longRemainingQuantity),//Longremainingquantitypercentage,Longremainingbasequantity
su.PairStrNum.new('{{risk_perc}}',longCapitalRiskRatio*percMul),su.PairStrNum.new('{{stop_loss_price}}',longStopLossPrice),//Longriskpercentageoftheentryquantity,LongStopLossprice
su.PairStrNum.new('{{entry_price}}',longEntryPrice),su.PairStrNum.new('{{entry+_price}}',longEntryPrice+marginMsgTicks*syminfo.mintick),su.PairStrNum.new('{{entry-_price}}',longEntryPrice-marginMsgTicks*syminfo.mintick),//LongEntryprice,LongEntrypriceplusthemarginticks,LongEntrypriceminusthemarginticks
su.PairStrNum.new('{{exit_price}}',longExitPrice),su.PairStrNum.new('{{exit+_price}}',longExitPrice+marginMsgTicks*syminfo.mintick),su.PairStrNum.new('{{exit-_price}}',longExitPrice-marginMsgTicks*syminfo.mintick),//LongExitprice,LongExitpriceplusthemarginticks,LongExitpriceminusthemarginticks
su.PairStrNum.new('{{take_profit_price_1}}',numOfTakeProfitTargets>0?longTakeProfitPrices.get(0):na),su.PairStrNum.new('{{take_profit_price_2}}',numOfTakeProfitTargets>1?longTakeProfitPrices.get(1):na),//LongTakeProfittarget1and2prices
su.PairStrNum.new('{{take_profit_price_3}}',numOfTakeProfitTargets>2?longTakeProfitPrices.get(2):na),su.PairStrNum.new('{{take_profit_price_4}}',numOfTakeProfitTargets>3?longTakeProfitPrices.get(3):na),//LongTakeProfittarget3and4prices
su.PairStrNum.new('{{take_profit_price_5}}',numOfTakeProfitTargets>4?longTakeProfitPrices.get(4):na))//LongTakeProfittarget5price

if(shortLimitOrStopEntryIsActiveorvalidOpenShortPositionorenteredShortTradeorisShortPositionorcompletedShortTrade)
numberVariablePairsShort:=array.from(su.PairStrNum.new('{{base_quantity}}',shortEntryBaseQuantity),su.PairStrNum.new('{{quote_quantity}}',shortEntryQuoteQuantity),//Shortbase/quotecurrencyentryquantity
su.PairStrNum.new('{{quote_quantity_perc}}',shortEntryQuoteQuantityRatio*percMul),su.PairStrNum.new('{{take_profit_base_quantity}}',shortTakeProfitQuantity),//Shortquotecurrencyentryquantitypercentage,ShortTakeProfitbasequantity
su.PairStrNum.new('{{remaining_quantity_perc}}',shortRemainingQuantityRatio*percMul),su.PairStrNum.new('{{remaining_base_quantity}}',shortRemainingQuantity),//Shortremainingquantitypercentage,Shortremainingbasequantity
su.PairStrNum.new('{{risk_perc}}',shortCapitalRiskRatio*percMul),su.PairStrNum.new('{{stop_loss_price}}',shortStopLossPrice),//Shortriskpercentageoftheentryquantity,ShortStopLossprice
su.PairStrNum.new('{{entry_price}}',shortEntryPrice),su.PairStrNum.new('{{entry+_price}}',shortEntryPrice+marginMsgTicks*syminfo.mintick),su.PairStrNum.new('{{entry-_price}}',shortEntryPrice-marginMsgTicks*syminfo.mintick),//ShortEntryprice,ShortEntrypriceplusthemarginticks,ShortEntrypriceminusthemarginticks
su.PairStrNum.new('{{exit_price}}',shortExitPrice),su.PairStrNum.new('{{exit+_price}}',shortExitPrice+marginMsgTicks*syminfo.mintick),su.PairStrNum.new('{{exit-_price}}',shortExitPrice-marginMsgTicks*syminfo.mintick),//ShortExitprice,ShortExitpriceplusthemarginticks,ShortExitpriceminusthemarginticks
su.PairStrNum.new('{{take_profit_price_1}}',numOfTakeProfitTargets>0?shortTakeProfitPrices.get(0):na),su.PairStrNum.new('{{take_profit_price_2}}',numOfTakeProfitTargets>1?shortTakeProfitPrices.get(1):na),//ShortTakeProfittarget1and2prices
su.PairStrNum.new('{{take_profit_price_3}}',numOfTakeProfitTargets>2?shortTakeProfitPrices.get(2):na),su.PairStrNum.new('{{take_profit_price_4}}',numOfTakeProfitTargets>3?shortTakeProfitPrices.get(3):na),//ShortTakeProfittarget3and4prices
su.PairStrNum.new('{{take_profit_price_5}}',numOfTakeProfitTargets>4?shortTakeProfitPrices.get(4):na))//ShortTakeProfittarget5price

//Signalenteredalerts
if(msgEnteredEnabled)
varstringvarMsgEnteredMarketLong=rawMsgEnteredMarketLong.replace_all(stringVariablePairs)
varstringvarMsgEnteredMarketShort=rawMsgEnteredMarketShort.replace_all(stringVariablePairs)
varstringvarMsgEnteredLimitOrStopLong=rawMsgEnteredLimitOrStopLong.replace_all(stringVariablePairs)
varstringvarMsgEnteredLimitOrStopShort=rawMsgEnteredLimitOrStopShort.replace_all(stringVariablePairs)
msgEnteredMarketLong:=doEnterMarketLong?varMsgEnteredMarketLong.replace(numberVariablePairsLong):na
msgEnteredMarketShort:=doEnterMarketShort?varMsgEnteredMarketShort.replace(numberVariablePairsShort):na
msgEnteredLimitOrStopLong:=doEnterMarketLong?varMsgEnteredLimitOrStopLong.replace(numberVariablePairsLong):na
msgEnteredLimitOrStopShort:=doEnterMarketShort?varMsgEnteredLimitOrStopShort.replace(numberVariablePairsShort):na

//Signalclosed/exitedalerts
if(msgClosedOrExitedEnabled)
varstringvarMsgClosedMarketLong=rawMsgClosedMarketLong.replace_all(stringVariablePairs)
varstringvarMsgClosedMarketShort=rawMsgClosedMarketShort.replace_all(stringVariablePairs)
varstringvarMsgExitedLimitOrStopLong=rawMsgExitedLimitOrStopLong.replace_all(stringVariablePairs)
varstringvarMsgExitedLimitOrStopShort=rawMsgExitedLimitOrStopShort.replace_all(stringVariablePairs)
varstringvarMsgClosedAll=rawMsgClosedAll.replace_all(stringVariablePairs)
msgClosedMarketLong:=doCloseMarketLong?varMsgClosedMarketLong.replace(numberVariablePairsLong):na
msgClosedMarketShort:=doCloseMarketShort?varMsgClosedMarketShort.replace(numberVariablePairsShort):na
msgExitedLimitOrStopLong:=doSLorExitLimitLong?varMsgExitedLimitOrStopLong.replace(numberVariablePairsLong):na
msgExitedLimitOrStopShort:=doSLorExitLimitShort?varMsgExitedLimitOrStopShort.replace(numberVariablePairsShort):na
msgClosedAll:=closeAllPositions?varMsgClosedAll.replace(numberVariablePairsLong).replace(numberVariablePairsShort):na
//Signaltakeprofitalerts
if(msgTakeProfitEnabled)
varstring[]varMsgRchTPLong=array.new<string>(numOfMaxTPAlerts,na)
varstring[]varMsgRchTPShort=array.new<string>(numOfMaxTPAlerts,na)
varboolmsgRchTPInit=false
if(notmsgRchTPInit)
for[i,rawMsg]inrawMsgRchTPLong
varMsgRchTPLong.set(i,numOfTakeProfitTargets>i?rawMsg.replace_all(stringVariablePairs).replace(numberVariablePairs):na)
for[i,rawMsg]inrawMsgRchTPShort
varMsgRchTPShort.set(i,numOfTakeProfitTargets>i?rawMsg.replace_all(stringVariablePairs).replace(numberVariablePairs):na)
msgRchTPInit:=true
if(doSLorExitLimitLong)
for[i,varMsg]invarMsgRchTPLong
msgRchTPLong.set(i,numOfTakeProfitTargets>i?varMsg.replace(numberVariablePairsLong):na)
if(doSLorExitLimitShort)
for[i,varMsg]invarMsgRchTPShort
msgRchTPShort.set(i,numOfTakeProfitTargets>i?varMsg.replace(numberVariablePairsShort):na)

//Signalstoplossalerts
if(msgStopLossEnabled)
varstringvarMsgRchSLLong=rawMsgRchSLLong.replace_all(stringVariablePairs)
varstringvarMsgRchSLShort=rawMsgRchSLShort.replace_all(stringVariablePairs)
msgRchSLLong:=doSLorExitLimitLong?varMsgRchSLLong.replace(numberVariablePairsLong):na
msgRchSLShort:=doSLorExitLimitShort?varMsgRchSLShort.replace(numberVariablePairsShort):na
//Signalchangedalerts
if(msgChgTrEntryEnabled)
varstringvarMsgChgTrEntryLong=rawMsgChgTrEntryLong.replace_all(stringVariablePairs)
if(ta.change(longEntryPrice))
alert(message=varMsgChgTrEntryLong.replace(numberVariablePairsLong),freq=alert.freq_once_per_bar_close)
varstringvarMsgChgTrEntryShort=rawMsgChgTrEntryShort.replace_all(stringVariablePairs)
if(ta.change(shortEntryPrice))
alert(message=varMsgChgTrEntryShort.replace(numberVariablePairsShort),freq=alert.freq_once_per_bar_close)
if(msgChgTrExitEnabled)
varstringvarMsgChgTrExitLong=rawMsgChgTrExitLong.replace_all(stringVariablePairs)
if(ta.change(longExitPrice))
alert(message=varMsgChgTrExitLong.replace(numberVariablePairsLong),freq=alert.freq_once_per_bar_close)
varstringvarMsgChgTrExitShort=rawMsgChgTrExitShort.replace_all(stringVariablePairs)
if(ta.change(shortExitPrice))
alert(message=varMsgChgTrExitShort.replace(numberVariablePairsShort),freq=alert.freq_once_per_bar_close)
if(msgChgSLEnabled)
varstringvarMsgChgSLLong=rawMsgChgSLLong.replace_all(stringVariablePairs)
if(na(longLimitOrStopEntryPrice)andta.change(longStopLossPrice))
alert(message=varMsgChgSLLong.replace(numberVariablePairsLong),freq=alert.freq_once_per_bar_close)
varstringvarMsgChgSLShort=rawMsgChgSLShort.replace_all(stringVariablePairs)
if(na(shortLimitOrStopEntryPrice)andta.change(shortStopLossPrice))
alert(message=varMsgChgSLShort.replace(numberVariablePairsShort),freq=alert.freq_once_per_bar_close)
if(msgCnlLimitOrStopExitEnabled)
varstringvarMsgCnlLimitOrStopExitLong=rawMsgCnlLimitOrStopExitLong.replace_all(stringVariablePairs)
if(doCnlLimitExitLong)
alert(message=varMsgCnlLimitOrStopExitLong.replace(numberVariablePairsLong),freq=alert.freq_once_per_bar_close)
varstringvarMsgCnlLimitOrStopExitShort=rawMsgCnlLimitOrStopExitShort.replace_all(stringVariablePairs)
if(doCnlLimitExitShort)
alert(message=varMsgCnlLimitOrStopExitShort.replace(numberVariablePairsShort),freq=alert.freq_once_per_bar_close)
//#endregion===========================================================================================================
//#region🧹CLEANUP
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforresettingvariablesaftertradeshadbeencompleted
//Dependencies:TAKEPROFIT1,STOPLOSS,TAKEPROFIT2,QUANTITY/RISKMANAGEMENT
//Results:ALL
//LOGIC===============================================================================================================
if(completedLongTrade)
fori=0totakeProfitTargetsSize
longTrailTakeProfitExecuted.set(i,false)
if(completedShortTrade)
fori=0totakeProfitTargetsSize
shortTrailTakeProfitExecuted.set(i,false)
if((completedLongTradeandnot(longLimitOrStopEntryIsActiveorvalidOpenLongPositionorenteredLongTrade))orvalidCnlOpenLongPositionorcloseAllPositions)
longEntryPrice:=na
highestHighSinceLongEntry:=na
longStopLossPrice:=na
fori=0totakeProfitTargetsSize
longTakeProfitPrices.set(i,na)
longTrailTakeProfitOffsetTicks.set(i,na)
longEntryQuoteQuantity:=na
longEntryQuoteQuantityRatio:=na
longEntryBaseQuantity:=na
longTakeProfitQuantity:=na
longRemainingQuantity:=na
longCapitalRiskRatio:=na
if((completedShortTradeandnot(shortLimitOrStopEntryIsActiveorvalidOpenShortPositionorenteredShortTrade))orvalidCnlOpenShortPositionorcloseAllPositions)
shortEntryPrice:=na
lowestLowSinceShortEntry:=na
shortStopLossPrice:=na
fori=0totakeProfitTargetsSize
shortTakeProfitPrices.set(i,na)
shortTrailTakeProfitOffsetTicks.set(i,na)
shortEntryQuoteQuantity:=na
shortEntryQuoteQuantityRatio:=na
shortEntryBaseQuantity:=na
shortTakeProfitQuantity:=na
shortRemainingQuantity:=na
shortCapitalRiskRatio:=na
//#endregion===========================================================================================================
//#region⚡POSITIONORDERS
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsiblefortheactualexecutionofthestrategyorders
//Dependencies:TRACKPOSITION,STRATEGY1,ENTRY,STRATEGY2,EXIT,STOPLOSS,TAKEPROFIT2,QUANTITYMANAGEMENT,EXECUTIONCONDITIONS,ALERTMESSAGES
//Results:NONE
//LOGIC===============================================================================================================
//Closeallpositionsattheendofthesession
if(closeAllPositions)
strategy.close_all(comment=showAlertsEnabled?msgClosedAll:'A🟪',alert_message=msgClosedAll)
//Closeonvalidclosesignalwhenexitwithmarketorder
if(doCloseMarketLong)
strategy.close(id=longOrderIdEntry,comment=showAlertsEnabled?msgClosedMarketLong:'L🟪',alert_message=msgClosedMarketLong)
//Closeonvalidclosesignalwhenexitwithmarketorder
if(doCloseMarketShort)
strategy.close(id=shortOrderIdEntry,comment=showAlertsEnabled?msgClosedMarketShort:'S🟪',alert_message=msgClosedMarketShort)
//GettingintoLONGposition
if(doEnterMarketLong)
stringmsgAlert=entryOrderType=='MARKET'?msgEnteredMarketLong:msgEnteredLimitOrStopLong
if(notna(shortStopLossPrice)andnotna(longLimitOrStopEntryPrice)andshortStopLossPrice<longLimitOrStopEntryPrice)
strategy.order(id=longOrderIdEntry,direction=strategy.long,limit=entryOrderType=='LIMIT'?longLimitOrStopEntryPrice:entryOrderType=='STOP-LIMIT'?longStopLimitEntryPrice:na,
stop=entryOrderType=='STOP'orentryOrderType=='STOP-LIMIT'?longLimitOrStopEntryPrice:na,qty=longEntryBaseQuantity,comment=showAlertsEnabled?msgAlert:'L🔷',alert_message=msgAlert)
else
strategy.entry(id=longOrderIdEntry,direction=strategy.long,limit=entryOrderType=='LIMIT'?longLimitOrStopEntryPrice:entryOrderType=='STOP-LIMIT'?longStopLimitEntryPrice:na,
stop=entryOrderType=='STOP'orentryOrderType=='STOP-LIMIT'?longLimitOrStopEntryPrice:na,qty=longEntryBaseQuantity,comment=showAlertsEnabled?msgAlert:'L🔷',alert_message=msgAlert)
//Cancelexistingentrylimit,stoporstop-limitorders(ifany)whenvalidcancelopensignaloccurs
if(doCnlLimitEntryLong)
strategy.cancel(id=longOrderIdEntry)
if(msgCnlLimitOrStopEntryEnabled)
varstringvarMsgCnlLimitOrStopEntryLong=rawMsgCnlLimitOrStopEntryLong.replace_all(stringVariablePairs)
alert(message=varMsgCnlLimitOrStopEntryLong.replace(numberVariablePairsLong),freq=alert.freq_once_per_bar_close)
//Calculatethetighteststoporderbycombiningthestoplossandlimitorstopexit(ifany)
floatlongEffectiveStopLossPrice=stopLossWaitCloseConfirm?na:longStopLossPrice
floatlongTightestStop=exitOrderType=='STOP'andlongLimitExitIsActive?math.max(nz(longLimitOrStopExitPrice,minLimitFloat),nz(longEffectiveStopLossPrice,minLimitFloat)):longEffectiveStopLossPrice
boolisLongLimitExitTighterThanStopLoss=stopLossWaitCloseConfirm?true:longLimitExitIsActiveandexitOrderType=='STOP'andlongLimitOrStopExitPrice>longStopLossPrice
//Submitexitorderfortrailingtakeprofitpricealsosetthestoplossforthetakeprofitpercentageincasethatstoplossisreachedfirst
//Submitexitorderwhenexitwithlimitorstop
for[i,longTakeProfitPrice]inlongTakeProfitPrices
if(longLimitExitIsActiveor(longIsActiveandnotlongTrailTakeProfitExecuted.get(i)))
floatlongTightestLimit=exitOrderType=='LIMIT'andlongLimitExitIsActive?math.min(nz(longLimitOrStopExitPrice,maxLimitFloat),nz(longTakeProfitPrice,maxLimitFloat)):takeProfitTrailEnabled?na:longTakeProfitPrice
boolisLongLimitExitTighterThanTakeProfit=longLimitExitIsActiveandlongLimitOrStopExitPrice<longTakeProfitPrice
stringmsgAlertProfit=isLongLimitExitTighterThanTakeProfit?msgExitedLimitOrStopLong:msgRchTPLong.get(i%numOfMaxTPAlerts)
stringmsgAlertLoss=i==takeProfitTargetsSizeandmoonbagQuantityRatio==0.0?isLongLimitExitTighterThanStopLoss?msgExitedLimitOrStopLong:msgRchSLLong:na
stringmsgCommentProfit=str.format('{0}{1,number,integer}',exitOrderType=='LIMIT'andlongLimitExitIsActive?'LLim🟪':'L🎯',i+1)
stringmsgCommentLoss=str.format('{0}{1,number,integer}',isLongLimitExitTighterThanStopLoss?'LLim🟪':'L🛑',i+1)
strategy.exit(id=str.format(exitOrderIdPattern1,longOrderIdPrefix,i+1),from_entry=longOrderIdEntry,qty=longTakeProfitQuantity,
limit=longTightestLimit,stop=longTightestStop,trail_price=takeProfitTrailEnabled?longTakeProfitPrice:na,trail_offset=takeProfitTrailEnabled?longTrailTakeProfitOffsetTicks.get(i):na,
comment_profit=showAlertsEnabled?msgAlertProfit:msgCommentProfit,comment_loss=showAlertsEnabled?msgAlertLoss:msgCommentLoss,comment_trailing=showAlertsEnabled?msgAlertProfit:msgCommentProfit,
alert_profit=msgAlertProfit,alert_loss=msgAlertLoss,alert_trailing=msgAlertProfit)
//Submitexitorderfortrailingstoplosspricefortheremainingpercentofthequantitynotreservedbythetakeprofitorder
//Submitexitorderwhenexitwithlimitorstop
if(doSLorExitLimitLong)
stringmsgAlertProfit=isLongLimitExitTighterThanStopLoss?msgExitedLimitOrStopLong:na
stringmsgAlertLoss=isLongLimitExitTighterThanStopLoss?msgExitedLimitOrStopLong:msgRchSLLong
stringmsgCommentProfit=isLongLimitExitTighterThanStopLoss?'LLim🟪':na
stringmsgCommentLoss=isLongLimitExitTighterThanStopLoss?'LLim🟪':'L🛑'
strategy.exit(id=str.format(exitOrderIdPattern2,longOrderIdPrefix),from_entry=longOrderIdEntry,limit=exitOrderType=='LIMIT'?longLimitOrStopExitPrice:na,stop=longTightestStop,
comment_profit=showAlertsEnabled?msgAlertProfit:msgCommentProfit,comment_loss=showAlertsEnabled?msgAlertLoss:msgCommentLoss,
alert_profit=msgAlertProfit,alert_loss=msgAlertLoss)
//GettingintoSHORTposition
if(doEnterMarketShort)
stringmsgAlert=entryOrderType=='MARKET'?msgEnteredMarketShort:msgEnteredLimitOrStopShort
if(notna(longStopLossPrice)andnotna(shortLimitOrStopEntryPrice)andlongStopLossPrice>shortLimitOrStopEntryPrice)
strategy.order(id=shortOrderIdEntry,direction=strategy.short,limit=entryOrderType=='LIMIT'?shortLimitOrStopEntryPrice:entryOrderType=='STOP-LIMIT'?shortStopLimitEntryPrice:na,
stop=entryOrderType=='STOP'orentryOrderType=='STOP-LIMIT'?shortLimitOrStopEntryPrice:na,qty=shortEntryBaseQuantity,comment=showAlertsEnabled?msgAlert:'S🔷',alert_message=msgAlert)
else
strategy.entry(id=shortOrderIdEntry,direction=strategy.short,limit=entryOrderType=='LIMIT'?shortLimitOrStopEntryPrice:entryOrderType=='STOP-LIMIT'?shortStopLimitEntryPrice:na,
stop=entryOrderType=='STOP'orentryOrderType=='STOP-LIMIT'?shortLimitOrStopEntryPrice:na,qty=shortEntryBaseQuantity,comment=showAlertsEnabled?msgAlert:'S🔷',alert_message=msgAlert)
//Cancelexistingentrylimit,stopandstop-limitorders(ifany)whenvalidcancelopensignaloccurs
if(doCnlLimitEntryShort)
strategy.cancel(id=shortOrderIdEntry)
if(msgCnlLimitOrStopEntryEnabled)
varstringvarMsgCnlLimitOrStopEntryShort=rawMsgCnlLimitOrStopEntryShort.replace_all(stringVariablePairs)
alert(message=varMsgCnlLimitOrStopEntryShort.replace(numberVariablePairsShort),freq=alert.freq_once_per_bar_close)
//Calculatethetighteststoporderbycombiningthestoplossandlimitorstopexit(ifany)
floatshortEffectiveStopLossPrice=stopLossWaitCloseConfirm?na:shortStopLossPrice
floatshortTightestStop=exitOrderType=='STOP'andshortLimitExitIsActive?math.min(nz(shortLimitOrStopExitPrice,maxLimitFloat),nz(shortEffectiveStopLossPrice,maxLimitFloat)):shortEffectiveStopLossPrice
boolisShortLimitExitTighterThanStopLoss=stopLossWaitCloseConfirm?true:shortLimitExitIsActiveandexitOrderType=='STOP'andshortLimitOrStopExitPrice<shortStopLossPrice
//Submitexitorderfortrailingtakeprofitpricealsosetthestoplossforthetakeprofitpercentageincasethatstoplossisreachedfirst
//Submitexitorderwhenexitwithlimitorstop
for[i,shortTakeProfitPrice]inshortTakeProfitPrices
if(shortLimitExitIsActiveor(shortIsActiveandnotshortTrailTakeProfitExecuted.get(i)))
floatshortightestLimit=exitOrderType=='LIMIT'andshortLimitExitIsActive?math.max(nz(shortLimitOrStopExitPrice,minLimitFloat),nz(shortTakeProfitPrice,minLimitFloat)):takeProfitTrailEnabled?na:shortTakeProfitPrice
boolisShortLimitExitTighterThanTakeProfit=shortLimitExitIsActiveandshortLimitOrStopExitPrice>shortTakeProfitPrice
stringmsgAlertProfit=isShortLimitExitTighterThanTakeProfit?msgExitedLimitOrStopShort:msgRchTPShort.get(i%numOfMaxTPAlerts)
stringmsgAlertLoss=i==takeProfitTargetsSizeandmoonbagQuantityRatio==0.0?isShortLimitExitTighterThanStopLoss?msgExitedLimitOrStopShort:msgRchSLShort:na
stringmsgCommentProfit=str.format('{0}{1,number,integer}',exitOrderType=='LIMIT'andshortLimitExitIsActive?'SLim🟪':'S🎯',i+1)
stringmsgCommentLoss=str.format('{0}{1,number,integer}',isShortLimitExitTighterThanStopLoss?'SLim🟪':'S🛑',i+1)
strategy.exit(id=str.format(exitOrderIdPattern1,shortOrderIdPrefix,i+1),from_entry=shortOrderIdEntry,qty=shortTakeProfitQuantity,
limit=shortightestLimit,stop=shortTightestStop,trail_price=takeProfitTrailEnabled?shortTakeProfitPrice:na,trail_offset=takeProfitTrailEnabled?shortTrailTakeProfitOffsetTicks.get(i):na,
comment_profit=showAlertsEnabled?msgAlertProfit:msgCommentProfit,comment_loss=showAlertsEnabled?msgAlertLoss:msgCommentLoss,comment_trailing=showAlertsEnabled?msgAlertProfit:msgCommentProfit,
alert_profit=msgAlertProfit,alert_loss=msgAlertLoss,alert_trailing=msgAlertProfit)
//Submitexitorderfortrailingstoplosspricefortheremainingpercentofthequantitynotreservedbythetakeprofitorder
//Submitexitorderwhenexitwithlimitorstop
if(doSLorExitLimitShort)
stringmsgAlertProfit=isShortLimitExitTighterThanStopLoss?msgExitedLimitOrStopShort:na
stringmsgAlertLoss=isShortLimitExitTighterThanStopLoss?msgExitedLimitOrStopShort:msgRchSLShort
stringmsgCommentProfit=isShortLimitExitTighterThanStopLoss?'SLim🟪':na
stringmsgCommentLoss=isShortLimitExitTighterThanStopLoss?'SLim🟪':'S🛑'
strategy.exit(id=str.format(exitOrderIdPattern2,shortOrderIdPrefix),from_entry=shortOrderIdEntry,limit=exitOrderType=='LIMIT'?shortLimitOrStopExitPrice:na,stop=shortTightestStop,
comment_profit=showAlertsEnabled?msgAlertProfit:msgCommentProfit,comment_loss=showAlertsEnabled?msgAlertLoss:msgCommentLoss,
alert_profit=msgAlertProfit,alert_loss=msgAlertLoss)
//Limitthemaximumdrawdown
strategy.risk.max_drawdown(value=maxDrawdownEnabled?maxDrawdownPerc:100.0,type=strategy.percent_of_equity,alert_message=msgMaxDrawdown)
//#endregion===========================================================================================================
//#region🐞DEBUG
//▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
//Description:Moduleresponsibleforplottingadditionalinformationfordebugingpurposes
//Dependencies:ALL
//Results:showAlertsEnabled,debugModeEnabled
//INPUT===============================================================================================================
debugModeEnabled=input.bool(defval=false,title='DebugMode',tooltip='Enabledebugmode.',group='🐞Debug')
//PLOT================================================================================================================
boolshowLongPlots=notlongLimitOrStopEntryIsActiveordebugModeEnabled
boolshowShortPlots=notshortLimitOrStopEntryIsActiveordebugModeEnabled
varcolordbgPosColor=color.new(posColor,50)
plot(series=showLongPlots?longEntryPrice:na,title='LongPositionEntry',color=longLimitOrStopEntryIsActive?debugModeEnabled?dbgPosColor:na:posColor,linewidth=1,style=plot.style_linebr,offset=1)
plot(series=showShortPlots?shortEntryPrice:na,title='ShortPositionEntry',color=shortLimitOrStopEntryIsActive?debugModeEnabled?dbgPosColor:na:posColor,linewidth=1,style=plot.style_linebr,offset=1)
varcolordbgStopLossColor=color.new(stopLossColor,50)
plot(series=showLongPlots?longStopLossPrice:na,title='LongStopLoss',color=longLimitOrStopEntryIsActive?debugModeEnabled?dbgStopLossColor:na:stopLossColor,linewidth=2,style=plot.style_linebr,offset=1)
plot(series=showShortPlots?shortStopLossPrice:na,title='ShortStopLoss',color=shortLimitOrStopEntryIsActive?debugModeEnabled?dbgStopLossColor:na:stopLossColor,linewidth=2,style=plot.style_linebr,offset=1)
varcolordbgTakeProfitColor=color.new(takeProfitColor,50)
plot(series=numOfTakeProfitTargets>0andshowLongPlotsand(notlongIthTrailTakeProfitExecuted(1)ordebugModeEnabled)?longTakeProfitPrices.get(0):na,title='LongTakeProfit1',color=longIthTrailTakeProfitExecuted(1)orlongLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>0?display.all:display.none)
plot(series=numOfTakeProfitTargets>0andshowShortPlotsand(notshortIthTrailTakeProfitExecuted(1)ordebugModeEnabled)?shortTakeProfitPrices.get(0):na,title='ShortTakeProfit1',color=shortIthTrailTakeProfitExecuted(1)orshortLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>0?display.all:display.none)
plot(series=numOfTakeProfitTargets>1andshowLongPlotsand(notlongIthTrailTakeProfitExecuted(2)ordebugModeEnabled)?longTakeProfitPrices.get(1):na,title='LongTakeProfit2',color=longIthTrailTakeProfitExecuted(2)orlongLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>1?display.all:display.none)
plot(series=numOfTakeProfitTargets>1andshowShortPlotsand(notshortIthTrailTakeProfitExecuted(2)ordebugModeEnabled)?shortTakeProfitPrices.get(1):na,title='ShortTakeProfit2',color=shortIthTrailTakeProfitExecuted(2)orshortLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>1?display.all:display.none)
plot(series=numOfTakeProfitTargets>2andshowLongPlotsand(notlongIthTrailTakeProfitExecuted(3)ordebugModeEnabled)?longTakeProfitPrices.get(2):na,title='LongTakeProfit3',color=longIthTrailTakeProfitExecuted(3)orlongLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>2?display.all:display.none)
plot(series=numOfTakeProfitTargets>2andshowShortPlotsand(notshortIthTrailTakeProfitExecuted(3)ordebugModeEnabled)?shortTakeProfitPrices.get(2):na,title='ShortTakeProfit3',color=shortIthTrailTakeProfitExecuted(3)orshortLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>2?display.all:display.none)
plot(series=numOfTakeProfitTargets>3andshowLongPlotsand(notlongIthTrailTakeProfitExecuted(4)ordebugModeEnabled)?longTakeProfitPrices.get(3):na,title='LongTakeProfit4',color=longIthTrailTakeProfitExecuted(4)orlongLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>3?display.all:display.none)
plot(series=numOfTakeProfitTargets>3andshowShortPlotsand(notshortIthTrailTakeProfitExecuted(4)ordebugModeEnabled)?shortTakeProfitPrices.get(3):na,title='ShortTakeProfit4',color=shortIthTrailTakeProfitExecuted(4)orshortLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>3?display.all:display.none)
plot(series=numOfTakeProfitTargets>4andshowLongPlotsand(notlongIthTrailTakeProfitExecuted(5)ordebugModeEnabled)?longTakeProfitPrices.get(4):na,title='LongTakeProfit5',color=longIthTrailTakeProfitExecuted(5)orlongLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>4?display.all:display.none)
plot(series=numOfTakeProfitTargets>4andshowShortPlotsand(notshortIthTrailTakeProfitExecuted(5)ordebugModeEnabled)?shortTakeProfitPrices.get(4):na,title='ShortTakeProfit5',color=shortIthTrailTakeProfitExecuted(5)orshortLimitOrStopEntryIsActive?debugModeEnabled?dbgTakeProfitColor:na:takeProfitColor,linewidth=2,style=plot.style_linebr,offset=1,display=numOfTakeProfitTargets>4?display.all:display.none)
plot(series=math.sign(currentPositionSize),title='〰️PositionSign',color=color.olive,display=display.data_window)
//varcolordbgLongEntryColor=color.new(longEntryColor,50)
//varcolordbgShortEntryColor=color.new(shortEntryColor,50)
//varcolordbgLongExitColor=color.new(longExitColor,50)
//varcolordbgShortExitColor=color.new(shortExitColor,50)
//plotshape(series=tryEnterLongPosition,title='DbgTryEnterLong',style=shape.arrowup,location=location.belowbar,color=dbgLongEntryColor,size=size.tiny,display=debugModeEnabled?display.all-display.status_line:display.none)
//plotshape(series=tryEnterShortPosition,title='DbgTryEnterShort',style=shape.arrowdown,location=location.abovebar,color=dbgShortEntryColor,size=size.tiny,display=debugModeEnabled?display.all-display.status_line:display.none)
//plotshape(series=enteredLongTrade,title='DbgLongEntred',style=shape.diamond,location=location.belowbar,color=dbgLongEntryColor,size=size.small,display=debugModeEnabled?display.all-display.status_line:display.none)
//plotshape(series=enteredShortTrade,title='DbgShortEntred',style=shape.diamond,location=location.abovebar,color=dbgShortEntryColor,size=size.small,display=debugModeEnabled?display.all-display.status_line:display.none)
//plotshape(series=isLongPosition,title='DbgActiveLong',style=shape.labelup,location=location.belowbar,color=dbgLongEntryColor,size=size.small,display=debugModeEnabled?display.all-display.status_line:display.none)
//plotshape(series=isShortPosition,title='DbgActiveShort',style=shape.labeldown,location=location.abovebar,color=dbgShortEntryColor,size=size.small,display=debugModeEnabled?display.all-display.status_line:display.none)
//plotshape(series=completedLongTrade,title='DbgLongCompleted',style=shape.square,location=location.belowbar,color=dbgLongExitColor,size=size.small,display=debugModeEnabled?display.all-display.status_line:display.none)
//plotshape(series=completedShortTrade,title='DbgShortCompleted',style=shape.square,location=location.abovebar,color=dbgShortExitColor,size=size.small,display=debugModeEnabled?display.all-display.status_line:display.none)
//#endregion===========================================================================================================
Expand (2047 lines)
