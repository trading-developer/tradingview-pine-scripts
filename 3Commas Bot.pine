Script Name: 3Commas Bot
Author: Bjorgum
Description: Bjorgum 3Commas Bot

 A strategy in a box to get you started today

With 3rd party API providers growing in popularity, many are turning to automating their strategies on their favorite assets. With so many options and layers of customization possible, TradingView offers a place no better for young or even experienced coders to build a platform from to meet...
PineScript code:

Pine Script™ strategy
3Commas Bot
//  ▒█▀▀█  ░░░▒█  ▒█▀▀▀█  ▒█▀▀█  ▒█▀▀█  ▒█░▒█  ▒█▀▄▀█
//  ▒█▀▀▄  ░▄░▒█  ▒█░░▒█  ▒█▄▄▀  ▒█░▄▄  ▒█░▒█  ▒█▒█▒█
//  ▒█▄▄█  ▒█▄▄█  ▒█▄▄▄█  ▒█░▒█  ▒█▄▄█  ░▀▄▄▀  ▒█░░▒█
//
//  @strategy_alert_message  {{strategy.order.alert_message}}
//@version=5
strategy("3Commas  Bot",  "Bj  Bot",  true,  precision=3,  default_qty_type=strategy.cash,  commission_value=  0.05,  commission_type=strategy.commission.percent,  slippage=1,  currency=currency.USD,  default_qty_value=  10000,  initial_capital=  10000)
//  ==================================  //
//  --------->  Tool  Time  <------------  //
//  ==================================  //
longTradesTip                      =  "Turn  on/off  long  trades.  Perhaps  you  are  overall  bearish  and  wish  to  exempt  long  trades  on  this  asset"
shortTradesTip                    =  "Turn  on/off  short  trades.  Perhaps  you  are  overall  bullish  and  wish  to  exempt  long  trades  on  this  asset"
useLimitTip                          =  "Turns  on/off  the  limit  exit  method.  eg:  using  trail  and  not  setting  a  limit  exit.  Must  use  trail,  or  strategy  has  no  exit  criteria"
trailStopTip                        =  "Turns  on/off  the  ATR  trailing  stop  exit  method."
FLIPTip                                  =  "Allows  a  reversal  trade.  eg.  flipping  short  from  a  long  pos.  False  will  isolate  trades  from  one  another,  while  true  allows  an  opposite  bias  entry  while  in  a  position  already"
setMaxDrawdownTip              =  "Enables  max  drawdown  protection.  Enabling  this  will  stop  the  bot  if  the  overall  strategy  drawdown  drops  below  the  defined  risk  appetite"
RnRTip                                    =  "This  sets  your  risk  to  reward  as  a  multiple.  1  is  stop/limit  equal  distance  from  entry"
RiskMTip                                =  "Multiplier  as  a  function  of  the  ATR  value  projected  from  the  calculated  swing  high/low.  This  allows  for  a  buffer  for  your  stop  placing  it  behind  support/resistance  for  the  lookback  period"
swinglookbackTip                =  "This  is  your  swing  lookback.  The  the  number  of  bars  within  the  period  calculated  for  lowest  or  highest  value  to  establish  a  swing  pivot"
maxPercDdTip                        =  "Risk  appetite.  Every  strategy  sees  downside.  This  is  how  much  you  could  stomach  to  allow  the  bot  to  lose  if  you  let  it  run.  Strategy  stops  taking  trades  below  this  level"
atrLenTip                              =  "Length  of  the  period  for  the  ATR  to  average"
trailStopSizeTip                =  "The  ATR  multiplier  for  ATR-based  trailing  stop.  Higher  number  yields  a  higher  volatility  based  risk  adjustment  from  the  swing  low"
trailSourceTip                    =  "The  price  source  for  calculating  ATR  trailing  stop"
rrExitTip                              =  "This  is  the  %  of  reward  (target  price)  that  must  hit  in  order  to  trigger  the  trail  expressed  as  a  decimal.  eg.  0.5  =  50%  to  target."
maType1Tip                            =  "Sets  the  moving  average  type  for  the  first  MA"
maType2Tip                            =  "Sets  the  moving  average  type  for  the  second  MA"
maLength1Tip                        =  "Sets  the  length  for  the  first  MA.  (it  is  likely  best  to  keep  MA1  length  less  than  MA2,  or  it  may  result  in  opposite  trade  bias  desired  depending  on  MA  type"
maLength2Tip                        =  "Sets  the  length  for  the  second  MA.  (it  is  likely  best  to  keep  MA2  length  greater  than  MA2,  or  it  may  result  in  opposite  trade  bias  desired  depending  on  MA  type"
drawEntryTip                        =  "Shows  the  trade  entry  level"
exitLvlTip                            =  "Shows  the  level  that  the  trailing  stop  is  triggered"
useTimeFilterTip                =  "Turns  on/off  time  session  filter"
timeSessionTip                    =  "Time  session  to  ignore  trades  (useful  for  ignoring  trades  during  times  you  don't  want  to  trade.  eg.  Markets  are  slow  for  a  period  of  time  in  the  night)"
startTimeTip                        =  "Start  date  &  time  to  begin  backtest  period.  Also  useful  for  beginning  new  bot.  eg.  Set  time  to  now  to  make  broker  emulator  in  a  flat  position  before  setting  alerts"
endTimeTip                            =  "End  date  &  time  to  stop  searching  for  setups  for  back  testing."
//  ==================================  //
//  --------->  User  Input  <-----------  //
//  ==================================  //
longTrades                            =  input.bool        (true,              "Detect  Long  Trades",                                    group="Trade  variables",        tooltip=longTradesTip)
shortTrades                          =  input.bool        (true,              "Detect  Short  Trades",                                  group="Trade  variables",        tooltip=shortTradesTip)
useLimit                                =  input.bool        (true,              "Use  Limit  exit",                                            group="Trade  variables",        tooltip=useLimitTip)
trailStop                              =  input.bool        (false,            "Use  ATR  Trailing  Stop",                              group="Trade  variables",        tooltip=trailStopTip)
FLIP                                        =  input.bool        (false,            "Allow  Reversal  Trades",                              group="Trade  variables",        tooltip=FLIPTip)
setMaxDrawdown                    =  input.bool        (false,            "Set  Max  Total  DrawDown",                            group="Trade  variables",        tooltip=setMaxDrawdownTip)
RnR                                          =  input.float      (1,                    "Reward  to  Risk  Ratio",                                group="Risk  Management",        tooltip=RnRTip,                  minval=0)
RiskM                                      =  input.float      (1,                    "Risk  Adjustment",                                          group="Risk  Management",        tooltip=RiskMTip,              minval=0)
swinglookback                      =  input.int          (5,                    "Swing  Lookback",                                            group="Risk  Management",        tooltip=swinglookbackTip)
maxPercDd                              =  input.int          (20,                  "Max  Drawdown  (%)",                                        group="Risk  Management",        tooltip=maxPercDdTip)
atrLen                                    =  input.int          (14,                  "ATR  length",                                                    group="Risk  Management",        tooltip=atrLenTip)
trailStopSize                      =  input.float      (1.0,              "ATR  Trailing  Stop  Multiplier",                  group="Trailing  Stop",            tooltip=trailStopSizeTip)
trailSource                          =  input.string    ("High/Low","ATR  Trailing  Stop  Source",                          group="Trailing  Stop",            tooltip=trailSourceTip,  options=["High/Low",  "Close",  "Open"])
rrExit                                    =  input.float      (0.0,              "R:R  To  Trigger  Exit",                                    group="Trailing  Stop",            tooltip=rrExitTip)
maType1                                  =  input.string    ("EMA",          "MA  Type  #1",                                                      group="MA  Type",                        tooltip=maType1Tip,          options=["EMA",  "HEMA",  "SMA",  "HMA",  "WMA",  "DEMA",  "VWMA",  "VWAP",  "T3"])
maType2                  =input.string("EMA","MAType#2",group="MAType",tooltip=maType2Tip,options=["EMA","HEMA","SMA","HMA","WMA","DEMA","VWMA","VWAP","T3"])
maLength1=input.int(21,"MALength#1",group="MASettings",tooltip=maLength1Tip,minval=1)
maLength2=input.int(50,"MALength#2",group="MASettings",tooltip=maLength2Tip,minval=1)
maBull1=input.color(#64b5f6,"",inline="1",group="MAColor/Transp/Linewidth")
maBear1=input.color(#ef5350,"",inline="1",group="MAColor/Transp/Linewidth")
maBull2=input.color(#64b5f6,"",inline="2",group="MAColor/Transp/Linewidth")
maBear2=input.color(#ef5350,"",inline="2",group="MAColor/Transp/Linewidth")
drawEntry=input.bool(false,"Drawentryprice",group="Display",tooltip=drawEntryTip)
exitLvl=input.bool(true,"Drawtrailtriggerprice",group="Display",tooltip=exitLvlTip)
useTimeFilter=input.bool(false,"UseTimeSessionFilter",group="Filters",tooltip=useTimeFilterTip)
timeSession=input.session("0000-0300","TimeSessionToIgnoreTrades",group="Filters",tooltip=timeSessionTip)
startTime=input.time(timestamp("01Jan200000:00GMT-7"),"StartFilter",group="Filters",tooltip=startTimeTip)
endTime=input.time(timestamp("01Jan209900:00GMT-7"),"EndFilter",group="Filters",tooltip=endTimeTip)
//==================================//
//----->InvariableConstants<-----//
//==================================//
//builtinfunctionstomakethescriptmorereadablewhenreferencingpositionconditions//

FLAT=strategy.position_size==0
LONG=strategy.position_size>0
SHORT=strategy.position_size<0
confirmed=barstate.isconfirmed
entry=strategy.position_avg_price
//usingthevarfunctionallows"saving"ofvaluestobesetlater.Thisallowsusto"set"astopforexampleandnothaveitchangeasitsrecalcualtedoneachbar.//
varlookForExit=false
vartradeStopPrice=0.0
vartradeTargetPrice=0.0
vartrailingStop=0.0
vartradeExitTriggerPrice=0.0
vartradeStopDistance=0.0
vartradeTriggerPrice=0.0
//==================================//
//--->FunctionalDeclarations<----//
//==================================//
//FunctiontocalculateHAvalueforBjHEMAMAtype//
_haOpen()=>
haClose=(open+high+low+close)/4
haOpen=float(na)
haOpen:=na(haOpen[1])?(open+close)/2:(nz(haOpen[1])+nz(haClose[1]))/2

haOpen
HaOpen=_haOpen()
//CustomMAfunction.ThisalowsvariableMAselectionfromtheinputmenu.Fucntiontoberenderedlater//

getMA(type,length)=>
maPrice=ta.ema(close,length)
iftype=="HEMA"
maPrice:=ta.ema(HaOpen,length)
iftype=="SMA"
maPrice:=ta.sma(close,length)
iftype=="HMA"
maPrice:=ta.hma(close,length)
iftype=="WMA"
maPrice:=ta.wma(close,length)
iftype=="VWMA"
maPrice:=ta.vwma(close,length)
iftype=="VWAP"
maPrice:=ta.vwap
iftype=="DEMA"
e1=ta.ema(close,length)
e2=ta.ema(e1,length)
maPrice:=2*e1-e2
iftype=="T3"
axe1=ta.ema(close,length)
axe2=ta.ema(axe1,length)
axe3=ta.ema(axe2,length)
axe4=ta.ema(axe3,length)
axe5=ta.ema(axe4,length)
axe6=ta.ema(axe5,length)
ab=0.7
ac1=-ab*ab*ab
ac2=3*ab*ab+3*ab*ab*ab
ac3=-6*ab*ab-3*ab-3*ab*ab*ab
ac4=1+3*ab+ab*ab*ab+3*ab*ab
maPrice:=ac1*axe6+ac2*axe5+ac3*axe4+ac4*axe3
maPrice
//Thisiswhatallowstimesessionfiltertofunction.Perhapsyoudon'twanttotradeduringcertainhours.

isInSession(sess)=>na(time(timeframe.period,sess+":1234567","GMT-6"))==false
//==================================//
//---->VariableCalculations<-----//
//==================================//
//Usingthecustomfunctionfromabove,MAsarerenderedusingtheinputsfromtheusermenu.

ma1=getMA(maType1,maLength1)
ma2=getMA(maType2,maLength2)
//calculateatrforvolatilitybasedstops

atr=ta.atr(atrLen)
//Calculatetheswinghigh/low.Takesthehighest/lowestpointovertheuserdefinedlookbackperiod

lowestLow=ta.lowest(low,swinglookback)
highestHigh=ta.highest(high,swinglookback)
//rendersthetimefilterfuncitonandsetsthedatefilterusedforscreeeningouttrades,oradjustingbacktest.

timeFilter=(useTimeFilterandnotisInSession(timeSession))ornotuseTimeFilter
dateFilter=time>=startTimeandtime<=endTime
withinTime=timeFilteranddateFilter
//==================================//
//---->ConditionalParameters<----//
//==================================//
//===================================//

//Theseconditionsaretheonlythingthatyouwouldchangetoputinyourowncriteria.
//Calcualtethemabove,anduseconditionstoalterthedefinitionof"validLongEntry"and"validShortEntry"
ma1CrossUp2=ta.crossover(ma1,ma2)//usedtocreatethecrossconditionoftheMA's
ma1CrossDn2=ta.crossunder(ma1,ma2)
validLongEntry=ma1CrossUp2andnotna(atr)//assignsthecrossconditontoeachentryvariable.
validShortEntry=ma1CrossDn2andnotna(atr)//"andnotna(atr)"isusedtoprevententriesatverybeginningofthebacktestbeforeATRcanrenderoverits14periodlookback.
//Stopsandtargetscannotcalcualteinthisperiodresultinginabrokenstrategy.Itsreccomendedtokeepthatwithyourowncriteria.
//===================================//

condmaxdrawdown=setMaxDrawdown?maxPercDd:100//usedtosetthemaxdrawdown,ifused
ma1Con=ma1>=ma1[1]//createarisingconditionforMA
ma2Con=ma2>=ma2[1]
ma1Col=ma1Con?maBull1:maBear1//checkifMAisrising,assingacolor
ma2Col=ma2Con?maBull2:maBear2
//==================================//
//------->RiskMitigation<--------//
//==================================//
//checkwhattrailsourcewaschosen,calcualtethetrailprice,checkifitshigherthanlastbar,assingnewtrailvalue
ifLONGandtrailStopandlookForExitandconfirmed
trailSrcLong=(trailSource=="Close"?close[1]:trailSource=="Open"?open[1]:lowestLow)
trail=trailSrcLong-(atr*trailStopSize)
needsUpdate=trail>trailingStop
trailingStop:=needsUpdate?trail:trailingStop
//checkwhattrailsourcewaschosen,calcualtethetrailprice,checkifitslowerthanlastbar,assingnewtrailvalue
ifSHORTandtrailStopandlookForExitandconfirmed
trailSrcShort=(trailSource=="Close"?close[1]:trailSource=="Open"?open[1]:highestHigh)
trail=trailSrcShort+(atr*trailStopSize)
needsUpdate=trail<trailingStop
trailingStop:=needsUpdate?trail:trailingStop

///CalculateStops///

longStop=lowestLow-(atr*RiskM)
shortStop=highestHigh+(atr*RiskM)

longRisk=close-longStop
shortRisk=shortStop-close

longlimit=close+(RnR*longRisk)
shortlimit=close-(RnR*shortRisk)
longLimitDist=close-longlimit
shortLimitDist=shortlimit-close
//==================================//
//-------->LogicalOrder<---------//
//==================================//
///SaveStopsandsetentries///

ifvalidShortEntryand(FLATor(LONGandFLIP))andconfirmedandwithinTimeandshortTrades
tradeStopPrice:=shortStop
tradeTargetPrice:=useLimit?shortlimit:na
tradeExitTriggerPrice:=close+(shortLimitDist*rrExit)
lookForExit:=false
trailingStop:=tradeStopPrice
else
validShortEntry:=false

ifvalidLongEntryand(FLATor(SHORTandFLIP))andconfirmedandwithinTimeandlongTrades
tradeStopPrice:=longStop
tradeTargetPrice:=useLimit?longlimit:na
tradeExitTriggerPrice:=close-(longLimitDist*rrExit)
lookForExit:=false
trailingStop:=tradeStopPrice
else
validLongEntry:=false
//checktoseeiftherrExitlevelwasexceededtotriggerthetrail.Ifnotsetthenbegintrailonentry
ifLONGandrrExit!=0.0and(high>=tradeExitTriggerPriceandtrailStop)or(rrExit==0.0andtrailStop)
lookForExit:=true

ifSHORTandrrExit!=0.0and(low<=tradeExitTriggerPriceandtrailStop)or(rrExit==0.0andtrailStop)
lookForExit:=true
//==================================//
//------>GraphicalDisplay<-------//
//==================================//
//drawordersifintrade,drawtargetsortriggersifnotexceeded,onlydrawexitifwithinRnRboundary.Usedrawordersoffsettoplotonebarbeforeentrytomakeplotlevelsvisibleonfirstbaroftrade

drawOrders=(validLongEntryorvalidShortEntry)ornotFLAT
stopPrice=trailStop?trailingStop:tradeStopPrice
targetPrice=lookForExitandnotuseLimit?na:tradeTargetPrice
drawExit=SHORTandtradeExitTriggerPrice>targetPriceandtradeExitTriggerPrice<entryor
LONGandtradeExitTriggerPrice<targetPriceandtradeExitTriggerPrice>entry
plotExitPrice=((drawExitandtrailStop)or(trailStopandnotuseLimit))and(drawOrdersordrawOrders[1])andnotlookForExit?drawOrders?tradeExitTriggerPrice:tradeExitTriggerPrice[1]:na
plotStopPrice=drawOrdersordrawOrders[1]?drawOrders?stopPrice:stopPrice[1]:na
plotTarget=drawOrdersordrawOrders[1]?drawOrders?targetPrice:targetPrice[1]:na
plot(drawEntry?entry:na,"EntryPrice",#9598a1,style=plot.style_linebr)
plot(exitLvl?plotExitPrice:na,"TriggerExit",color.blue,style=plot.style_linebr)
plot(plotStopPrice,"StopPrice",color.red,style=plot.style_linebr)
plot(plotTarget,"TargetPrice",color.green,style=plot.style_linebr)
plot(ma1,"MovingAverage#1",ma1Col)
plot(ma2,"MovingAverage#2",ma2Col)
//colorbackgroundifbarsoutsideoftimefilter
bgcolor(color=(useTimeFilterandisInSession(timeSession))ornotdateFilter?color.new(color.red,80):na,title="FilterColor")
//==================================//
//-------->3-CommasKeys<---------//
//==================================//
//Pasteyourbotmessageshere.Makesureyoukeepsinglequotes'oneithersideofyourpaste.example:'paste'//

//**SPECIALNOTE**NoticethatforlongandshortentriesONLYthereisadelayof1second.Inoticedthatfliptradescancauseproblemsat3commascausingittomissorders,soasmalldelayallowsthingstorunsmoothly.
//Thisisuptoyou,butbeawareofitthatitisanoptiontoputinadelaytostaggerthealertsslightly//
Long='{"message_type":"bot","bot_id":4635591,"email_token":"25byourtefcodeuufyd2-43314-ab98-bjorg224","delay_seconds":1}'//startlongdeal

ExitLong='{"message_type":"bot","bot_id":4635591,"email_token":"25byourtefcodeuufyd2-43314-ab98-bjorg224","delay_seconds":0,"action":"close_at_market_price"}'//closelongdealmarket

Goshort='{"message_type":"bot","bot_id":4635690,"email_token":"25byourtefcodeuufyd2-43314-ab98-bjorg224","delay_seconds":1}'//startshortdeal

ExitShort='{"message_type":"bot","bot_id":4635690,"email_token":"25byourtefcodeuufyd2-43314-ab98-bjorg224","delay_seconds":0,"action":"close_at_market_price"}'//closeshortdealmarket
//CreateaJSONarraytoincludetheclosebotandentrybottagsinonealertmessage
enterLong=SHORTandvalidLongEntry?str.format("[{0},{1}]",ExitShort,Long):Long
enterShort=LONGandvalidShortEntry?str.format("[{0},{1}]",ExitLong,Goshort):Goshort
//==================================//
//------>StrategyExecution<------//
//==================================//
strategy.risk.max_drawdown(value=condmaxdrawdown,type=strategy.percent_of_equity)
//lONG

strategy.entry("Long",strategy.long,when=validLongEntry,comment="Long",alert_message=enterLong)

strategy.exit("LongExit",from_entry="Long",stop=trailStop?trailingStop:tradeStopPrice,limit=tradeTargetPrice,comment="LExit",alert_message=ExitLong)

//SHORT

strategy.entry("Short",strategy.short,when=validShortEntry,comment="Short",alert_message=enterShort)

strategy.exit("ShortExit",from_entry="Short",stop=trailStop?trailingStop:tradeStopPrice,limit=tradeTargetPrice,comment="SExit",alert_message=ExitShort)

//END
Expand (335 lines)
