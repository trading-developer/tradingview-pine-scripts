Script Name: Orion Algo Strategy v2.0
Author: OrionAlgo
Description: Hi everyone.

I decided to make the latest Orion Algo open to people. I don't have enough time to work on it lately, so I figured it would be best that everyone can have it to work on it. I took out some stuff from the original but it should give an idea on how things work. I made two strategies with this so far so you can use that to come up with your own. I...
PineScript code:

Pine Script™ strategy
Orion Algo Strategy v2.0
//  ©  OrionAlgo
//                    ()  /?  |  ()  |\|      /\  |_  (_,  ()                    //
//@version=4
version  =  '2.0'
strategy("Orion  Algo  Strategy  v"+version,  shorttitle="Orion  Algo  Strategy  v"+version,  overlay=false,  pyramiding=100)
//  Getting  inputs  --------------------------------------------------------------
userAgreement  =  input(true,  title='I  understand  that  Orion  Algo  cannot  be  100%  accurate  and  overall  performance  will  shift  with  market  conditions.  While  Orion  Algo  increases  my  chances  of  entering  better  positions,  I  must  use  smart  trade  management.  ',  type=input.bool,group='User  Agreement  ─────────────',
    tooltip='In  order  to  use  Orion  Algo,  you  must  click  the  checkbox  to  acknowledge  the  user  agreement')
src  =  close
//smoothing  inputs  -------------------------------------------------------------
//superSmooth  =  input(true,  title='Super  Smooth',  inline='Super  Smooth',  group='Smoothing  ─────────────────')
superSmooth  =  true
smoothType  =  1
superSmoothStrength  =  input(10,  title='Super  Smooth',minval  =  3,  inline='Super  Smooth',  group='Signal  ────────────────────',
    tooltip='Smooths  the  signal.  Lower  values  move  pivots  to  the  left  while  increasing  noise,  higher  values  move  pivots  to  the  right  and  reduce  noise.  8  is  a  good  mix  of  both')  //  set  to  timeframe  for  decent  results?
//trendSmoothing  =  input(30,  title='Trend  Smooth',minval  =  3,  group='Smoothing  ─────────────────')  //  set  to  timeframe  for  decent  results?
trendSmoothing  =  30  //  set  to  timeframe  for  decent  results?
showPrediction  =  input(false,  title='Prediction',  group='Signal  ────────────────────',inline='prediction')
predictionBias  =  input(0.45,  minval  =  0.,maxval=1.,  step=0.05,  title='Bias',  group='Signal  ────────────────────',inline='prediction')
showPredictionCurve  =  input(true,  title='Curve',  group='Signal  ────────────────────',inline='prediction',  tooltip='Prediction  model  that  attempts  to  predict  short  range  reversals  (0-2  bars).  Adjust  Bias  to  change  the  prediction  curve.')
//momentum  wave  inputs  ---------------------------------------------------------
showMomentumWave  =  input(true,  'Momentum  Wave',  group='Momentum  Wave  ─────────────',  inline='mom')
momentumWaveLength  =  input(3,  '',  group='Momentum  Wave  ─────────────',  inline='mom',  tooltip='Secondary  signal  that  shows  medium  to  large  movements  based  on  the  input  variable.  The  wave  will  change  depending  on  the  current  timeframe.')
momentumOutside  =  input(true,  'Position  Outside',  group='Momentum  Wave  ─────────────',  inline='mom2',  tooltip='Positions  the  wave  outside  of  the  main  signal  area.')
//visuals  input-----------------------------------------------------------------
useDarkMode  =  input(true,  'Dark  Mode',  group='Visuals  ───────────────────',inline='Colors')
//  0:backgroundlines,  1:signal,  2:bullish,  3:bearish,  4:hiddenbull,  5:hiddenbear,  6:deltav,  7:prediction,  8:predictionbull,  9:predictionbear,  10:dash,  11:mom2
visualMode  =  input('Pro',  'Mode',options=['Beginner',  'Pro']  ,group='Visuals  ───────────────────')
dashOn  =  input(true,  "Dashboard",  group='Dashboard  ─────────────────',  inline='dash',  tooltip='A  dashboard  with  some  usefual  stats')

dashColor  =  color.new(#171a27,  100)
showPivots  =  input(true,  title='Signal  Pivots',  group='Pivots  ────────────────────',inline='pivots')
showPredictionPivots  =  input(false,  title='Prediction  Pivots',  group='Pivots  ────────────────────',inline='pivots')
//  Devmode
dev_a  =  input(true,'a',  group='DEV  ────────────────────',inline='dev')
dev_b  =  input(true,'b',  group='DEV  ────────────────────',inline='dev')
dev_c  =  input(true,'c',  group='DEV  ────────────────────',inline='dev')
dev_d  =  input(true,'d',  group='DEV  ────────────────────',inline='dev')
dev_e  =  input(true,'e',  group='DEV  ────────────────────',inline='dev')
dev_f  =  input(true,'f',  group='DEV  ────────────────────',inline='dev')
dev_g  =  input(true,'g',  group='DEV  ────────────────────',inline='dev')
//  Functions  -------------------------------------------------------------------
f_secureSecurity(_symbol,  _res,  _src)  =>  security(_symbol,  _res,  _src,barmerge.gaps_on,  lookahead  =  barmerge.lookahead_on)
f_slope(x)  =>
        slopePeriod  =  1
        (x  -  x[slopePeriod])  /  slopePeriod
f_superSmooth(inputVal,smoothType)  =>
        smoothType==1?  (hma(inputVal,superSmoothStrength))  :
            smoothType==2?  (ema((ema((ema(inputVal,3)),3)),superSmoothStrength)):
            smoothType==3?  linreg(inputVal,superSmoothStrength,0)  :
            smoothType==4?  (hma(inputVal,superSmoothStrength  *  momentumWaveLength))  :  na
f_bias(bias,  min,  max)  =>
        (bias  *  (max  -  min)  )  +  min
f_resInMinutes()  =>
        _resInMinutes  =  timeframe.multiplier  *  (
            timeframe.isseconds  ?  1.  /60.:
timeframe.isminutes?1.:
timeframe.isdaily?1440.:
timeframe.isweekly?10080.:
timeframe.ismonthly?43800.:na)
f_resFromMinutes(_minutes)=>
_minutes<=0.0167?"1S":
_minutes<=0.0834?"5S":
_minutes<=0.2500?"15S":
_minutes<=0.5000?"30S":
_minutes<=1?"1":
_minutes<=1440?tostring(round(_minutes)):
_minutes<=43800?tostring(round(min(_minutes/1440,365)))+"D":
tostring(round(min(_minutes/43800,12)))+"M"

f_volatility()=>
atr=atr(14)
stdAtr=2*stdev(atr,20)
smaAtr=sma(atr,20)
topAtrDev=smaAtr+stdAtr
bottomAtrDev=smaAtr-stdAtr
calcDev=(atr-bottomAtrDev)/(topAtrDev-bottomAtrDev)
percentVol=(40*calcDev+30)

f_output_signal()=>
a=((ema(close,12)-ema(close,26))-ema((ema(close,12)-ema(close,26)),8))/10
b=wpr(8)
c=(100*(close+2*stdev(close,21)-sma(close,21))/(4*stdev(close,21)))
d=(rsi(close-sma(close,21),8)*2)-100
e=(rsi(fixnan(100*rma(change(high)>change(low)andchange(high)>0?change(high):0,1)/rma(tr,1))-fixnan(100*rma(change(low)>change(high)andchange(low)>0?change(low):0,1)/rma(tr,1)),8)*2)-100//causesslowdown
f=rsi((((close-((sum(volume,20)-volume)/sum(volume,20))+(volume*close/sum(volume,20)))/((close+((sum(volume,20)-volume)/sum(volume,20))+(volume*close/sum(volume,20)))/2))*100),8)-100
g=(rsi(sma((close-lowest(low,14))/highest(high,14)-lowest(low,14)-0.5,2),8)*2)-100//causesslowdown
x=avg(dev_a?a:0,dev_b?b:0,dev_c?c:0,dev_d?d:0,dev_e?e:0,dev_f?f:0,dev_g?g:0)*2
f_superSmooth(x,1)

output_signal=f_output_signal()
//output_signal2=plot(f_superSmoothSlow(f_output_signal()),color=color.blue,linewidth=2)
//OrionSignalHigherTimeframe/MomentumWave--------------------------------
f_momentumWave(wavelength,smooth)=>
currentMinutes=f_resInMinutes()
m=currentMinutes*wavelength//multiplycurrentresolutionbymomentumWaveLengthtogethigherresolution
momentumWaveRes=f_resFromMinutes(m)
f_secureSecurity(syminfo.tickerid,momentumWaveRes,f_superSmooth(f_output_signal(),1))
//Plot------------------------------------------------------------------------
f_color(x)=>
ifuserAgreement
white=useDarkMode?#e5e4f4:#505050ff
lightgray=useDarkMode?#808080:#909090ff
gray=useDarkMode?#808080:#505050ff
//blue=useDarkMode?#007EA7:#007EA7ff
blue=useDarkMode?#2862FFFF:#2862FFFF

//0:backgroundlines,1:signal,2:bullish,3:bearish,4:hiddenbull,5:hiddenbear,6:deltav,7:prediction,8:predictionbull,9:predictionbear,10:trendbull,11:trendbear,12:dash,13:mom1,14:mom2
x==0?lightgray:x==1?gray:x==2?white:x==3?blue:x==4?white:x==5?blue:x==6?blue:x==7?blue:x==8?white:x==9?blue:x==10?blue:x==11?blue:na
//Lines-----------------------------------------------------------------------
h1=plot(0,"MidBand",color=f_color(0),editable=0,transp=80)
//Signal----------------------------------------------------------------------
orionSignal=plot(output_signal,title="OrionSignalCurve",style=plot.style_line,linewidth=1,transp=0,color=f_color(1),offset=0,editable=0)
//MomentumWave---------------------------------------------------------------
momWave=f_momentumWave(momentumWaveLength,1)
p_momWave=plot(showMomentumWave?momentumOutside?(momWave/2)-150:momWave:na,color=f_color(11),linewidth=showMomentumWaveandmomentumOutside?1:2,editable=0,transp=50,style=momentumOutside?plot.style_area:plot.style_line,histbase=-200)//twotonecolordoesntwanttoworkwiththisforsomereason.
//Divergence------------------------------------------------------------------
osc=output_signal
plFound=osc>osc[1]andosc[1]<osc[2]
phFound=osc<osc[1]andosc[1]>osc[2]
//bullish
plot(
plFoundandvisualMode=='Pro'?osc[1]-10:na,
offset=0,
title="RegularBullish",
linewidth=3,
color=showPivots?f_color(2):na,
transp=0,
style=plot.style_circles,
editable=0
)
plotshape(
plFoundandvisualMode=='Beginner'?osc[1]-10:na,
offset=0,
title="RegularBullish",
size=size.tiny,
color=showPivots?f_color(2):na,
transp=0,
style=shape.labelup,
text='Buy',
textcolor=color.black,
location=location.absolute,
editable=0
)
//bearish
plot(
phFoundandvisualMode=='Pro'?osc[1]+10:na,
offset=0,
title="RegularBearish",
linewidth=3,
color=showPivots?f_color(3):na,
transp=0,
style=plot.style_circles,
editable=0
)
plotshape(
phFoundandvisualMode=='Beginner'?osc[1]+10:na,
offset=0,
title="RegularBearish",
size=size.tiny,
color=showPivots?f_color(3):na,
transp=0,
style=shape.labeldown,
text='Sell',
textcolor=color.white,
location=location.absolute,
editable=0
)
//Deltav---------------------------------------------------------------------
slope=f_slope(output_signal)*1.5
//PredictionfromDeltav-----------------------------------------------------
output_prediction=f_bias(predictionBias,slope,output_signal)
prediction_bullish=output_prediction>output_prediction[1]andoutput_prediction[1]<output_prediction[2]?true:false
prediction_bearish=output_prediction<output_prediction[1]andoutput_prediction[1]>output_prediction[2]?true:false
plot(showPredictionandshowPredictionCurve?output_prediction:na,title='PredictionCurve',color=f_color(7),editable=0)
//predictionbull
plot(showPrediction?showPredictionPivots?output_prediction>output_prediction[1]andoutput_prediction[1]<output_prediction[2]?showPredictionCurve?output_prediction:output_signal:na:na:na,
title='PredictionBullish',color=f_color(8),style=plot.style_circles,linewidth=2,editable=0)
//predictionbear
plot(showPrediction?showPredictionPivots?output_prediction<output_prediction[1]andoutput_prediction[1]>output_prediction[2]?showPredictionCurve?output_prediction:output_signal:na:na:na,
title='PredictionBearish',color=f_color(9),style=plot.style_circles,linewidth=2,editable=0)
//UserAggreement-------------------------------------------------------------
plotshape(userAgreement==false?0:na,title='Welcome',text='WelcometoOrionAlgo!Pleasedoubleclickmetoenablesignals',textcolor=color.black,color=color.white,offset=0,size=size.huge,style=shape.labeldown,location=location.absolute,transp=0,show_last=1,editable=0)
plotshape(userAgreement==false?0:na,title='Welcome',text='WelcometoOrionAlgo!Pleasedoubleclickmetoenablesignals',textcolor=color.black,color=color.white,offset=-100,size=size.huge,style=shape.labeldown,location=location.absolute,transp=0,show_last=1,editable=0)
//Alerts----------------------------------------------------------------------
alertcondition(plFound,title='1.Bullish(BigDot)',message='BullishSignal(BigDot)')
alertcondition(phFound,title='2.Bearish(BigDot)',message='BearishSignal(BigDot)')
alertcondition(prediction_bullish,title='3.PredictionBullish(SmallDot)',message='PredictionBullishSignal(SmallDot)')
alertcondition(prediction_bearish,title='4.PredictionBearish(SmallDot)',message='PredictionBearishSignal(SmallDot)')
//Strategy--------------------------------------------------------------------
i_strategy=input(defval='dcalong',title='strategy',options=['simple','dcalong'])
i_pyramid=input(10,'pyramidorders')
//SimpleStrat
if(i_strategy=='simple')
longCondition=crossover(output_signal,output_signal[1])
if(longCondition)
strategy.entry("MyLongEntryId",strategy.long)

shortCondition=crossunder(output_signal,output_signal[1])
if(shortCondition)
strategy.entry("MyShortEntryId",strategy.short)
//DCAStrat
i_percent_exit=input(2.0,'percentexitinprofit')/100
i_percent_drop=input(2.0,'percentdropbeforeeachentry')/100
varentryPrice=0.0
varexitPrice=0.0
varinTrade=false
vartradeCount=0
varmoneyInTrade=0.0
if(output_signal>output_signal[1]andoutput_signal[1]<=output_signal[2]andi_strategy=='dcalong')
//if(true)
if(inTrade==false)
strategy.entry('Long',long=true)
alert("Buysignal",alert.freq_once_per_bar)
entryPrice:=close
moneyInTrade:=close
exitPrice:=entryPrice+(entryPrice*(i_percent_exit))
inTrade:=true
tradeCount:=1

if(inTrade==trueandclose<=(entryPrice-(entryPrice*(i_percent_drop))))
//calculateDCA//mathisincorrect!!!
if(tradeCount<=i_pyramid)
tradeCount:=tradeCount+1
entryPrice:=close
moneyInTrade:=moneyInTrade+close
exitPrice2=moneyInTrade/tradeCount
exitPrice:=exitPrice2+(exitPrice2*(i_percent_exit))

strategy.entry('Long',long=true)
alert("Buysignal",alert.freq_once_per_bar)


alertcondition(output_signal>output_signal[1]andoutput_signal[1]<=output_signal[2]andi_strategy=='dcalong'andinTrade==trueandclose<=(entryPrice-(entryPrice*(i_percent_drop)))andtradeCount<=i_pyramid,'DCABuy','Buyzone')
if(close>=exitPriceandinTrade==trueandoutput_signal<=output_signal[1]andoutput_signal[1]>=output_signal[2]andi_strategy=='dcalong')
inTrade:=false
alert("Sellsignal",alert.freq_once_per_bar)
strategy.close('Long')

//Dashboard-------------------------------------------------------------------
//deltav
deltav=slope
//volatility
volatility=f_volatility()
ifdashOn
labelorionLabel=label.new(time,0,
text="オリオン"
+"\n"
+"\n━━━━━━━━━"
+"\n"
+"\n Δv"+tostring(deltav,"##.##")+"%"
+"\n Δv(n-1)"+tostring(deltav[1],"##.##")+"%"
+"\n Δv(n-2)"+tostring(deltav[2],"##.##")+"%"
+"\n"
+"\n rsi"+tostring(rsi(close,14),"##.##")
+"\n rsi(n-1)"+tostring(rsi(close,14)[1],"##.##")
+"\n rsi(n-2)"+tostring(rsi(close,14)[2],"##.##")
+"\n"
+"\n volatility"+tostring(volatility,"##.##")+"%"
+"\n"
+"\n━━━━━━v"+version
+'\n'
,
color=dashColor,xloc=xloc.bar_time,style=label.style_label_left,textcolor=f_color(10),textalign=text.align_left)
label.set_x(orionLabel,label.get_x(orionLabel)+round(change(time)*1))
label.delete(orionLabel[1])
Expand (352 lines)
