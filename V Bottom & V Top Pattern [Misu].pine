Script Name: V Bottom & V Top Pattern [Misu]
Author: Fontiramisu
Description: █  This indicator shows V bottom & V top patterns as well as potential V bottom & V top.
These V bottom & V top are chart powerful reversal patterns.
They appear in all markets and time-frames, but due to the nature of the aggressive moves that take place when a market reverses direction, it can be difficult to identify this pattern in real-time.
To address this...
PineScript code:

Pine Script™ strategy
V Bottom & V Top Pattern [Misu]
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  Author  :  @Fontiramisu
//  @version=5
strategy("V  Bottom/Top  Pattern  [Misu]",  shorttitle="V  pattern  [Misu]",  overlay=true,  initial_capital=50000,  default_qty_type=strategy.percent_of_equity,  default_qty_value=100)
//  import  Fontiramisu/fontLib/80  as  fontilab
import  Fontiramisu/fontilab/8  as  fontilab
//      --------  Find  dev  pivots  ----------  [
//  --  Var  user  input  --
var  devTooltip  ="Deviationisamultiplierthataffectshowmuchthepriceshoulddeviatefromthepreviouspivotinorderforthebartobecomeanewpivot."
vardepthTooltip="Theminimumnumberofbarsthatwillbetakenintoaccountwhenanalyzingpivots."
thresholdMultiplier=input.float(title="Deviation",defval=3.1,step=0.1,minval=0,tooltip=devTooltip,group="Pivot")
depth=input.int(title="Depth",defval=8,minval=1,tooltip=depthTooltip,group="Pivot")
//Preparepivotvariables
varlinelineLast=na
varintiLast=0//Indexlast
varintiPrev=0//Indexprevious
varfloatpLast=0//Pricelast
varfloatpLastHigh=0//Pricelast
varfloatpLastLow=0//Pricelast
varisHighLast=false//Iffalsethenthelastpivotwasapivotlow
isPivotUpdate=false
//Getpivotinformationfromdevpivotfindingfunction
[dupLineLast,dupIsHighLast,dupIPrev,dupILast,dupPLast,dupPLastHigh,dupPLastLow]=
fontilab.getDeviationPivots(thresholdMultiplier,depth,lineLast,isHighLast,iLast,pLast,true,close,high,low)
ifnotna(dupIsHighLast)
lineLast:=dupLineLast
isHighLast:=dupIsHighLast
iPrev:=dupIPrev
iLast:=dupILast
pLast:=dupPLast
pLastHigh:=dupPLastHigh
pLastLow:=dupPLastLow
isPivotUpdate:=true
//Plot.
//GetlastPivots.
varhighP=0.0
varlowP=0.0
varmidP=0.0
highP:=isHighLast?pLast:highP
lowP:=notisHighLast?pLast:lowP
midP:=(highP+lowP)/2
//]--------InputVars---------------[.
breakoutTypeConf=input.string("MidPivot",title="ConfirmationType",options=["AtFirstBreak","MidPivot","OppositPivot","NoConfirmation"],group="SignalTypeConfirmation")
lenghtSizeAvgBody=input.int(9,title="LenghtAvgBody",group="BreakoutsSettings")
firstBreakoutFactor=input.float(0.2,step=0.1,title="FirstBreakoutFactor",tooltip="FactorusedtovalidatethefirstbreakoutoftheVpattern",group="BreakoutsSettings")
confBreakoutFactor=input.float(1.2,step=0.1,title="ConfirmationBreakoutFactor",tooltip="FactorusedtovalidatetheconfirmationbreakoutoftheVpattern",group="BreakoutsSettings")
maxNbBarsValidV=input.int(11,title="MaxBarsConfirmation",group="TimingConfirmation")
//]--------LogicalVars-------------[
var_isVbottomPot=false
var_isVtopPot=false
_isVbottom=false
_isVtop=false
lastLow=0.0
indexLow=0
lastHigh=0.0
indexHigh=0
//ConfirmVpatternvars.
varlHighVtopPot=0.0
varlLowVbotPot=0.0
varnbBarLVtopPot=0
varnbBarLVbotPot=0
varbreakLevelVbotPot=0.0
varbreakLevelVtopPot=0.0
//]--------UtilFunctions-----------[
//CondVars.
_bodyHi=math.max(close,open)
_bodyLo=math.min(close,open)
_body=_bodyHi-_bodyLo
_bodyAvg=ta.ema(_body,lenghtSizeAvgBody)
_longBody=_body>_bodyAvg
_upperWick=high-_bodyHi
_greenBody=open<close
_redBody=open>close
//COND:PotentialVpattern.
_breakAboveLowP=ta.crossover(close,lowP)and_body>_bodyAvg*firstBreakoutFactor
_breakUnderHighP=ta.crossunder(close,highP)and_body>_bodyAvg*firstBreakoutFactor
//CrossingVars.
breakLevelVbotPot:=ta.crossunder(close,lowP)?lowP:breakLevelVbotPot
breakLevelVtopPot:=ta.crossover(close,highP)?highP:breakLevelVtopPot
//@functiontogetlasthigh/low(handlemultiplersiOverinarow)
getIndexHighLowFromNbCandles(boolisLong,intnbCandles)=>
highLow=isLong?low:high
indexHighLows=0
//indexHighLow=0
forcounter=1tonbCandles+10
ifisLong
iflow[counter]<highLow
highLow:=low[counter]
indexHighLows:=counter
else
ifhigh[counter]>highLow
highLow:=high[counter]
indexHighLows:=counter
indexHighLows
isWickCrossPattern(src,isCrossUp)=>
isCross=false
ifisCrossUp
isCross:=_bodyHi<srcandsrc<high
else
isCross:=low<srcandsrc<_bodyLo
isCross
getBreakoutTypeConf(type,isVtop)=>
switchtype
"NoConfirmation"=>isVtop?highP:lowP
"OppositPivot"=>isVtop?lowP:highP
"MidPivot"=>midP
"AtFirstBreak"=>isVtop?breakLevelVtopPot:breakLevelVbotPot

isPivotChanged(oldMidP)=>
midP!=oldMidP
//]--------LogicalScript-----------[
//-----
//Calculate.
lastLowDup=fontilab.getHighLowFromNbCandles(true,10)
indexLowDup=getIndexHighLowFromNbCandles(true,10)
lastHighDup=fontilab.getHighLowFromNbCandles(false,10)
indexHighDup=getIndexHighLowFromNbCandles(false,10)
if_breakAboveLowP
lastLow:=lastLowDup
indexLow:=indexLowDup
_isVbottomPot:=true
lLowVbotPot:=lastLow
elseif_breakUnderHighP
lastHigh:=lastHighDup
indexHigh:=indexHighDup
_isVtopPot:=true
lHighVtopPot:=lastHigh
//ConfirmpotentialVbotpattern.
isBreakBarAvg=breakoutTypeConf!="NoConfirmation"?_body>_bodyAvg*confBreakoutFactor:true
vBotConfSrc=getBreakoutTypeConf(breakoutTypeConf,false)
_isVbottom:=_isVbottomPotandta.crossover(close,vBotConfSrc)andisBreakBarAvg
if_isVbottomPot
//CondVpotinvalidatedorfinished.
ifnot_isVbottomandlow>=lLowVbotPotandnbBarLVbotPot<=maxNbBarsValidV
nbBarLVbotPot:=nbBarLVbotPot+1
else
_isVbottomPot:=false
nbBarLVbotPot:=0
//ConfirmpotentialVtoppattern.
vTopConfSrc=getBreakoutTypeConf(breakoutTypeConf,true)
_isVtop:=_isVtopPotandta.crossunder(close,vTopConfSrc)andisBreakBarAvg
if_isVtopPot
//CondVpotinvalidatedorfinished.
ifnot_isVtopandhigh<=lHighVtopPotandnbBarLVtopPot<=maxNbBarsValidV
nbBarLVtopPot:=nbBarLVtopPot+1
else//reinitfornextVpatter.
_isVtopPot:=false
nbBarLVtopPot:=0
//-----
//BUY/SELLCOND.
buyCond=_isVbottom
sellCond=_isVtop
//]--------StrategyPart------------[
//ifbuyCond
//strategy.entry("L",strategy.long,alert_message="BuySignal")
//ifsellCond
//strategy.entry("S",strategy.short,alert_message="SellSignal")

//]--------PlotPart&Alerts-------[
midPPlot=plot(midP,title='MidPivot',linewidth=1,color=color.yellow,display=display.none)
highPlot=plot(highP,title='HighPivot',linewidth=1,color=color.red,display=display.none)
lowPlot=plot(lowP,title='LowPivot',linewidth=1,color=color.green,display=display.none)
distLabel=ta.atr(30)*0.2
ifbuyCond
label.new(x=bar_index,y=low-distLabel,xloc=xloc.bar_index,text="V",style=label.style_label_up,color=color.green,size=size.small,textcolor=color.white,textalign=text.align_center)
elseifsellCond
label.new(x=bar_index,y=high+distLabel,xloc=xloc.bar_index,text="V",style=label.style_label_down,color=color.red,size=size.small,textcolor=color.white,textalign=text.align_center)
if_breakAboveLowP
label.new(x=bar_index-indexLowDup,y=low[indexLowDup]-distLabel,xloc=xloc.bar_index,text="Vp",style=label.style_label_up,color=color.new(color.green,70),size=size.small,textcolor=color.white,textalign=text.align_center)
elseif_breakUnderHighP
label.new(x=bar_index-indexHighDup,y=high[indexHighDup]+distLabel,xloc=xloc.bar_index,text="Vp",style=label.style_label_down,color=color.new(color.red,70),size=size.small,textcolor=color.white,textalign=text.align_center)
Expand (198 lines)
