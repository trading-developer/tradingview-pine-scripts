Script Name: [MT] Strategy Backtest Template
Author: VertMT
Description: | Initial Release |  | EN |

An update of my old script, this script is designed so that it can be used as a template for all those traders who want to save time when programming their strategy and backtesting it, having functions already programmed that in normal development would take you more time to program, with this template you can simply add your favorite...
PineScript code:

Pine Script™ strategy
[MT] Strategy Backtest Template
//@version=5
//  |  🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//  |
//  |      Script              |    [MT]  Strategy  Backtest  Template
//  |      Description    |    Strategy  template  designed  to  facilitate  the  work  and  time  of  creating  new  strategies,
//  |                                      adding  options  by  default  to  the  strategy  that  would  normally  take  you  more  time  to  develop,
//  |                                      also  being  able  to  just  add  new  indicators  following  the  indications  mentioned  inside  the  code  or  using  the  ones  already  included  inside.
//  |
//  |      Author              |    ©VertMT
//  |
//  |      Pinescript      |    https://www.tradingview.com/pine-script-docs/en/v5/Introduction.html
//  |                                      @version=5
//  |
//  |      Revision  History
//  |          Release        |    Jul  30,  2022    |  Initial  Release
//  |                                |    https://www.tradingview.com/script/uWqKX6A2/
//  |
//  |          Update          |    Oct  12,  2022    |  Update  1.1
//  |
//  |      Reference        |    https://tradingview.com/script/wzevYXew-TEMPLATE-Code-Block-Comments/
//  |
//  |
//  |          ███▄  ▄███▓  ▄▄▄█████▓
//  |        ▓██▒▀█▀  ██▒  ▓    ██▒  ▓▒
//  |        ▓██        ▓██░  ▒  ▓██░  ▒░
//  |        ▒██        ▒██    ░  ▓██▓  ░
//  |        ▒██▒      ░██▒      ▒██▒  ░
//  |        ░  ▒░      ░    ░      ▒  ░░
//  |        ░    ░            ░          ░
//  |        ░            ░            ░
//  |
//  |  🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
strategy("[MT]  Strategy  Backtest  Template",  overlay=true,  commission_value  =  0.03,  default_qty_type  =  strategy.percent_of_equity,  default_qty_value  =  100,  initial_capital  =  100,  max_lines_count  =  500,  max_labels_count  =  500)
startFilter        =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="                            ",  defval=false,  inline="Start")
endFilter            =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="                            ",  defval=false,  inline="End")
startTime            =  input.time        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Start  Timeㅤㅤ",  defval=timestamp('UTC  01  Jan  2022  00:00'),    inline="Start")
endTime                =  input.time        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="End  Time  ㅤ  ㅤ",  defval=timestamp('UTC  31  Dec  2022  23:45'),    inline="End")
session                =  input.session  (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Time  Session    ",  defval='0000-0000',  tooltip="00:00  -  00:00  to  disable.  \n\n00:00  -  00:00  para  desactivar")
zoneTime              =  input.string    (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="UTC                      ",  defval="UTC",  options  =  ["UTC-10",  "UTC-8",  "UTC-7",  "UTC-6",  "UTC-5",  "UTC-4",  "UTC-3",  "UTC",  "UTC+1",  "UTC+2",  "UTC+3",  "UTC+4",  "UTC+4:30",  "UTC+5",  "UTC+5:30",  "UTC+6",  "UTC+7",  "UTC+8",  "UTC+9",  "UTC+9:30",  "UTC+10",  "UTC+11",  "UTC+12",  "UTC+12:45",  "UTC+13"],  tooltip="Match  this  time  zone  with  that  of  your  graph  so  that  all  values  are  displayed  correctly.  \n\nHaga  coincidir  esta  zona  horaria  con  la  de  su  gráfico  para  que  todos  los  valores  se  muestren  correctamente.")
mon                        =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Monㅤ                  ",  defval=true,    inline="Days")
tue                        =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Tueㅤ                  ",  defval=true,    inline="Days")
wed                        =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Wedㅤ                  ",  defval=true,    inline="Days")
thu                        =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Thuㅤ                  ",  defval=true,    inline="Days")
fri                        =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Friㅤ                  ",  defval=true,    inline="Days")
sat                        =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Satㅤ                  ",  defval=true,    inline="Days")
sun                        =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ📆  Time  Filter  📆ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Sunㅤ                  ",  defval=true,    inline="Days")
movingAverage    =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰  Strategy  🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Moving  Averagesㅤ  ㅤ  ㅤ  ",  defval=false,        inline="MA")
useAsMA                =  input.string    (group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰  Strategy  🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Use  as:                                  ",  defval="Entry",    options=["Entry",  "Filter"],  inline="MA")
superTrend          =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰  Strategy  🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Supertrendㅤㅤㅤㅤㅤㅤ    ",  defval=false,        inline="SuperTrend")
useAsSTrend        =  input.string    (group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰  Strategy  🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Use  as:                                  ",  defval="Entry",    options=["Entry",  "Filter"],  inline="SuperTrend")
RSI                        =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰  Strategy  🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="RSIㅤㅤㅤㅤㅤㅤㅤ  ㅤ  ㅤ  ",  defval=false,        inline="RSI")
useAsRSI              =  input.string    (group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰  Strategy  🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Use  as:                                  ",  defval="Entry",    options=["Entry",  "Filter"],  inline="RSI")
stochasticRSI    =  input.bool        (group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰  Strategy  🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Stochastic  RSI  ㅤㅤㅤ  ㅤ",  defval=false,        inline="SRSI")
useAsSRSI            =  input.string    (group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰  Strategy  🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',  title="Use  as:                                  ",  defval="Entry",    options=["Entry",  "Filter"],  inline="SRSI")
ADX                  =input.bool(group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰Strategy🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',title="ADXandDIㅤㅤㅤㅤㅤㅤ",defval=false,inline="ADX")
useAsADX=input.string(group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰Strategy🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',title="Useas:",defval="Entry",options=["Entry","Filter"],inline="ADX")
SAR=input.bool(group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰Strategy🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',title="ParabolicSarㅤㅤㅤㅤㅤ",defval=false,inline="Sar")
useAsSar=input.string(group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰Strategy🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',title="Useas:",defval="Entry",options=["Entry","Filter"],inline="Sar")
closeNewEntry=input.bool(group='🟰🟰🟰🟰🟰🟰🟰ㅤ🔰Strategy🔰ㅤ🟰🟰🟰🟰🟰🟰🟰',title="CloseonNewEntry",defval=true,tooltip="Whenitisactiveandanewalertisfired,thecurrentpositionisclosedtoopenanewone,otherwise,theoperationsonlyclosewhenreachsl/tp\n\nCuandoestáactivayunanuevaalertaesdisparadasecierralaposicionactualparaabrirunanueva,encasocontrariolasoperacionessolosecierranaltocarsl/tp")
useLeverage=input.bool(group='🟰🟰🟰🟰🟰🟰ㅤ💼RiskManagement💼ㅤ🟰🟰🟰🟰🟰🟰',title="Leverageㅤㅤㅤㅤㅤ",defval=false,inline="Leverage")
leverage=input.int(group='🟰🟰🟰🟰🟰🟰ㅤ💼RiskManagement💼ㅤ🟰🟰🟰🟰🟰🟰',title="",defval=1,inline="Leverage",minval=1,maxval=100,tooltip="Byactivatingleverage,orderswilluse100%ofavailableequity.\n\nAlactivarelapalancamiento,lasórdenesutilizaránel100%delcapitaldisponible.")
ma1Status=input.bool(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="ㅤEnableMA1?ㅤ",defval=false,inline="MA1x")
ma1Color=input.color(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="",defval=#004173,inline="MA1x",tooltip="Buy/Compra\nClose>MA1\n\nSell/Venta\nClose<MA1")
ma1Type=input.string(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Type",defval="SMA",inline="MA1y",options=["SMA","EMA","WMA","VWMA","ALMA","SMMA","LSMA","HMA","DEMA","KAMA","TEMA","ZLEMA","VIDYA","JMA","T3","TRIMA"])
ma1Source=input.source(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Source",defval=close,inline="MA1y")
ma1Length=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Length",defval=10,inline="MA1y",minval=1)
ma2Status=input.bool(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="ㅤEnableMA2?ㅤ",defval=false,inline="MA2x")
ma2Color=input.color(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="",defval=#0979b0,inline="MA2x",tooltip="Buy/Compra\nClose>MA1>MA2\n\nSell/Venta\nClose<MA1<MA2")
ma2Type=input.string(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Type",defval="SMA",inline="MA2y",options=["SMA","EMA","WMA","VWMA","ALMA","SMMA","LSMA","HMA","DEMA","KAMA","TEMA","ZLEMA","VIDYA","JMA","T3","TRIMA"])
ma2Source=input.source(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Source",defval=close,inline="MA2y")
ma2Length=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Length",defval=10,inline="MA2y",minval=1)
ma3Status=input.bool(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="ㅤEnableMA3?ㅤ",defval=false,inline="MA3x")
ma3Color=input.color(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="",defval=#0cb7f2,inline="MA3x",tooltip="Buy/Compra\nClose>MA1>MA2>MA3\n\nSell/Venta\nClose<MA1<MA2<MA3")
ma3Type=input.string(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Type",defval="SMA",inline="MA3y",options=["SMA","EMA","WMA","VWMA","ALMA","SMMA","LSMA","HMA","DEMA","KAMA","TEMA","ZLEMA","VIDYA","JMA","T3","TRIMA"])
ma3Source=input.source(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Source",defval=close,inline="MA3y")
ma3Length=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Length",defval=10,inline="MA3y",minval=1)
ma4Status=input.bool(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="ㅤEnableMA4?ㅤ",defval=false,inline="MA4x")
ma4Color=input.color(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="",defval=#7cdaf9,inline="MA4x",tooltip="Buy/Compra\nClose>MA1>MA2>MA3>MA4\n\nSell/Venta\nClose<MA1<MA2<MA3<MA4")
ma4Type=input.string(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Type",defval="SMA",inline="MA4y",options=["SMA","EMA","WMA","VWMA","ALMA","SMMA","LSMA","HMA","DEMA","KAMA","TEMA","ZLEMA","VIDYA","JMA","T3","TRIMA"])
ma4Source=input.source(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Source",defval=close,inline="MA4y")
ma4Length=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Length",defval=10,inline="MA4y",minval=1)
ma5Status=input.bool(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="ㅤEnableMA5?ㅤ",defval=false,inline="MA5x")
ma5Color=input.color(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="",defval=#b6ffff,inline="MA5x",tooltip="Buy/Compra\nClose>MA1>MA2>MA3>MA4>MA5\n\nSell/Venta\nClose<MA1<MA2<MA3<MA4<MA5")
ma5Type=input.string(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Type",defval="SMA",inline="MA5y",options=["SMA","EMA","WMA","VWMA","ALMA","SMMA","LSMA","HMA","DEMA","KAMA","TEMA","ZLEMA","VIDYA","JMA","T3","TRIMA"])
ma5Source=input.source(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Source",defval=close,inline="MA5y")
ma5Length=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘MovingAverages🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Length",defval=10,inline="MA5y",minval=1)
stPeriods=input.int(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔘Supertrend🔘ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ATRPeriod",defval=10)
stSource=input.source(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔘Supertrend🔘ㅤ🟰🟰🟰🟰🟰🟰🟰",title="Source",defval=hl2)
stMultiplier=input.float(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔘Supertrend🔘ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ATRMultiplier",defval=3)
stChangeATR=input.bool(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔘Supertrend🔘ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ChangeATR?",defval=false)
hknSrcST=input.bool(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔘Supertrend🔘ㅤ🟰🟰🟰🟰🟰🟰🟰",title="UseHeikinSource?",defval=false,tooltip="TheJapanesecandlestickdatasourcewillbereplacedbyheikinashicandlestickssimulatingtheresultsofaheikinashichart.\n\nLafuentededatosdevelasjaponesasseráreemplazadaporvelasheikinashisimulandolosresultadosdeungráficoheikinashi.")
rsiSource=input.source(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ🔘RSI🔘ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="Source",defval=close)
rsiLength=input.int(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ🔘RSI🔘ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="Length",defval=14,minval=1)
rsiUpper=input.int(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ🔘RSI🔘ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="UpperBand",defval=80,minval=1,maxval=100)
rsiLower=input.int(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ🔘RSI🔘ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="LowerBand",defval=20,minval=1,maxval=100)
hknrsi=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ🔘RSI🔘ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="UseHeikinSource?",defval=false,tooltip="TheJapanesecandlestickdatasourcewillbereplacedbyheikinashicandlestickssimulatingtheresultsofaheikinashichart.\n\nLafuentededatosdevelasjaponesasseráreemplazadaporvelasheikinashisimulandolosresultadosdeungráficoheikinashi.")
smoothK=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘StochasticRSI🔘ㅤ🟰🟰🟰🟰🟰🟰",title="K",defval=3,minval=1)
smoothD=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘StochasticRSI🔘ㅤ🟰🟰🟰🟰🟰🟰",title="D",defval=3,minval=1)
srsiLength=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘StochasticRSI🔘ㅤ🟰🟰🟰🟰🟰🟰",title="RSILength",defval=14,minval=1)
stochLength=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘StochasticRSI🔘ㅤ🟰🟰🟰🟰🟰🟰",title="StochLength",defval=14,minval=1)
srsiSrc=input.source(group="🟰🟰🟰🟰🟰🟰ㅤ🔘StochasticRSI🔘ㅤ🟰🟰🟰🟰🟰🟰",title="RSISource",defval=close)
srsiCond=input.bool(group="🟰🟰🟰🟰🟰🟰ㅤ🔘StochasticRSI🔘ㅤ🟰🟰🟰🟰🟰🟰",title="RestrictAlert",defval=true)
sUpperBand=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘StochasticRSI🔘ㅤ🟰🟰🟰🟰🟰🟰",title="ㅤㅤUpperBand",defval=80,minval=1,maxval=100)
sLowerBand=input.int(group="🟰🟰🟰🟰🟰🟰ㅤ🔘StochasticRSI🔘ㅤ🟰🟰🟰🟰🟰🟰",title="ㅤㅤLowerBand",defval=20,minval=1,maxval=100)
adxLength=input.int(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔘ADXandDI🔘ㅤ🟰🟰🟰🟰🟰🟰🟰",title="Length",defval=14,minval=1)
adxThreshold=input.int(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔘ADXandDI🔘ㅤ🟰🟰🟰🟰🟰🟰🟰",title="Threshold",defval=18,minval=1)
adxType=input.string(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔘ADXandDI🔘ㅤ🟰🟰🟰🟰🟰🟰🟰",title="TypeEntry/Filter",defval="DI+andDI-",options=["DI+andDI-","ADXandThreshold[OnlyFilter]","ADXandDI"])
sarStart=input.float(group="🟰🟰🟰🟰🟰🟰ㅤ🔘ParabolicSar🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Start",defval=2,minval=0,maxval=10)*0.01
sarIncrement=input.float(group="🟰🟰🟰🟰🟰🟰ㅤ🔘ParabolicSar🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Increment",defval=2,minval=0,maxval=10)*0.01
sarMaximum=input.float(group="🟰🟰🟰🟰🟰🟰ㅤ🔘ParabolicSar🔘ㅤ🟰🟰🟰🟰🟰🟰",title="Maximum",defval=2,minval=0,maxval=10)*0.10
SL=input.bool(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="UseStopLoss",defval=false)
optionSL=input.string(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="TypeofStop",defval="Fixed%",options=["Fixed%","Fixed$","ATR","LastHigh/Low","Custom"])
fixedPSL=input.float(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤFixed%",defval=1,minval=0)/100
fixedESL=input.float(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤFixed$",defval=100,minval=0)
atrLStop=input.int(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤATRLenghtㅤㅤ",defval=14,minval=1,inline="ATRStop")
atrMStop=input.float(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤATRMultiplier",defval=1,minval=0,inline="ATRStop")
leftBHL=input.int(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤLastH/LLeftㅤ",defval=5,minval=1,inline="H/L")
rightBHL=input.int(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤLastH/LRight",defval=5,minval=1,inline="H/L")
customSL=input.string(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤCustom",defval="Custom",options=["Custom"])
trailSL=input.bool(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🔴StopLoss🔴ㅤ🟰🟰🟰🟰🟰🟰🟰",title="TrailngStopLoss",defval=false,tooltip="Themaximumstoplosspricewilldecreaseastheclosingpricemovesfurtherawayfromtheentryprice.\n\nElpreciomaximodestoplossiradisminuyendomientraselpreciodecierresealejemasdelpreciodeentrada")
TP=input.bool(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🟢TakeProfit🟢ㅤ🟰🟰🟰🟰🟰🟰🟰",title="UseTakeProfit",defval=false)
optionTP=input.string(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🟢TakeProfit🟢ㅤ🟰🟰🟰🟰🟰🟰🟰",title="TypeofStop",defval="Fixed%",options=["Fixed%","Fixed$","Ratio1:#","ATR","Custom"])
fixedPTP=input.float(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🟢TakeProfit🟢ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤFixed%",defval=1,minval=0)/100
fixedETP=input.float(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🟢TakeProfit🟢ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤFixed$",defval=100,minval=0)
ratioTP=input.float(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🟢TakeProfit🟢ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤRatio1:",defval=1,minval=0)
atrLTake=input.int(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🟢TakeProfit🟢ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤATRLenghtㅤㅤ",defval=14,minval=2,inline="ATRTake")
atrMTake=input.float(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🟢TakeProfit🟢ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤATRMultiplier",defval=1,minval=0,inline="ATRTake")
customTP=input.string(group="🟰🟰🟰🟰🟰🟰🟰ㅤ🟢TakeProfit🟢ㅤ🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤCustom",defval="Custom",options=["Custom"])
plotDashboard=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="PlotDashboard",defval=true)
maxProfit=input.float(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="Profitㅤㅤ🟢if>to:",defval=0.1,inline="Profit")
minProfit=input.float(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="ㅤ🔴if<to:",defval=0,inline="Profit")
maxWinRate=input.float(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="WinRateㅤ🟢if>to:",defval=75,inline="Winrate",minval=0,maxval=100)
minWinRate=input.float(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="ㅤ🔴if<to:",defval=50,inline="Winrate",minval=0,maxval=100)
maxPFactor=input.float(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="P.Factorㅤ🟢if>to:",defval=2,inline="PFactor",minval=0)
minPFactor=input.float(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="ㅤ🔴if<to:",defval=1,inline="PFactor",minval=0)
plotMA=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="",inline="PlotMA",defval=true)
colorMA=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="MASignalsㅤㅤㅤㅤ",inline="PlotMA",defval=color.blue)
plotST=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="",inline="PlotST",defval=true)
colorST=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="SuperTrendSignalsㅤ",inline="PlotST",defval=color.green)
plotRSI=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="",inline="PlotRSI",defval=true)
colorRSI=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="RSIㅤㅤㅤㅤㅤㅤㅤ",inline="PlotRSI",defval=color.purple)
plotSRSI=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="",inline="PlotSRSI",defval=true)
colorSRSI=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="StochasticRSIㅤㅤㅤ",inline="PlotSRSI",defval=color.orange)
plotADX=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="",inline="PlotADX",defval=true)
colorADXB=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="ADXandDIㅤㅤㅤㅤ",inline="PlotADX",defval=color.blue)
colorADXS=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="",inline="PlotADX",defval=color.yellow)
plotSAR=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="",inline="PlotSAR",defval=true)
colorSarB=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="ParabolicSarㅤㅤㅤ",inline="PlotSAR",defval=color.green)
colorSarS=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="",inline="PlotSAR",defval=color.red)
plotTrades=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="PlotTrades",defval=true)
colorTP=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤTakeProfit",defval=color.green)
colorSL=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤStopLoss",defval=color.red)
colorTSL=input.color(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="ㅤㅤTrailingStop",defval=color.orange)
plotATRPV=input.bool(group="🟰🟰🟰🟰🟰🟰🟰🟰ㅤ📊Plots📊ㅤ🟰🟰🟰🟰🟰🟰🟰🟰",title="PlotATR/PivotPoints",defval=true)
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|————————————————————————————————————————————📆TimeFilter📆———————————————————————————————————————————
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|
//|Inthissectionyoucanconfigurethestrategysothatitonlyrunsbetween
//|timeperiods,beingalsoabletoadjusttoanytimezone.
//|
//|Enesteapartadosepuedeconfigurarlaestrategiaparaquesoloseejecuteentre
//|periodosdetiempo,siendocapaztambiendeajustarseacualquierzonahoraria.
//|
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
tradeDateIsAllowed()=>
start=startFilter?time>=startTime:true
end=endFilter?time<=endTime:true

ses=time==time("S",session,zoneTime)?true:false
monF=(dayofweek(time,zoneTime)==dayofweek.monday)andmon?true:false
tueF=(dayofweek(time,zoneTime)==dayofweek.tuesday)andtue?true:false
wedF=(dayofweek(time,zoneTime)==dayofweek.wednesday)andwed?true:false
thuF=(dayofweek(time,zoneTime)==dayofweek.thursday)andthu?true:false
friF=(dayofweek(time,zoneTime)==dayofweek.friday)andfri?true:false
satF=(dayofweek(time,zoneTime)==dayofweek.saturday)andsat?true:false
sunF=(dayofweek(time,zoneTime)==dayofweek.sunday)andsun?true:false

dayF=monFortueForwedForthuForfriForsatForsunF?true:false
filter=start?end?ses?dayF?true:false:false:false:false

dateRange=tradeDateIsAllowed()
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|————————————————————————————————————————————🔰Strategy🔰——————————————————————————————————————————————
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|
//|Herearelocatedtheoptionsthatyoucanuseinthisstrategy.
//|
//|Aquiseencuentranubicadoslasopcionesquepuedesutilizarenestaestrategia.
//|
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰HeikinAshiEntry🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|Reference|https://tradingview.com/script/U1QGgSOw-Heikin-Ashi-Source-Function-HTF/
heikin(src)=>
Close=ohlc4
Open=float(na)
Open:=na(Open[1])?(open+close)/2:(nz(Open[1])+nz(Close[1]))/2
High=math.max(high,math.max(Open,Close))
Low=math.min(low,math.min(Open,Close))
HL2=math.avg(High,Low)
HLC3=math.avg(High,Low,Close)
OHLC4=math.avg(Open,High,Low,Close)
HLCC4=math.avg(High,Low,Close,Close)
Price=src=='close'?Close:src=='open'?Open:src=='high'?High:src=='low'?Low:src=='hl2'?HL2:src=='hlc3'?HLC3:src=='ohlc4'?OHLC4:HLCC4
Source=math.round(Price/syminfo.mintick)*syminfo.mintick
//UsethisfunctiontoreplacethesourceofyourindicatorsbetweenJapanesecandlesticksandheikinashicandlesticks.
//⬇⬇⬇
h(source,previousCandle,heikinCondition)=>
price=source==open?(heikinCondition?heikin('open')[previousCandle]:open[previousCandle]):source==high?(heikinCondition?heikin('high')[previousCandle]:high[previousCandle]):source==low?(heikinCondition?heikin('low')[previousCandle]:low[previousCandle]):source==close?(heikinCondition?heikin('close')[previousCandle]:close[previousCandle]):source==hl2?(heikinCondition?heikin('hl2')[previousCandle]:hl2[previousCandle]):source==hlc3?(heikinCondition?heikin('hlc3')[previousCandle]:hlc3[previousCandle]):source==ohlc4?(heikinCondition?heikin('ohlc4')[previousCandle]:ohlc4[previousCandle]):source==hlcc4?(heikinCondition?heikin('hlcc4')[previousCandle]:hlcc4[previousCandle]):close[previousCandle]
//h(source)->Enterinthisspacethefontyouwanttoconverttoaheikinashisource(open,low,close,high,etc.)(onlysourcevalues)
//h(previousCandle)->Enterifyouwanttodisplaythevalueofapreviouscandlesticksource,insteadset0asdefault(close[1],open[2])(onlyintvalues)
//h(heikinCondition)->Createabooleanvariableandinsertitsvalueheresoyoucanturnitonandoffwhenyoudonotneedcertainpartsorindicatorstobecalculatedbasedonheikinashi(onlyboolvalues)
//Whenactivatedontheindicator,entrieswillbebasedonHeikinAshicandlesbutexecutedatJapanesecandlesprices.
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰MovingAverages🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|Reference|https://www.tradingview.com/script/3Zi8Wytp/
movingAverage(maType,source,length)=>
ma=0.0
ifmaType=="SMA"//Simple
ma:=ta.sma(source,length)

ifmaType=="EMA"//Exponential
ma:=ta.ema(source,length)

ifmaType=="WMA"//Weighted
ma:=ta.wma(source,length)

ifmaType=="VWMA"//VolumeWeighted
ma:=ta.vwma(source,length)

ifmaType=="ALMA"//ArnaudLegoux
ma:=ta.alma(source,length,0.85,6)

ifmaType=="SMMA"//Smoothed
ma:=ta.rma(source,length)

ifmaType=="LSMA"//LeastSquares
ma:=ta.linreg(source,length,0)

ifmaType=="HMA"//HullMA
ma:=ta.hma(source,length)

ifmaType=="DEMA"//DoubleEMA
ma:=2*ta.ema(source,length)-ta.ema(ta.ema(source,length),length)

ifmaType=="KAMA"//KaufmanAdaptive
volatility=math.sum(math.abs(ta.change(source)),length)
efficiency_ratio=volatility!=0?(math.abs(ta.change(source,length)))/volatility:0
kama=0.0
kama:=nz(kama[1])+(math.pow(efficiency_ratio*((2/3)-(2/31))+(2/31),2))*(source-nz(kama[1]))
ma:=kama

ifmaType=="TEMA"//TripleEMA
ma:=3*((ta.ema(source,length))-ta.ema((ta.ema(source,length)),length))+ta.ema(ta.ema((ta.ema(source,length)),length),length)

ifmaType=="ZLEMA"//ZeroLag
ma:=ta.ema((source+(source-source[(length-1)/2])),length)

ifmaType=="VIDYA"//VariableIndexDynamicAverage
upSum=math.sum(math.max(ta.change(source),0),length)
dwnSum=math.sum(-math.min(ta.change(source),0),length)
out=(upSum-dwnSum)/(upSum+dwnSum)
vidya=0.0
vidya:=source*(2/(length+1))*(math.abs(out))+nz(vidya[1])*(1-(2/(length+1))*(math.abs(out)))
ma:=vidya

ifmaType=="JMA"//JurikMovingAverage
beta=0.45*(length-1)/(0.45*(length-1)+2)
maa1=0.0,det0=0.0,maa2=0.0,det1=0.0,jma=0.0
maa1:=(1-(math.pow(beta,2)))*source+(math.pow(beta,2))*nz(maa1[1])
det0:=(source-maa1)*(1-beta)+beta*nz(det0[1])
maa2:=maa1+2*det0
det1:=(maa2-nz(jma[1]))*math.pow(1-(math.pow(beta,2)),2)+math.pow((math.pow(beta,2)),2)*nz(det1[1])
jma:=nz(jma[1])+det1
ma:=jma

ifmaType=="T3"//Tillson
t3ema1=ta.ema(source,length)
t3ema2=ta.ema(t3ema1,length)
t3ema3=ta.ema(t3ema2,length)
t3ema4=ta.ema(t3ema3,length)
t3ema5=ta.ema(t3ema4,length)
t3ema6=ta.ema(t3ema5,length)
ma:=(-0.343*t3ema6)+(2.499*t3ema5)+(-6.069*t3ema4)+(4.913*t3ema3)

ifmaType=="TRIMA"//Triangular
ma:=ta.sma(ta.sma(source,math.round((length+1)/2)),math.round((length+1)/2))

resultMA=ma
MA1=movingAverage(ma1Type,ma1Source,ma1Length)
MA2=movingAverage(ma2Type,ma2Source,ma2Length)
MA3=movingAverage(ma3Type,ma3Source,ma3Length)
MA4=movingAverage(ma4Type,ma4Source,ma4Length)
MA5=movingAverage(ma5Type,ma5Source,ma5Length)
plot(MA1,"MovingAverage1",color=ma1Status?ma1Color:na)
plot(MA2,"MovingAverage2",color=ma2Status?ma2Color:na)
plot(MA3,"MovingAverage3",color=ma3Status?ma3Color:na)
plot(MA4,"MovingAverage4",color=ma4Status?ma4Color:na)
plot(MA5,"MovingAverage5",color=ma5Status?ma5Color:na)
varipmaBuy=false
varipmaSell=false
ifma1Status
ifma1Statusandma2Status
ifma1Statusandma2Statusandma3Status
ifma1Statusandma2Statusandma3Statusandma4Status
ifma1Statusandma2Statusandma3Statusandma4Statusandma5Status
ifclose>MA1andMA1>MA2andMA2>MA3andMA3>MA4andMA4>MA5
maBuy:=true
maSell:=false
elseifclose<MA1andMA1<MA2andMA2<MA3andMA3<MA4andMA4<MA5
maBuy:=false
maSell:=true
else
maBuy:=false
maSell:=false
elseifclose>MA1andMA1>MA2andMA2>MA3andMA3>MA4
maBuy:=true
maSell:=false
elseifclose<MA1andMA1<MA2andMA2<MA3andMA3<MA4
maBuy:=false
maSell:=true
else
maBuy:=false
maSell:=false
elseifclose>MA1andMA1>MA2andMA2>MA3
maBuy:=true
maSell:=false
elseifclose<MA1andMA1<MA2andMA2<MA3
maBuy:=false
maSell:=true
else
maBuy:=false
maSell:=false
elseifclose>MA1andMA1>MA2
maBuy:=true
maSell:=false
elseifclose<MA1andMA1<MA2
maBuy:=false
maSell:=true
else
maBuy:=false
maSell:=false
elseifclose>MA1
maBuy:=true
maSell:=false
elseifclose<MA1
maBuy:=false
maSell:=true
else
maBuy:=false
maSell:=false
maBuyAlert=maBuyandnotmaBuy[1]
maSellAlert=maSellandnotmaSell[1]
Moving_Average_BUY=movingAverage?useAsMA=="Entry"?maBuyAlert?true:false:useAsMA=="Filter"?maBuy?true:false:true:true//🟢
Moving_Average_SELL=movingAverage?useAsMA=="Entry"?maSellAlert?true:false:useAsMA=="Filter"?maSell?true:false:true:true//🔴
plotshape(maBuyAlertandplotMAandmovingAverage,title="MovingAverageBuy",text="MA",textcolor=color.white,style=shape.labelup,color=colorMA,size=size.tiny,location=location.belowbar)
plotshape(maSellAlertandplotMAandmovingAverage,title="MovingAverageSell",text="MA",textcolor=color.white,style=shape.labeldown,color=colorMA,size=size.tiny,location=location.abovebar)
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰SuperTrend🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|Reference|https://www.tradingview.com/script/r6dAP7yi/
sttr=math.max((h(high,0,hknSrcST))-(h(low,0,hknSrcST)),math.abs((h(high,0,hknSrcST))-(h(close,1,hknSrcST))),math.abs((h(low,0,hknSrcST))-(h(close,1,hknSrcST))))
statr2=ta.sma(sttr,stPeriods)
statr=stChangeATR?statr2:ta.rma(sttr,stPeriods)
stup=(h(stSource,0,hknSrcST))-stMultiplier*statr
stup1=nz(stup[1],stup)
stup:=(h(close,1,hknSrcST))>stup1?math.max(stup,stup1):stup
stdn=(h(stSource,0,hknSrcST))+stMultiplier*statr
stdn1=nz(stdn[1],stdn)
stdn:=(h(close,1,hknSrcST))<stdn1?math.min(stdn,stdn1):stdn
hknCloseST=h(close,0,hknSrcST)
sttrend=1
sttrend:=nz(sttrend[1],sttrend)
sttrend:=sttrend==-1andhknCloseST>stdn1?1:sttrend==1andhknCloseST<stup1?-1:sttrend
superTrendBuy=sttrend==1
superTrendSell=sttrend==-1
superTrendBuyAlert=superTrendBuyandnotsuperTrendBuy[1]
superTrendSellAlert=superTrendSellandnotsuperTrendSell[1]
SuperTrend_BUY=superTrend?useAsSTrend=="Entry"?superTrendBuyAlert?true:false:useAsSTrend=="Filter"?superTrendBuy?true:false:true:true//🟢
SuperTrend_SELL=superTrend?useAsSTrend=="Entry"?superTrendSellAlert?true:false:useAsSTrend=="Filter"?superTrendSell?true:false:true:true//🔴
plotshape(superTrendBuyAlertandplotSTandsuperTrend,title='Supertrend',text="SuperT",textcolor=color.white,style=shape.labelup,color=colorST,size=size.tiny,location=location.belowbar)
plotshape(superTrendSellAlertandplotSTandsuperTrend,title='Supertrend',text="SuperT",textcolor=color.white,style=shape.labeldown,color=colorST,size=size.tiny,location=location.abovebar)
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰RSI🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|Reference|TradingviewFunction
rsi=ta.rsi(h(rsiSource,0,hknrsi),rsiLength)
rsiBuy=rsi<rsiLower
rsiSell=rsi>rsiUpper
rsiBuyAlert=(rsi>rsiLower)andrsiBuy[1]
rsiSellAlert=(rsi<rsiUpper)andrsiSell[1]
RSI_Buy=RSI?useAsRSI=="Entry"?rsiBuyAlert?true:false:useAsRSI=="Filter"?rsiBuy?true:false:true:true//🟢
RSI_Sell=RSI?useAsRSI=="Entry"?rsiSellAlert?true:false:useAsRSI=="Filter"?rsiSell?true:false:true:true//🔴
plotshape(rsiBuyAlertandplotRSIandRSI,title="RSIBuy",text="RSI",textcolor=color.white,style=shape.labelup,color=colorRSI,size=size.tiny,location=location.belowbar)
plotshape(rsiSellAlertandplotRSIandRSI,title="RSISell",text="RSI",textcolor=color.white,style=shape.labeldown,color=colorRSI,size=size.tiny,location=location.abovebar)
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰StochasticRSI🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|Reference|TradingviewScripts
srsi1=ta.rsi(srsiSrc,srsiLength)
k=ta.sma(ta.stoch(srsi1,srsi1,srsi1,stochLength),smoothK)
d=ta.sma(k,smoothD)
srsiBuy=((k<sLowerBand)and(d<sUpperBand))
srsiSell=((k>sLowerBand)and(d>sUpperBand))
srsiBuyAlert=ta.crossover(k,d)and(srsiCond?k>sLowerBand?false:true:true)
srsiSellAlert=ta.crossunder(k,d)and(srsiCond?k<sUpperBand?false:true:true)
Stochastic_RSI_BUY=stochasticRSI?useAsSRSI=="Entry"?srsiBuyAlert?true:false:useAsSRSI=="Filter"?srsiBuy?true:false:true:true//🟢
Stochastic_RSI_SELL=stochasticRSI?useAsSRSI=="Entry"?srsiSellAlert?true:false:useAsSRSI=="Filter"?srsiSell?true:false:true:true//🔴
plotshape(srsiBuyAlertandplotSRSIandstochasticRSI,title="StochasticRSIBuy",text="SRSI",textcolor=color.white,style=shape.labelup,color=colorSRSI,size=size.tiny,location=location.belowbar)
plotshape(srsiSellAlertandplotSRSIandstochasticRSI,title="StochasticRSISell",text="SRSI",textcolor=color.white,style=shape.labeldown,color=colorSRSI,size=size.tiny,location=location.abovebar)
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰ADXandDI🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|Reference|https://www.tradingview.com/script/8rUK5VuJ-Multi-Timeframe-ADX-and-DI-w-Alerts/
adxTrueRange=math.max(math.max(high-low,math.abs(high-nz(close[1]))),math.abs(low-nz(close[1])))
DirectionalMovementPlus=high-nz(high[1])>nz(low[1])-low?math.max(high-nz(high[1]),0):0
DirectionalMovementMinus=nz(low[1])-low>high-nz(high[1])?math.max(nz(low[1])-low,0):0
SmoothedTrueRange=0.0
SmoothedTrueRange:=nz(SmoothedTrueRange[1])-(nz(SmoothedTrueRange[1])/adxLength)+adxTrueRange
SmoothedDirectionalMovementPlus=0.0
SmoothedDirectionalMovementMinus=0.0
SmoothedDirectionalMovementPlus:=nz(SmoothedDirectionalMovementPlus[1])-(nz(SmoothedDirectionalMovementPlus[1])/adxLength)+DirectionalMovementPlus
SmoothedDirectionalMovementMinus:=nz(SmoothedDirectionalMovementMinus[1])-(nz(SmoothedDirectionalMovementMinus[1])/adxLength)+DirectionalMovementMinus
DIPlus=SmoothedDirectionalMovementPlus/SmoothedTrueRange*100
DIMinus=SmoothedDirectionalMovementMinus/SmoothedTrueRange*100
DX=math.abs(DIPlus-DIMinus)/(DIPlus+DIMinus)*100
adx=ta.sma(DX,adxLength)
DIBuy=DIPlus>DIMinus
DISell=DIPlus<DIMinus
DIBuyAlert=DIBuyandnotDIBuy[1]
DISellAlert=DISellandnotDISell[1]
adxEntryBuy=adxType=="DI+andDI-"?DIBuyAlert:adxType=="ADXandThreshold[OnlyFilter]"?false:adxType=="ADXandDI"?(DIBuyAlertand(adx>adxThreshold)):false
adxEntrySell=adxType=="DI+andDI-"?DISellAlert:adxType=="ADXandThreshold[OnlyFilter]"?false:adxType=="ADXandDI"?(DISellAlertand(adx>adxThreshold)):false
adxFilterBuy=adxType=="DI+andDI-"?DIBuy:adxType=="ADXandThreshold[OnlyFilter]"?(adx>adxThreshold):adxType=="ADXandDI"?(DIBuyand(adx>adxThreshold)):false
adxFilterSell=adxType=="DI+andDI-"?DISell:adxType=="ADXandThreshold[OnlyFilter]"?(adx>adxThreshold):adxType=="ADXandDI"?(DISelland(adx>adxThreshold)):false
ADX_BUY=ADX?useAsADX=="Entry"?adxEntryBuy?true:false:useAsADX=="Filter"?adxFilterBuy?true:false:true:true//🟢
ADX_SELL=ADX?useAsADX=="Entry"?adxEntrySell?true:false:useAsADX=="Filter"?adxFilterSell?true:false:true:true//🔴
barcolor(ADXandplotADXandadxFilterBuy?colorADXB:ADXandplotADXandadxFilterSell?colorADXS:na)
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰ParabolicSAR🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|Reference|https://www.tradingview.com/script/X2mAbFxu-CM-Parabolic-SAR/
sarUp=ta.sar(sarStart,sarIncrement,sarMaximum)
sarDown=ta.sar(sarStart,sarIncrement,sarMaximum)
sarBuy=close>=sarDown
sarSell=close<=sarUp
sarBuyAlert=sarBuyandnotsarBuy[1]
sarSellAlert=sarSellandnotsarSell[1]
SAR_BUY=SAR?useAsSar=="Entry"?sarBuyAlert?true:false:useAsSar=="Filter"?sarBuy?true:false:true:true//🟢
SAR_SELL=SAR?useAsSar=="Entry"?sarSellAlert?true:false:useAsSar=="Filter"?sarSell?true:false:true:true//🔴
plot(SARandplotSARandsarBuy?sarUp:na,title="SarBuy",style=plot.style_cross,color=colorSarB)
plot(SARandplotSARandsarSell?sarDown:na,title="SarSell",style=plot.style_cross,color=colorSarS)
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|—————————————————————————————————————————————🔰Entries🔰——————————————————————————————————————————————
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|
//|Inthissection,theinputsandoutputsofthestrategyarecreated.
//|Variousoptionsforstoplossandtakeprofitarealreadypre-programmedto
//|protecttheinvestmentfromunexpectedmarketmovements.
//|
//|Enesteapartadosecreanlasentradasysalidasdelaestrategia.
//|Diversasopcionesparastoplossytakeprofitseencuentranyapre-programadas
//|paraasiprotegerlainversiondemovimientosinnesperadosdelmercado
//|
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
Indicators_Active=notmovingAverageandnotsuperTrendandnotRSIandnotstochasticRSIandnotADXandnotSAR?false:true
//|🟢🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟢
BUY=Moving_Average_BUYandSuperTrend_BUYandRSI_BuyandStochastic_RSI_BUYandADX_BUYandSAR_BUYandIndicators_Active
SELL=Moving_Average_SELLandSuperTrend_SELLandRSI_SellandStochastic_RSI_SELLandADX_SELLandSAR_SELLandIndicators_Active
//|🔴🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🔴
inOperationB=strategy.position_size>0?true:false
inOperationS=strategy.position_size<0?true:false
inOperation=strategy.position_size!=0?true:false
varipfloatstopLossB=0
varipfloatstopLossS=0
varipfloattakeProfitB=0
varipfloattakeProfitS=0
varipfloatentryPriceB=0
varipfloatentryPriceS=0
varipfloattrailingB=0
varipfloattrailingS=0
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰ATR🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
atrSHigh=ta.rma(ta.tr(true),atrLStop)*atrMStop+high
atrSLow=low-ta.rma(ta.tr(true),atrLStop)*atrMStop
plot(plotATRPVandSLand(optionSL=="ATR")?atrSHigh:na,title='ATRSellStopLoss',color=color.red,style=plot.style_stepline)
plot(plotATRPVandSLand(optionSL=="ATR")?atrSLow:na,title='ATRBuyStopLoss',color=color.green,style=plot.style_stepline)
atrTHigh=ta.rma(ta.tr(true),atrLTake)*atrMTake+high
atrTLow=low-ta.rma(ta.tr(true),atrLTake)*atrMTake
plot(plotATRPVandTPand(optionSL=="ATR")?atrTHigh:na,title='ATRSellStopLoss',color=color.red,style=plot.style_stepline)
plot(plotATRPVandTPand(optionSL=="ATR")?atrTLow:na,title='ATRBuyStopLoss',color=color.green,style=plot.style_stepline)
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰PIVOT🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
varipfloathighestHigh=0
varipfloatlowestLow=0
taLowest=ta.lowestbars(leftBHL+rightBHL+1)
taHighest=ta.highestbars(leftBHL+rightBHL+1)
lowest=notna(high[leftBHL+rightBHL+1])?(taHighest==-leftBHL?high[leftBHL]:na):na
highest=notna(low[leftBHL+rightBHL+1])?(taLowest==-leftBHL?low[leftBHL]:na):na
highestHigh:=ta.valuewhen(lowest,high[leftBHL],0)
lowestLow:=ta.valuewhen(highest,low[leftBHL],0)
plotshape(plotATRPVandSLand(optionSL=="LastHigh/Low")?highest:na,title="LastLow",color=color.red,style=shape.diamond,location=location.belowbar,size=size.tiny,offset=-leftBHL)
plotshape(plotATRPVandSLand(optionSL=="LastHigh/Low")?lowest:na,title="LastHigh",color=color.green,style=shape.diamond,location=location.abovebar,size=size.tiny,offset=-leftBHL)
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰StopLoss🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
calculateSL()=>
stopResult=0.0
stop=0.0

ifoptionSL=="Fixed%"andBUY
stop:=entryPriceB-(entryPriceB*fixedPSL)

ifoptionSL=="Fixed%"andSELL
stop:=entryPriceS+(entryPriceS*fixedPSL)

ifoptionSL=="Fixed$"andBUY
stop:=entryPriceB-fixedESL

ifoptionSL=="Fixed$"andSELL
stop:=entryPriceS+fixedESL

ifoptionSL=="LastHigh/Low"andBUY
stop:=lowestLow

ifoptionSL=="LastHigh/Low"andSELL
stop:=highestHigh

ifoptionSL=="ATR"andBUY
stop:=atrSLow

ifoptionSL=="ATR"andSELL
stop:=atrSHigh

ifoptionSL=="Custom"andBUY
stop:=entryPriceB-(entryPriceB*fixedPSL)

ifoptionSL=="Custom"andSELL
stop:=entryPriceS+(entryPriceS*fixedPSL)

stopResult:=stop

//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰TakeProfit🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
calculateTP()=>
takeResult=0.0
take=0.0

ifoptionTP=="Fixed%"andBUY
take:=entryPriceB+(entryPriceB*fixedPTP)

ifoptionTP=="Fixed%"andSELL
take:=entryPriceS-(entryPriceS*fixedPTP)

ifoptionTP=="Fixed$"andBUY
take:=entryPriceB+fixedETP

ifoptionTP=="Fixed$"andSELL
take:=entryPriceS-fixedETP

ifoptionTP=="Ratio1:#"andBUY
take:=entryPriceB+(trailingB*ratioTP)

ifoptionTP=="Ratio1:#"andSELL
take:=entryPriceS-(trailingS*ratioTP)

ifoptionTP=="ATR"andBUY
take:=atrTHigh

ifoptionTP=="ATR"andSELL
take:=atrTLow

ifoptionTP=="Custom"andBUY
take:=entryPriceB+(entryPriceB*fixedPTP)

ifoptionTP=="Custom"andSELL
take:=entryPriceS-(entryPriceS*fixedPTP)

takeResult:=take
//|🟢🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟢BUY🟢🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟢
ifinOperationBandtrailSLandnotBUY
stopLossBNew=close-trailingB
stopLossB:=stopLossBNew>stopLossB?stopLossBNew:stopLossB[1]
strategy.exit("BuyExit","Buy",stop=stopLossB,limit=takeProfitB)
ifdateRangeandBUYand(((inOperationandcloseNewEntry)ornotinOperation))andnotinOperationB
entryPriceB:=close
stopLossB:=SL?calculateSL():na
trailingB:=close-stopLossB
takeProfitB:=TP?calculateTP():na
ifuseLeverage
strategy.entry("Buy",strategy.long,limit=entryPriceB,qty=math.min(math.max(.000001,(strategy.equity/close)*leverage),1000000000))
else
strategy.entry("Buy",strategy.long,limit=entryPriceB)
strategy.exit("BuyExit","Buy",stop=stopLossB,limit=takeProfitB)
ifBUYandinOperationBandnotcloseNewEntry
strategy.cancel("Buy")
//|🔴🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🔴SELL🔴🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🔴
ifinOperationSandtrailSLandnotSELL
stopLossSNew=close+trailingS
stopLossS:=stopLossSNew<stopLossS?stopLossSNew:stopLossS[1]
strategy.exit("SellExit","Sell",stop=stopLossS,limit=takeProfitS)
ifdateRangeandSELLand(((inOperationandcloseNewEntry)ornotinOperation))andnotinOperationS
entryPriceS:=close
stopLossS:=SL?calculateSL():na
trailingS:=stopLossS-close
takeProfitS:=TP?calculateTP():na
ifuseLeverage
strategy.entry("Sell",strategy.short,limit=entryPriceS,qty=math.min(math.max(.000001,(strategy.equity/close)*leverage),1000000000))
else
strategy.entry("Sell",strategy.short,limit=entryPriceS)
strategy.exit("SellExit","Sell",stop=stopLossS,limit=takeProfitS)
ifSELLandinOperationSandnotcloseNewEntry
strategy.cancel("Sell")
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|——————————————————————————————————————————————📊Plots📊———————————————————————————————————————————————
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
//|
//|Thedatacollectedduringthebacktestwillbedisplayedonscreen
//|withinadashboardandvariousdrawingstovisualizetheoperations.
//|
//|Losdatosrecopiladosduranteelbacktestseranmostradosenpantalladentro
//|deunpanelyvariosdibujosparavisualizarlasoperaciones
//|
//|🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰🟰
bgcolor(dateRange?na:color.new(color.white,80))
MTLabel(ftimestamp,etimestamp,statusProfit,statusWinRate,statusPFactor,maxWinRow,maxLossRow)=>
timefr=timeframe.isminutes?'min':''
string_text='🔰MTBacktester🔰'+'\n'
_text+='➖➖➖➖➖➖➖➖➖➖'+'\n'
_text+=''+'\n'
_text+='Ticker:'+'\n'
_text+=''+syminfo.ticker+''+timeframe.period+timefr
_text+=''+'\n\n'
_text+='Since:'+'\n'
_text+=str.format("{0,date,long}",ftimestamp)+str.format("{0,time,HH:mm}",ftimestamp)+'\n'
_text+='To:'+'\n'
_text+=str.format("{0,date,long}",etimestamp)+str.format("{0,time,HH:mm}",etimestamp)+'\n'
_text+=''+'\n'
_text+='➖➖➖➖➖➖➖➖➖➖'+'\n'
_text+=''+'\n'
_text+='#️⃣Trades:'+str.tostring(strategy.closedtrades,'##.##')+'\n'
_text+=''+'\n'
_text+='Profit:'+'\n'
_text+=''+str.tostring(statusProfit)+str.tostring((strategy.netprofit/strategy.initial_capital)*100,'##.##')+'%\n'
_text+='WinRate:'+'\n'
_text+=''+str.tostring(statusWinRate)+str.tostring((strategy.wintrades/strategy.closedtrades)*100,'##.##')+'%\n'
_text+='ProfitFactor:'+'\n'
_text+=''+str.tostring(statusPFactor)+str.tostring((strategy.grossprofit/strategy.grossloss),'##.###')+'\n'
_text+=''+'\n'
_text+='WinTrades:'+str.tostring(strategy.wintrades,'######')+'\n'
_text+='LossTrades:'+str.tostring(strategy.losstrades,'######')+'\n'
_text+=''+'\n'
_text+='AvgWin:'+str.tostring(((strategy.grossprofit/strategy.wintrades)*100)/strategy.initial_capital,'##.##')+'%\n'
_text+='AvgLoss:'+str.tostring(((strategy.grossloss/strategy.losstrades)*100)/strategy.initial_capital,'##.##')+'%\n'
_text+=''+'\n'
_text+='MaxWininaRow:'+str.tostring(maxWinRow,'######')+'\n'
_text+='MaxLossinaRow:'+str.tostring(maxLossRow,'######')+'\n'
_text+=''+'\n'
_text+='➖➖➖➖➖➖➖➖➖➖'+'\n'
ftimestamp=startFilter?timestamp(year(startTime,zoneTime),month(startTime,zoneTime),dayofmonth(startTime,zoneTime),hour(startTime,zoneTime),minute(startTime,zoneTime),second(startTime,zoneTime)):timestamp(year(ta.valuewhen(barstate.isfirst,time,0),zoneTime),month(ta.valuewhen(barstate.isfirst,time,0),zoneTime),dayofmonth(ta.valuewhen(barstate.isfirst,time,0),zoneTime),hour(ta.valuewhen(barstate.isfirst,time,0),zoneTime),minute(ta.valuewhen(barstate.isfirst,time,0),zoneTime))
etimestamp=endFilter?timestamp(year(endTime,zoneTime),month(endTime,zoneTime),dayofmonth(endTime,zoneTime),hour(endTime,zoneTime),minute(endTime,zoneTime),second(endTime,zoneTime)):timestamp(year(timenow,zoneTime),month(timenow,zoneTime),dayofmonth(timenow,zoneTime),hour(timenow,zoneTime),minute(timenow,zoneTime))
statusProfit=((strategy.netprofit/strategy.initial_capital)*100)+0.001>=maxProfit?"🟢":((strategy.netprofit/strategy.initial_capital)*100)-0.001<=minProfit?"🔴":"🟡"
statusWinRate=((strategy.wintrades/strategy.closedtrades)*100)+0.001>=maxWinRate?"🟢":((strategy.wintrades/strategy.closedtrades)*100)-0.001<=minWinRate?"🔴":"🟡"
statusPFactor=(strategy.grossprofit/strategy.grossloss)+0.001>=maxPFactor?"🟢":(strategy.grossprofit/strategy.grossloss)-0.001<=minPFactor?"🔴":"🟡"
varipintwinRow=0
varipintlossRow=0
varipintmaxWinRow=0
varipintmaxLossRow=0
if(strategy.wintrades>strategy.wintrades[1])and(strategy.losstrades==strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
lossRow:=0
winRow:=winRow+1
ifwinRow>maxWinRow
maxWinRow:=winRow

if(strategy.wintrades==strategy.wintrades[1])and(strategy.losstrades>strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
winRow:=0
lossRow:=lossRow+1
iflossRow>maxLossRow
maxLossRow:=lossRow
labella=na
label.delete(la[1])
la:=plotDashboard?label.new(x=bar_index+5,y=close,text=MTLabel(ftimestamp,etimestamp,statusProfit,statusWinRate,statusPFactor,maxWinRow,maxLossRow),color=color.new(color.black,50),style=label.style_label_left,textcolor=color.white,size=size.normal,textalign=text.align_left):na
varlineentryB=na
varlineentryS=na
varlinestopB=na
varlinestopS=na
varlinetrailB=na
varlinetrailS=na
varlinetakeB=na
varlinetakeS=na
if(strategy.wintrades>strategy.wintrades[1])and(strategy.losstrades==strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])and(notinOperationBandinOperationB[1])andplotTrades
label.new(x=bar_index[1],y=entryPriceB[1],text="Win",style=label.style_label_left,color=color.green,textcolor=color.white,size=size.small)
if(strategy.wintrades==strategy.wintrades[1])and(strategy.losstrades>strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])and(notinOperationBandinOperationB[1])andplotTrades
label.new(x=bar_index[1],y=entryPriceB[1],text="Loss",style=label.style_label_left,color=color.red,textcolor=color.white,size=size.small)

if(inOperationBandnotinOperationB[1])andplotTrades
entryB:=line.new(x1=bar_index[1],y1=entryPriceB[1],x2=bar_index+1,y2=entryPriceB,style=line.style_solid,width=3,color=color.gray)
stopB:=line.new(x1=bar_index[1],y1=stopLossB[1],x2=bar_index+1,y2=stopLossB,style=line.style_solid,width=3,color=trailSL?colorTSL:colorSL)
trailB:=line.new(x1=bar_index[1],y1=stopLossB[1],x2=bar_index+1,y2=stopLossB,style=line.style_solid,width=3,color=colorSL)
takeB:=line.new(x1=bar_index[1],y1=takeProfitB[1],x2=bar_index+1,y2=takeProfitB,style=line.style_solid,width=3,color=colorTP)
linefill.new(line1=entryB,line2=trailB,color=color.new(colorSL,80))
linefill.new(line1=entryB,line2=takeB,color=color.new(colorTP,80))

if(inOperationBandnot(inOperationBandnotinOperationB[1]))andplotTrades
line.set_x2(id=entryB,x=bar_index)
line.set_y1(id=stopB,y=stopLossB)
line.set_xy2(id=stopB,x=bar_index,y=stopLossB)
line.set_xy2(id=trailB,x=bar_index,y=line.get_y1(trailB))
line.set_x2(id=takeB,x=bar_index)
if(strategy.wintrades>strategy.wintrades[1])and(strategy.losstrades==strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])and(notinOperationSandinOperationS[1])andplotTrades
label.new(x=bar_index[1],y=entryPriceS[1],text="Win",style=label.style_label_left,color=color.green,textcolor=color.white,size=size.small)
if(strategy.wintrades==strategy.wintrades[1])and(strategy.losstrades>strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])and(notinOperationSandinOperationS[1])andplotTrades
label.new(x=bar_index[1],y=entryPriceS[1],text="Loss",style=label.style_label_left,color=color.red,textcolor=color.white,size=size.small)

if(inOperationSandnotinOperationS[1])andplotTrades
entryS:=line.new(x1=bar_index[1],y1=entryPriceS[1],x2=bar_index+1,y2=entryPriceS,style=line.style_solid,width=3,color=color.gray)
stopS:=line.new(x1=bar_index[1],y1=stopLossS[1],x2=bar_index+1,y2=stopLossS,style=line.style_solid,width=3,color=trailSL?colorTSL:colorSL)
trailS:=line.new(x1=bar_index[1],y1=stopLossS[1],x2=bar_index+1,y2=stopLossS,style=line.style_solid,width=3,color=colorSL)
takeS:=line.new(x1=bar_index[1],y1=takeProfitS[1],x2=bar_index+1,y2=takeProfitS,style=line.style_solid,width=3,color=colorTP)
linefill.new(line1=entryS,line2=trailS,color=color.new(colorSL,80))
linefill.new(line1=entryS,line2=takeS,color=color.new(colorTP,80))

if(inOperationSandnot(inOperationSandnotinOperationS[1]))andplotTrades
line.set_x2(id=entryS,x=bar_index)
line.set_y1(id=stopS,y=stopLossS)
line.set_xy2(id=stopS,x=bar_index,y=stopLossS)
line.set_xy2(id=trailS,x=bar_index,y=line.get_y1(trailS))
line.set_x2(id=takeS,x=bar_index)
Expand (855 lines)
