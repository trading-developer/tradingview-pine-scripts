Script Name: Range Filter - B&S Signals - 001 - edited
Author: aXp9yH
Description: I have not description. Publishing so a freind can use it.
PineScript code:

Pine Scriptâ„¢ strategy
Range Filter - B&S Signals - 001 - edited
//ThissourcecodeissubjecttothetermsoftheMozillaPublicLicense2.0athttps://mozilla.org/MPL/2.0/
//CreditstotheoriginalScript-RangeFilterDonovanWallhttps://www.tradingview.com/script/lut7sBgG-Range-Filter-DW/
//ThisversionistheoldversionoftheRangeFilterwithlesssettingstotinkerwith
//@version=5
strategy(title='RangeFilter-B&SSignals',shorttitle='RF-B&SSignals',initial_capital=1000,currency=currency.GBP,default_qty_value=100,default_qty_type=strategy.percent_of_equity,commission_type=strategy.commission.percent,commission_value=0.075,overlay=true)
i_startTime=input.time(defval=timestamp('01Jan202012:00+0000'),title='BacktestStart')
i_endTime=input.time(defval=timestamp('01Jan202412:00+0000'),title='BacktestEnd')
inDateRange=time>=i_startTimeandtime<=i_endTime
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
//Functions
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
longLossPerc=input.float(title='LongStopLoss(%)',minval=0.0,step=0.1,defval=1)*0.01
shortLossPerc=input.float(title='ShortStopLoss(%)',minval=0.0,step=0.1,defval=1)*0.01
longTakePerc=input.float(title='LongTake(%)',minval=0.0,step=0.1,defval=1)*0.01
shortTakePerc=input.float(title='ShortTake(%)',minval=0.0,step=0.1,defval=1)*0.01
emaLength=input.int(200,title="EMALength")
//Determinestoplossprice
//RangeSizeFunction
rng_size(x,qty,n)=>
//AC=Cond_EMA(abs(x-x[1]),1,n)
wper=n*2-1
avrng=ta.ema(math.abs(x-x[1]),n)
AC=ta.ema(avrng,wper)*qty
rng_size=AC
rng_size
//RangeFilterFunction
rng_filt(x,rng_,n)=>
r=rng_
varrfilt=array.new_float(2,x)
array.set(rfilt,1,array.get(rfilt,0))
ifx-r>array.get(rfilt,1)
array.set(rfilt,0,x-r)
ifx+r<array.get(rfilt,1)
array.set(rfilt,0,x+r)
rng_filt1=array.get(rfilt,0)
hi_band=rng_filt1+r
lo_band=rng_filt1-r
rng_filt=rng_filt1
[hi_band,lo_band,rng_filt]
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
//Inputs
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
//RangeSource
rng_src=input(defval=close,title='SwingSource')
//RangePeriod
rng_per=input.int(defval=20,minval=1,title='SwingPeriod')
//RangeSizeInputs
rng_qty=input.float(defval=3.5,minval=0.0000001,title='SwingMultiplier')
//BarColors
use_barcolor=input(defval=false,title='BarColorsOn/Off')
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
//Definitions
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
//RangeFilterValues
[h_band,l_band,filt]=rng_filt(rng_src,rng_size(rng_src,rng_qty,rng_per),rng_per)
//DirectionConditions
varfdir=0.0
fdir:=filt>filt[1]?1:filt<filt[1]?-1:fdir
upward=fdir==1?1:0
downward=fdir==-1?1:0
//TradingCondition
longCond=rng_src>filtandrng_src>rng_src[1]andupward>0orrng_src>filtandrng_src<rng_src[1]andupward>0
shortCond=rng_src<filtandrng_src<rng_src[1]anddownward>0orrng_src<filtandrng_src>rng_src[1]anddownward>0
CondIni=0
CondIni:=longCond?1:shortCond?-1:CondIni[1]
longCondition=longCondandCondIni[1]==-1
shortCondition=shortCondandCondIni[1]==1
//Colors
filt_color=upward?#05ff9b:downward?#ff0583:#cccccc
bar_color=upwardandrng_src>filt?rng_src>rng_src[1]?#05ff9b:#00b36b:downwardandrng_src<filt?rng_src<rng_src[1]?#ff0583:#b8005d:#cccccc
ema=ta.ema(close,emaLength)
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
//Outputs
//-----------------------------------------------------------------------------------------------------------------------------------------------------------------
longStopPrice=strategy.position_avg_price*(1-longLossPerc)
shortStopPrice=strategy.position_avg_price*(1+shortLossPerc)
longTakePrice=strategy.position_avg_price*(1+longTakePerc)
shortTakePrice=strategy.position_avg_price*(1-shortTakePerc)
//FilterPlot
filt_plot=plot(filt,color=filt_color,linewidth=3,title='Filter',transp=67)
//BandPlots
h_band_plot=plot(h_band,color=color.new(#05ff9b,100),title='HighBand')
l_band_plot=plot(l_band,color=color.new(#ff0583,100),title='LowBand')
//BandFills
fill(h_band_plot,filt_plot,color=color.new(#00b36b,92),title='HighBandFill')
fill(l_band_plot,filt_plot,color=color.new(#b8005d,92),title='LowBandFill')
//BarColor
barcolor(use_barcolor?bar_color:na)
ifinDateRangeandclose>ema
strategy.entry("Long",strategy.long,when=longCondition)

ifinDateRangeandclose<ema
strategy.entry("Short",strategy.short,when=shortCondition)
plot(ema)
//PlotBuyandSellLabels
plotshape(longCondition,title='BuySignal',text='BUY',textcolor=color.white,style=shape.labelup,size=size.normal,location=location.belowbar,color=color.new(color.green,0))
plotshape(shortCondition,title='SellSignal',text='SELL',textcolor=color.white,style=shape.labeldown,size=size.normal,location=location.abovebar,color=color.new(color.red,0))
//Alerts
alertcondition(longCondition,title='BuyAlert',message='BUY')
alertcondition(shortCondition,title='SellAlert',message='SELL')
ifstrategy.position_size>0
strategy.exit(id='Long',stop=longStopPrice,limit=longTakePrice)
ifstrategy.position_size<0
strategy.exit(id='Short',stop=shortStopPrice,limit=shortTakePrice)
Expand (147 lines)
