Script Name: Instrument-Z (3Commas Bot)
Author: UnknownUnicorn28067390
Description: Instrument-Z is what I am currently using as my 3Commas Bot.

It allows you to customize signals from 3 indicators; Crossing MA's, Stochastic RSI, and WaveTrend.
Better yet, it allows you to setup these signals separately depending on whether the Trend MA is going up or down.
So there are 2 sets of inputs for everything, Uptrend inputs and Downtrend inputs.
I have...
PineScript code:

Pine Script™ strategy
Instrument-Z (3Commas Bot)
////////////////////////////////////////////////////////////////////////////////
//START▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
c="███████╗  █████╗    █████╗      ██╗      ██╗  █████╗  ██╗      ██╗  ██████╗  ██╗    ██╗███╗    ██╗"
o="╚════██║██╔══██╗██╔══██╗    ██║      ██║██╔══██╗██║      ██║██╔════╝  ██║    ██║████╗  ██║"
d="    ███╔═╝███████║██║    ╚═╝    ╚██╗  ██╔╝███████║██║      ██║██║    ██╗  ███████║██╔██╗██║"
e="██╔══╝    ██╔══██║██║    ██╗      ╚████╔╝  ██╔══██║██║      ██║██║    ╚██╗██╔══██║██║╚████║"
r="███████╗██║    ██║╚█████╔╝        ╚██╔╝    ██║    ██║╚██████╔╝╚██████╔╝██║    ██║██║  ╚███║"
s="╚══════╝╚═╝    ╚═╝  ╚════╝            ╚═╝      ╚═╝    ╚═╝  ╚═════╝    ╚═════╝  ╚═╝    ╚═╝╚═╝    ╚══╝"
//@version=5
strategy("Instrument-Z",  overlay=true,  initial_capital=1600,  default_qty_type=strategy.percent_of_equity,  default_qty_value=30,  commission_value=0.075)
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//BAR  COLOR  AND  EMA  AREA▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
//BAR  COLOR
bullCcolor  =  close  >  open  ?  #80cbc4  :  na
bearCcolor  =  close  <  open  ?  #ef9a9a  :  na
bullC  =  close  >  open
bearC  =  close  <  open
bullE  =  bullC  and  bearC[1]  and  close  >  open[1]  ?  color.new(#ffffff,  100)  :  bullCcolor
bearE  =  bearC  and  bullC[1]  and  close  <  open[1]  ?  color.new(#ffffff,  100)  :  bearCcolor
barcolor(bullE)
barcolor(bearE)
//EMA  1
len1  =  10
ema1  =  ta.ema(close,  len1)
//EMA  2
len2  =  100
ema2  =  ta.ema(close,  len2)
//EMA  COLORS
emacolor  =  ema1  >  ema2  ?  #26a69a  :  #ef5350
//EMA  PLOTS
ema1line  =  plot(ema1,  title="EMA  1",  color=color.new(#ffffff,  100),  editable=false)
ema2line  =  plot(ema2,  title="EMA  2",  color=color.new(#ffffff,  100),  editable=false)
fill(ema1line,  ema2line,  title="EMA  Area",  color=color.new(emacolor,  90))
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//INITIAL  OPTIONS▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
src  =  input.source(defval=close,  title="Source",  group="SETUP  GUIDE  AT  YouTube.com/c/OscillateMatrix")
//tfr  =  input.timeframe("",  title="Resolution")
//request.security(syminfo.tickerid,  tfr,  expression,  barmerge.gaps_on)
//POSITIONS
TradeDir  =  input.string("LONG",  title="Trade  Direction",  options=["LONG",  "SHORT"],  group="POSITIONS")
TrendTrade  =  input(false,  "Only  Trade  with  Trend",  group="POSITIONS")
//UPTREND  PROFIT  AND  LOSS
UTsellProf  =  input(true,  title="Only  Exit  in  Profit",  group="UPTREND  🠕  PROFIT  &  LOSS")
UTminProf  =  input.float(title="Minimum  Profit  (%)",  defval=1.1,  minval=0,  maxval=100,    step=.1,  group="UPTREND  🠕  PROFIT  &  LOSS")  /  100
UTuseTP  =  input(true,    title="Use  Take  Profit",  group="UPTREND  🠕  PROFIT  &  LOSS")
UTTPperc  =  input.float(title="Take  Profit  (%)",  defval=11.1,  minval=0,  maxval=1000,  step=.1,  group="UPTREND  🠕  PROFIT  &  LOSS")  /  100
UTuseSL  =  input(true,    title="Use  Stop  Loss",  group="UPTREND  🠕  PROFIT  &  LOSS")
UTSLperc  =  input.float(title="Stop  Loss  (%)",  defval=-3.7,  minval=-50,  maxval=0,  step=.1,  group="UPTREND  🠕  PROFIT  &  LOSS")  /  100
UTuseTE  =  input(true,  title="Use  Trade  Expiration",  group="UPTREND  🠕  PROFIT  &  LOSS")
UTTEbars  =  input.int(title="Expire  After  (bars)",  defval=92,  minval=1,  maxval=10000,  group="UPTREND  🠕  PROFIT  &  LOSS")
//DOWNTREND  PROFIT  AND  LOSS
DTsellProf  =  input(true,  title="Only  Exit  in  Profit",  group="DOWNTREND  🠗  PROFIT  &  LOSS")
DTminProf  =  input.float(title="Minimum  Profit  (%)",  defval=0.3,  minval=0,  maxval=100,    step=.1,  group="DOWNTREND  🠗  PROFIT  &  LOSS")  /  100
DTuseTP  =  input(true,    title="Use  Take  Profit",  group="DOWNTREND  🠗  PROFIT  &  LOSS")
DTTPperc  =  input.float(title="Take  Profit  (%)",  defval=7.7,  minval=0,  maxval=1000,  step=.1,  group="DOWNTREND  🠗  PROFIT  &  LOSS")  /  100
DTuseSL  =  input(true,    title="Use  Stop  Loss",  group="DOWNTREND  🠗  PROFIT  &  LOSS")
DTSLperc  =  input.float(title="Stop  Loss  (%)",  defval=-3.9,  minval=-50,  maxval=0,  step=.1,  group="DOWNTREND  🠗  PROFIT  &  LOSS")  /  100
DTuseTE  =  input(false,  title="Use  Trade  Expiration",  group="DOWNTREND  🠗  PROFIT  &  LOSS")
DTTEbars  =  input.int(title="Expire  After  (bars)",  defval=200,  minval=1,  maxval=10000,  group="DOWNTREND  🠗  PROFIT  &  LOSS")
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//TREND  MOVING  AVERAGE▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
//TREND  MA
ma(source,  length,  type)  =>
          type  ==  "SMA"    ?  ta.sma(source,  length)  :
          type  ==  "EMA"    ?  ta.ema(source,  length)  :
          type  ==  "RMA"    ?  ta.rma(source,  length)  :
          type  ==  "HMA"    ?  ta.wma(2*ta.wma(source,  length/2)-ta.wma(source,  length),  math.floor(math.sqrt(length)))  :
          type  ==  "WMA"    ?  ta.wma(source,  length)  :
          type  ==  "VWMA"  ?  ta.vwma(source,  length)  :
          na
mat_type      =  input.string("EMA",  "Trend  MA",  inline="Trend  MA",  options=["SMA",  "EMA",  "RMA",  "HMA",  "WMA",  "VWMA"],  group="POSITIONS")
mat_length  =  input.int(255,  "",  inline="Trend  MA",  minval=1,  step=5,  group="POSITIONS")
mat  =  ma(src,  mat_length,  mat_type)
matcolor  =  mat  >  mat[1]  ?  #26a69a  :  #ef5350
matline  =  plot(mat,  color=color.new(matcolor,  50),  linewidth=2,  title="Trend  MA")
matRev  =  input(false,  title="Exit  After  Trend  Reverses",  group="POSITIONS")
matRevbars  =  input.int(10,  "Exit  After  (bars)",  group="POSITIONS")
OOTexitL  =  matRev  and  mat  <  mat[matRevbars]
OOTexitS  =  matRev  and  mat  >  mat[matRevbars]
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//CROSSING  MOVING  AVERAGES▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
//UPTREND  OPTIONS
//Cross
UTUsemaX  =  input(false,  "Moving  Average  Cross",  group="UPTREND  🠕  MOVING  AVERAGE  SIGNALS")
UTReqmaXscore  =  UTUsemaX  ?  1  :  0
//Position
UTUsemaP  =  input(true,  "Moving  Average  Position",  group="UPTREND  🠕  MOVING  AVERAGE  SIGNALS")
UTReqmaPscore  =  UTUsemaP  ?  1  :  0
//Histogram
UTUsemaH  =  input(false,  "MA  Histogram  Reverse",  group="UPTREND  🠕  MOVING  AVERAGE  SIGNALS")
UTReqmaHscore  =  UTUsemaH  ?  1  :  0
//DOWNTREND  OPTIONS
//Cross
DTUsemaX  =  input(false,  "Moving  Average  Cross",  group="DOWNTREND  🠗  MOVING  AVERAGE  SIGNALS")
DTReqmaXscore  =  DTUsemaX  ?  1  :  0
//Position
DTUsemaP  =  input(true,  "Moving  Average  Position",  group="DOWNTREND  🠗MOVINGAVERAGESIGNALS")
DTReqmaPscore=DTUsemaP?1:0
//Histogram
DTUsemaH=input(false,"MAHistogramReverse",group="DOWNTREND🠗MOVINGAVERAGESIGNALS")
DTReqmaHscore=DTUsemaH?1:0
//UPTRENDINPUTS
//MA1
UTma1_type=input.string("RMA","MA1",inline="UTMA1",options=["SMA","EMA","RMA","HMA","WMA","VWMA"],group="UPTREND🠕MOVINGAVERAGESIGNALS")
UTma1_length=input.int(5,"",inline="UTMA1",minval=1,group="UPTREND🠕MOVINGAVERAGESIGNALS")
UTma1=ma(src,UTma1_length,UTma1_type)
UTma1Color=mat>mat[1]?color.new(color.blue,35):color.new(color.blue,100)
UTma1line=plot(UTma1,color=UTma1Color,title="UTMA1")
//MA2
UTma2_type=input.string("HMA","MA2",inline="UTMA2",options=["SMA","EMA","RMA","HMA","WMA","VWMA"],group="UPTREND🠕MOVINGAVERAGESIGNALS")
UTma2_length=input.int(52,"",inline="UTMA2",minval=1,group="UPTREND🠕MOVINGAVERAGESIGNALS")
UTma2=ma(src,UTma2_length,UTma2_type)
UTma2Color=mat>mat[1]?color.new(color.purple,35):color.new(color.purple,100)
UTma2line=plot(UTma2,color=UTma2Color,title="UTMA2")
UTmahist=UTma1-UTma2
//DOWNTRENDINPUTS
//MA1
DTma1_type=input.string("RMA","MA1",inline="DTMA1",options=["SMA","EMA","RMA","HMA","WMA","VWMA"],group="DOWNTREND🠗MOVINGAVERAGESIGNALS")
DTma1_length=input.int(7,"",inline="DTMA1",minval=1,group="DOWNTREND🠗MOVINGAVERAGESIGNALS")
DTma1=ma(src,DTma1_length,DTma1_type)
DTma1Color=mat>mat[1]?color.new(color.blue,100):color.new(color.blue,35)
DTma1line=plot(DTma1,color=DTma1Color,title="DTMA1")
//MA2
DTma2_type=input.string("HMA","MA2",inline="DTMA2",options=["SMA","EMA","RMA","HMA","WMA","VWMA"],group="DOWNTREND🠗MOVINGAVERAGESIGNALS")
DTma2_length=input.int(54,"",inline="DTMA2",minval=1,group="DOWNTREND🠗MOVINGAVERAGESIGNALS")
DTma2=ma(src,DTma2_length,DTma2_type)
DTma2Color=mat>mat[1]?color.new(color.purple,100):color.new(color.purple,35)
DTma2line=plot(DTma2,color=DTma2Color,title="DTMA2")
DTmahist=DTma1-DTma2
//UPTRENDSIGNALS
UTmaXup=UTUsemaXandUTma1>UTma2andUTma1[1]<UTma2[1]?1:0
UTmaXdn=UTUsemaXandUTma1<UTma2andUTma1[1]>UTma2[1]?1:0
UTmaPup=UTUsemaPandUTma1>UTma2?1:0
UTmaPdn=UTUsemaPandUTma1<UTma2?1:0
UTmaHup=UTUsemaHandUTmahist>UTmahist[1]andUTmahist[1]<UTmahist[2]?1:0
UTmaHdn=UTUsemaHandUTmahist<UTmahist[1]andUTmahist[1]>UTmahist[2]?1:0
//DOWNTRENDSIGNALS
DTmaXup=DTUsemaXandDTma1>DTma2andDTma1[1]<DTma2[1]?1:0
DTmaXdn=DTUsemaXandDTma1<DTma2andDTma1[1]>DTma2[1]?1:0
DTmaPup=DTUsemaPandDTma1>DTma2?1:0
DTmaPdn=DTUsemaPandDTma1<DTma2?1:0
DTmaHup=DTUsemaHandDTmahist>DTmahist[1]andDTmahist[1]<DTmahist[2]?1:0
DTmaHdn=DTUsemaHandDTmahist<DTmahist[1]andDTmahist[1]>DTmahist[2]?1:0
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//STOCHASTICRSI▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
//UPTRENDOPTIONS
//Cross
UTUseSrsiX=input(false,"StochRSICrossSignal",group="UPTREND🠕STOCHRSISIGNALS")
UTReqSrsiXscore=UTUseSrsiX?1:0
//Level
UTUseSrsiL=input(true,"UseBuy/SellLevels",group="UPTREND🠕STOCHRSISIGNALS")
UTsablevelb=input.int(55,"BuyBelowLevel",group="UPTREND🠕STOCHRSISIGNALS")
UTsablevels=input.int(25,"SellAboveLevel",group="UPTREND🠕STOCHRSISIGNALS")
UTReqSrsiLscore=UTUseSrsiL?1:0
//Position
UTUseSrsiP=input(false,"UseStochRSIPosition",group="UPTREND🠕STOCHRSISIGNALS")
UTReqSrsiPscore=UTUseSrsiP?1:0
//Divergence
UTUseSrsiD=input(false,"StochRSIDivergence",group="UPTREND🠕STOCHRSISIGNALS")
UTReqSrsiDscore=UTUseSrsiD?1:0
//DOWNTRENDOPTIONS
//Cross
DTUseSrsiX=input(false,"StochRSICrossSignal",group="DOWNTREND🠗STOCHRSISIGNALS")
DTReqSrsiXscore=DTUseSrsiX?1:0
//Level
DTUseSrsiL=input(false,"UseBuy/SellLevels",group="DOWNTREND🠗STOCHRSISIGNALS")
DTsablevelb=input.int(61,"BuyBelowLevel",group="DOWNTREND🠗STOCHRSISIGNALS")
DTsablevels=input.int(13,"SellAboveLevel",group="DOWNTREND🠗STOCHRSISIGNALS")
DTReqSrsiLscore=DTUseSrsiL?1:0
//Position
DTUseSrsiP=input(false,"UseStochRSIPosition",group="DOWNTREND🠗STOCHRSISIGNALS")
DTReqSrsiPscore=DTUseSrsiP?1:0
//Divergence
DTUseSrsiD=input(false,"StochRSIDivergence",group="DOWNTREND🠗STOCHRSISIGNALS")
DTReqSrsiDscore=DTUseSrsiD?1:0
//UPTRENDINPUTS
//STOCHRSI
UTlengthRSI=input.int(12,"RSILength",minval=1,group="UPTREND🠕STOCHRSISIGNALS")
UTlengthStoch=input.int(19,"StochasticLength",minval=1,group="UPTREND🠕STOCHRSISIGNALS")
UTrsi1=ta.rsi(src,UTlengthRSI)
UTrk=ta.sma(ta.stoch(UTrsi1,UTrsi1,UTrsi1,UTlengthStoch),3)
UTrd=ta.sma(UTrk,3)
//DOWNTRENDINPUTS
//STOCHRSI
DTlengthRSI=input.int(12,"RSILength",minval=1,group="DOWNTREND🠗STOCHRSISIGNALS")
DTlengthStoch=input.int(20,"StochasticLength",minval=1,group="DOWNTREND🠗STOCHRSISIGNALS")
DTrsi1=ta.rsi(src,DTlengthRSI)
DTrk=ta.sma(ta.stoch(DTrsi1,DTrsi1,DTrsi1,DTlengthStoch),3)
DTrd=ta.sma(DTrk,3)
//UPTRENDDIVERGENCE
inRange(cond)=>
bars=ta.barssince(cond==true)
5<=barsandbars<=60
osc2=UTrk
//Pivots
plFound2=na(ta.pivotlow(osc2,5,2))?false:true
phFound2=na(ta.pivothigh(osc2,5,2))?false:true
//RegularBullish
oscHL2=osc2[2]>ta.valuewhen(plFound2,osc2[2],1)andinRange(plFound2[1])
priceLL2=low[2]<ta.valuewhen(plFound2,low[2],1)
bullCond2=priceLL2andoscHL2andplFound2
//HiddenBullish
oscLL2=osc2[2]<ta.valuewhen(plFound2,osc2[2],1)andinRange(plFound2[1])
priceHL2=low[2]>ta.valuewhen(plFound2,low[2],1)
hiddenBullCond2=priceHL2andoscLL2andplFound2
//RegularBearish
oscLH2=osc2[2]<ta.valuewhen(phFound2,osc2[2],1)andinRange(phFound2[1])
priceHH2=high[2]>ta.valuewhen(phFound2,high[2],1)
bearCond2=priceHH2andoscLH2andphFound2
//HiddenBearish
oscHH2=osc2[2]>ta.valuewhen(phFound2,osc2[2],1)andinRange(phFound2[1])
priceLH2=high[2]<ta.valuewhen(phFound2,high[2],1)
hiddenBearCond2=priceLH2andoscHH2andphFound2
//DOWNTRENDDIVERGENCE
osc3=DTrk
//Pivots
plFound3=na(ta.pivotlow(osc3,5,2))?false:true
phFound3=na(ta.pivothigh(osc3,5,2))?false:true
//RegularBullish
oscHL3=osc3[2]>ta.valuewhen(plFound3,osc3[2],1)andinRange(plFound3[1])
priceLL3=low[2]<ta.valuewhen(plFound3,low[2],1)
bullCond3=priceLL3andoscHL3andplFound3
//HiddenBullish
oscLL3=osc3[2]<ta.valuewhen(plFound3,osc3[2],1)andinRange(plFound3[1])
priceHL3=low[2]>ta.valuewhen(plFound3,low[2],1)
hiddenBullCond3=priceHL3andoscLL3andplFound3
//RegularBearish
oscLH3=osc3[2]<ta.valuewhen(phFound3,osc3[2],1)andinRange(phFound3[1])
priceHH3=high[2]>ta.valuewhen(phFound3,high[2],1)
bearCond3=priceHH3andoscLH3andphFound3
//HiddenBearish
oscHH3=osc3[2]>ta.valuewhen(phFound3,osc3[2],1)andinRange(phFound3[1])
priceLH3=high[2]<ta.valuewhen(phFound3,high[2],1)
hiddenBearCond3=priceLH3andoscHH3andphFound3
//UPTRENDSIGNALS
UTSrsiXup=UTUseSrsiXandUTrk>UTrdandUTrk[1]<UTrd[1]?1:0
UTSrsiXdn=UTUseSrsiXandUTrk<UTrdandUTrk[1]>UTrd[1]?1:0
UTSrsiLup=UTUseSrsiLandUTrk<UTsablevelb?1:0
UTSrsiLdn=UTUseSrsiLandUTrk>UTsablevels?1:0
UTSrsiPup=UTUseSrsiPandUTrk>UTrd?1:0
UTSrsiPdn=UTUseSrsiPandUTrk<UTrd?1:0
UTSrsiDup=UTUseSrsiDandbullCond2?1:0
UTSrsiDdn=UTUseSrsiDandbearCond2?1:0
//DOWNTRENDSIGNALS
DTSrsiXup=DTUseSrsiXandDTrk>DTrdandDTrk[1]<DTrd[1]?1:0
DTSrsiXdn=DTUseSrsiXandDTrk<DTrdandDTrk[1]>DTrd[1]?1:0
DTSrsiLup=DTUseSrsiLandDTrk<DTsablevelb?1:0
DTSrsiLdn=DTUseSrsiLandDTrk>DTsablevels?1:0
DTSrsiPup=DTUseSrsiPandDTrk>DTrd?1:0
DTSrsiPdn=DTUseSrsiPandDTrk<DTrd?1:0
DTSrsiDup=DTUseSrsiDandbullCond3?1:0
DTSrsiDdn=DTUseSrsiDandbearCond3?1:0
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//WAVETREND▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
//UPTRENDOPTIONS
//Cross
UTUsewtX=input(false,"TCIWaveTrendCross",group="UPTREND🠕TCIWAVETRENDSIGNALS")
UTReqwtXscore=UTUsewtX?1:0
//Level
UTUsewtL=input(true,"TCIWaveTrendLevel",group="UPTREND🠕TCIWAVETRENDSIGNALS")
UTwablevelb=input.int(73,"BuyBelowLevel",group="UPTREND🠕TCIWAVETRENDSIGNALS")
UTwablevels=input.int(39,"SellAboveLevel",group="UPTREND🠕TCIWAVETRENDSIGNALS")
UTReqwtLscore=UTUsewtL?1:0
//Position
UTUsewtP=input(false,"TCIWaveTrendPosition",group="UPTREND🠕TCIWAVETRENDSIGNALS")
UTReqwtPscore=UTUsewtP?1:0
//Divergence
UTUsewtD=input(false,"TCIWaveTrendDivergence",group="UPTREND🠕TCIWAVETRENDSIGNALS")
UTReqwtDscore=UTUsewtD?1:0
//DOWNTRENDOPTIONS
//Cross
DTUsewtX=input(false,"TCIWaveTrendCross",group="DOWNTREND🠗TCIWAVETRENDSIGNALS")
DTReqwtXscore=DTUsewtX?1:0
//Level
DTUsewtL=input(false,"TCIWaveTrendLevel",group="DOWNTREND🠗TCIWAVETRENDSIGNALS")
DTwablevelb=input.int(0,"BuyBelowLevel",group="DOWNTREND🠗TCIWAVETRENDSIGNALS")
DTwablevels=input.int(0,"SellAboveLevel",group="DOWNTREND🠗TCIWAVETRENDSIGNALS")
DTReqwtLscore=DTUsewtL?1:0
//Position
DTUsewtP=input(false,"TCIWaveTrendPosition",group="DOWNTREND🠗TCIWAVETRENDSIGNALS")
DTReqwtPscore=DTUsewtP?1:0
//Divergence
DTUsewtD=input(false,"TCIWaveTrendDivergence",group="DOWNTREND🠗TCIWAVETRENDSIGNALS")
DTReqwtDscore=DTUsewtD?1:0
//UPTRENDINPUTS
//WT
UTlenC=input.int(9,title="ChannelLength",group="UPTREND🠕TCIWAVETRENDSIGNALS")
UTlenA=input.int(12,title="AverageLength",group="UPTREND🠕TCIWAVETRENDSIGNALS")
UTap=hlc3
UTesa=ta.ema(UTap,UTlenC)
UTd1=ta.ema(math.abs(UTap-UTesa),UTlenC)
UTci=(UTap-UTesa)/(0.015*UTd1)
UTtci=ta.ema(UTci,UTlenA)
UTwt1=UTtci
UTwt2=ta.sma(UTwt1,4)
UTwthist=UTwt2-UTwt1
//DOWNTRENDINPUTS
//WT
DTlenC=input.int(9,title="ChannelLength",group="DOWNTREND🠗TCIWAVETRENDSIGNALS")
DTlenA=input.int(12,title="AverageLength",group="DOWNTREND🠗TCIWAVETRENDSIGNALS")
DTap=hlc3
DTesa=ta.ema(DTap,DTlenC)
DTd1=ta.ema(math.abs(DTap-DTesa),DTlenC)
DTci=(DTap-DTesa)/(0.015*DTd1)
DTtci=ta.ema(DTci,DTlenA)
DTwt1=DTtci
DTwt2=ta.sma(DTwt1,4)
DTwthist=DTwt2-DTwt1
//UPTRENDDIVERGENCE
osc4=UTwt1
//Pivots
plFound4=na(ta.pivotlow(osc4,5,2))?false:true
phFound4=na(ta.pivothigh(osc4,5,2))?false:true
//RegularBullish
oscHL4=osc4[2]>ta.valuewhen(plFound4,osc4[2],1)andinRange(plFound4[1])
priceLL4=low[2]<ta.valuewhen(plFound4,low[2],1)
bullCond4=priceLL4andoscHL4andplFound4
//HiddenBullish
oscLL4=osc4[2]<ta.valuewhen(plFound4,osc4[2],1)andinRange(plFound4[1])
priceHL4=low[2]>ta.valuewhen(plFound4,low[2],1)
hiddenBullCond4=priceHL4andoscLL4andplFound4
//RegularBearish
oscLH4=osc4[2]<ta.valuewhen(phFound4,osc4[2],1)andinRange(phFound4[1])
priceHH4=high[2]>ta.valuewhen(phFound4,high[2],1)
bearCond4=priceHH4andoscLH4andphFound4
//HiddenBearish
oscHH4=osc4[2]>ta.valuewhen(phFound4,osc4[2],1)andinRange(phFound4[1])
priceLH4=high[2]<ta.valuewhen(phFound4,high[2],1)
hiddenBearCond4=priceLH4andoscHH4andphFound4
//DOWNTRENDDIVERGENCE
osc5=DTwt1
//Pivots
plFound5=na(ta.pivotlow(osc5,5,2))?false:true
phFound5=na(ta.pivothigh(osc5,5,2))?false:true
//RegularBullish
oscHL5=osc5[2]>ta.valuewhen(plFound5,osc5[2],1)andinRange(plFound5[1])
priceLL5=low[2]<ta.valuewhen(plFound5,low[2],1)
bullCond5=priceLL5andoscHL5andplFound5
//HiddenBullish
oscLL5=osc5[2]<ta.valuewhen(plFound5,osc5[2],1)andinRange(plFound5[1])
priceHL5=low[2]>ta.valuewhen(plFound5,low[2],1)
hiddenBullCond5=priceHL5andoscLL5andplFound5
//RegularBearish
oscLH5=osc5[2]<ta.valuewhen(phFound5,osc5[2],1)andinRange(phFound5[1])
priceHH5=high[2]>ta.valuewhen(phFound5,high[2],1)
bearCond5=priceHH5andoscLH5andphFound5
//HiddenBearish
oscHH5=osc5[2]>ta.valuewhen(phFound5,osc5[2],1)andinRange(phFound5[1])
priceLH5=high[2]<ta.valuewhen(phFound5,high[2],1)
hiddenBearCond5=priceLH5andoscHH5andphFound5
//UPTRENDSIGNALS
UTwtXup=UTUsewtXandUTwt1>UTwt2andUTwt1[1]<UTwt2[1]andUTwt1<0?1:0
UTwtXdn=UTUsewtXandUTwt1<UTwt2andUTwt1[1]>UTwt2[1]andUTwt1>0?1:0
UTwtLup=UTUsewtLandUTwt1<UTwablevelb?1:0
UTwtLdn=UTUsewtLandUTwt1>UTwablevels?1:0
UTwtPup=UTUsewtPandUTwt1>UTwt2?1:0
UTwtPdn=UTUsewtPandUTwt1<UTwt2?1:0
UTwtDup=UTUsewtDandbullCond4?1:0
UTwtDdn=UTUsewtDandbearCond4?1:0
//DOWNTRENDSIGNALS
DTwtXup=DTUsewtXandDTwt1>DTwt2andDTwt1[1]<DTwt2[1]andDTwt1<0?1:0
DTwtXdn=DTUsewtXandDTwt1<DTwt2andDTwt1[1]>DTwt2[1]andDTwt1>0?1:0
DTwtLup=DTUsewtLandDTwt1<DTwablevelb?1:0
DTwtLdn=DTUsewtLandDTwt1>DTwablevels?1:0
DTwtPup=DTUsewtPandDTwt1>DTwt2?1:0
DTwtPdn=DTUsewtPandDTwt1<DTwt2?1:0
DTwtDup=DTUsewtDandbullCond5?1:0
DTwtDdn=DTUsewtDandbearCond5?1:0
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//COLLECTSIGNALS▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
//UTREQUIREDSCORES
UTReqScore=UTReqmaXscore+UTReqmaPscore+UTReqmaHscore+UTReqSrsiXscore+UTReqSrsiLscore+UTReqSrsiPscore+UTReqSrsiDscore+UTReqwtXscore+UTReqwtLscore+UTReqwtPscore+UTReqwtDscore
//DTREQUIREDSCORES
DTReqScore=DTReqmaXscore+DTReqmaPscore+DTReqmaHscore+DTReqSrsiXscore+DTReqSrsiLscore+DTReqSrsiPscore+DTReqSrsiDscore+DTReqwtXscore+DTReqwtLscore+DTReqwtPscore+DTReqwtDscore
//UTSIGNALSCORES
UTSigB=UTmaXup+UTmaPup+UTmaHup+UTSrsiXup+UTSrsiLup+UTSrsiPup+UTSrsiDup+UTwtXup+UTwtLup+UTwtPup+UTwtDup
UTSigS=UTmaXdn+UTmaPdn+UTmaHdn+UTSrsiXdn+UTSrsiLdn+UTSrsiPdn+UTSrsiDdn+UTwtXdn+UTwtLdn+UTwtPdn+UTwtDdn
//DTSIGNALSCORES
DTSigB=DTmaXup+DTmaPup+DTmaHup+DTSrsiXup+DTSrsiLup+DTSrsiPup+DTSrsiDup+DTwtXup+DTwtLup+DTwtPup+DTwtDup
DTSigS=DTmaXdn+DTmaPdn+DTmaHdn+DTSrsiXdn+DTSrsiLdn+DTSrsiPdn+DTSrsiDdn+DTwtXdn+DTwtLdn+DTwtPdn+DTwtDdn
//UTBUYANDSELL
UTNormB=UTSigB==UTReqScore?1:na
UTNormS=UTSigS==UTReqScore?1:na
//DTBUYANDSELL
DTNormB=DTSigB==DTReqScore?1:na
DTNormS=DTSigS==DTReqScore?1:na
//CHECKTRENDDIRECTION
UpTrend=mat>mat[1]
BCond=UpTrend?UTNormB:DTNormB
SCond=UpTrend?UTNormS:DTNormS
//FINALIZE
LongEntryFinal=TrendTrade?BCondandmat>mat[1]:BCond
LongExitFinal=TrendTrade?SCondandmat>mat[1]:SCond
ShortEntryFinal=TrendTrade?SCondandmat<mat[1]:SCond
ShortExitFinal=TrendTrade?BCondandmat<mat[1]:BCond
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//STOPLOSS&TAKEPROFIT▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
//UTMINIMUMPROFIT
UTmpconvertL=strategy.position_avg_price*(1+UTminProf)
UTmpconvertS=strategy.position_avg_price*(1-UTminProf)
UTmpdefineL=TradeDir=="LONG"?(UTmpconvertL<closeandstrategy.openprofit>0)andUTsellProf:na
UTmpdefineS=TradeDir=="SHORT"?(UTmpconvertS>closeandstrategy.openprofit>0)andUTsellProf:na
UTSPL=LongExitFinalandUTmpdefineL
UTSPS=ShortExitFinalandUTmpdefineS
//DTMINIMUMPROFIT
DTmpconvertL=strategy.position_avg_price*(1+DTminProf)
DTmpconvertS=strategy.position_avg_price*(1-DTminProf)
DTmpdefineL=TradeDir=="LONG"?(DTmpconvertL<closeandstrategy.openprofit>0)andDTsellProf:na
DTmpdefineS=TradeDir=="SHORT"?(DTmpconvertS>closeandstrategy.openprofit>0)andDTsellProf:na
DTSPL=LongExitFinalandDTmpdefineL
DTSPS=ShortExitFinalandDTmpdefineS
//COLLECT
sellProf=UpTrend?UTsellProf:DTsellProf
SPL=UpTrend?UTSPL:DTSPL
SPS=UpTrend?UTSPS:DTSPS
//UTTAKEPROFIT
UTtpconvertL=strategy.position_avg_price*(1+UTTPperc)
UTtpconvertS=strategy.position_avg_price*(1-UTTPperc)
UTTPL=TradeDir=="LONG"?(UTtpconvertL<close)andUTuseTP:na
UTTPS=TradeDir=="SHORT"?(UTtpconvertS>close)andUTuseTP:na
//DTTAKEPROFIT
DTtpconvertL=strategy.position_avg_price*(1+DTTPperc)
DTtpconvertS=strategy.position_avg_price*(1-DTTPperc)
DTTPL=TradeDir=="LONG"?(DTtpconvertL<close)andDTuseTP:na
DTTPS=TradeDir=="SHORT"?(DTtpconvertS>close)andDTuseTP:na
//COLLECT
TPL=UpTrend?UTTPL:DTTPL
TPS=UpTrend?UTTPS:DTTPS
//UTSTOPLOSS
UTslconvertL=strategy.position_avg_price*(1+UTSLperc)
UTslconvertS=strategy.position_avg_price*(1-UTSLperc)
UTSLL=TradeDir=="LONG"?(UTslconvertL>close)andUTuseSL:na
UTSLS=TradeDir=="SHORT"?(UTslconvertS<close)andUTuseSL:na
//DTSTOPLOSS
DTslconvertL=strategy.position_avg_price*(1+DTSLperc)
DTslconvertS=strategy.position_avg_price*(1-DTSLperc)
DTSLL=TradeDir=="LONG"?(DTslconvertL>close)andDTuseSL:na
DTSLS=TradeDir=="SHORT"?(DTslconvertS<close)andDTuseSL:na
//COLLECT
SLL=UpTrend?UTSLL:DTSLL
SLS=UpTrend?UTSLS:DTSLS
//UTTRADEEXPIRE
entrypos=strategy.opentrades==1andstrategy.opentrades[1]<1
UTexpirebars=UTuseTE?UTTEbars:1000000
UTTE=ta.barssince(entrypos)>=UTexpirebars
//DTTRADEEXPIRE
DTexpirebars=DTuseTE?DTTEbars:1000000
DTTE=ta.barssince(entrypos)>=DTexpirebars
//COLLECT
TE=UpTrend?UTTE:DTTE
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//PLOTSHAPES▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
//LONG
plotshape((TradeDir=="LONG")andLongEntryFinal,location=location.belowbar,style=shape.arrowup,color=color.new(#26a69a,100),text="⌃",textcolor=#26a69a,size=size.tiny,title="LongBUYLabel")
plotshape((TradeDir=="LONG")andLongExitFinal,location=location.abovebar,style=shape.arrowdown,color=color.new(#ef5350,100),text="⌄",textcolor=#ef5350,size=size.tiny,title="LongSELLLabel")
//SHORT
plotshape((TradeDir=="SHORT")andShortEntryFinal,location=location.abovebar,style=shape.arrowdown,color=color.new(#ef5350,100),text="⌄",textcolor=#ef5350,size=size.tiny,title="ShortSELLLabel")
plotshape((TradeDir=="SHORT")andShortExitFinal,location=location.belowbar,style=shape.arrowup,color=color.new(#26a69a,100),text="⌃",textcolor=#26a69a,size=size.tiny,title="ShortBUYLabel")
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//STRATEGYTRADES▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
//LONG
if(TradeDir=="LONG")andLongEntryFinal
strategy.entry("inLong",strategy.long,comment="LEn")
if((TradeDir=="LONG")andsellProf?SPL:LongExitFinal)orOOTexitL
strategy.close("inLong",comment="LEx")
//SHORT
if(TradeDir=="SHORT")andShortEntryFinal
strategy.entry("inShort",strategy.short,comment="SEn")
if((TradeDir=="SHORT")andsellProf?SPS:ShortExitFinal)orOOTexitS
strategy.close("inShort",comment="SEx")
//TAKE
ifTPL
strategy.close("inLong",comment="TP")
ifTPS
strategy.close("inShort",comment="TP")
//STOP
ifSLL
strategy.close("inLong",comment="SL")
ifSLS
strategy.close("inShort",comment="SL")
//EXPIRE
ifTE
strategy.close_all(comment="TE")

//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
//ALERTS▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼▼
useentryalert=input(defval=true,title="UseENTRYAlert",group="CustomAlertMessages")
entrystring=input.string(title="EntryAlertMessage",defval="ENTRY",confirm=false,group="CustomAlertMessages")
useexitalert=input(defval=true,title="UseEXITAlert",group="CustomAlertMessages")
exitstring=input.string(title="ExitAlertMessage",defval="EXIT",confirm=false,group="CustomAlertMessages")
usetakealert=input(defval=true,title="UseTAKEAlert",group="CustomAlertMessages")
takestring=input.string(title="TakeProfitAlertMessage",defval="TAKE",confirm=false,group="CustomAlertMessages")
usestopalert=input(defval=true,title="UseSTOPAlert",group="CustomAlertMessages")
stopstring=input.string(title="StopLossAlertMessage",defval="STOP",confirm=false,group="CustomAlertMessages")
useexpirealert=input(defval=true,title="UseEXPIREAlert",group="CustomAlertMessages")
expirestring=input.string(title="ExpireTradeAlertMessage",defval="EXPIRE",confirm=false,group="CustomAlertMessages")
//LONG(OnlyusethisifyourBotissetuptotradeLong.)
if((TradeDir=="LONG")andLongEntryFinal)anduseentryalert
alert(entrystring,alert.freq_once_per_bar)
if(TradeDir=="LONG")and(UTsellProf?SPL:LongExitFinal)anduseexitalert
alert(exitstring,alert.freq_once_per_bar)
//SHORT(OnlyusethisifyourBotissetuptotradeShort.)
if((TradeDir=="SHORT")andShortEntryFinal)anduseentryalert
alert(entrystring,alert.freq_once_per_bar)
if(TradeDir=="SHORT")and(UTsellProf?SPL:ShortExitFinal)anduseexitalert
alert(exitstring,alert.freq_once_per_bar)
//OTHER(TheseareTakeProfit,Stoploss,andTradeExpire.)
ifTPLorTPSandusetakealert
alert(takestring,alert.freq_once_per_bar)
ifSLLorSLSandusestopalert
alert(stopstring,alert.freq_once_per_bar)
ifTEanduseexpirealert
alert(expirestring,alert.freq_once_per_bar)
//END▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
////////////////////////////////////////////////////////////////////////////////
Expand (583 lines)
