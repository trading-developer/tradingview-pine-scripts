Script Name: Compound strategy
Author: pcooma
Description: In this strategy, I looked at how to manage the crypto I bought. Once we have a little understanding of how cryptocurrency is valued, we can manage the coins we have. For example, the most valuable coin in a coin is to sell when it is overvalued and re-buy when it is undervalued. Furthermore, I realised that buying from the right place and selling at the right...
PineScript code:

Pine Scriptâ„¢ strategy
Compound strategy
//@version=5
//stable  version  =  128
//stable  version  =  148  -  before  trading  arrangement
//before  delite  calculations  -  190
//before  publish  -  321  stable  version
//published  version  -  328
//good  performance  improvement  -  399
strategy("OPV17  V1  (Duplicate  of  OPV16  V1  Higher  timeframes)  -  Co-relation  and  St-deviation  Strategy",  shorttitle="OPV17  V1",  overlay=true,  calc_on_order_fills=false,  close_entries_rule  =  "FIFO",  calc_on_every_tick=false,  initial_capital  =  1000,pyramiding  =  999,precision  =  4,  process_orders_on_close=true,  currency  =  currency.USD,  default_qty_type  =  strategy.cash,  default_qty_value  =  33,  commission_type  =  strategy.commission.percent,  max_lines_count  =  500,  commission_value  =  0.1)
//Enter  Coustom  comand  to  perform  buy  and  sell  actions  link  with  webhook
string  strategy_long_buy_comment                                                                =      "L-BUY"
string  strategy_long_sell_comment                                                              =      "L-SELL"
string  strategy_short_buy_comment                                                              =      "S-BUY"
string  strategy_short_sell_comment                                                            =      "S-SELL"
//Backtest  dates
fromDay                                                                                                                  =  input.int          (defval  =  25,                                                                                                                                                                                      title        =  "From  (DD/MM/YYYY)  -  ",          minval  =  1,  maxval  =  31,                                          group  =  'Time  Period  Values',  inline  =  'From')
fromMonth                                                                                                              =  input.int          (defval  =  02,                                                                                                                                                                                      title        =  "/",                                                minval  =  1,  maxval  =  12,                                          group  =  'Time  Period  Values',  inline  =  'From')
fromYear                                                                                                                =  input.int          (defval  =  2022,                                                                                                                                                                                  title        =  "/",                                                minval  =  1970,                                                              group  =  'Time  Period  Values',  inline  =  'From')
thruDay                                                                                                                  =  input.int          (defval  =  1,                                                                                                                                                                                        title        =  "Thru  (DD/MM/YYYY)  -  ",          minval  =  1,  maxval  =  31,                                          group  =  'Time  Period  Values',  inline  =  'Thru')
thruMonth                                                                                                              =  input.int          (defval  =  1,                                                                                                                                                                  title="/",minval=1,maxval=12,group='TimePeriodValues',inline='Thru')
thruYear=input.int(defval=2112,title="/",minval=1970,group='TimePeriodValues',inline='Thru')
start=timestamp(fromYear,fromMonth,fromDay,00,00)//backteststartwindow
finish=timestamp(thruYear,thruMonth,thruDay,23,59)//backtestfinishwindow
use_timeframe=input.bool(defval=true,title="Usedatawindowtolimittrade",group='TimePeriodValues')
varwindow=true
ifuse_timeframe==true
window:=time>=startandtime<=finish?true:false
else
window:=true
//FundManagement
varint_cap=input.float(defval=1100,title="CumilativeInvestment",group="FundManagement")
varpurchaseing_method=input.string(defval='Equalamounts',title="ValueofPurchaswillbe",group="FundManagement",options=['Equalamounts','Incrementalamounts'])
vardev_of_equal_amounts=input.string(defval='EqualamountswithfixedUSDT',title="ValueofPurchaswillbe",group="FundManagement",options=['EqualamountswithfixedUSDT','Equalamountswithfixedentries'])
varint_val_prc=input.float(defval=45,title="Valueoffirstpurchasewillbe",group="FundManagement",tooltip="Minimumvalueofinitialpurchasewillbe15USDT",inline="Investment")
varint_val_allocation=input.string(defval='USDT',title="",group="FundManagement",options=['%ofcumilativeinvestment','USDT'],inline="Investment")
varpiramiding=input.int(defval=35,title="Numbersofpararalentries",group="FundManagement")
varr=input.float(defval=5,title="rstartingvalue",group="Inputparametersforfundmanagement")
varr_change_input=input.int(defval=1,title="Initiativevalueforrchange",group="Inputparametersforfundmanagement")
varr_finetune=input.bool(defval=false,title="User=0.001tofinetunervalue",group="Inputparametersforfundmanagement")
varr_value=input.float(defval=3.259,title="Calculatedrvalue",group="Inputparametersforfundmanagement")
//PortfolioManagement
varintermidiate_selling=input(defval=true,title="EnableSwingTrading",group="PortfolioManagement")
vardown_trend_selling=input(defval=true,title="EnableDownTrendTrading",group="PortfolioManagement")
source_of_downtrend_sell_determination_sma=input(defval=low,title="SourceofDowntrendselldetermination",group="PortfolioManagement")
period_of_downtrend_sell_determination_sma=input(defval=9,title="PeriodofDowntrendselldetermination",group="PortfolioManagement")
source_of_downtrend_sell_price_ricing_determination=input(defval=close,title="SourcetoDetermineDowntrendpricericing",group="PortfolioManagement")
period_of_downtrend_sell_price_ricing_determination=input(defval=14,title="PeriodofPriceRicingtoDetermineDowntrendsell",group="PortfolioManagement")
source_of_intermidiate_sell_determination_sma=input(defval=high,title="SourceofIntermidiateselldetermination",group="PortfolioManagement")
period_of_intermidiate_sell_determination_sma=input(defval=19,title="PeriodofIntermidiateselldetermination",group="PortfolioManagement")
varsource_of_downfall_deviation=input(defval=close,title="SourceofDownfalldeviation",group="PortfolioManagement")
varperiod_of_downfall_deviation=input(defval=9,title="PeriodofDownfalldeviation",group="PortfolioManagement")
vardownfall_deviation=input(defval=5,title="Downfalldeviation",group="PortfolioManagement")
//Calculationofprofitprecentage
varprofit_precentage=input.float(defval=19,title="Profitprecentagewillbe",group="ProfitCalculations",step=0.01)
varprofit_precentage_intermidiate=input.float(defval=17,title="SwingTradingprofitprecentagewillbe",group="ProfitCalculations",step=0.01)
vardown_trend_threshhold=input.float(defval=20,title="DowntrendIdentificationlevelwillbe",group="ProfitCalculations",step=0.01)
varajust_profit_line=input.bool(defval=true,title="Adjustprofitlinetoabsorblossesduringswingtrading",group="ProfitCalculations")
//UpandDowntrendfilter
src=input(defval=open,title="Source",group="UpandDowntrendfilter")
len1=input.int(defval=50,title="SMA50",group="UpandDowntrendfilter",minval=25,maxval=75,step=1)
len2=input.int(defval=141,title="SMA100",group="UpandDowntrendfilter",minval=75,maxval=150,step=2)
len3=input.int(defval=200,title="SMA200",group="UpandDowntrendfilter",minval=150,maxval=250,step=5)
//Principleinput
look_back_period=input.int(defval=9,title="LookbackperiodofprincipleInput",group="Principleinputs")
source_of_principle_input=input(defval=close,title="SourceofPrincipleInput",group="Principleinputs")
source_of_price_average=input(defval=close,title="SourceofAveragePrice",group="Principleinputs")
look_back_period_for_price_falling=input.int(defval=3,title="Lookbackperiodforpricefalling",group="Principleinputs")
source_of_ma9=input(defval=low,title="Sourceofaveragepricetodeterminesellingandbuying",group="Principleinputs")
look_back_period_of_sma9=input.int(defval=3,title="Lookbackperiodofaveragepricetodeterminebuyandsell",group="Principleinputs")
ma_9_calculation=input.string(defval='Volume-weightedMovingAverage(VWMA)',title="Calculationmethodofaverageprice",group="Principleinputs",options=['Leniorregression','SimpleMovingAverage(SMA)','ExponentiallyWeightedMovingAverage(EMA)','HullMovingAverage(HMA)','ExponentiallyWeightedMovingaveragewithalphalength(RMA)','WeightedMovingAverage(WMA)','ArnaudLegouxMovingAverage(ALMA)','Symmetricallyweightedmovingaveragewithfixedlength(SWMA)','Volume-weightedMovingAverage(VWMA)'])
volume_profile_calculation=input.string(defval='Leniorregression',title="Calculationmethodofvolumeprofile",group="Principleinputs",options=['Leniorregression','SimpleMovingAverage(SMA)','ExponentiallyWeightedMovingAverage(EMA)','HullMovingAverage(HMA)','ExponentiallyWeightedMovingaveragewithalphalength(RMA)','WeightedMovingAverage(WMA)','ArnaudLegouxMovingAverage(ALMA)','Symmetricallyweightedmovingaveragewithfixedlength(SWMA)','Volume-weightedMovingAverage(VWMA)'])
//BuyandSellrange
varfactor_of_supertrend_to_determine_sell_comand=input.int(defval=1,title="Factorofsupertrendtodeterminebuycommand",group="Determinationofbuyorsellcommand")
varartperiod_of_supertrend_to_determine_sell_comand=input.int(defval=16,title="ArtPeriodofsupertrendtodeterminebuycommand",group="Determinationofbuyorsellcommand")
buy_comand_high_value=input(defval=high,title="SourceofHighervalueofLookbackperiod",group="Determinationofbuyorsellcommand")
buy_comand_low_value=input(defval=hlc3,title="SourceofLowervalueofLookbackperiod",group="Determinationofbuyorsellcommand")
varbuy_or_sell_lookback=input.int(defval=208,title="Lookbackperiodtodeterminelowerlowpoints",group="Determinationofbuyorsellcommand")
source_of_lower_point=input(defval=low,title="SourceofLowerpointtoinitiatepurchase",group="Determinationofbuyorsellcommand")
//Principleinputs
varfloatma_9=0
ifma_9_calculation=='Leniorregression'
ma_9:=ta.linreg(source_of_ma9,look_back_period,0)
elseifma_9_calculation=='SimpleMovingAverage(SMA)'
ma_9:=ta.sma(source_of_ma9,look_back_period)
elseifma_9_calculation=='ExponentiallyWeightedMovingAverage(EMA)'
ma_9:=ta.ema(source_of_ma9,look_back_period)
elseifma_9_calculation=='HullMovingAverage(HMA)'
ma_9:=ta.hma(source_of_ma9,look_back_period)
elseifma_9_calculation=='ExponentiallyWeightedMovingaveragewithalphalength(RMA)'
ma_9:=ta.rma(source_of_ma9,look_back_period)
elseifma_9_calculation=='WeightedMovingAverage(WMA)'
ma_9:=ta.wma(source_of_ma9,look_back_period)
elseifma_9_calculation=='ArnaudLegouxMovingAverage(ALMA)'
ma_9:=ta.alma(source_of_ma9,look_back_period,0,3)
elseifma_9_calculation=='Symmetricallyweightedmovingaveragewithfixedlength(SWMA)'
ma_9:=ta.swma(source_of_ma9)
elseifma_9_calculation=='Volume-weightedMovingAverage(VWMA)'
ma_9:=ta.vwma(source_of_ma9,look_back_period)
//UpandDowntrendfilter
smma1=0.0
sma_1=ta.sma(src,len1)
smma1:=na(smma1[1])?sma_1:(smma1[1]*(len1-1)+src)/len1
smma2=0.0
sma_2=ta.sma(src,len2)
smma2:=na(smma2[1])?sma_2:(smma2[1]*(len2-1)+src)/len2
smma3=0.0
sma_3=ta.sma(src,len3)
smma3:=na(smma3[1])?sma_3:(smma3[1]*(len3-1)+src)/len3
al_smma1=ta.ema(src,len1)
al_smma2=ta.ema(src,len1)
al_smma3=ta.ema(src,len1)
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////multitimeperiodcalculations////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////
varfloatfinal_graph_value=0
varfloatpositive_value=0
mt_prc_10=ta.ema(source_of_principle_input,10)
mt_prc_50=ta.ema(source_of_principle_input,50)
mt_prc_100=ta.ema(source_of_principle_input,100)
mt_prc_200=ta.ema(source_of_principle_input,200)
mt_prc_300=ta.ema(source_of_principle_input,300)
mt_vol_10=ta.ema(volume,10)
mt_vol_50=ta.ema(volume,50)
mt_vol_100=ta.ema(volume,100)
mt_vol_200=ta.ema(volume,200)
mt_vol_300=ta.ema(volume,300)
[mt_middle_mt_prc,mt_upper_mt_prc,mt_lower_mt_prc]=ta.bb(mt_prc_300,5,4)
[mt_middle_mt_vol,mt_upper_mt_vol,mt_lower_mt_vol]=ta.bb(mt_vol_300,5,4)
mt_gap_prc_10=mt_prc_10-mt_middle_mt_prc
mt_gap_prc_50=mt_prc_50-mt_middle_mt_prc
mt_gap_prc_100=mt_prc_100-mt_middle_mt_prc
mt_gap_prc_200=mt_prc_200-mt_middle_mt_prc
mt_gap_vol_10=mt_vol_10-mt_middle_mt_vol
mt_gap_vol_50=mt_vol_50-mt_middle_mt_vol
mt_gap_vol_100=mt_vol_100-mt_middle_mt_vol
mt_gap_vol_200=mt_vol_200-mt_middle_mt_vol
mt_stdev_gap_prc_10=ta.stdev(mt_gap_prc_10,look_back_period)
mt_stdev_gap_prc_50=ta.stdev(mt_gap_prc_50,look_back_period)
mt_stdev_gap_prc_100=ta.stdev(mt_gap_prc_100,look_back_period)
mt_stdev_gap_prc_200=ta.stdev(mt_gap_prc_200,look_back_period)
mt_stdev_gap_vol_10=ta.stdev(mt_gap_vol_10,look_back_period)
mt_stdev_gap_vol_50=ta.stdev(mt_gap_vol_50,look_back_period)
mt_stdev_gap_vol_100=ta.stdev(mt_gap_vol_100,look_back_period)
mt_stdev_gap_vol_200=ta.stdev(mt_gap_vol_200,look_back_period)
//MultitimeframeRSI
mt_rsi_10=ta.rsi(source_of_principle_input,10)
mt_rsi_50=ta.rsi(source_of_principle_input,50)
mt_rsi_100=ta.rsi(source_of_principle_input,100)
mt_rsi_200=ta.rsi(source_of_principle_input,200)
mt_rsi_300=ta.rsi(source_of_principle_input,300)
co_rsi_10_50=ta.crossover(mt_rsi_10,mt_rsi_50)
co_rsi_10_100=ta.crossover(mt_rsi_10,mt_rsi_100)
co_rsi_10_200=ta.crossover(mt_rsi_10,mt_rsi_200)
co_rsi_10_300=ta.crossover(mt_rsi_10,mt_rsi_300)
co_rsi_50_100=ta.crossover(mt_rsi_50,mt_rsi_100)
co_rsi_50_200=ta.crossover(mt_rsi_50,mt_rsi_200)
co_rsi_50_300=ta.crossover(mt_rsi_50,mt_rsi_300)
co_rsi_100_200=ta.crossover(mt_rsi_100,mt_rsi_200)
co_rsi_100_300=ta.crossover(mt_rsi_100,mt_rsi_300)
co_rsi_200_300=ta.crossover(mt_rsi_200,mt_rsi_300)
cu_rsi_10_50=ta.crossunder(mt_rsi_10,mt_rsi_50)
cu_rsi_10_100=ta.crossunder(mt_rsi_10,mt_rsi_100)
cu_rsi_10_200=ta.crossunder(mt_rsi_10,mt_rsi_200)
cu_rsi_10_300=ta.crossunder(mt_rsi_10,mt_rsi_300)
cu_rsi_50_100=ta.crossunder(mt_rsi_50,mt_rsi_100)
cu_rsi_50_200=ta.crossunder(mt_rsi_50,mt_rsi_200)
cu_rsi_50_300=ta.crossunder(mt_rsi_50,mt_rsi_300)
cu_rsi_100_200=ta.crossunder(mt_rsi_100,mt_rsi_200)
cu_rsi_100_300=ta.crossunder(mt_rsi_100,mt_rsi_300)
cu_rsi_200_300=ta.crossunder(mt_rsi_200,mt_rsi_300)
[mt_middle_mt_rsi,mt_upper_mt_rsi,mt_lower_mt_rsi]=ta.bb(mt_rsi_300,5,4)
mt_gap_rsi_10=mt_rsi_10-mt_middle_mt_rsi
mt_gap_rsi_50=mt_rsi_50-mt_middle_mt_rsi
mt_gap_rsi_100=mt_rsi_100-mt_middle_mt_rsi
mt_gap_rsi_200=mt_rsi_200-mt_middle_mt_rsi
mt_stdev_gap_rsi_10=ta.stdev(mt_gap_rsi_10,look_back_period)
mt_stdev_gap_rsi_50=ta.stdev(mt_gap_rsi_50,look_back_period)
mt_stdev_gap_rsi_100=ta.stdev(mt_gap_rsi_100,look_back_period)
mt_stdev_gap_rsi_200=ta.stdev(mt_gap_rsi_200,look_back_period)
mt_corelation_gap_prc_rsi_10=ta.correlation(mt_gap_rsi_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_rsi_50=ta.correlation(mt_gap_rsi_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_rsi_100=ta.correlation(mt_gap_rsi_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_rsi_200=ta.correlation(mt_gap_rsi_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_rsi_10=ta.correlation(mt_gap_rsi_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_rsi_50=ta.correlation(mt_gap_rsi_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_rsi_100=ta.correlation(mt_gap_rsi_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_rsi_200=ta.correlation(mt_gap_rsi_200,mt_gap_vol_200,look_back_period)
rsi_gap_prc_correlation=mt_stdev_gap_rsi_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_rsi_10*30+mt_stdev_gap_rsi_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_rsi_50*6+mt_stdev_gap_rsi_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_rsi_100*3+mt_stdev_gap_rsi_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_rsi_200*1.5
rsi_gap_vol_correlation=mt_stdev_gap_rsi_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_rsi_10*30+mt_stdev_gap_rsi_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_rsi_50*6+mt_stdev_gap_rsi_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_rsi_100*3+mt_stdev_gap_rsi_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_rsi_200*1.5
mt_corelation_gap_prc_vol_rsi=ta.correlation(rsi_gap_prc_correlation,rsi_gap_vol_correlation,look_back_period)
//MFI
mt_mfi_10=ta.mfi(source_of_principle_input,10)
mt_mfi_50=ta.mfi(source_of_principle_input,50)
mt_mfi_100=ta.mfi(source_of_principle_input,100)
mt_mfi_200=ta.mfi(source_of_principle_input,200)
mt_mfi_300=ta.mfi(source_of_principle_input,300)
co_mfi_10_50=ta.crossover(mt_mfi_10,mt_mfi_50)
co_mfi_10_100=ta.crossover(mt_mfi_10,mt_mfi_100)
co_mfi_10_200=ta.crossover(mt_mfi_10,mt_mfi_200)
co_mfi_10_300=ta.crossover(mt_mfi_10,mt_mfi_300)
co_mfi_50_100=ta.crossover(mt_mfi_50,mt_mfi_100)
co_mfi_50_200=ta.crossover(mt_mfi_50,mt_mfi_200)
co_mfi_50_300=ta.crossover(mt_mfi_50,mt_mfi_300)
co_mfi_100_200=ta.crossover(mt_mfi_100,mt_mfi_200)
co_mfi_100_300=ta.crossover(mt_mfi_100,mt_mfi_300)
co_mfi_200_300=ta.crossover(mt_mfi_200,mt_mfi_300)
cu_mfi_10_50=ta.crossunder(mt_mfi_10,mt_mfi_50)
cu_mfi_10_100=ta.crossunder(mt_mfi_10,mt_mfi_100)
cu_mfi_10_200=ta.crossunder(mt_mfi_10,mt_mfi_200)
cu_mfi_10_300=ta.crossunder(mt_mfi_10,mt_mfi_300)
cu_mfi_50_100=ta.crossunder(mt_mfi_50,mt_mfi_100)
cu_mfi_50_200=ta.crossunder(mt_mfi_50,mt_mfi_200)
cu_mfi_50_300=ta.crossunder(mt_mfi_50,mt_mfi_300)
cu_mfi_100_200=ta.crossunder(mt_mfi_100,mt_mfi_200)
cu_mfi_100_300=ta.crossunder(mt_mfi_100,mt_mfi_300)
cu_mfi_200_300=ta.crossunder(mt_mfi_200,mt_mfi_300)
[mt_middle_mt_mfi,mt_upper_mt_mfi,mt_lower_mt_mfi]=ta.bb(mt_mfi_300,5,4)
mt_gap_mfi_10=mt_mfi_10-mt_middle_mt_mfi
mt_gap_mfi_50=mt_mfi_50-mt_middle_mt_mfi
mt_gap_mfi_100=mt_mfi_100-mt_middle_mt_mfi
mt_gap_mfi_200=mt_mfi_200-mt_middle_mt_mfi
mt_stdev_gap_mfi_10=ta.stdev(mt_gap_mfi_10,look_back_period)
mt_stdev_gap_mfi_50=ta.stdev(mt_gap_mfi_50,look_back_period)
mt_stdev_gap_mfi_100=ta.stdev(mt_gap_mfi_100,look_back_period)
mt_stdev_gap_mfi_200=ta.stdev(mt_gap_mfi_200,look_back_period)
mt_corelation_gap_prc_mfi_10=ta.correlation(mt_gap_mfi_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_mfi_50=ta.correlation(mt_gap_mfi_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_mfi_100=ta.correlation(mt_gap_mfi_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_mfi_200=ta.correlation(mt_gap_mfi_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_mfi_10=ta.correlation(mt_gap_mfi_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_mfi_50=ta.correlation(mt_gap_mfi_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_mfi_100=ta.correlation(mt_gap_mfi_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_mfi_200=ta.correlation(mt_gap_mfi_200,mt_gap_vol_200,look_back_period)
mfi_gap_prc_correlation=mt_stdev_gap_mfi_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_mfi_10*30+mt_stdev_gap_mfi_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_mfi_50*6+mt_stdev_gap_mfi_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_mfi_100*3+mt_stdev_gap_mfi_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_mfi_200*1.5
mfi_gap_vol_correlation=mt_stdev_gap_mfi_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_mfi_10*30+mt_stdev_gap_mfi_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_mfi_50*6+mt_stdev_gap_mfi_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_mfi_100*3+mt_stdev_gap_mfi_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_mfi_200*1.5
mt_corelation_gap_prc_vol_mfi=ta.correlation(mfi_gap_prc_correlation,mfi_gap_vol_correlation,look_back_period)
//CMO
mt_cmo_10=ta.cmo(source_of_principle_input,10)
mt_cmo_50=ta.cmo(source_of_principle_input,50)
mt_cmo_100=ta.cmo(source_of_principle_input,100)
mt_cmo_200=ta.cmo(source_of_principle_input,200)
mt_cmo_300=ta.cmo(source_of_principle_input,300)
co_cmo_10_50=ta.crossover(mt_cmo_10,mt_cmo_50)
co_cmo_10_100=ta.crossover(mt_cmo_10,mt_cmo_100)
co_cmo_10_200=ta.crossover(mt_cmo_10,mt_cmo_200)
co_cmo_10_300=ta.crossover(mt_cmo_10,mt_cmo_300)
co_cmo_50_100=ta.crossover(mt_cmo_50,mt_cmo_100)
co_cmo_50_200=ta.crossover(mt_cmo_50,mt_cmo_200)
co_cmo_50_300=ta.crossover(mt_cmo_50,mt_cmo_300)
co_cmo_100_200=ta.crossover(mt_cmo_100,mt_cmo_200)
co_cmo_100_300=ta.crossover(mt_cmo_100,mt_cmo_300)
co_cmo_200_300=ta.crossover(mt_cmo_200,mt_cmo_300)
cu_cmo_10_50=ta.crossunder(mt_cmo_10,mt_cmo_50)
cu_cmo_10_100=ta.crossunder(mt_cmo_10,mt_cmo_100)
cu_cmo_10_200=ta.crossunder(mt_cmo_10,mt_cmo_200)
cu_cmo_10_300=ta.crossunder(mt_cmo_10,mt_cmo_300)
cu_cmo_50_100=ta.crossunder(mt_cmo_50,mt_cmo_100)
cu_cmo_50_200=ta.crossunder(mt_cmo_50,mt_cmo_200)
cu_cmo_50_300=ta.crossunder(mt_cmo_50,mt_cmo_300)
cu_cmo_100_200=ta.crossunder(mt_cmo_100,mt_cmo_200)
cu_cmo_100_300=ta.crossunder(mt_cmo_100,mt_cmo_300)
cu_cmo_200_300=ta.crossunder(mt_cmo_200,mt_cmo_300)
[mt_middle_mt_cmo,mt_upper_mt_cmo,mt_lower_mt_cmo]=ta.bb(mt_cmo_300,5,4)
mt_gap_cmo_10=mt_cmo_10-mt_middle_mt_cmo
mt_gap_cmo_50=mt_cmo_50-mt_middle_mt_cmo
mt_gap_cmo_100=mt_cmo_100-mt_middle_mt_cmo
mt_gap_cmo_200=mt_cmo_200-mt_middle_mt_cmo
mt_stdev_gap_cmo_10=ta.stdev(mt_gap_cmo_10,look_back_period)
mt_stdev_gap_cmo_50=ta.stdev(mt_gap_cmo_50,look_back_period)
mt_stdev_gap_cmo_100=ta.stdev(mt_gap_cmo_100,look_back_period)
mt_stdev_gap_cmo_200=ta.stdev(mt_gap_cmo_200,look_back_period)
mt_corelation_gap_prc_cmo_10=ta.correlation(mt_gap_cmo_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_cmo_50=ta.correlation(mt_gap_cmo_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_cmo_100=ta.correlation(mt_gap_cmo_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_cmo_200=ta.correlation(mt_gap_cmo_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_cmo_10=ta.correlation(mt_gap_cmo_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_cmo_50=ta.correlation(mt_gap_cmo_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_cmo_100=ta.correlation(mt_gap_cmo_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_cmo_200=ta.correlation(mt_gap_cmo_200,mt_gap_vol_200,look_back_period)
cmo_gap_prc_correlation=mt_stdev_gap_cmo_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_cmo_10*30+mt_stdev_gap_cmo_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_cmo_50*6+mt_stdev_gap_cmo_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_cmo_100*3+mt_stdev_gap_cmo_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_cmo_200*1.5
cmo_gap_vol_correlation=mt_stdev_gap_cmo_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_cmo_10*30+mt_stdev_gap_cmo_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_cmo_50*6+mt_stdev_gap_cmo_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_cmo_100*3+mt_stdev_gap_cmo_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_cmo_200*1.5
mt_corelation_gap_prc_vol_cmo=ta.correlation(cmo_gap_prc_correlation,cmo_gap_vol_correlation,look_back_period)
//mom
mt_mom_10=ta.mom(source_of_principle_input,10)
mt_mom_50=ta.mom(source_of_principle_input,50)
mt_mom_100=ta.mom(source_of_principle_input,100)
mt_mom_200=ta.mom(source_of_principle_input,200)
mt_mom_300=ta.mom(source_of_principle_input,300)
co_mom_10_50=ta.crossover(mt_mom_10,mt_mom_50)
co_mom_10_100=ta.crossover(mt_mom_10,mt_mom_100)
co_mom_10_200=ta.crossover(mt_mom_10,mt_mom_200)
co_mom_10_300=ta.crossover(mt_mom_10,mt_mom_300)
co_mom_50_100=ta.crossover(mt_mom_50,mt_mom_100)
co_mom_50_200=ta.crossover(mt_mom_50,mt_mom_200)
co_mom_50_300=ta.crossover(mt_mom_50,mt_mom_300)
co_mom_100_200=ta.crossover(mt_mom_100,mt_mom_200)
co_mom_100_300=ta.crossover(mt_mom_100,mt_mom_300)
co_mom_200_300=ta.crossover(mt_mom_200,mt_mom_300)
cu_mom_10_50=ta.crossunder(mt_mom_10,mt_mom_50)
cu_mom_10_100=ta.crossunder(mt_mom_10,mt_mom_100)
cu_mom_10_200=ta.crossunder(mt_mom_10,mt_mom_200)
cu_mom_10_300=ta.crossunder(mt_mom_10,mt_mom_300)
cu_mom_50_100=ta.crossunder(mt_mom_50,mt_mom_100)
cu_mom_50_200=ta.crossunder(mt_mom_50,mt_mom_200)
cu_mom_50_300=ta.crossunder(mt_mom_50,mt_mom_300)
cu_mom_100_200=ta.crossunder(mt_mom_100,mt_mom_200)
cu_mom_100_300=ta.crossunder(mt_mom_100,mt_mom_300)
cu_mom_200_300=ta.crossunder(mt_mom_200,mt_mom_300)
[mt_middle_mt_mom,mt_upper_mt_mom,mt_lower_mt_mom]=ta.bb(mt_mom_300,5,4)
mt_gap_mom_10=mt_mom_10-mt_middle_mt_mom
mt_gap_mom_50=mt_mom_50-mt_middle_mt_mom
mt_gap_mom_100=mt_mom_100-mt_middle_mt_mom
mt_gap_mom_200=mt_mom_200-mt_middle_mt_mom
mt_stdev_gap_mom_10=ta.stdev(mt_gap_mom_10,look_back_period)
mt_stdev_gap_mom_50=ta.stdev(mt_gap_mom_50,look_back_period)
mt_stdev_gap_mom_100=ta.stdev(mt_gap_mom_100,look_back_period)
mt_stdev_gap_mom_200=ta.stdev(mt_gap_mom_200,look_back_period)
mt_corelation_gap_prc_mom_10=ta.correlation(mt_gap_mom_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_mom_50=ta.correlation(mt_gap_mom_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_mom_100=ta.correlation(mt_gap_mom_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_mom_200=ta.correlation(mt_gap_mom_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_mom_10=ta.correlation(mt_gap_mom_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_mom_50=ta.correlation(mt_gap_mom_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_mom_100=ta.correlation(mt_gap_mom_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_mom_200=ta.correlation(mt_gap_mom_200,mt_gap_vol_200,look_back_period)
mom_gap_prc_correlation=mt_stdev_gap_mom_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_mom_10*30+mt_stdev_gap_mom_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_mom_50*6+mt_stdev_gap_mom_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_mom_100*3+mt_stdev_gap_mom_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_mom_200*1.5
mom_gap_vol_correlation=mt_stdev_gap_mom_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_mom_10*30+mt_stdev_gap_mom_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_mom_50*6+mt_stdev_gap_mom_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_mom_100*3+mt_stdev_gap_mom_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_mom_200*1.5
mt_corelation_gap_prc_vol_mom=ta.correlation(mom_gap_prc_correlation,mom_gap_vol_correlation,look_back_period)
//cog
mt_cog_10=ta.cog(source_of_principle_input,10)
mt_cog_50=ta.cog(source_of_principle_input,50)
mt_cog_100=ta.cog(source_of_principle_input,100)
mt_cog_200=ta.cog(source_of_principle_input,200)
mt_cog_300=ta.cog(source_of_principle_input,300)
co_cog_10_50=ta.crossover(mt_cog_10,mt_cog_50)
co_cog_10_100=ta.crossover(mt_cog_10,mt_cog_100)
co_cog_10_200=ta.crossover(mt_cog_10,mt_cog_200)
co_cog_10_300=ta.crossover(mt_cog_10,mt_cog_300)
co_cog_50_100=ta.crossover(mt_cog_50,mt_cog_100)
co_cog_50_200=ta.crossover(mt_cog_50,mt_cog_200)
co_cog_50_300=ta.crossover(mt_cog_50,mt_cog_300)
co_cog_100_200=ta.crossover(mt_cog_100,mt_cog_200)
co_cog_100_300=ta.crossover(mt_cog_100,mt_cog_300)
co_cog_200_300=ta.crossover(mt_cog_200,mt_cog_300)
cu_cog_10_50=ta.crossunder(mt_cog_10,mt_cog_50)
cu_cog_10_100=ta.crossunder(mt_cog_10,mt_cog_100)
cu_cog_10_200=ta.crossunder(mt_cog_10,mt_cog_200)
cu_cog_10_300=ta.crossunder(mt_cog_10,mt_cog_300)
cu_cog_50_100=ta.crossunder(mt_cog_50,mt_cog_100)
cu_cog_50_200=ta.crossunder(mt_cog_50,mt_cog_200)
cu_cog_50_300=ta.crossunder(mt_cog_50,mt_cog_300)
cu_cog_100_200=ta.crossunder(mt_cog_100,mt_cog_200)
cu_cog_100_300=ta.crossunder(mt_cog_100,mt_cog_300)
cu_cog_200_300=ta.crossunder(mt_cog_200,mt_cog_300)
[mt_middle_mt_cog,mt_upper_mt_cog,mt_lower_mt_cog]=ta.bb(mt_cog_300,5,4)
mt_gap_cog_10=mt_cog_10-mt_middle_mt_cog
mt_gap_cog_50=mt_cog_50-mt_middle_mt_cog
mt_gap_cog_100=mt_cog_100-mt_middle_mt_cog
mt_gap_cog_200=mt_cog_200-mt_middle_mt_cog
mt_stdev_gap_cog_10=ta.stdev(mt_gap_cog_10,look_back_period)
mt_stdev_gap_cog_50=ta.stdev(mt_gap_cog_50,look_back_period)
mt_stdev_gap_cog_100=ta.stdev(mt_gap_cog_100,look_back_period)
mt_stdev_gap_cog_200=ta.stdev(mt_gap_cog_200,look_back_period)
mt_corelation_gap_prc_cog_10=ta.correlation(mt_gap_cog_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_cog_50=ta.correlation(mt_gap_cog_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_cog_100=ta.correlation(mt_gap_cog_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_cog_200=ta.correlation(mt_gap_cog_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_cog_10=ta.correlation(mt_gap_cog_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_cog_50=ta.correlation(mt_gap_cog_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_cog_100=ta.correlation(mt_gap_cog_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_cog_200=ta.correlation(mt_gap_cog_200,mt_gap_vol_200,look_back_period)
cog_gap_prc_correlation=mt_stdev_gap_cog_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_cog_10*30+mt_stdev_gap_cog_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_cog_50*6+mt_stdev_gap_cog_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_cog_100*3+mt_stdev_gap_cog_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_cog_200*1.5
cog_gap_vol_correlation=mt_stdev_gap_cog_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_cog_10*30+mt_stdev_gap_cog_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_cog_50*6+mt_stdev_gap_cog_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_cog_100*3+mt_stdev_gap_cog_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_cog_200*1.5
mt_corelation_gap_prc_vol_cog=ta.correlation(cog_gap_prc_correlation,cog_gap_vol_correlation,look_back_period)
//dmi
[mt_diplus,mt_diminus,mt_adx]=ta.dmi(2,1)
mt_dmi_10=ta.ema(mt_adx,10)
mt_dmi_50=ta.ema(mt_adx,50)
mt_dmi_100=ta.ema(mt_adx,100)
mt_dmi_200=ta.ema(mt_adx,200)
mt_dmi_300=ta.ema(mt_adx,300)
co_dmi_10_50=ta.crossover(mt_dmi_10,mt_dmi_50)
co_dmi_10_100=ta.crossover(mt_dmi_10,mt_dmi_100)
co_dmi_10_200=ta.crossover(mt_dmi_10,mt_dmi_200)
co_dmi_10_300=ta.crossover(mt_dmi_10,mt_dmi_300)
co_dmi_50_100=ta.crossover(mt_dmi_50,mt_dmi_100)
co_dmi_50_200=ta.crossover(mt_dmi_50,mt_dmi_200)
co_dmi_50_300=ta.crossover(mt_dmi_50,mt_dmi_300)
co_dmi_100_200=ta.crossover(mt_dmi_100,mt_dmi_200)
co_dmi_100_300=ta.crossover(mt_dmi_100,mt_dmi_300)
co_dmi_200_300=ta.crossover(mt_dmi_200,mt_dmi_300)
cu_dmi_10_50=ta.crossunder(mt_dmi_10,mt_dmi_50)
cu_dmi_10_100=ta.crossunder(mt_dmi_10,mt_dmi_100)
cu_dmi_10_200=ta.crossunder(mt_dmi_10,mt_dmi_200)
cu_dmi_10_300=ta.crossunder(mt_dmi_10,mt_dmi_300)
cu_dmi_50_100=ta.crossunder(mt_dmi_50,mt_dmi_100)
cu_dmi_50_200=ta.crossunder(mt_dmi_50,mt_dmi_200)
cu_dmi_50_300=ta.crossunder(mt_dmi_50,mt_dmi_300)
cu_dmi_100_200=ta.crossunder(mt_dmi_100,mt_dmi_200)
cu_dmi_100_300=ta.crossunder(mt_dmi_100,mt_dmi_300)
cu_dmi_200_300=ta.crossunder(mt_dmi_200,mt_dmi_300)
[mt_middle_mt_dmi,mt_upper_mt_dmi,mt_lower_mt_dmi]=ta.bb(mt_dmi_300,5,4)
mt_gap_dmi_10=mt_dmi_10-mt_middle_mt_dmi
mt_gap_dmi_50=mt_dmi_50-mt_middle_mt_dmi
mt_gap_dmi_100=mt_dmi_100-mt_middle_mt_dmi
mt_gap_dmi_200=mt_dmi_200-mt_middle_mt_dmi
mt_stdev_gap_dmi_10=ta.stdev(mt_gap_dmi_10,look_back_period)
mt_stdev_gap_dmi_50=ta.stdev(mt_gap_dmi_50,look_back_period)
mt_stdev_gap_dmi_100=ta.stdev(mt_gap_dmi_100,look_back_period)
mt_stdev_gap_dmi_200=ta.stdev(mt_gap_dmi_200,look_back_period)
mt_corelation_gap_prc_dmi_10=ta.correlation(mt_gap_dmi_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_dmi_50=ta.correlation(mt_gap_dmi_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_dmi_100=ta.correlation(mt_gap_dmi_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_dmi_200=ta.correlation(mt_gap_dmi_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_dmi_10=ta.correlation(mt_gap_dmi_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_dmi_50=ta.correlation(mt_gap_dmi_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_dmi_100=ta.correlation(mt_gap_dmi_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_dmi_200=ta.correlation(mt_gap_dmi_200,mt_gap_vol_200,look_back_period)
dmi_gap_prc_correlation=mt_stdev_gap_dmi_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_dmi_10*30+mt_stdev_gap_dmi_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_dmi_50*6+mt_stdev_gap_dmi_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_dmi_100*3+mt_stdev_gap_dmi_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_dmi_200*1.5
dmi_gap_vol_correlation=mt_stdev_gap_dmi_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_dmi_10*30+mt_stdev_gap_dmi_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_dmi_50*6+mt_stdev_gap_dmi_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_dmi_100*3+mt_stdev_gap_dmi_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_dmi_200*1.5
mt_corelation_gap_prc_vol_dmi=ta.correlation(dmi_gap_prc_correlation,dmi_gap_vol_correlation,look_back_period)
//bop
bop_val=(close-open)/(high-low)
mt_bop_10=ta.ema(bop_val,10)
mt_bop_50=ta.ema(bop_val,50)
mt_bop_100=ta.ema(bop_val,100)
mt_bop_200=ta.ema(bop_val,200)
mt_bop_300=ta.ema(bop_val,300)
co_bop_10_50=ta.crossover(mt_bop_10,mt_bop_50)
co_bop_10_100=ta.crossover(mt_bop_10,mt_bop_100)
co_bop_10_200=ta.crossover(mt_bop_10,mt_bop_200)
co_bop_10_300=ta.crossover(mt_bop_10,mt_bop_300)
co_bop_50_100=ta.crossover(mt_bop_50,mt_bop_100)
co_bop_50_200=ta.crossover(mt_bop_50,mt_bop_200)
co_bop_50_300=ta.crossover(mt_bop_50,mt_bop_300)
co_bop_100_200=ta.crossover(mt_bop_100,mt_bop_200)
co_bop_100_300=ta.crossover(mt_bop_100,mt_bop_300)
co_bop_200_300=ta.crossover(mt_bop_200,mt_bop_300)
cu_bop_10_50=ta.crossunder(mt_bop_10,mt_bop_50)
cu_bop_10_100=ta.crossunder(mt_bop_10,mt_bop_100)
cu_bop_10_200=ta.crossunder(mt_bop_10,mt_bop_200)
cu_bop_10_300=ta.crossunder(mt_bop_10,mt_bop_300)
cu_bop_50_100=ta.crossunder(mt_bop_50,mt_bop_100)
cu_bop_50_200=ta.crossunder(mt_bop_50,mt_bop_200)
cu_bop_50_300=ta.crossunder(mt_bop_50,mt_bop_300)
cu_bop_100_200=ta.crossunder(mt_bop_100,mt_bop_200)
cu_bop_100_300=ta.crossunder(mt_bop_100,mt_bop_300)
cu_bop_200_300=ta.crossunder(mt_bop_200,mt_bop_300)
[mt_middle_mt_bop,mt_upper_mt_bop,mt_lower_mt_bop]=ta.bb(mt_bop_300,5,4)
mt_gap_bop_10=mt_bop_10-mt_middle_mt_bop
mt_gap_bop_50=mt_bop_50-mt_middle_mt_bop
mt_gap_bop_100=mt_bop_100-mt_middle_mt_bop
mt_gap_bop_200=mt_bop_200-mt_middle_mt_bop
mt_stdev_gap_bop_10=ta.stdev(mt_gap_bop_10,look_back_period)
mt_stdev_gap_bop_50=ta.stdev(mt_gap_bop_50,look_back_period)
mt_stdev_gap_bop_100=ta.stdev(mt_gap_bop_100,look_back_period)
mt_stdev_gap_bop_200=ta.stdev(mt_gap_bop_200,look_back_period)
mt_corelation_gap_prc_bop_10=ta.correlation(mt_gap_bop_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_bop_50=ta.correlation(mt_gap_bop_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_bop_100=ta.correlation(mt_gap_bop_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_bop_200=ta.correlation(mt_gap_bop_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_bop_10=ta.correlation(mt_gap_bop_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_bop_50=ta.correlation(mt_gap_bop_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_bop_100=ta.correlation(mt_gap_bop_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_bop_200=ta.correlation(mt_gap_bop_200,mt_gap_vol_200,look_back_period)
bop_gap_prc_correlation=mt_stdev_gap_bop_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_bop_10*30+mt_stdev_gap_bop_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_bop_50*6+mt_stdev_gap_bop_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_bop_100*3+mt_stdev_gap_bop_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_bop_200*1.5
bop_gap_vol_correlation=mt_stdev_gap_bop_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_bop_10*30+mt_stdev_gap_bop_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_bop_50*6+mt_stdev_gap_bop_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_bop_100*3+mt_stdev_gap_bop_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_bop_200*1.5
mt_corelation_gap_prc_vol_bop=ta.correlation(bop_gap_prc_correlation,bop_gap_vol_correlation,look_back_period)
//stoch
sto_val=ta.stoch(source_of_principle_input,high,low,1)
mt_sto_10=ta.ema(sto_val,10)
mt_sto_50=ta.ema(sto_val,50)
mt_sto_100=ta.ema(sto_val,100)
mt_sto_200=ta.ema(sto_val,200)
mt_sto_300=ta.ema(sto_val,300)
co_sto_10_50=ta.crossover(mt_sto_10,mt_sto_50)
co_sto_10_100=ta.crossover(mt_sto_10,mt_sto_100)
co_sto_10_200=ta.crossover(mt_sto_10,mt_sto_200)
co_sto_10_300=ta.crossover(mt_sto_10,mt_sto_300)
co_sto_50_100=ta.crossover(mt_sto_50,mt_sto_100)
co_sto_50_200=ta.crossover(mt_sto_50,mt_sto_200)
co_sto_50_300=ta.crossover(mt_sto_50,mt_sto_300)
co_sto_100_200=ta.crossover(mt_sto_100,mt_sto_200)
co_sto_100_300=ta.crossover(mt_sto_100,mt_sto_300)
co_sto_200_300=ta.crossover(mt_sto_200,mt_sto_300)
cu_sto_10_50=ta.crossunder(mt_sto_10,mt_sto_50)
cu_sto_10_100=ta.crossunder(mt_sto_10,mt_sto_100)
cu_sto_10_200=ta.crossunder(mt_sto_10,mt_sto_200)
cu_sto_10_300=ta.crossunder(mt_sto_10,mt_sto_300)
cu_sto_50_100=ta.crossunder(mt_sto_50,mt_sto_100)
cu_sto_50_200=ta.crossunder(mt_sto_50,mt_sto_200)
cu_sto_50_300=ta.crossunder(mt_sto_50,mt_sto_300)
cu_sto_100_200=ta.crossunder(mt_sto_100,mt_sto_200)
cu_sto_100_300=ta.crossunder(mt_sto_100,mt_sto_300)
cu_sto_200_300=ta.crossunder(mt_sto_200,mt_sto_300)
[mt_middle_mt_sto,mt_upper_mt_sto,mt_lower_mt_sto]=ta.bb(mt_sto_300,5,4)
mt_gap_sto_10=mt_sto_10-mt_middle_mt_sto
mt_gap_sto_50=mt_sto_50-mt_middle_mt_sto
mt_gap_sto_100=mt_sto_100-mt_middle_mt_sto
mt_gap_sto_200=mt_sto_200-mt_middle_mt_sto
mt_stdev_gap_sto_10=ta.stdev(mt_gap_sto_10,look_back_period)
mt_stdev_gap_sto_50=ta.stdev(mt_gap_sto_50,look_back_period)
mt_stdev_gap_sto_100=ta.stdev(mt_gap_sto_100,look_back_period)
mt_stdev_gap_sto_200=ta.stdev(mt_gap_sto_200,look_back_period)
mt_corelation_gap_prc_sto_10=ta.correlation(mt_gap_sto_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_sto_50=ta.correlation(mt_gap_sto_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_sto_100=ta.correlation(mt_gap_sto_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_sto_200=ta.correlation(mt_gap_sto_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_sto_10=ta.correlation(mt_gap_sto_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_sto_50=ta.correlation(mt_gap_sto_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_sto_100=ta.correlation(mt_gap_sto_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_sto_200=ta.correlation(mt_gap_sto_200,mt_gap_vol_200,look_back_period)
sto_gap_prc_correlation=mt_stdev_gap_sto_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_sto_10*30+mt_stdev_gap_sto_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_sto_50*6+mt_stdev_gap_sto_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_sto_100*3+mt_stdev_gap_sto_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_sto_200*1.5
sto_gap_vol_correlation=mt_stdev_gap_sto_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_sto_10*30+mt_stdev_gap_sto_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_sto_50*6+mt_stdev_gap_sto_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_sto_100*3+mt_stdev_gap_sto_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_sto_200*1.5
mt_corelation_gap_prc_vol_sto=ta.correlation(sto_gap_prc_correlation,sto_gap_vol_correlation,look_back_period)
//swma
swma_val=ta.swma(source_of_principle_input)
mt_swma_10=ta.ema(swma_val,10)
mt_swma_50=ta.ema(swma_val,50)
mt_swma_100=ta.ema(swma_val,100)
mt_swma_200=ta.ema(swma_val,200)
mt_swma_300=ta.ema(swma_val,300)
co_swma_10_50=ta.crossover(mt_swma_10,mt_swma_50)
co_swma_10_100=ta.crossover(mt_swma_10,mt_swma_100)
co_swma_10_200=ta.crossover(mt_swma_10,mt_swma_200)
co_swma_10_300=ta.crossover(mt_swma_10,mt_swma_300)
co_swma_50_100=ta.crossover(mt_swma_50,mt_swma_100)
co_swma_50_200=ta.crossover(mt_swma_50,mt_swma_200)
co_swma_50_300=ta.crossover(mt_swma_50,mt_swma_300)
co_swma_100_200=ta.crossover(mt_swma_100,mt_swma_200)
co_swma_100_300=ta.crossover(mt_swma_100,mt_swma_300)
co_swma_200_300=ta.crossover(mt_swma_200,mt_swma_300)
cu_swma_10_50=ta.crossunder(mt_swma_10,mt_swma_50)
cu_swma_10_100=ta.crossunder(mt_swma_10,mt_swma_100)
cu_swma_10_200=ta.crossunder(mt_swma_10,mt_swma_200)
cu_swma_10_300=ta.crossunder(mt_swma_10,mt_swma_300)
cu_swma_50_100=ta.crossunder(mt_swma_50,mt_swma_100)
cu_swma_50_200=ta.crossunder(mt_swma_50,mt_swma_200)
cu_swma_50_300=ta.crossunder(mt_swma_50,mt_swma_300)
cu_swma_100_200=ta.crossunder(mt_swma_100,mt_swma_200)
cu_swma_100_300=ta.crossunder(mt_swma_100,mt_swma_300)
cu_swma_200_300=ta.crossunder(mt_swma_200,mt_swma_300)
[mt_middle_mt_swma,mt_upper_mt_swma,mt_lower_mt_swma]=ta.bb(mt_swma_300,5,4)
mt_gap_swma_10=mt_swma_10-mt_middle_mt_swma
mt_gap_swma_50=mt_swma_50-mt_middle_mt_swma
mt_gap_swma_100=mt_swma_100-mt_middle_mt_swma
mt_gap_swma_200=mt_swma_200-mt_middle_mt_swma
mt_stdev_gap_swma_10=ta.stdev(mt_gap_swma_10,look_back_period)
mt_stdev_gap_swma_50=ta.stdev(mt_gap_swma_50,look_back_period)
mt_stdev_gap_swma_100=ta.stdev(mt_gap_swma_100,look_back_period)
mt_stdev_gap_swma_200=ta.stdev(mt_gap_swma_200,look_back_period)
mt_corelation_gap_prc_swma_10=ta.correlation(mt_gap_swma_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_swma_50=ta.correlation(mt_gap_swma_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_swma_100=ta.correlation(mt_gap_swma_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_swma_200=ta.correlation(mt_gap_swma_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_swma_10=ta.correlation(mt_gap_swma_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_swma_50=ta.correlation(mt_gap_swma_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_swma_100=ta.correlation(mt_gap_swma_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_swma_200=ta.correlation(mt_gap_swma_200,mt_gap_vol_200,look_back_period)
swma_gap_prc_correlation=mt_stdev_gap_swma_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_swma_10*30+mt_stdev_gap_swma_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_swma_50*6+mt_stdev_gap_swma_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_swma_100*3+mt_stdev_gap_swma_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_swma_200*1.5
swma_gap_vol_correlation=mt_stdev_gap_swma_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_swma_10*30+mt_stdev_gap_swma_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_swma_50*6+mt_stdev_gap_swma_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_swma_100*3+mt_stdev_gap_swma_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_swma_200*1.5
mt_corelation_gap_prc_vol_swma=ta.correlation(swma_gap_prc_correlation,swma_gap_vol_correlation,look_back_period)
//tsi
tsi_val=ta.tsi(source_of_principle_input,1,2)
mt_tsi_10=ta.ema(tsi_val,10)
mt_tsi_50=ta.ema(tsi_val,50)
mt_tsi_100=ta.ema(tsi_val,100)
mt_tsi_200=ta.ema(tsi_val,200)
mt_tsi_300=ta.ema(tsi_val,300)
co_tsi_10_50=ta.crossover(mt_tsi_10,mt_tsi_50)
co_tsi_10_100=ta.crossover(mt_tsi_10,mt_tsi_100)
co_tsi_10_200=ta.crossover(mt_tsi_10,mt_tsi_200)
co_tsi_10_300=ta.crossover(mt_tsi_10,mt_tsi_300)
co_tsi_50_100=ta.crossover(mt_tsi_50,mt_tsi_100)
co_tsi_50_200=ta.crossover(mt_tsi_50,mt_tsi_200)
co_tsi_50_300=ta.crossover(mt_tsi_50,mt_tsi_300)
co_tsi_100_200=ta.crossover(mt_tsi_100,mt_tsi_200)
co_tsi_100_300=ta.crossover(mt_tsi_100,mt_tsi_300)
co_tsi_200_300=ta.crossover(mt_tsi_200,mt_tsi_300)
cu_tsi_10_50=ta.crossunder(mt_tsi_10,mt_tsi_50)
cu_tsi_10_100=ta.crossunder(mt_tsi_10,mt_tsi_100)
cu_tsi_10_200=ta.crossunder(mt_tsi_10,mt_tsi_200)
cu_tsi_10_300=ta.crossunder(mt_tsi_10,mt_tsi_300)
cu_tsi_50_100=ta.crossunder(mt_tsi_50,mt_tsi_100)
cu_tsi_50_200=ta.crossunder(mt_tsi_50,mt_tsi_200)
cu_tsi_50_300=ta.crossunder(mt_tsi_50,mt_tsi_300)
cu_tsi_100_200=ta.crossunder(mt_tsi_100,mt_tsi_200)
cu_tsi_100_300=ta.crossunder(mt_tsi_100,mt_tsi_300)
cu_tsi_200_300=ta.crossunder(mt_tsi_200,mt_tsi_300)
[mt_middle_mt_tsi,mt_upper_mt_tsi,mt_lower_mt_tsi]=ta.bb(mt_tsi_300,5,4)
mt_gap_tsi_10=mt_tsi_10-mt_middle_mt_tsi
mt_gap_tsi_50=mt_tsi_50-mt_middle_mt_tsi
mt_gap_tsi_100=mt_tsi_100-mt_middle_mt_tsi
mt_gap_tsi_200=mt_tsi_200-mt_middle_mt_tsi
mt_stdev_gap_tsi_10=ta.stdev(mt_gap_tsi_10,look_back_period)
mt_stdev_gap_tsi_50=ta.stdev(mt_gap_tsi_50,look_back_period)
mt_stdev_gap_tsi_100=ta.stdev(mt_gap_tsi_100,look_back_period)
mt_stdev_gap_tsi_200=ta.stdev(mt_gap_tsi_200,look_back_period)
mt_corelation_gap_prc_tsi_10=ta.correlation(mt_gap_tsi_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_tsi_50=ta.correlation(mt_gap_tsi_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_tsi_100=ta.correlation(mt_gap_tsi_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_tsi_200=ta.correlation(mt_gap_tsi_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_tsi_10=ta.correlation(mt_gap_tsi_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_tsi_50=ta.correlation(mt_gap_tsi_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_tsi_100=ta.correlation(mt_gap_tsi_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_tsi_200=ta.correlation(mt_gap_tsi_200,mt_gap_vol_200,look_back_period)
tsi_gap_prc_correlation=mt_stdev_gap_tsi_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_tsi_10*30+mt_stdev_gap_tsi_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_tsi_50*6+mt_stdev_gap_tsi_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_tsi_100*3+mt_stdev_gap_tsi_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_tsi_200*1.5
tsi_gap_vol_correlation=mt_stdev_gap_tsi_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_tsi_10*30+mt_stdev_gap_tsi_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_tsi_50*6+mt_stdev_gap_tsi_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_tsi_100*3+mt_stdev_gap_tsi_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_tsi_200*1.5
mt_corelation_gap_prc_vol_tsi=ta.correlation(tsi_gap_prc_correlation,tsi_gap_vol_correlation,look_back_period)
//wpr
wpr_val=ta.wpr(1)
mt_wpr_10=ta.ema(wpr_val,10)
mt_wpr_50=ta.ema(wpr_val,50)
mt_wpr_100=ta.ema(wpr_val,100)
mt_wpr_200=ta.ema(wpr_val,200)
mt_wpr_300=ta.ema(wpr_val,300)
co_wpr_10_50=ta.crossover(mt_wpr_10,mt_wpr_50)
co_wpr_10_100=ta.crossover(mt_wpr_10,mt_wpr_100)
co_wpr_10_200=ta.crossover(mt_wpr_10,mt_wpr_200)
co_wpr_10_300=ta.crossover(mt_wpr_10,mt_wpr_300)
co_wpr_50_100=ta.crossover(mt_wpr_50,mt_wpr_100)
co_wpr_50_200=ta.crossover(mt_wpr_50,mt_wpr_200)
co_wpr_50_300=ta.crossover(mt_wpr_50,mt_wpr_300)
co_wpr_100_200=ta.crossover(mt_wpr_100,mt_wpr_200)
co_wpr_100_300=ta.crossover(mt_wpr_100,mt_wpr_300)
co_wpr_200_300=ta.crossover(mt_wpr_200,mt_wpr_300)
cu_wpr_10_50=ta.crossunder(mt_wpr_10,mt_wpr_50)
cu_wpr_10_100=ta.crossunder(mt_wpr_10,mt_wpr_100)
cu_wpr_10_200=ta.crossunder(mt_wpr_10,mt_wpr_200)
cu_wpr_10_300=ta.crossunder(mt_wpr_10,mt_wpr_300)
cu_wpr_50_100=ta.crossunder(mt_wpr_50,mt_wpr_100)
cu_wpr_50_200=ta.crossunder(mt_wpr_50,mt_wpr_200)
cu_wpr_50_300=ta.crossunder(mt_wpr_50,mt_wpr_300)
cu_wpr_100_200=ta.crossunder(mt_wpr_100,mt_wpr_200)
cu_wpr_100_300=ta.crossunder(mt_wpr_100,mt_wpr_300)
cu_wpr_200_300=ta.crossunder(mt_wpr_200,mt_wpr_300)
[mt_middle_mt_wpr,mt_upper_mt_wpr,mt_lower_mt_wpr]=ta.bb(mt_wpr_300,5,4)
mt_gap_wpr_10=mt_wpr_10-mt_middle_mt_wpr
mt_gap_wpr_50=mt_wpr_50-mt_middle_mt_wpr
mt_gap_wpr_100=mt_wpr_100-mt_middle_mt_wpr
mt_gap_wpr_200=mt_wpr_200-mt_middle_mt_wpr
mt_stdev_gap_wpr_10=ta.stdev(mt_gap_wpr_10,look_back_period)
mt_stdev_gap_wpr_50=ta.stdev(mt_gap_wpr_50,look_back_period)
mt_stdev_gap_wpr_100=ta.stdev(mt_gap_wpr_100,look_back_period)
mt_stdev_gap_wpr_200=ta.stdev(mt_gap_wpr_200,look_back_period)
mt_corelation_gap_prc_wpr_10=ta.correlation(mt_gap_wpr_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_wpr_50=ta.correlation(mt_gap_wpr_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_wpr_100=ta.correlation(mt_gap_wpr_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_wpr_200=ta.correlation(mt_gap_wpr_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_wpr_10=ta.correlation(mt_gap_wpr_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_wpr_50=ta.correlation(mt_gap_wpr_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_wpr_100=ta.correlation(mt_gap_wpr_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_wpr_200=ta.correlation(mt_gap_wpr_200,mt_gap_vol_200,look_back_period)
wpr_gap_prc_correlation=mt_stdev_gap_wpr_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_wpr_10*30+mt_stdev_gap_wpr_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_wpr_50*6+mt_stdev_gap_wpr_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_wpr_100*3+mt_stdev_gap_wpr_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_wpr_200*1.5
wpr_gap_vol_correlation=mt_stdev_gap_wpr_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_wpr_10*30+mt_stdev_gap_wpr_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_wpr_50*6+mt_stdev_gap_wpr_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_wpr_100*3+mt_stdev_gap_wpr_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_wpr_200*1.5
mt_corelation_gap_prc_vol_wpr=ta.correlation(wpr_gap_prc_correlation,wpr_gap_vol_correlation,look_back_period)
//accdist
acc_val=ta.accdist
mt_acc_10=ta.ema(acc_val,10)
mt_acc_50=ta.ema(acc_val,50)
mt_acc_100=ta.ema(acc_val,100)
mt_acc_200=ta.ema(acc_val,200)
mt_acc_300=ta.ema(acc_val,300)
co_acc_10_50=ta.crossover(mt_acc_10,mt_acc_50)
co_acc_10_100=ta.crossover(mt_acc_10,mt_acc_100)
co_acc_10_200=ta.crossover(mt_acc_10,mt_acc_200)
co_acc_10_300=ta.crossover(mt_acc_10,mt_acc_300)
co_acc_50_100=ta.crossover(mt_acc_50,mt_acc_100)
co_acc_50_200=ta.crossover(mt_acc_50,mt_acc_200)
co_acc_50_300=ta.crossover(mt_acc_50,mt_acc_300)
co_acc_100_200=ta.crossover(mt_acc_100,mt_acc_200)
co_acc_100_300=ta.crossover(mt_acc_100,mt_acc_300)
co_acc_200_300=ta.crossover(mt_acc_200,mt_acc_300)
cu_acc_10_50=ta.crossunder(mt_acc_10,mt_acc_50)
cu_acc_10_100=ta.crossunder(mt_acc_10,mt_acc_100)
cu_acc_10_200=ta.crossunder(mt_acc_10,mt_acc_200)
cu_acc_10_300=ta.crossunder(mt_acc_10,mt_acc_300)
cu_acc_50_100=ta.crossunder(mt_acc_50,mt_acc_100)
cu_acc_50_200=ta.crossunder(mt_acc_50,mt_acc_200)
cu_acc_50_300=ta.crossunder(mt_acc_50,mt_acc_300)
cu_acc_100_200=ta.crossunder(mt_acc_100,mt_acc_200)
cu_acc_100_300=ta.crossunder(mt_acc_100,mt_acc_300)
cu_acc_200_300=ta.crossunder(mt_acc_200,mt_acc_300)
[mt_middle_mt_acc,mt_upper_mt_acc,mt_lower_mt_acc]=ta.bb(mt_acc_300,5,4)
mt_gap_acc_10=mt_acc_10-mt_middle_mt_acc
mt_gap_acc_50=mt_acc_50-mt_middle_mt_acc
mt_gap_acc_100=mt_acc_100-mt_middle_mt_acc
mt_gap_acc_200=mt_acc_200-mt_middle_mt_acc
mt_stdev_gap_acc_10=ta.stdev(mt_gap_acc_10,look_back_period)
mt_stdev_gap_acc_50=ta.stdev(mt_gap_acc_50,look_back_period)
mt_stdev_gap_acc_100=ta.stdev(mt_gap_acc_100,look_back_period)
mt_stdev_gap_acc_200=ta.stdev(mt_gap_acc_200,look_back_period)
mt_corelation_gap_prc_acc_10=ta.correlation(mt_gap_acc_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_acc_50=ta.correlation(mt_gap_acc_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_acc_100=ta.correlation(mt_gap_acc_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_acc_200=ta.correlation(mt_gap_acc_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_acc_10=ta.correlation(mt_gap_acc_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_acc_50=ta.correlation(mt_gap_acc_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_acc_100=ta.correlation(mt_gap_acc_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_acc_200=ta.correlation(mt_gap_acc_200,mt_gap_vol_200,look_back_period)
acc_gap_prc_correlation=mt_stdev_gap_acc_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_acc_10*30+mt_stdev_gap_acc_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_acc_50*6+mt_stdev_gap_acc_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_acc_100*3+mt_stdev_gap_acc_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_acc_200*1.5
acc_gap_vol_correlation=mt_stdev_gap_acc_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_acc_10*30+mt_stdev_gap_acc_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_acc_50*6+mt_stdev_gap_acc_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_acc_100*3+mt_stdev_gap_acc_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_acc_200*1.5
mt_corelation_gap_prc_vol_acc=ta.correlation(acc_gap_prc_correlation,acc_gap_vol_correlation,look_back_period)
//iii
iii_val=ta.iii
mt_iii_10=ta.ema(iii_val,10)
mt_iii_50=ta.ema(iii_val,50)
mt_iii_100=ta.ema(iii_val,100)
mt_iii_200=ta.ema(iii_val,200)
mt_iii_300=ta.ema(iii_val,300)
co_iii_10_50=ta.crossover(mt_iii_10,mt_iii_50)
co_iii_10_100=ta.crossover(mt_iii_10,mt_iii_100)
co_iii_10_200=ta.crossover(mt_iii_10,mt_iii_200)
co_iii_10_300=ta.crossover(mt_iii_10,mt_iii_300)
co_iii_50_100=ta.crossover(mt_iii_50,mt_iii_100)
co_iii_50_200=ta.crossover(mt_iii_50,mt_iii_200)
co_iii_50_300=ta.crossover(mt_iii_50,mt_iii_300)
co_iii_100_200=ta.crossover(mt_iii_100,mt_iii_200)
co_iii_100_300=ta.crossover(mt_iii_100,mt_iii_300)
co_iii_200_300=ta.crossover(mt_iii_200,mt_iii_300)
cu_iii_10_50=ta.crossunder(mt_iii_10,mt_iii_50)
cu_iii_10_100=ta.crossunder(mt_iii_10,mt_iii_100)
cu_iii_10_200=ta.crossunder(mt_iii_10,mt_iii_200)
cu_iii_10_300=ta.crossunder(mt_iii_10,mt_iii_300)
cu_iii_50_100=ta.crossunder(mt_iii_50,mt_iii_100)
cu_iii_50_200=ta.crossunder(mt_iii_50,mt_iii_200)
cu_iii_50_300=ta.crossunder(mt_iii_50,mt_iii_300)
cu_iii_100_200=ta.crossunder(mt_iii_100,mt_iii_200)
cu_iii_100_300=ta.crossunder(mt_iii_100,mt_iii_300)
cu_iii_200_300=ta.crossunder(mt_iii_200,mt_iii_300)
[mt_middle_mt_iii,mt_upper_mt_iii,mt_lower_mt_iii]=ta.bb(mt_iii_300,5,4)
mt_gap_iii_10=mt_iii_10-mt_middle_mt_iii
mt_gap_iii_50=mt_iii_50-mt_middle_mt_iii
mt_gap_iii_100=mt_iii_100-mt_middle_mt_iii
mt_gap_iii_200=mt_iii_200-mt_middle_mt_iii
mt_stdev_gap_iii_10=ta.stdev(mt_gap_iii_10,look_back_period)
mt_stdev_gap_iii_50=ta.stdev(mt_gap_iii_50,look_back_period)
mt_stdev_gap_iii_100=ta.stdev(mt_gap_iii_100,look_back_period)
mt_stdev_gap_iii_200=ta.stdev(mt_gap_iii_200,look_back_period)
mt_corelation_gap_prc_iii_10=ta.correlation(mt_gap_iii_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_iii_50=ta.correlation(mt_gap_iii_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_iii_100=ta.correlation(mt_gap_iii_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_iii_200=ta.correlation(mt_gap_iii_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_iii_10=ta.correlation(mt_gap_iii_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_iii_50=ta.correlation(mt_gap_iii_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_iii_100=ta.correlation(mt_gap_iii_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_iii_200=ta.correlation(mt_gap_iii_200,mt_gap_vol_200,look_back_period)
iii_gap_prc_correlation=mt_stdev_gap_iii_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_iii_10*30+mt_stdev_gap_iii_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_iii_50*6+mt_stdev_gap_iii_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_iii_100*3+mt_stdev_gap_iii_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_iii_200*1.5
iii_gap_vol_correlation=mt_stdev_gap_iii_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_iii_10*30+mt_stdev_gap_iii_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_iii_50*6+mt_stdev_gap_iii_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_iii_100*3+mt_stdev_gap_iii_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_iii_200*1.5
mt_corelation_gap_prc_vol_iii=ta.correlation(iii_gap_prc_correlation,iii_gap_vol_correlation,look_back_period)
//nvi
nvi_val=ta.nvi
mt_nvi_10=ta.ema(nvi_val,10)
mt_nvi_50=ta.ema(nvi_val,50)
mt_nvi_100=ta.ema(nvi_val,100)
mt_nvi_200=ta.ema(nvi_val,200)
mt_nvi_300=ta.ema(nvi_val,300)
co_nvi_10_50=ta.crossover(mt_nvi_10,mt_nvi_50)
co_nvi_10_100=ta.crossover(mt_nvi_10,mt_nvi_100)
co_nvi_10_200=ta.crossover(mt_nvi_10,mt_nvi_200)
co_nvi_10_300=ta.crossover(mt_nvi_10,mt_nvi_300)
co_nvi_50_100=ta.crossover(mt_nvi_50,mt_nvi_100)
co_nvi_50_200=ta.crossover(mt_nvi_50,mt_nvi_200)
co_nvi_50_300=ta.crossover(mt_nvi_50,mt_nvi_300)
co_nvi_100_200=ta.crossover(mt_nvi_100,mt_nvi_200)
co_nvi_100_300=ta.crossover(mt_nvi_100,mt_nvi_300)
co_nvi_200_300=ta.crossover(mt_nvi_200,mt_nvi_300)
cu_nvi_10_50=ta.crossunder(mt_nvi_10,mt_nvi_50)
cu_nvi_10_100=ta.crossunder(mt_nvi_10,mt_nvi_100)
cu_nvi_10_200=ta.crossunder(mt_nvi_10,mt_nvi_200)
cu_nvi_10_300=ta.crossunder(mt_nvi_10,mt_nvi_300)
cu_nvi_50_100=ta.crossunder(mt_nvi_50,mt_nvi_100)
cu_nvi_50_200=ta.crossunder(mt_nvi_50,mt_nvi_200)
cu_nvi_50_300=ta.crossunder(mt_nvi_50,mt_nvi_300)
cu_nvi_100_200=ta.crossunder(mt_nvi_100,mt_nvi_200)
cu_nvi_100_300=ta.crossunder(mt_nvi_100,mt_nvi_300)
cu_nvi_200_300=ta.crossunder(mt_nvi_200,mt_nvi_300)
[mt_middle_mt_nvi,mt_upper_mt_nvi,mt_lower_mt_nvi]=ta.bb(mt_nvi_300,5,4)
mt_gap_nvi_10=mt_nvi_10-mt_middle_mt_nvi
mt_gap_nvi_50=mt_nvi_50-mt_middle_mt_nvi
mt_gap_nvi_100=mt_nvi_100-mt_middle_mt_nvi
mt_gap_nvi_200=mt_nvi_200-mt_middle_mt_nvi
mt_stdev_gap_nvi_10=ta.stdev(mt_gap_nvi_10,look_back_period)
mt_stdev_gap_nvi_50=ta.stdev(mt_gap_nvi_50,look_back_period)
mt_stdev_gap_nvi_100=ta.stdev(mt_gap_nvi_100,look_back_period)
mt_stdev_gap_nvi_200=ta.stdev(mt_gap_nvi_200,look_back_period)
mt_corelation_gap_prc_nvi_10=ta.correlation(mt_gap_nvi_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_nvi_50=ta.correlation(mt_gap_nvi_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_nvi_100=ta.correlation(mt_gap_nvi_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_nvi_200=ta.correlation(mt_gap_nvi_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_nvi_10=ta.correlation(mt_gap_nvi_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_nvi_50=ta.correlation(mt_gap_nvi_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_nvi_100=ta.correlation(mt_gap_nvi_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_nvi_200=ta.correlation(mt_gap_nvi_200,mt_gap_vol_200,look_back_period)
nvi_gap_prc_correlation=mt_stdev_gap_nvi_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_nvi_10*30+mt_stdev_gap_nvi_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_nvi_50*6+mt_stdev_gap_nvi_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_nvi_100*3+mt_stdev_gap_nvi_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_nvi_200*1.5
nvi_gap_vol_correlation=mt_stdev_gap_nvi_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_nvi_10*30+mt_stdev_gap_nvi_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_nvi_50*6+mt_stdev_gap_nvi_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_nvi_100*3+mt_stdev_gap_nvi_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_nvi_200*1.5
mt_corelation_gap_prc_vol_nvi=ta.correlation(nvi_gap_prc_correlation,nvi_gap_vol_correlation,look_back_period)
//pvi
pvi_val=ta.pvi
mt_pvi_10=ta.ema(pvi_val,10)
mt_pvi_50=ta.ema(pvi_val,50)
mt_pvi_100=ta.ema(pvi_val,100)
mt_pvi_200=ta.ema(pvi_val,200)
mt_pvi_300=ta.ema(pvi_val,300)
co_pvi_10_50=ta.crossover(mt_pvi_10,mt_pvi_50)
co_pvi_10_100=ta.crossover(mt_pvi_10,mt_pvi_100)
co_pvi_10_200=ta.crossover(mt_pvi_10,mt_pvi_200)
co_pvi_10_300=ta.crossover(mt_pvi_10,mt_pvi_300)
co_pvi_50_100=ta.crossover(mt_pvi_50,mt_pvi_100)
co_pvi_50_200=ta.crossover(mt_pvi_50,mt_pvi_200)
co_pvi_50_300=ta.crossover(mt_pvi_50,mt_pvi_300)
co_pvi_100_200=ta.crossover(mt_pvi_100,mt_pvi_200)
co_pvi_100_300=ta.crossover(mt_pvi_100,mt_pvi_300)
co_pvi_200_300=ta.crossover(mt_pvi_200,mt_pvi_300)
cu_pvi_10_50=ta.crossunder(mt_pvi_10,mt_pvi_50)
cu_pvi_10_100=ta.crossunder(mt_pvi_10,mt_pvi_100)
cu_pvi_10_200=ta.crossunder(mt_pvi_10,mt_pvi_200)
cu_pvi_10_300=ta.crossunder(mt_pvi_10,mt_pvi_300)
cu_pvi_50_100=ta.crossunder(mt_pvi_50,mt_pvi_100)
cu_pvi_50_200=ta.crossunder(mt_pvi_50,mt_pvi_200)
cu_pvi_50_300=ta.crossunder(mt_pvi_50,mt_pvi_300)
cu_pvi_100_200=ta.crossunder(mt_pvi_100,mt_pvi_200)
cu_pvi_100_300=ta.crossunder(mt_pvi_100,mt_pvi_300)
cu_pvi_200_300=ta.crossunder(mt_pvi_200,mt_pvi_300)
[mt_middle_mt_pvi,mt_upper_mt_pvi,mt_lower_mt_pvi]=ta.bb(mt_pvi_300,5,4)
mt_gap_pvi_10=mt_pvi_10-mt_middle_mt_pvi
mt_gap_pvi_50=mt_pvi_50-mt_middle_mt_pvi
mt_gap_pvi_100=mt_pvi_100-mt_middle_mt_pvi
mt_gap_pvi_200=mt_pvi_200-mt_middle_mt_pvi
mt_stdev_gap_pvi_10=ta.stdev(mt_gap_pvi_10,look_back_period)
mt_stdev_gap_pvi_50=ta.stdev(mt_gap_pvi_50,look_back_period)
mt_stdev_gap_pvi_100=ta.stdev(mt_gap_pvi_100,look_back_period)
mt_stdev_gap_pvi_200=ta.stdev(mt_gap_pvi_200,look_back_period)
mt_corelation_gap_prc_pvi_10=ta.correlation(mt_gap_pvi_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_pvi_50=ta.correlation(mt_gap_pvi_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_pvi_100=ta.correlation(mt_gap_pvi_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_pvi_200=ta.correlation(mt_gap_pvi_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_pvi_10=ta.correlation(mt_gap_pvi_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_pvi_50=ta.correlation(mt_gap_pvi_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_pvi_100=ta.correlation(mt_gap_pvi_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_pvi_200=ta.correlation(mt_gap_pvi_200,mt_gap_vol_200,look_back_period)
pvi_gap_prc_correlation=mt_stdev_gap_pvi_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_pvi_10*30+mt_stdev_gap_pvi_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_pvi_50*6+mt_stdev_gap_pvi_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_pvi_100*3+mt_stdev_gap_pvi_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_pvi_200*1.5
pvi_gap_vol_correlation=mt_stdev_gap_pvi_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_pvi_10*30+mt_stdev_gap_pvi_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_pvi_50*6+mt_stdev_gap_pvi_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_pvi_100*3+mt_stdev_gap_pvi_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_pvi_200*1.5
mt_corelation_gap_prc_vol_pvi=ta.correlation(pvi_gap_prc_correlation,pvi_gap_vol_correlation,look_back_period)
//obv
obv_val=ta.obv
mt_obv_10=ta.ema(obv_val,10)
mt_obv_50=ta.ema(obv_val,50)
mt_obv_100=ta.ema(obv_val,100)
mt_obv_200=ta.ema(obv_val,200)
mt_obv_300=ta.ema(obv_val,300)
co_obv_10_50=ta.crossover(mt_obv_10,mt_obv_50)
co_obv_10_100=ta.crossover(mt_obv_10,mt_obv_100)
co_obv_10_200=ta.crossover(mt_obv_10,mt_obv_200)
co_obv_10_300=ta.crossover(mt_obv_10,mt_obv_300)
co_obv_50_100=ta.crossover(mt_obv_50,mt_obv_100)
co_obv_50_200=ta.crossover(mt_obv_50,mt_obv_200)
co_obv_50_300=ta.crossover(mt_obv_50,mt_obv_300)
co_obv_100_200=ta.crossover(mt_obv_100,mt_obv_200)
co_obv_100_300=ta.crossover(mt_obv_100,mt_obv_300)
co_obv_200_300=ta.crossover(mt_obv_200,mt_obv_300)
cu_obv_10_50=ta.crossunder(mt_obv_10,mt_obv_50)
cu_obv_10_100=ta.crossunder(mt_obv_10,mt_obv_100)
cu_obv_10_200=ta.crossunder(mt_obv_10,mt_obv_200)
cu_obv_10_300=ta.crossunder(mt_obv_10,mt_obv_300)
cu_obv_50_100=ta.crossunder(mt_obv_50,mt_obv_100)
cu_obv_50_200=ta.crossunder(mt_obv_50,mt_obv_200)
cu_obv_50_300=ta.crossunder(mt_obv_50,mt_obv_300)
cu_obv_100_200=ta.crossunder(mt_obv_100,mt_obv_200)
cu_obv_100_300=ta.crossunder(mt_obv_100,mt_obv_300)
cu_obv_200_300=ta.crossunder(mt_obv_200,mt_obv_300)
[mt_middle_mt_obv,mt_upper_mt_obv,mt_lower_mt_obv]=ta.bb(mt_obv_300,5,4)
mt_gap_obv_10=mt_obv_10-mt_middle_mt_obv
mt_gap_obv_50=mt_obv_50-mt_middle_mt_obv
mt_gap_obv_100=mt_obv_100-mt_middle_mt_obv
mt_gap_obv_200=mt_obv_200-mt_middle_mt_obv
mt_stdev_gap_obv_10=ta.stdev(mt_gap_obv_10,look_back_period)
mt_stdev_gap_obv_50=ta.stdev(mt_gap_obv_50,look_back_period)
mt_stdev_gap_obv_100=ta.stdev(mt_gap_obv_100,look_back_period)
mt_stdev_gap_obv_200=ta.stdev(mt_gap_obv_200,look_back_period)
mt_corelation_gap_prc_obv_10=ta.correlation(mt_gap_obv_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_obv_50=ta.correlation(mt_gap_obv_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_obv_100=ta.correlation(mt_gap_obv_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_obv_200=ta.correlation(mt_gap_obv_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_obv_10=ta.correlation(mt_gap_obv_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_obv_50=ta.correlation(mt_gap_obv_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_obv_100=ta.correlation(mt_gap_obv_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_obv_200=ta.correlation(mt_gap_obv_200,mt_gap_vol_200,look_back_period)
obv_gap_prc_correlation=mt_stdev_gap_obv_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_obv_10*30+mt_stdev_gap_obv_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_obv_50*6+mt_stdev_gap_obv_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_obv_100*3+mt_stdev_gap_obv_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_obv_200*1.5
obv_gap_vol_correlation=mt_stdev_gap_obv_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_obv_10*30+mt_stdev_gap_obv_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_obv_50*6+mt_stdev_gap_obv_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_obv_100*3+mt_stdev_gap_obv_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_obv_200*1.5
mt_corelation_gap_prc_vol_obv=ta.correlation(obv_gap_prc_correlation,obv_gap_vol_correlation,look_back_period)
//pvt
pvt_val=ta.pvt
mt_pvt_10=ta.ema(pvt_val,10)
mt_pvt_50=ta.ema(pvt_val,50)
mt_pvt_100=ta.ema(pvt_val,100)
mt_pvt_200=ta.ema(pvt_val,200)
mt_pvt_300=ta.ema(pvt_val,300)
co_pvt_10_50=ta.crossover(mt_pvt_10,mt_pvt_50)
co_pvt_10_100=ta.crossover(mt_pvt_10,mt_pvt_100)
co_pvt_10_200=ta.crossover(mt_pvt_10,mt_pvt_200)
co_pvt_10_300=ta.crossover(mt_pvt_10,mt_pvt_300)
co_pvt_50_100=ta.crossover(mt_pvt_50,mt_pvt_100)
co_pvt_50_200=ta.crossover(mt_pvt_50,mt_pvt_200)
co_pvt_50_300=ta.crossover(mt_pvt_50,mt_pvt_300)
co_pvt_100_200=ta.crossover(mt_pvt_100,mt_pvt_200)
co_pvt_100_300=ta.crossover(mt_pvt_100,mt_pvt_300)
co_pvt_200_300=ta.crossover(mt_pvt_200,mt_pvt_300)
cu_pvt_10_50=ta.crossunder(mt_pvt_10,mt_pvt_50)
cu_pvt_10_100=ta.crossunder(mt_pvt_10,mt_pvt_100)
cu_pvt_10_200=ta.crossunder(mt_pvt_10,mt_pvt_200)
cu_pvt_10_300=ta.crossunder(mt_pvt_10,mt_pvt_300)
cu_pvt_50_100=ta.crossunder(mt_pvt_50,mt_pvt_100)
cu_pvt_50_200=ta.crossunder(mt_pvt_50,mt_pvt_200)
cu_pvt_50_300=ta.crossunder(mt_pvt_50,mt_pvt_300)
cu_pvt_100_200=ta.crossunder(mt_pvt_100,mt_pvt_200)
cu_pvt_100_300=ta.crossunder(mt_pvt_100,mt_pvt_300)
cu_pvt_200_300=ta.crossunder(mt_pvt_200,mt_pvt_300)
[mt_middle_mt_pvt,mt_upper_mt_pvt,mt_lower_mt_pvt]=ta.bb(mt_pvt_300,5,4)
mt_gap_pvt_10=mt_pvt_10-mt_middle_mt_pvt
mt_gap_pvt_50=mt_pvt_50-mt_middle_mt_pvt
mt_gap_pvt_100=mt_pvt_100-mt_middle_mt_pvt
mt_gap_pvt_200=mt_pvt_200-mt_middle_mt_pvt
mt_stdev_gap_pvt_10=ta.stdev(mt_gap_pvt_10,look_back_period)
mt_stdev_gap_pvt_50=ta.stdev(mt_gap_pvt_50,look_back_period)
mt_stdev_gap_pvt_100=ta.stdev(mt_gap_pvt_100,look_back_period)
mt_stdev_gap_pvt_200=ta.stdev(mt_gap_pvt_200,look_back_period)
mt_corelation_gap_prc_pvt_10=ta.correlation(mt_gap_pvt_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_pvt_50=ta.correlation(mt_gap_pvt_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_pvt_100=ta.correlation(mt_gap_pvt_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_pvt_200=ta.correlation(mt_gap_pvt_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_pvt_10=ta.correlation(mt_gap_pvt_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_pvt_50=ta.correlation(mt_gap_pvt_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_pvt_100=ta.correlation(mt_gap_pvt_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_pvt_200=ta.correlation(mt_gap_pvt_200,mt_gap_vol_200,look_back_period)
pvt_gap_prc_correlation=mt_stdev_gap_pvt_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_pvt_10*30+mt_stdev_gap_pvt_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_pvt_50*6+mt_stdev_gap_pvt_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_pvt_100*3+mt_stdev_gap_pvt_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_pvt_200*1.5
pvt_gap_vol_correlation=mt_stdev_gap_pvt_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_pvt_10*30+mt_stdev_gap_pvt_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_pvt_50*6+mt_stdev_gap_pvt_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_pvt_100*3+mt_stdev_gap_pvt_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_pvt_200*1.5
mt_corelation_gap_prc_vol_pvt=ta.correlation(pvt_gap_prc_correlation,pvt_gap_vol_correlation,look_back_period)
//tr
trr_val=ta.tr
mt_trr_10=ta.ema(trr_val,10)
mt_trr_50=ta.ema(trr_val,50)
mt_trr_100=ta.ema(trr_val,100)
mt_trr_200=ta.ema(trr_val,200)
mt_trr_300=ta.ema(trr_val,300)
co_trr_10_50=ta.crossover(mt_trr_10,mt_trr_50)
co_trr_10_100=ta.crossover(mt_trr_10,mt_trr_100)
co_trr_10_200=ta.crossover(mt_trr_10,mt_trr_200)
co_trr_10_300=ta.crossover(mt_trr_10,mt_trr_300)
co_trr_50_100=ta.crossover(mt_trr_50,mt_trr_100)
co_trr_50_200=ta.crossover(mt_trr_50,mt_trr_200)
co_trr_50_300=ta.crossover(mt_trr_50,mt_trr_300)
co_trr_100_200=ta.crossover(mt_trr_100,mt_trr_200)
co_trr_100_300=ta.crossover(mt_trr_100,mt_trr_300)
co_trr_200_300=ta.crossover(mt_trr_200,mt_trr_300)
cu_trr_10_50=ta.crossunder(mt_trr_10,mt_trr_50)
cu_trr_10_100=ta.crossunder(mt_trr_10,mt_trr_100)
cu_trr_10_200=ta.crossunder(mt_trr_10,mt_trr_200)
cu_trr_10_300=ta.crossunder(mt_trr_10,mt_trr_300)
cu_trr_50_100=ta.crossunder(mt_trr_50,mt_trr_100)
cu_trr_50_200=ta.crossunder(mt_trr_50,mt_trr_200)
cu_trr_50_300=ta.crossunder(mt_trr_50,mt_trr_300)
cu_trr_100_200=ta.crossunder(mt_trr_100,mt_trr_200)
cu_trr_100_300=ta.crossunder(mt_trr_100,mt_trr_300)
cu_trr_200_300=ta.crossunder(mt_trr_200,mt_trr_300)
[mt_middle_mt_trr,mt_upper_mt_trr,mt_lower_mt_trr]=ta.bb(mt_trr_300,5,4)
mt_gap_trr_10=mt_trr_10-mt_middle_mt_trr
mt_gap_trr_50=mt_trr_50-mt_middle_mt_trr
mt_gap_trr_100=mt_trr_100-mt_middle_mt_trr
mt_gap_trr_200=mt_trr_200-mt_middle_mt_trr
mt_stdev_gap_trr_10=ta.stdev(mt_gap_trr_10,look_back_period)
mt_stdev_gap_trr_50=ta.stdev(mt_gap_trr_50,look_back_period)
mt_stdev_gap_trr_100=ta.stdev(mt_gap_trr_100,look_back_period)
mt_stdev_gap_trr_200=ta.stdev(mt_gap_trr_200,look_back_period)
mt_corelation_gap_prc_trr_10=ta.correlation(mt_gap_trr_10,mt_gap_prc_10,look_back_period)
mt_corelation_gap_prc_trr_50=ta.correlation(mt_gap_trr_50,mt_gap_prc_50,look_back_period)
mt_corelation_gap_prc_trr_100=ta.correlation(mt_gap_trr_100,mt_gap_prc_100,look_back_period)
mt_corelation_gap_prc_trr_200=ta.correlation(mt_gap_trr_200,mt_gap_prc_200,look_back_period)
mt_corelation_gap_vol_trr_10=ta.correlation(mt_gap_trr_10,mt_gap_vol_10,look_back_period)
mt_corelation_gap_vol_trr_50=ta.correlation(mt_gap_trr_50,mt_gap_vol_50,look_back_period)
mt_corelation_gap_vol_trr_100=ta.correlation(mt_gap_trr_100,mt_gap_vol_100,look_back_period)
mt_corelation_gap_vol_trr_200=ta.correlation(mt_gap_trr_200,mt_gap_vol_200,look_back_period)
trr_gap_prc_correlation=mt_stdev_gap_trr_10*mt_stdev_gap_prc_10*mt_corelation_gap_prc_trr_10*30+mt_stdev_gap_trr_50*mt_stdev_gap_prc_50*mt_corelation_gap_prc_trr_50*6+mt_stdev_gap_trr_100*mt_stdev_gap_prc_100*mt_corelation_gap_prc_trr_100*3+mt_stdev_gap_trr_200*mt_stdev_gap_prc_200*mt_corelation_gap_prc_trr_200*1.5
trr_gap_vol_correlation=mt_stdev_gap_trr_10*mt_stdev_gap_vol_10*mt_corelation_gap_vol_trr_10*30+mt_stdev_gap_trr_50*mt_stdev_gap_vol_50*mt_corelation_gap_vol_trr_50*6+mt_stdev_gap_trr_100*mt_stdev_gap_vol_100*mt_corelation_gap_vol_trr_100*3+mt_stdev_gap_trr_200*mt_stdev_gap_vol_200*mt_corelation_gap_vol_trr_200*1.5
mt_corelation_gap_prc_vol_trr=ta.correlation(trr_gap_prc_correlation,trr_gap_vol_correlation,look_back_period)
//positivesignal
ifco_rsi_10_50orco_mfi_10_50orco_cmo_10_50orco_mom_10_50orco_cog_10_50orco_dmi_10_50orco_bop_10_50orco_sto_10_50orco_swma_10_50orco_tsi_10_50orco_wpr_10_50orco_acc_10_50orco_iii_10_50orco_nvi_10_50orco_pvi_10_50orco_obv_10_50orco_pvt_10_50orco_trr_10_50//orco_vwap_10_50
positive_value:=positive_value+180
elseifco_rsi_10_100orco_mfi_10_100orco_cmo_10_100orco_mom_10_100orco_cog_10_100orco_dmi_10_100orco_bop_10_100orco_sto_10_100orco_swma_10_100orco_tsi_10_100orco_wpr_10_100orco_acc_10_100orco_iii_10_100orco_nvi_10_100orco_pvi_10_100orco_obv_10_100orco_pvt_10_100orco_trr_10_100//orco_vwap_10_100
positive_value:=positive_value+90
elseifco_rsi_10_200orco_mfi_10_200orco_cmo_10_200orco_mom_10_200orco_cog_10_200orco_dmi_10_200orco_bop_10_200orco_sto_10_200orco_swma_10_200orco_tsi_10_200orco_wpr_10_200orco_acc_10_200orco_iii_10_200orco_nvi_10_200orco_pvi_10_200orco_obv_10_200orco_pvt_10_200orco_trr_10_200//orco_vwap_10_200
positive_value:=positive_value+45
elseifco_rsi_10_300orco_mfi_10_300orco_cmo_10_300orco_mom_10_300orco_cog_10_300orco_dmi_10_300orco_bop_10_300orco_sto_10_300orco_swma_10_300orco_tsi_10_300orco_wpr_10_300orco_acc_10_300orco_iii_10_300orco_nvi_10_300orco_pvi_10_300orco_obv_10_300orco_pvt_10_300orco_trr_10_300//orco_vwap_10_300
positive_value:=positive_value+30
elseifco_rsi_50_100orco_mfi_50_100orco_cmo_50_100orco_mom_50_100orco_cog_50_100orco_dmi_50_100orco_bop_50_100orco_sto_50_100orco_swma_50_100orco_tsi_50_100orco_wpr_50_100orco_acc_50_100orco_iii_50_100orco_nvi_50_100orco_pvi_50_100orco_obv_50_100orco_pvt_50_100orco_trr_50_100//orco_vwap_50_100
positive_value:=positive_value+18
elseifco_rsi_50_200orco_mfi_50_200orco_cmo_50_200orco_mom_50_200orco_cog_50_200orco_dmi_50_200orco_bop_50_200orco_sto_50_200orco_swma_50_200orco_tsi_50_200orco_wpr_50_200orco_acc_50_200orco_iii_50_200orco_nvi_50_200orco_pvi_50_200orco_obv_50_200orco_pvt_50_200orco_trr_50_200//orco_vwap_50_200
positive_value:=positive_value+9
elseifco_rsi_50_300orco_mfi_50_300orco_cmo_50_300orco_mom_50_300orco_cog_50_300orco_dmi_50_300orco_bop_50_300orco_sto_50_300orco_swma_50_300orco_tsi_50_300orco_wpr_50_300orco_acc_50_300orco_iii_50_300orco_nvi_50_300orco_pvi_50_300orco_obv_50_300orco_pvt_50_300orco_trr_50_300//orco_vwap_50_300
positive_value:=positive_value+6
elseifco_rsi_100_200orco_mfi_100_200orco_cmo_100_200orco_mom_100_200orco_cog_100_200orco_dmi_100_200orco_bop_100_200orco_sto_100_200orco_swma_100_200orco_tsi_100_200orco_wpr_100_200orco_acc_100_200orco_iii_100_200orco_nvi_100_200orco_pvi_100_200orco_obv_100_200orco_pvt_100_200orco_trr_100_200//orco_vwap_100_200
positive_value:=positive_value+4.5
elseifco_rsi_100_300orco_mfi_100_300orco_cmo_100_300orco_mom_100_300orco_cog_100_300orco_dmi_100_300orco_bop_100_300orco_sto_100_300orco_swma_100_300orco_tsi_100_300orco_wpr_100_300orco_acc_100_300orco_iii_100_300orco_nvi_100_300orco_pvi_100_300orco_obv_100_300orco_pvt_100_300orco_trr_100_300//orco_vwap_100_300
positive_value:=positive_value+3
elseifco_rsi_200_300orco_mfi_200_300orco_cmo_200_300orco_mom_200_300orco_cog_200_300orco_dmi_200_300orco_bop_200_300orco_sto_200_300orco_swma_200_300orco_tsi_200_300orco_wpr_200_300orco_acc_200_300orco_iii_200_300orco_nvi_200_300orco_pvi_200_300orco_obv_200_300orco_pvt_200_300orco_trr_200_300//orco_vwap_200_300
positive_value:=positive_value+1.5
elseifcu_rsi_10_50orcu_mfi_10_50orcu_cmo_10_50orcu_mom_10_50orcu_cog_10_50orcu_dmi_10_50orcu_bop_10_50orcu_sto_10_50orcu_swma_10_50orcu_tsi_10_50orcu_wpr_10_50orcu_acc_10_50orcu_iii_10_50orcu_nvi_10_50orcu_pvi_10_50orcu_obv_10_50orcu_pvt_10_50orcu_trr_10_50//orcu_vwap_10_50
positive_value:=positive_value-180
elseifcu_rsi_10_100orcu_mfi_10_100orcu_cmo_10_100orcu_mom_10_100orcu_cog_10_100orcu_dmi_10_100orcu_bop_10_100orcu_sto_10_100orcu_swma_10_100orcu_tsi_10_100orcu_wpr_10_100orcu_acc_10_100orcu_iii_10_100orcu_nvi_10_100orcu_pvi_10_100orcu_obv_10_100orcu_pvt_10_100orcu_trr_10_100//orcu_vwap_10_100
positive_value:=positive_value-90
elseifcu_rsi_10_200orcu_mfi_10_200orcu_cmo_10_200orcu_mom_10_200orcu_cog_10_200orcu_dmi_10_200orcu_bop_10_200orcu_sto_10_200orcu_swma_10_200orcu_tsi_10_200orcu_wpr_10_200orcu_acc_10_200orcu_iii_10_200orcu_nvi_10_200orcu_pvi_10_200orcu_obv_10_200orcu_pvt_10_200orcu_trr_10_200//orcu_vwap_10_200
positive_value:=positive_value-45
elseifcu_rsi_10_300orcu_mfi_10_300orcu_cmo_10_300orcu_mom_10_300orcu_cog_10_300orcu_dmi_10_300orcu_bop_10_300orcu_sto_10_300orcu_swma_10_300orcu_tsi_10_300orcu_wpr_10_300orcu_acc_10_300orcu_iii_10_300orcu_nvi_10_300orcu_pvi_10_300orcu_obv_10_300orcu_pvt_10_300orcu_trr_10_300//orcu_vwap_10_300
positive_value:=positive_value-30
elseifcu_rsi_50_100orcu_mfi_50_100orcu_cmo_50_100orcu_mom_50_100orcu_cog_50_100orcu_dmi_50_100orcu_bop_50_100orcu_sto_50_100orcu_swma_50_100orcu_tsi_50_100orcu_wpr_50_100orcu_acc_50_100orcu_iii_50_100orcu_nvi_50_100orcu_pvi_50_100orcu_obv_50_100orcu_pvt_50_100orcu_trr_50_100//orcu_vwap_50_100
positive_value:=positive_value-18
elseifcu_rsi_50_200orcu_mfi_50_200orcu_cmo_50_200orcu_mom_50_200orcu_cog_50_200orcu_dmi_50_200orcu_bop_50_200orcu_sto_50_200orcu_swma_50_200orcu_tsi_50_200orcu_wpr_50_200orcu_acc_50_200orcu_iii_50_200orcu_nvi_50_200orcu_pvi_50_200orcu_obv_50_200orcu_pvt_50_200orcu_trr_50_200//orcu_vwap_50_200
positive_value:=positive_value-9
elseifcu_rsi_50_300orcu_mfi_50_300orcu_cmo_50_300orcu_mom_50_300orcu_cog_50_300orcu_dmi_50_300orcu_bop_50_300orcu_sto_50_300orcu_swma_50_300orcu_tsi_50_300orcu_wpr_50_300orcu_acc_50_300orcu_iii_50_300orcu_nvi_50_300orcu_pvi_50_300orcu_obv_50_300orcu_pvt_50_300orcu_trr_50_300//orcu_vwap_50_300
positive_value:=positive_value-6
elseifcu_rsi_100_200orcu_mfi_100_200orcu_cmo_100_200orcu_mom_100_200orcu_cog_100_200orcu_dmi_100_200orcu_bop_100_200orcu_sto_100_200orcu_swma_100_200orcu_tsi_100_200orcu_wpr_100_200orcu_acc_100_200orcu_iii_100_200orcu_nvi_100_200orcu_pvi_100_200orcu_obv_100_200orcu_pvt_100_200//orcu_trr_100_200orcu_vwap_100_200
positive_value:=positive_value-4.5
elseifcu_rsi_100_300orcu_mfi_100_300orcu_cmo_100_300orcu_mom_100_300orcu_cog_100_300orcu_dmi_100_300orcu_bop_100_300orcu_sto_100_300orcu_swma_100_300orcu_tsi_100_300orcu_wpr_100_300orcu_acc_100_300orcu_iii_100_300orcu_nvi_100_300orcu_pvi_100_300orcu_obv_100_300orcu_pvt_100_300//orcu_trr_100_300orcu_vwap_100_300
positive_value:=positive_value-3
elseifcu_rsi_200_300orcu_mfi_200_300orcu_cmo_200_300orcu_mom_200_300orcu_cog_200_300orcu_dmi_200_300orcu_bop_200_300orcu_sto_200_300orcu_swma_200_300orcu_tsi_200_300orcu_wpr_200_300orcu_acc_200_300orcu_iii_200_300orcu_nvi_200_300orcu_pvi_200_300orcu_obv_200_300orcu_pvt_200_300//orcu_trr_200_300orcu_vwap_200_300
positive_value:=positive_value-1.5
final_graph=trr_gap_prc_correlation*trr_gap_vol_correlation*mt_corelation_gap_prc_vol_trr+pvt_gap_prc_correlation*pvt_gap_vol_correlation*mt_corelation_gap_prc_vol_pvt+obv_gap_prc_correlation*obv_gap_vol_correlation*mt_corelation_gap_prc_vol_obv+pvi_gap_prc_correlation*pvi_gap_vol_correlation*mt_corelation_gap_prc_vol_pvi+nvi_gap_prc_correlation*nvi_gap_vol_correlation*mt_corelation_gap_prc_vol_nvi+iii_gap_prc_correlation*iii_gap_vol_correlation*mt_corelation_gap_prc_vol_iii+acc_gap_prc_correlation*acc_gap_vol_correlation*mt_corelation_gap_prc_vol_acc+wpr_gap_prc_correlation*wpr_gap_vol_correlation*mt_corelation_gap_prc_vol_wpr+tsi_gap_prc_correlation*tsi_gap_vol_correlation*mt_corelation_gap_prc_vol_tsi+sto_gap_prc_correlation*sto_gap_vol_correlation*mt_corelation_gap_prc_vol_sto+bop_gap_prc_correlation*bop_gap_vol_correlation*mt_corelation_gap_prc_vol_bop+dmi_gap_prc_correlation*dmi_gap_vol_correlation*mt_corelation_gap_prc_vol_dmi+cog_gap_prc_correlation*cog_gap_vol_correlation*mt_corelation_gap_prc_vol_cog+mom_gap_prc_correlation*mom_gap_vol_correlation*mt_corelation_gap_prc_vol_mom+cmo_gap_prc_correlation*cmo_gap_vol_correlation*mt_corelation_gap_prc_vol_cmo+mfi_gap_prc_correlation*mfi_gap_vol_correlation*mt_corelation_gap_prc_vol_mfi+rsi_gap_prc_correlation*rsi_gap_vol_correlation*mt_corelation_gap_prc_vol_rsi+swma_gap_prc_correlation*swma_gap_vol_correlation*mt_corelation_gap_prc_vol_swma//+vwap_gap_prc_correlation*vwap_gap_vol_correlation*mt_corelation_gap_prc_vol_vwap//+wvad_gap_prc_correlation*wvad_gap_vol_correlation*mt_corelation_gap_prc_vol_wvad
positivesignal_price_corelation=(ta.stdev((positive_value-positive_value[1]),look_back_period))*mt_stdev_gap_prc_10*ta.correlation(mt_stdev_gap_prc_10,(ta.stdev((positive_value-positive_value[1]),look_back_period)),look_back_period)
positivesignal_volume_corelation=(ta.stdev((positive_value-positive_value[1]),look_back_period))*mt_stdev_gap_vol_10*ta.correlation(mt_stdev_gap_vol_10,(ta.stdev((positive_value-positive_value[1]),look_back_period)),look_back_period)
positivesignal_cumilative_corelation=ta.correlation(positivesignal_volume_corelation,positivesignal_price_corelation,look_back_period)
positivesignal_finalgraph_2=positivesignal_price_corelation*positivesignal_volume_corelation*positivesignal_cumilative_corelation
[mt_middle_fg,mt_upper_fg,mt_lower_fg]=ta.bb(final_graph,5,4)
[mt_middle_ps,mt_upper_ps,mt_lower_ps]=ta.bb(positivesignal_finalgraph_2,5,4)
stdev_finalgraph=ta.stdev((final_graph-mt_middle_fg),look_back_period)
stdev_signal=ta.stdev((positivesignal_finalgraph_2-mt_middle_ps),look_back_period)
cor_signalgraph_volume=ta.correlation(stdev_finalgraph,stdev_signal,look_back_period)
final_graph_3=stdev_finalgraph*stdev_signal*cor_signalgraph_volume
change_ema_final_graph=final_graph_3-final_graph_3[1]
ema_change_ema_final_graph_1=final_graph-final_graph[1]
ema_change_ema_final_graph_2=ema_change_ema_final_graph_1-ema_change_ema_final_graph_1[1]
ema_change_ema_final_graph_3=ema_change_ema_final_graph_2-ema_change_ema_final_graph_2[1]
ema_change_ema_final_graph_4=ema_change_ema_final_graph_3-ema_change_ema_final_graph_3[1]
ema_change_ema_final_graph_5=ema_change_ema_final_graph_4-ema_change_ema_final_graph_4[1]
buy_1=ta.cross(change_ema_final_graph,0)andta.falling(ma_9,6)
buy_2=ta.cross(ema_change_ema_final_graph_1,0)
buy_3=ta.cross(ema_change_ema_final_graph_2,0)
buy_4=ta.cross(ema_change_ema_final_graph_3,0)
buy_5=ta.cross(ema_change_ema_final_graph_4,0)
buy_6=ta.cross(ema_change_ema_final_graph_5,0)
//TradingArrangement
//BuyandSellrange
hi_high=ta.highest(buy_comand_high_value,buy_or_sell_lookback)
lowerlowest=ta.lowest(buy_comand_low_value,buy_or_sell_lookback)
varfloathi_point=na
varfloatlow_point=na
fori=1to0by1
ifhi_high[i]<hi_high[i+1]
hi_point:=hi_high[i+1]

elseiflowerlowest[i]>lowerlowest[i+1]
low_point:=lowerlowest[i+1]
//TradingArrangement
//Generatesellsignal
varboolsell_comand=false
[pinesupertrend,pinedirection]=ta.supertrend(factor_of_supertrend_to_determine_sell_comand,artperiod_of_supertrend_to_determine_sell_comand)
ifpinedirection[1]<0andpinedirection>0
sell_comand:=true
elseifpinedirection>0and(buy_1orbuy_2orbuy_3orbuy_4orbuy_5orbuy_6)
sell_comand:=true
else
sell_comand:=false
//Intermediatesellingcount&Countofopentrades
varintopen_trades=0
varintx=0
ifstrategy.position_size==0
open_trades:=0
elseifstrategy.position_size[1]==0andstrategy.position_size>0
open_trades:=1
elseifstrategy.position_size[1]<strategy.position_size
open_trades:=open_trades+1
elseifstrategy.position_size[1]>strategy.position_sizeandstrategy.position_size>0
open_trades:=open_trades-1
else
open_trades:=open_trades
//Maxcountofopentrades
varfloatmax_open_trades=0
ifstrategy.opentrades>max_open_trades
max_open_trades:=strategy.opentrades
else
max_open_trades:=max_open_trades
//ContrallSelling
varboolint_selling=false
ifstrategy.opentrades==strategy.opentrades[1]andintermidiate_selling==true
int_selling:=true
elseifstrategy.opentrades==strategy.opentrades[1]-1orintermidiate_selling==false
int_selling:=false
//Calculationofprofitprecentage
varfloatcal_profit_precentage=0
ifstrategy.position_size==0
cal_profit_precentage:=na
elseifstrategy.position_size>0
cal_profit_precentage:=(profit_precentage/100)+1
else
cal_profit_precentage:=cal_profit_precentage
//Opentradesentryprice
varfloatresult=0
fori=0tostrategy.opentrades-1
result:=strategy.opentrades.entry_price(i)
varinty=0
ifstrategy.position_size[1]>0andstrategy.position_size==0
y:=0
elseifstrategy.position_size[1]==0andstrategy.position_size>0
y:=1
elseifstrategy.position_size[1]>strategy.position_sizeandstrategy.position_size[1]>0andstrategy.position_size>0
y:=y-1
elseifstrategy.position_size[1]<strategy.position_sizeandstrategy.position_size[1]>0andstrategy.position_size>0
y:=y+1

m=result
//Fundmanagement-rvaluecalculation
varfloatint_val_3=0
varfloatinstallment_2=0
varfloatinstallment_3=0
varfloatinstallment_4=0
varfloatr_f=0
varfloatint_val=0
ifint_cap*int_val_prc/100<=15andint_val_allocation!="USDT"
int_val:=15
ifint_val_prc<=15andint_val_allocation=="USDT"
int_val:=15
ifint_cap*int_val_prc/100>15andint_val_allocation!="USDT"
int_val:=int_cap*int_val_prc/100
ifint_val_prc>15andint_val_allocation=="USDT"
int_val:=int_val_prc

varfloatr_change=0
ifr_finetune==false
r_change:=r_change_input
elseifr_finetune==true
r_change:=0.001

fori=0topiramiding+2by1
ifi==0
int_val_3:=int_val
ifi<=piramiding
installment_2:=int_val_3*math.pow((1+r/100),i)
ifi>=0andi<piramiding+1
installment_3:=installment_3+installment_2
ifi==piramiding+1
installment_4:=installment_3-installment_3[1]
ifinstallment_4<int_cap
r:=r+r_change
elseifinstallment_4>int_cap
r:=r-r_change
else
r:=r

ifr[1]<r
r_f:=r[1]
//FundManagement
varfloattotal_investment=int_cap
ifstrategy.position_size[1]>0andstrategy.position_size==0
total_investment:=int_cap+strategy.netprofit
else
total_investment:=total_investment

//Stratergypossitionsize
varfloatlast_purchase=0
ifstrategy.position_size[1]<strategy.position_sizeandstrategy.position_size[1]==0
last_purchase:=strategy.position_size
elseifstrategy.position_size[1]<strategy.position_sizeandstrategy.position_size[1]>0
last_purchase:=(strategy.position_size-strategy.position_size[1])
elseifstrategy.position_size==0
last_purchase:=0
else
last_purchase:=last_purchase
//QuantityCalculation
varfloatvalue_of_purchase=0
varfloatinitial_quantity=0
ifpurchaseing_method=='Equalamounts'anddev_of_equal_amounts=='Equalamountswithfixedentries'
value_of_purchase:=(total_investment/(piramiding+1))
elseifpurchaseing_method=='Equalamounts'anddev_of_equal_amounts=='EqualamountswithfixedUSDT'
value_of_purchase:=int_val_prc
ifpurchaseing_method=='Incrementalamounts'andint_val_allocation=='%ofcumilativeinvestment'
value_of_purchase:=(total_investment*(int_val_prc/100))*math.pow((1+(r_value/100)),y)
elseifpurchaseing_method=='Incrementalamounts'andint_val_allocation=='USDT'
value_of_purchase:=(int_val_prc)*math.pow((1+(r_value/100)),y)

varfloatfinal_value_of_purchase=0
ifvalue_of_purchase<=21
final_value_of_purchase:=21
else
final_value_of_purchase:=value_of_purchase

quantity=final_value_of_purchase/low
varfloatr_ff=0
ifpurchaseing_method=='Equalamounts'
r_ff:=na
else
r_ff:=r_f

//currentexpenditure
currentexpenditure()=>
result_v2=0.
fori=0tostrategy.opentrades-1
result_v2+=strategy.opentrades.entry_price(i)*strategy.opentrades.size(i)
strategy.opentrades>0?result_v2:na
//cashinhand
varfloatcash_in_hand=0
ifcurrentexpenditure()>0
cash_in_hand:=total_investment-currentexpenditure()
else
cash_in_hand:=total_investment
//unrealisedprofit
unrealised_profit=(high+low)/2*strategy.position_size-currentexpenditure()
//lastentryprice
lastentryprice()=>
result_v3=0.
fori=0tostrategy.opentrades-1
result_v3:=strategy.opentrades.entry_price(i)
strategy.opentrades>0?result_v3:na

//Swingtradeandidentifylowerpointtosell
varfloatlast_entry_price=0
varindex_of_array_maxval=0
varindex_of_array_minval=0
varentryprice=array.new_float(500)
ifcurrentexpenditure()[1]<currentexpenditure()
last_entry_price:=lastentryprice()
array.push(entryprice,last_entry_price)
elseifstrategy.opentrades[1]==0andstrategy.opentrades>0
last_entry_price:=lastentryprice()
array.push(entryprice,last_entry_price)
elseifstrategy.position_size==0
last_entry_price:=0
array.clear(entryprice)
array_maxval=array.max(entryprice)
array_minval=array.min(entryprice)
ifta.sma(close,9)>array_minval*(1+profit_precentage_intermidiate/100)
array.clear(entryprice)

//Identifyhigherentryvaluestoselloff
varhigh_enrty_price=array.new_float(500)
varfloatlast_entry_high_price=0
varintindex_change=0
varfloatcurrent_high_val=0
if(strategy.opentrades[1]==0andstrategy.opentrades>0)or(strategy.opentrades[1]<strategy.opentrades)
last_entry_high_price:=lastentryprice()
array.push(high_enrty_price,last_entry_high_price)
array.sort(high_enrty_price,order.descending)
elseifstrategy.position_size==0andstrategy.position_size[1]>0
array.clear(high_enrty_price)

ifstrategy.opentrades>0andstrategy.opentrades[1]==0
index_change:=index_change
elseifstrategy.position_size[1]>strategy.position_size
index_change:=index_change+1
elseifstrategy.position_size==0
index_change:=0
ifindex_change>=0andstrategy.opentrades>0
current_high_val:=array.get(high_enrty_price,index_change)
else
current_high_val:=na
//Calculationofprofitline
varfloatprofit_line=0
profit_line_nf=strategy.position_avg_price*cal_profit_precentage
//strategy.position_avg_price*cal_profit_precentage
ifstrategy.position_size[1]==0andstrategy.position_size>0
profit_line:=profit_line_nf
elseifstrategy.position_size[1]<strategy.position_size
profit_line:=profit_line-profit_line_nf[1]+profit_line_nf
elseifstrategy.position_size[1]>strategy.position_size
profit_line:=profit_line[1]
elseifstrategy.opentrades==0
profit_line:=na

ifajust_profit_line==true
profit_line:=profit_line
else
profit_line:=profit_line_nf

//countofmaxtradecount
varintmax_trade_count=0
ifpurchaseing_method=='Incrementalamounts'
max_trade_count:=piramiding-1
elseifpurchaseing_method=='Equalamounts'anddev_of_equal_amounts=='EqualamountswithfixedUSDT'
max_trade_count:=math.floor(total_investment/int_val_prc)-1
elseifpurchaseing_method=='Equalamounts'anddev_of_equal_amounts=='Equalamountswithfixedentries'
max_trade_count:=piramiding-1
//Strategyshortdeutodownfall
st_short_point=ta.crossunder(ta.sma(source_of_downfall_deviation,period_of_downfall_deviation),current_high_val*100/(100+downfall_deviation))
st_long_point=ta.crossover(ta.sma(source_of_downfall_deviation,period_of_downfall_deviation),current_high_val*100/(100+2*downfall_deviation))
buy_crossover_1=ta.crossover(al_smma1,smma2)
compulsary_sell=(ta.crossunder(al_smma1,smma1)andprofit_line<ma_9andsmma1>hi_point)
//Trading
ifta.crossover(al_smma1,smma1)andsmma3<=smma2
strategy.entry("long",strategy.long,comment=strategy_long_buy_comment,qty=quantity)
elseif((buy_5orbuy_6)orbuy_crossover_1)andwindowandstrategy.position_size==0andsource_of_lower_point<low_point
strategy.entry("long",strategy.long,comment=strategy_long_buy_comment,qty=quantity)
elseif((buy_1orbuy_3orbuy_5orbuy_6)andwindowandma_9<strategy.position_avg_price*.99andstrategy.position_size>0)andstrategy.opentrades<=(max_trade_count*0.75)andsource_of_lower_point<low_point//andta.falling(close,2)
strategy.entry("long",strategy.long,comment=strategy_short_buy_comment,qty=quantity)
elseif((buy_1)andma_9<strategy.position_avg_priceandwindowandstrategy.position_size>0)andstrategy.opentrades>(max_trade_count*0.75)andstrategy.opentrades<=max_trade_countandsource_of_lower_point<low_point//andta.falling(close,2)
strategy.entry("long",strategy.long,comment=strategy_short_buy_comment,qty=quantity)
//intermediateselling
ifta.sma(source_of_intermidiate_sell_determination_sma,period_of_intermidiate_sell_determination_sma)>array_minval*(1+profit_precentage_intermidiate/100)andint_selling==trueandhi_point[1]andlow_pointandstrategy.position_avg_price>ma_9
strategy.close("long",qty=last_purchase[x],comment=strategy_short_sell_comment)

//Downtrenddowntrading
if(ta.rising(source_of_downtrend_sell_price_ricing_determination,period_of_downtrend_sell_price_ricing_determination))andta.sma(source_of_downtrend_sell_determination_sma,period_of_downtrend_sell_determination_sma)<current_high_val*100/(down_trend_threshhold+100)anddown_trend_selling==trueandma_9<strategy.position_avg_price*.99
strategy.close("long",qty=last_purchase[x],comment=strategy_short_sell_comment)
//strategyclosecomand
if((sell_comand==true)andprofit_line<ma_9and(hi_point[1]and(buy_2orbuy_3orbuy_4orbuy_6))andal_smma1<smma2)orcompulsary_sell
strategy.close_all(comment=strategy_long_sell_comment)
//Graphs
//colorchange
plot(r_ff,title="CalculatedRvalue",color=color.new(color.white,100))
plot(strategy.position_avg_price,title="AVG",color=color.green,style=plot.style_circles)
plot(profit_line,title="Adj.Profit",color=color.yellow,style=plot.style_circles)
plot(strategy.opentrades,title="Numbersofopentrades",color=color.new(color.white,100))
plot(max_open_trades,title="MaxOpentrades",color=color.new(color.red,100))
plot(strategy.netprofit,title="CumilativeProfit",color=color.new(color.white,100))
plot(unrealised_profit,title="UnrealisedProfit",color=color.new(color.blue,100))
plot(currentexpenditure(),title="CurrentExpenditure",color=color.new(color.blue,100))
plot(cash_in_hand,title="CashinHand",color=color.new(color.blue,100))
plot(total_investment,title="TotalInvestment",color=color.new(color.white,100))
plot(last_purchase,title="QuantityLastpurchase",color=color.new(color.white,100))
plot(final_value_of_purchase,title="ValueofPurchase",color=color.new(color.white,100))
plot(array_minval,title="Lowvalue",color=color.new(color.white,50),style=plot.style_circles)
plot(current_high_val,title="HighValue",color=color.new(color.orange,50),style=plot.style_circles)
Expand (1550 lines)
