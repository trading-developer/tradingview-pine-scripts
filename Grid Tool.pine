Script Name: Grid Tool
Author: ramsay09
Description: The core idea of this grid tool is that you have to concentrate less on the trade entries (this happens automatically time-independent but price-dependant) but rather on the validity of the macro trend. Exiting a trend when it is no longer valid is more important than entering a trade. But as long as the trend is valid, the trader participates exponentially in the...
PineScript code:

Pine Script™ strategy
Grid Tool
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  ramsay09
//@version=5
strategy(title='Grid  Tool',  shorttitle='Grid',  overlay=true,  initial_capital=10000,  pyramiding=3000,  calc_on_every_tick=false,  default_qty_type=strategy.fixed,  default_qty_value=0.01,  currency=currency.USD,
                  commission_type=strategy.commission.percent,  commission_value=0.075,  margin_long=0,  margin_short=0,  max_lines_count=500)
general_info                =  input.bool(title='General  Description',  defval=false,
                                          tooltip="This  script  can  make  you  free  from  entry  decisions.  You  just  have  to  manage  your  exits  or  additionally  manage  your  exits.
                                          Exiting  a  trend  is  more  important  than  enter  a  trade.  Use  a  small  time  frame  for  the  grid  signals  to  get  the  distance  between  the  trades  as  accurate  as  possible  for  the  selected  grid  gap
                                          distance  since  TV  back  tests  are  carried  out  with  closed  bars.  Before  set  up  the  grid-tool:  pre-analyse  the  market  to  make  sure  it  is  in  a  trend  or  will  be  soon.
                                          Select  the  grid  gap  and  grid  position  size  that  you  are  comfortable  with.  Define  the  start  date  for  the  grid  (start  of  a  new  trend),  select  a  signal  and  use  optionally  filters,
                                          stop  loss  and    take  profit.  Monitor  the  trend  and  your  exit  levels.  The  default  values  are  suitable  for  Bitcoin  on  ByBit  (one  tick  =  0.5).")
//--------------------------------------------------------------------------------------  inputs  -----------------------------------------------------------------------------------------------
entry_type                    =  input.string('Long',  title='Trade  Direction',  options=['Long',  'Short',  'Both'],  tooltip='Long  =  long  entries  only,  Short  =  short  entries  only,  both  =  long  and  short  entries.')
repaint                          =  input.string('Allowed',  title='Repainting',  options=['Not  allowed',  'Allowed'],
                                          tooltip='If  repainting  \'Not  allowed\'  is  selected,  then  signals  from  higher  time  frames  have  a  lag  of  an  additional  bar  from  the  higher  time  frame  but  you  trade  what  you  have  backtested.
                                          If  repainting  \'Allowed\'  is  selected,  singals  can  occure  multiple  times  as  long  as  the  higher  time  frame  bar  is  not  closed  but  the  first  signal  of  these  possible  multiple  signals  is  much  earlier.
                                          Signals  on  current  time  frame  (\'Current\'  time  frame  filter  is  selected)  do  not  repaint  by  default.')
panel                              =  input.bool(true,  title='Plot  Info  Panel',  tooltip='Info  panel  for  current  unrealized  profit  or  loss  for  the  open  position.')
plot_avg_price            =  input.bool(true,  title='Plot  Position  Avarage  Price  Line.',  tooltip='This  plots  the  position  avarage  price  line.  Green  =  position  is  in  profit,  red  =  position  is  in  loss.')
en_scalp_mode              =  input.bool(false,  title='Scalping  Mode',  tooltip='Works  only  with  TP/SL  and  their  enabled  counter  (output  filters  are  optional).
                                          Choose  an  entry  signal  and  define  the  scalping  signal  using  entry  filters.  Makes  strategy  entry  signal  idle  between  exit  event  and  new  scalping  signal.')
en_trig_lvl                  =  input.bool(false,  title='Enable  Strategy  Switch/Trigger  Level',  group='Strategy  trigger  and  border  levels:',
                                          tooltip='This  enables  the  strategy  price  level  that  must  be  crossed.  Otherwise  the  strategy  entry  signals  will  be  ignored.  The  stop  loss  and  take  profit  is  not  affected.')
trig_lvl                        =  input.float(0,  title='Strategy  Switch/Trigger  Level',  minval=0,  step=200,  group='Strategy  trigger  and  border  levels:',
                                          tooltip='Define  the  price  level  which  must  be  crossed  (up  or  down)  to  make  the  strategy  entry  signals  work.')
en_border_up                =  input.bool(false,  title='Enable  Upper  Border  Level',  group='Strategy  trigger  and  border  levels:',
                                          tooltip='In  case  the  market  has  crossed  this  level,  the  strategy  entry  signals  will  be  turned  off  (long  and  short).  The  stop  loss  and  take  profit  is  not  affected.
                                          Works  when  "Strategy  Switch/Trigger  Level"  is  not  activated  or  an  activated  trigger  level  was  crossed.')
bup_lvl                          =  input.float(0,  title='Strategy  Upper  Border  Level',  minval=0,  step=200,  group='Strategy  trigger  and  border  levels:',
                                          tooltip='Define  strategy  upper  border  level.')
en_border_dn                =  input.bool(false,  title='Enable  Lower  Border  Level',  group='Strategy  trigger  and  border  levels:',
                                          tooltip='In  case  the  market  has  crossed  this  level,  the  strategy  entry  signals  will  be  turned  off  (long  and  short).  The  stop  loss  and  take  profit  is  not  affected.
                                          Works  when  "Strategy  Switch/Trigger  Level"  is  not  activated  or  an  activated  trigger  level  was  crossed.')
bdn_lvl                          =  input.float(0,  title='Strategy  Lower  Border  Level',  minval=0,  step=200,  group='Strategy  trigger  and  border  levels:',
                                          tooltip='Define  strategy  lower  border  level.')
border_con                    =  input.string('Close  All',  title='Strategy  Behaviour  When  A  Border  Level  Is  Crossed',  options=['Turn  Off  Entries',  'Idle',  'Close  All'],
                                          group='Strategy  trigger  and  border  levels:',  tooltip='Select  the  strategy  behaviour  when  a  border  level  is  crossed.
                                          "Turn  Off  Entries"  =  The  strategy  entry  signals  will  be  turned  off  (long  and  short).  The  stop  loss  and  take  profit  is  not  affected.
                                          "Idle"  =  The  strategy  remains  idle.  Affects  entries,  stop  loss,  take  profit  and  exit  filters.  Position  remains  open.
                                          "Close  All"  =  The  entire  position  will  be  closed  and  strategy  remains  idle.')
extend_lines                =  input.string('Right',  title='Extend  Lines',  options=['Right',  'Both'],
                                          group='Strategy  trigger  and  border  levels:',  tooltip='Select  the  trigger  and  border  line  extention')
en_close_stop              =  input.bool(false,  title='Enable  "Close  &  Stop"  Level',  group='Strategy  trigger  and  border  levels:',
                                          tooltip='In  case  the  market  has  crossed  this  level,  the  entire  position  will  be  closed  and  the  strategy  remains  idle.  This  Feature  works  on  current  bar  and  is  independent  of  time  and  date.')
cl_st_lvl                      =  input.float(0,  title='"Close  &  Stop"  Level',  minval=0,  step=100,  group='Strategy  trigger  and  border  levels:',
                                          tooltip='Define  "Close  &  Stop"  level.')
//----------------------------  Backtest  periode  inputs  -----------------------------------
inst_grid                      =  input.bool(false,  title='Instant  Grid',  group='Define  the  period  of  the  grid/trend:',
                                          tooltip='This  enables  the  grid  with  current  time  and  date.  Do  not  change  input  settings  while  running  an  instant  grid  otherwise  the  grid  will  restart  at  current  bar.')
period_start                =  input.time(title='',  inline='start_timestamp',  defval=timestamp('01  SEP  2022  00:00  +0000'),  group='Define  the  period  of  the  grid/trend:',
                                          tooltip='Trend/grid  start  date  and  time.  In  case  of  live  trading  you  have  to  set  the  period  to  the  current  date  and  time  otherwise  history  trades  will  influence  the  position  management.')
period_stop                  =  input.time(title='',  inline='end_timestamp',  defval=timestamp('31  Dec  2122  00:00  +0000'),  group='Define  the  period  of  the  grid/trend:',  tooltip='Trend/grid  end  date  and  time.')
//backtesting  lot  size
lot_size_b                    =  input.float(0.01,  title='Lot  Size  -  Backtesting',  minval=  0,  step=  0.01,
                                          tooltip='Affects  backtesting  only.',  group='Backtesting  and  live-trading  lot  size:')
//Alertatron  lot  size  on  Bybit
lot_size_lv                  =  input.int(50,  title='Lot  Size  -  Live  Trading',  minval=  0,  step=  50,
                                          tooltip='Alertatron  Bitcoin  lot  size  string  for  Bybit  exchange.  Affects  live  trading  only.',  group='Backtesting  and  live-trading  lot  size:')
//------------------------  entry  signal  inputs  --------------------------
x_opt_1                          =  input.string('Grid  -  reentry',  title='---  1st  ENTRY  SIGNAL  ---',  options=['---',  'Grid  -  reentry',  'Grid  -  counter  trend',  'Fractals',  'Reverse  fractal',  'Pin  bar',  'BB  reverse'],
                                          tooltip='The  grid  entry  signals  are  time  independent.  The  Fractals  signal  is  a  breakout  signal.  The  reverse  fractal  and  the  Pin  bar  signal  are  bottom  fishing  signal.',  group='Entry  signals:')
x_opt_2                          =  input.string('---',  title='---  2nd  ENTRY  SIGNAL  ---',  options=['---',  'Grid  -  reentry',  'Grid  -  counter  trend',  'Fractals',  'Reverse  fractal',  'Pin  bar',  'BB  reverse'],
                                          tooltip='The  grid  entry  signals  are  time  independent.  The  Fractals  signal  is  a  breakout  signal.  The  reverse  fractal  and  the  pin  bar  signal  are  bottom  fishing  signals.',  group='Entry  signals:')
//grid  parameter
grid_gap                        =  input.float(500,  title='Grid  Gap  -  Base  Currency',  minval=0,  step=50,  tooltip='The  minimum  trigger-gap  between  two  trades  in  case  of  a  selected  grid  signal.',  group='Grid  parameter:')
//----------------------------  1st  position  factor  inputs  ------------------------------
en_1st_pos_f                =  input.bool(false,  title='Enable  First  Position',  group='First  position  size:',
                                          tooltip='This  enables  the  first  position  that  will  be  opened  when  entry  condition  is  met.  In  case  all  positions  are  closed,  a  new  "first  position"  will  be  opened.
                            Workswhennoexitfiltersareselected.')
inst_pos=input.bool(false,title='InstantlyOnCurrentBarClose',group='Firstpositionsize:',
tooltip='Thisopensthefirstpositionimmediatelywhenthegridisplacedandthecurrentbarisclosed.')
pos_start_1st=input.float(0.05,title='PositionStart-Size-Backtesting',minval=0.000001,step=0.01,group='Firstpositionsize:',
tooltip='Thisreplacesthedefaultstrategypositionsize("LotSize-Backtesting")andisthestartingpositionsize.Backtestingonly.')
pos_start_1st_lv=input.float(250,title='PositionStart-Size-LiveTrading',minval=0.000001,step=50,group='Firstpositionsize:',
tooltip='Thisreplacesthedefaultstrategylivetradingpositionsize("LotSize-LiveTrading")andisthestartingpositionsize.Livetradingonly.')
//--------------------------------auto-increaseofpositioninputs-----------------------------------
en_pos_mart=input.bool(false,title='EnablePositionAuto-Increase',group='Automaticpositionsizeincreaseforeachtrade(Martingale):',
tooltip='Thisenablestheautomaticincreaseinpositionsizeforeachtrade.With"PositionFactor=1"yougetthemartingalesequence.
This\'automaticincrease\'worksuntilapositionhasbeenclosed.Afteraclosingevent,thisfunctionremainsinactive.Worksnotwith"TradeDirection"="Both".')
pos_factor=input.float(0.5,title='PositionFactor',minval=0.000001,step=0.1,group='Automaticpositionsizeincreaseforeachtrade(Martingale):',
tooltip='Thisfactorcontrolsthepositionsize.Thenextpositionsizeis:strategy_position_size+strategy_position_size*position_factor.
Keepinmindthatatakeprofiteventreducesthecurrentpositionsize.')
pos_count_in=input.int(4,title='PositionCount',minval=1,step=1,group='Automaticpositionsizeincreaseforeachtrade(Martingale):',
tooltip='Thisvaluedetermineshowoftenthepositionisincreased.')
pos_start_mart=input.float(0.01,title='PositionStart-Size-Backtesting',minval=0.000001,step=0.001,group='Automaticpositionsizeincreaseforeachtrade(Martingale):',
tooltip='Thisreplacesthedefaultstrategypositionsize("LotSize-Backtesting")andisthestartingpositionsizefor"Auto-Increase".Backtestingonly.')
pos_start_mart_lv=input.float(100,title='PositionStart-Size-LiveTrading',minval=0.000001,step=50,group='Automaticpositionsizeincreaseforeachtrade(Martingale):',
tooltip='Thisreplacesthedefaultlivetradingstrategypositionsize("LotSize-LiveTrading")andisthestartingpositionsizefor"Auto-Increase".Livetradingonly.')
//------------------------------takeaverageprofitinputs--------------------------------
av_tp_en=input.bool(title='EnableTakeProfit-Average-Position-PriceProfit',defval=true,group='Takeprofitbasedonaverage-position-price:',
tooltip='Profittakingcondition:currentprice>=averagepriceofpositions+"TakeAverage-PriceOfPositionsProfit..."ANDcurrentprice>=average-priceofpositions+"TakeProfitStep...".
Enablewhenscalpingmodeisused.')
av_tp_qty=input.float(10,title='TakeAverage-Position-PriceProfit-QuantityOfPosition(Percent)',minval=0,step=5,maxval=100,group='Takeprofitbasedonaverage-position-price:',
tooltip='Reductionofcurrentpositioninpercent.Affectsbacktestingandlivetrading.')
av_tp=input.float(500,title='TakeAverage-Position-PriceProfit-BaseCurrency',minval=0,step=50,group='Takeprofitbasedonaverage-position-price:',
tooltip='Theprofitinpointsofbasecurrency,calculatedfromtheaveragepriceofallopentrades.')
avtp_step=input.float(500,title='TakeProfitStep-BaseCurrency',minval=0,step=50,group='Takeprofitbasedonaverage-position-price:',
tooltip='Theminimumdistancebetweentwoprofit-takingeventsincaseof"TakeAverage-EntryProfit-QuantityOfPosition(Percent)"<100.')
en_tp_counter=input.bool(title='EnableTakeProfitCount',defval=false,group='Takeprofitbasedonaverage-position-price:',
tooltip='Enables"TakeProfitCount".Ifdisabledthestepwisetakeprofitisendless.Enablewhenscalpingmodeisused.')
tp_count=input.int(3,title='TakeProfitCount',minval=1,step=1,group='Takeprofitbasedonaverage-position-price:',
tooltip='Defineshowmanytimesatakeprofiteventwillhappenbeforetheentirepositionwillbeclosed.Oncethecounterlimithasbeenreachedthecountergetsreseted.')
//----------------------------------breakevenstoploss-----------------------------------
break_even=input.bool(title='CloseOnBreakEvenAndRemainIdle',defval=false,group='Breakevenstoploss:',
tooltip='Setsthestoplosstobreakevenafterthefirsttakeprofitevent.Strategyremainsidleafterabreakevencloseevent.
Worksonlivetradingtoobutthetriggeringlotsizeisthebacktestlotsize.')
rep_even=input.bool(title='ClosePartlyOnBreakEven',defval=false,group='Breakevenstoploss:',
tooltip='Setsapartlystoplossonbreakeven.Strategywillnotbefurtheraffectedafterapartlybreakevencloseevent.
Worksonlivetradingtoobutthetriggeringlotsizeisthebacktestlotsize.')
rep_ev_qty=input.int(50,title='PercentCloseOnBreakEven',minval=0,maxval=100,step=5,group='Breakevenstoploss:',
tooltip='Percentofpositionthatwillbeclosedafterabreakevenevent.')
be_min_lot=input.float(0.1,title='MinLotSize(Backtestinglotsize)',minval=0,step=0.01,group='Breakevenstoploss:',
tooltip='Minlotsizetotriggerbreakevenpartlyclose.Currentlotsize>"MinLotSize"')
//----------------------------stoplossofaveragepositioninputs------------------------------
av_sl_en=input.bool(title='EnableStopLoss-Average-Position-PriceLoss',defval=true,group='Stoplossbasedonaverage-positionpriceorrecenttop/bottom:',
tooltip='Stoplosscondition:currentprice<=average-positionpriceofpositions-"StopAverage-EntryLoss..."ANDcurrentprice<=Average-PositionPriceOfPositions-"StopLossStep...".
Enablewhenscalpingmodeisused.')
tb_tog=input.bool(title='Toggle:Average-Position-PriceLoss(Default)/Top/BottomBasedLoss',defval=true,group='Stoplossbasedonaverage-positionpriceorrecenttop/bottom:',
tooltip='Stoplossconditiontop/bottommode:currentprice<>lastlocaltop/bottomANDstepcondition.Stoplossconditionaverage-position-pricelossmode:
price<>averageentrypositionpriceANDstepcondition.Default=selected.')
av_sl_qty=input.float(30,title='StopAverage-Position-PriceLoss-QuantityOfPosition(Percent)',minval=0,step=5,maxval=100,group='Stoplossbasedonaverage-positionpriceorrecenttop/bottom:',
tooltip='Reductionofcurrentpositioninpercent.Affectsbacktestingandlivetrading.')
av_sl=input.float(500,title='StopAverage-Position-PriceLoss-BaseCurrency',minval=0,step=50,group='Stoplossbasedonaverage-positionpriceorrecenttop/bottom:',
tooltip='Thelossinpointsofbasecurrency,calculatedfromtheaverage-position-priceofallopentrades.')
avsl_step=input.float(500,title='StopLossStep-BaseCurrency',minval=0,step=50,group='Stoplossbasedonaverage-positionpriceorrecenttop/bottom:',
tooltip='Theminimumdistancebetweentwostop-losseventsincaseof"StopAverage-Position-PriceLoss-QuantityOfPosition(Percent)"<100.')
sl_sen=input.int(20,title='Top/BottomSensitivity',minval=1,step=1,group='Stoplossbasedonaverage-positionpriceorrecenttop/bottom:',
tooltip='Numberofpastcandleswithinthetopandbottomaredetected.For"Top/BottomBasedLoss"only.')
en_sl_counter=input.bool(title='EnableStopLossCount',defval=false,group='Stoplossbasedonaverage-positionpriceorrecenttop/bottom:',
tooltip='Enables"StopLossCount".Ifdisabledthestepwisestoplossisendless.Enablewhenscalpingmodeisused.')
sl_count=input.int(3,title='StopLossCount',minval=1,step=1,group='Stoplossbasedonaverage-positionpriceorrecenttop/bottom:',
tooltip='Defineshowmanytimesatakeprofiteventwillhappenbeforetheentirepositionwillbeclosed.Oncethecounterlimithasbeenreachedthecountergetsreseted.')
//----------------------------entryfiltersandtimeframeinputs------------------------------
htf_entr_opt_1=input.string('Current',title='TimeFrame-EntryFilter1',options=['Current','5m','10m','15m','30m','1H','2H','3H','4H','6H','8H','12H','D','3D','W','M'],
tooltip='Thetimeframeforthe1stENTRYSIGNALfilter.Choosealwaysahighertimeframethanthecurrent.Lowertimeframesthanthecurrentmayresultinfalsevalues.',group='Entryfilters:')
htf_entr_opt_2=input.string('Current',title='TimeFrame-EntryFilter2',options=['Current','5m','10m','15m','30m','1H','2H','3H','4H','6H','8H','12H','D','3D','W','M'],
tooltip='Thetimeframeforthe2ndENTRYSIGNALfilter.Choosealwaysahighertimeframethanthecurrent.Lowertimeframesthanthecurrentmayresultinfalsevalues.',group='Entryfilters:')
entry_f_1=input.string('---',title='EntryFilter1',options=['---','Fractalstrendlinesfilter(notffilter)','Barbreakout1filter','Barbreakout2filter','SMAfilter','MACDfilter',
'MACD(fast)slopefilter','RSI50filter','Fractalsfilter','Segmentsfilter(notffilter)','Fractals1-2-3filter','Reversefractalfilter','EMA21/SMA20filter',
'BBreversefilter(notffilter)',
'ALMAslopefilter','SuperTrendfilter','EMA1xEMA2filter','ADXDMIfilter','ADXslopefilter','HMAslopefilter','2HMAcrossfilter','TRIXslopefilter',
'ParabolicSARfilter','PriceXKumofilter','PriceXKijunfilter','Kumoflipfilter','PricefilteredKumoflipfilter(notffilter)','ChikouXpricefilter',
'ChikouXKumofilter','PriceXTenkanfilter','TenkanXKumofilter','TenkanXKijunfilter'],tooltip='Variousfiltersignalsforthe1ndENTRYSIGNAL.',group='Entryfilters:')
entry_f_2=input.string('---',title='EntryFilter2',options=['---','Fractalstrendlinesfilter(notffilter)','Barbreakout1filter','Barbreakout2filter','SMAfilter','MACDfilter',
'MACD(fast)slopefilter','RSI50filter','Fractalsfilter','Segmentsfilter(notffilter)','Fractals1-2-3filter','Reversefractalfilter','EMA21/SMA20filter',
'BBreversefilter(notffilter)',
'ALMAslopefilter','SuperTrendfilter','EMA1xEMA2filter','ADXDMIfilter','ADXslopefilter','HMAslopefilter','2HMAcrossfilter','TRIXslopefilter',
'ParabolicSARfilter','PriceXKumofilter','PriceXKijunfilter','Kumoflipfilter','PricefilteredKumoflipfilter(notffilter)','ChikouXpricefilter',
'ChikouXKumofilter','PriceXTenkanfilter','TenkanXKumofilter','TenkanXKijunfilter'],tooltip='Variousfiltersignalsforthe2ndENTRYSIGNAL.',group='Entryfilters:')
//--------------------------exitfiltersandtimeframeinputs----------------------------
tog_exit=input.bool(title='ToggleExitMode1/2',defval=true,
tooltip='Mode1:Allopenpositionswillbeclosed.Entrysignalsarenotaffected.Mode2:Allopenpositionswillbeclosed.Newentrysignalsareinactivewhileexitsignalisvalid.
Mode1=default=selected.',group='Exitfilters:')
qyt_exit=input.int(100,title='ExitQuantity',minval=0,maxval=100,step=5,tooltip='Percentofpositionthatwillbeclosed.Affectsbacktestingandlivetrading.',group='Exitfilters:')
htf_exit_opt_1=input.string('Current',title='TimeFrame-ExitFilter1',options=['Current','5m','10m','15m','30m','1H','2H','3H','4H','6H','8H','12H','D','3D','W','M'],
tooltip='ThetimeframeforExitfilter1.Choosealwaysahighertimeframethanthecurrent.Lowertimeframesthanthecurrentmayresultinfalsevalues.',group='Exitfilters:')
htf_exit_opt_2=input.string('Current',title='TimeFrame-ExitFilter2',options=['Current','5m','10m','15m','30m','1H','2H','3H','4H','6H','8H','12H','D','3D','W','M'],
tooltip='ThetimeframeforExitfilter2.Choosealwaysahighertimeframethanthecurrent.Lowertimeframesthanthecurrentmayresultinfalsevalues.',group='Exitfilters:')
exit_f_1=input.string('---',title='Exitfilter1',options=['---','Fractalstrendlinesfilter(notf-filter)','ALMAslopeexit','Reversefractalexit','SMAexit','MACDexit','MACD(fast)slopeexit',
'HMAslopeexit','2HMAcrossexit','EMA1xEMA2exit','ADXslopeexit','ADXThresholdexit','DMIexit','TRIXslopeexit','BBreverseexit',
'RSI50exit','Fractalsexit','SuperTrendexit','ParabolicSARexit','Cloudexit','Kijunexit'],
tooltip='Variousexitsignalsforthe1ndENTRYSIGNALandthe2ndENTRYSIGNAL.TheexitsignalsareORconnected.',group='Exitfilters:')
exit_f_2=input.string('---',title='Exitfilter2',options=['---','Fractalstrendlinesfilter(notf-filter)','ALMAslopeexit','Reversefractalexit','SMAexit','MACDexit','MACD(fast)slopeexit',
'HMAslopeexit','2HMAcrossexit','EMA1xEMA2exit','ADXslopeexit','ADXThresholdexit','DMIexit','TRIXslopeexit','BBreverseexit',
'RSI50exit','Fractalsexit','SuperTrendexit','ParabolicSARexit','Cloudexit','Kijunexit'],
tooltip='Variousexitsignalsforboththe1ndENTRYSIGNALandthe2ndENTRYSIGNAL.TheexitsignalsareORconnected.',group='Exitfilters:')
//-------------------------Signalparameterinputs----------------------------
p_bar_sens_1=input.float(0.6,title='PinBarSensitivity1',step=0.02,tooltip='Condition:candlewick>candlebody*"Pinbarsensitivity".
Thesmallerthefactor,themorewicksaredetectedaspartofapinbar.',group='Pinbarandsegmentparameters:')
p_bar_sens_2=input.int(1,title='PinBarSensitivity2',step=1,minval=0,tooltip='Condition:high/low><lasttwohigh/low.',group='Pinbarandsegmentparameters:')
sb=input.int(title='SegmentMaxBars',defval=10,minval=0,step=1,tooltip='TheMaximumbarsbetweentwosegmenthighsorlows.',group='Pinbarandsegmentparameters:')
//---------------------filtersinputs--------------------
fr_period=input.int(2,title='FractalsPeriod',minval=1,group='Entryandfiltersignalparameters:')
rsi_period=input.int(14,title='RSIPeriod',minval=1,group='Entryandfiltersignalparameters:')
ma_period=input.int(50,title='MAPeriod',minval=1,group='Entryandfiltersignalparameters:')
mult=input.float(3,title='SuperTrendMultiplier',minval=1,step=0.1,group='Entryandfiltersignalparameters:')
len=input.int(6,title='SuperTrendLength',minval=1,group='Entryandfiltersignalparameters:')
start=0.02//input(0.02,title="PSARStart(Filter/Entry)",minval=0)
inc=0.02//input(0.02,title="PSARIncrement(Filter/Entry)",minval=0)
max=0.2//input(.2,title="PSARMaximum(Filter/Entry)",minval=0)
windowsize_f=input.int(title="ALMAWindowSize",defval=9,minval=1,step=1,group='Entryandfiltersignalparameters:',tooltip='')
offset_f=input.float(title="ALMAOffset",defval=0.85,minval=0,step=0.05,group='Entryandfiltersignalparameters:',tooltip='')
sigma_f=input.float(title="ALMASigma",defval=6,minval=1,step=1,group='Entryandfiltersignalparameters:',tooltip='')
di_length_s=input.int(10,title='DMIADXLength',minval=1,group='Entryandfiltersignalparameters:')
adx_smooth_s=input.int(10,title='DMIADXSmooth',minval=1,group='Entryandfiltersignalparameters:')
adx_thres_s=input.int(25,title='DMIADXThreshold',minval=1,group='Entryandfiltersignalparameters:')
slope_len=input.int(1,minval=1,title='MACDMacdlLineSlopeLenth',tooltip='MACD\'sfastline',group='Entryandfiltersignalparameters:')
hma_len_f=input.int(100,minval=1,step=5,title='HMALength',group='Entryandfiltersignalparameters:')
hma2_len_f=input.int(25,title="2HMAPeriod",minval=1,step=1,group='Entryandfiltersignalparameters:')
ema1_len_f=input.int(10,minval=1,step=2,title='EMA1Length',group='Entryandfiltersignalparameters:')
ema2_len_f=input.int(20,minval=1,step=2,title='EMA2Length',group='Entryandfiltersignalparameters:')
trix_len_f=input.int(10,title="TRIXLength",minval=1,group='Entryandfiltersignalparameters:')
bb_length_s=input.int(20,minval=1,title='BBLength(signal)',group='Entryandfiltersignalparameters:',tooltip='')
bb_std_fac_s=input.float(2,minval=0.1,step=0.2,title='BBStdDevFactor(signal)',group='Entryandfiltersignalparameters:',tooltip='')
bb_length_f=input.int(20,minval=1,step=10,title='BBLength(filter)',group='Entryandfiltersignalparameters:',
tooltip='FormulatoadaptBBlengthofalowerTFtoahigherTF:(higherTFinminutes)/(lowerTF)*(BBLengthofhigherTF)')
bb_std_fac_f=input.float(2,minval=0.1,step=0.2,title='BBStdDevFactor(filter)',group='Entryandfiltersignalparameters:',tooltip='')
//---------------------exitsinputs--------------------
fr_period_x=input.int(2,title='ExitFractals-Period',minval=1,group='Exitsignalparameters:')
fr_past_x=input.int(0,title='ExitFractals-PastFractal',minval=0,group='Exitsignalparameters:')
rsi_period_x=input.int(14,title='ExitRSIPeriod',minval=1,group='Exitsignalparameters:')
ma_period_x=input.int(50,title='ExitMAPeriod',minval=1,group='Exitsignalparameters:')
mult_x=input.float(2,title='ExitSuperTrendMultiplier',minval=1,group='Exitsignalparameters:')
len_x=input.int(5,title='ExitSuperTrendLength',minval=1,group='Exitsignalparameters:')
di_length_x=input.int(10,title='ExitDMIADXLength',minval=1,group='Exitsignalparameters:')
adx_smooth_x=input.int(10,title='ExitDMIADXSmooth',minval=1,group='Exitsignalparameters:')
adx_thres_x=input.int(25,title='ExitDMIADXThreshold',minval=1,group='Exitsignalparameters:')
slope_len_x=input.int(1,minval=1,title='ExitMACDMacdlLineSlopeLenth',tooltip='MACD\'sfastline',group='Exitsignalparameters:')
hma_len_x=input.int(100,minval=1,step=5,title='EXITHMALength',group='Exitsignalparameters:')
hma2_len_x=input.int(25,title="Exit2HMAPeriod",minval=1,step=1,group='Exitsignalparameters:')
ema1_len_x=input.int(10,minval=1,step=2,title='ExitEMA1Length',group='Exitsignalparameters:')
ema2_len_x=input.int(20,minval=1,step=2,title='ExitEMA2Length',group='Exitsignalparameters:')
windowsize_x=input.int(9,title="ExitALMAWindowSize",minval=1,step=1,group='Exitsignalparameters:',tooltip='')
offset_x=input.float(0.85,title="ExitALMAOffset",minval=0,step=0.05,group='Exitsignalparameters:',tooltip='')
sigma_x=input.float(6,title="ExitALMASigma",minval=1,step=1,group='Exitsignalparameters:',tooltip='')
trix_len_x=input.int(10,title="ExitTRIXLength",minval=1,group='Exitsignalparameters:',tooltip='')
bb_length_x=input.int(20,minval=1,title='ExitBBLength',group='Exitsignalparameters:',tooltip='')
bb_std_fac_x=input.float(2,minval=0.1,step=0.2,title='ExitBBStdDevFactor',group='Exitsignalparameters:',tooltip='')
//---------------Currentunrealizedprofitorlossfortheopenposition-------------------
ifpanel
varinfo_panel=table.new(position=position.bottom_left,columns=1,rows=2,bgcolor=color.new(color.blue,92),frame_width=1,border_width=1)
text0="PositionSize:"+str.tostring(strategy.position_size,"#.0000")
text1="UnrealizedProfit/Loss:"+str.tostring(strategy.openprofit,"#.00")
table.cell(table_id=info_panel,column=0,row=0,text=text0,text_halign=text.align_left,text_size=size.small,text_color=color.new(color.silver,0))
table.cell(table_id=info_panel,column=0,row=1,text=text1,text_halign=text.align_left,text_size=size.small,text_color=color.new(color.silver,0))
//-------------------------entrydirection--------------------------
long=entry_type!='Short'//longorboth
short=entry_type!='Long'//shortorboth
both=entry_type=='Both'//both
//-----------------------Backtestperiode--------------------------------
backtest_period()=>
time>=period_startandtime<=period_stop?true:false
//--------------------------------plots----------------------------
//plottriggerlevel
trig_line=en_trig_lvl?line.new(x1=period_start,x2=time,xloc=xloc.bar_time,y1=trig_lvl,y2=trig_lvl,
extend=extend_lines=='Right'?extend.right:extend.both,color=color.new(color.yellow,40),style=line.style_solid,width=2):na
//plotupperborderlevel
bup_line=en_border_up?line.new(x1=period_start,x2=time,xloc=xloc.bar_time,y1=bup_lvl,y2=bup_lvl,
extend=extend_lines=='Right'?extend.right:extend.both,color=color.new(color.red,40),style=line.style_solid,width=3):na
//plotlowerborderlevel
bdn_line=en_border_dn?line.new(x1=period_start,x2=time,xloc=xloc.bar_time,y1=bdn_lvl,y2=bdn_lvl,
extend=extend_lines=='Right'?extend.right:extend.both,color=color.new(color.green,40),style=line.style_solid,width=3):na
//plot"close&stop"level
clst_line=en_close_stop?line.new(x1=bar_index[1],x2=bar_index,y1=cl_st_lvl,y2=cl_st_lvl,
extend=extend.right,color=color.new(color.white,10),style=line.style_solid,width=1):na
line.delete(trig_line[1])
line.delete(bup_line[1])
line.delete(bdn_line[1])
line.delete(clst_line[1])
//averagepriceplot
plot(plot_avg_price?strategy.position_avg_price:na,linewidth=1,color=close>strategy.position_avg_priceandlongorclose<strategy.position_avg_priceandshort?color.new(color.green,30):
color.new(color.red,30),title='position_avg_price')
//--------------------Ichimoku--------------------
TKlength=9//input(9,"Tenkan-senlength",minval=1)
KJlength=26//input(26,"Kijun-senlength",minval=1)
CSHSlength=26//input(26,"Chikouspanlength/horizontalshift",minval=1)
SBlength=52//input(52,"SenkouspanBlength",minval=1)
//calculation
TK=math.avg(ta.lowest(TKlength),ta.highest(TKlength))
KJ=math.avg(ta.lowest(KJlength),ta.highest(KJlength))
CS=close
SB=math.avg(ta.lowest(SBlength),ta.highest(SBlength))
SA=math.avg(TK,KJ)
kumo_high=math.max(SA[CSHSlength-1],SB[CSHSlength-1])
kumo_low=math.min(SA[CSHSlength-1],SB[CSHSlength-1])
//-----------------------------------------------------------------------Filtersandentrysignals------------------------------------------------------------------------
//----------------------Ichimokufilters------------------------
//crossconditionsfor"Strong"filteredsignals
varboolsasb_x=true
ifta.crossover(SA,SB)andlow>kumo_high
sasb_x:=true
sasb_x
ifta.crossunder(SA,SB)andhigh<kumo_low
sasb_x:=false
sasb_x
varbooltkkj_x=true
ifta.crossover(TK,KJ)andTK>kumo_highandKJ>kumo_high
tkkj_x:=true
tkkj_x
ifta.crossunder(TK,KJ)andTK<kumo_lowandKJ<kumo_low
tkkj_x:=false
tkkj_x
//Ichimokufilters
kijun_buy_f=close>KJ
kumo_buy_f=close>kumo_high
kumo_flip_buy_f=SA>SB
price_filtered_kumo_flip_buy_f=sasb_xandlow>kumo_high
chikou_X_price_buy_f=CS>high[26-1]
chikou_X_kumo_buy_f=CS>kumo_high[26-1]
price_X_tenkan_buy_f=close>TK
tenkan_X_kumo_buy_f=TK>kumo_high
tenkan_X_kijun_buy_f=TK>KJ
kumo_filtered_tenkan_X_kijun_buy_f=tkkj_xandTK>kumo_highandKJ>kumo_highandTK>KJ
kijun_sell_f=close<KJ
kumo_sell_f=close<kumo_low
kumo_flip_sell_f=SA<SB
price_filtered_kumo_flip_sell_f=notsasb_xandhigh<kumo_low
chikou_X_price_sell_f=CS<low[26-1]
chikou_X_kumo_sell_f=CS<kumo_low[26-1]
price_X_tenkan_sell_f=close<TK
tenkan_X_kumo_sell_f=TK<kumo_low
tenkan_X_kijun_sell_f=TK<KJ
kumo_filtered_tenkan_X_kijun_sell_f=nottkkj_xandTK<kumo_lowandKJ<kumo_lowandTK<KJ
//Ichimokuexits
kijun_buy_x=tog_exit?ta.crossover(high,KJ):high>KJ
kijun_sell_x=tog_exit?ta.crossunder(low,KJ):low<KJ
kumo_buy_x=tog_exit?ta.crossover(high,kumo_high):high>kumo_high
kumo_sell_x=tog_exit?ta.crossunder(low,kumo_low):low<kumo_low
//---------------------BollingerBands------------------------
f_stdev(_bb_len)=>ta.stdev(close,_bb_len)
f_sma(_sma_len)=>ta.sma(close,_sma_len)
dev_s=bb_std_fac_s*f_stdev(bb_length_s)
dev_f=bb_std_fac_f*f_stdev(bb_length_f)
dev_x=bb_std_fac_x*f_stdev(bb_length_x)
//signal
upper_bb_s=f_sma(bb_length_s)+dev_s
lower_bb_s=f_sma(bb_length_s)-dev_s
bb_long_s=low<lower_bb_s//ta.crossunder(low,lower_bb_s)
bb_short_s=high>upper_bb_s//ta.crossover(high,upper_bb_s)
//filter
upper_bb_f=f_sma(bb_length_f)+dev_f
lower_bb_f=f_sma(bb_length_f)-dev_f
varboolbb_dnx_buy=false
varboolbb_upx_sell=false
iflow<lower_bb_fandbacktest_period()
bb_dnx_buy:=true
bb_upx_sell:=false
ifhigh>upper_bb_fandbacktest_period()
bb_upx_sell:=true
bb_dnx_buy:=false
bb_long_f=bb_dnx_buy//[pine][/pine]
bb_short_f=bb_upx_sell
//exit
upper_bb_x=f_sma(bb_length_x)+dev_x
lower_bb_x=f_sma(bb_length_x)-dev_x
bb_long_x=tog_exit?ta.crossunder(low,lower_bb_x):low<lower_bb_x
bb_short_x=tog_exit?ta.crossover(high,upper_bb_x):high>upper_bb_x
//--------------------------trix--------------------------
trix_f=10000*ta.change(ta.ema(ta.ema(ta.ema(math.log(close),trix_len_f),trix_len_f),trix_len_f))
trix_x=10000*ta.change(ta.ema(ta.ema(ta.ema(math.log(close),trix_len_x),trix_len_x),trix_len_x))
trix_slo_up_f=ta.rising(trix_f,1)
trix_slo_up_x=tog_exit?ta.rising(trix_x,1)andnotta.rising(trix_x,1)[1]:ta.rising(trix_x,1)
trix_slo_dn_x=tog_exit?ta.falling(trix_x,1)andnotta.falling(trix_x,1)[1]:ta.falling(trix_x,1)
//-------------------------hma----------------------------
hma_f=ta.hma(close,hma_len_f)//entryfilter//[repaint=='Allowed'?0:1]
hma_x=ta.hma(close,hma_len_x)//exit
hma_up_f=ta.rising(hma_f,1)
hma_dn_f=ta.falling(hma_f,1)//entryfilter
hma_up_x=tog_exit?ta.rising(hma_x,1)andnotta.rising(hma_x,1)[1]:ta.rising(hma_x,1)//exit
hma_dn_x=tog_exit?ta.falling(hma_x,1)andnotta.falling(hma_x,1)[1]:ta.falling(hma_x,1)
//-------------------2hmacross-----------------------
f_hma3(_src,_len)=>ta.wma(ta.wma(close,(_len/2)/3)*3-ta.wma(close,(_len/2)/2)-ta.wma(close,(_len/2)),(_len/2))
//entryfilter
hma_n_f=ta.hma(hl2,hma2_len_f)//[repaint=='Allowed'?0:1]
hma_m_f=f_hma3(hl2,hma2_len_f)//[repaint=='Allowed'?0:1]
hma_c_up_f=hma_m_f>hma_n_f
hma_c_dn_f=hma_m_f<hma_n_f
//exit
hma_n_x=ta.hma(hl2,hma2_len_x)//[repaint=='Allowed'?0:1]
hma_m_x=f_hma3(hl2,hma2_len_x)//[repaint=='Allowed'?0:1]
hma_c_up_x=tog_exit?ta.crossover(hma_m_x,hma_n_x):hma_m_x>hma_n_x
hma_c_dn_x=tog_exit?ta.crossunder(hma_m_x,hma_n_x):hma_m_x<hma_n_x
//----------------williamsfractalstrendlines-----------------
up_w_fr=ta.pivothigh(2,2)
dn_w_fr=ta.pivotlow(2,2)
y1_frup_1=ta.valuewhen(up_w_fr,high[2],1)
y0_frup_0=ta.valuewhen(up_w_fr,high[2],0)
y1_frdn_1=ta.valuewhen(dn_w_fr,low[2],1)
y0_frdn_0=ta.valuewhen(dn_w_fr,low[2],0)
//bar-idloopstogetx1andx2forline.new()
xup0=2
fori=1to25by1
ifhigh[i+2]>=high[i+3]andhigh[i+2]>high[i+4]andhigh[i+2]>high[i+1]andhigh[i+2]>=high[i+0]
break
xup0:=xup0+1
xup0
xup1=xup0
fori=xup1to40by1
ifhigh[i+2]>=high[i+3]andhigh[i+2]>high[i+4]andhigh[i+2]>high[i+1]andhigh[i+2]>=high[i+0]
break
xup1:=xup1+1
xup1
xdn0=2
fori=1to25by1
iflow[i+2]<=low[i+3]andlow[i+2]<low[i+4]andlow[i+2]<low[i+1]andlow[i+2]<=low[i+0]
break
xdn0:=xdn0+1
xdn0
xdn1=xdn0
fori=xdn1to40by1
iflow[i+2]<=low[i+3]andlow[i+2]<low[i+4]andlow[i+2]<low[i+1]andlow[i+2]<=low[i+0]
break
xdn1:=xdn1+1
xdn1
//y-linebreakvaluesforupper_lineandlower_line
y_up_lvl=(y0_frup_0-y1_frup_1)/(xup1+2-xup0)*xup0+y0_frup_0//y=slope*x0+y0
y_dn_lvl=(y0_frdn_0-y1_frdn_1)/(xdn1+2-xdn0)*xdn0+y0_frdn_0
//exit/filter
//frup_buy=ta.crossover(high,y0_frup_0)
//frdn_sell=ta.crossunder(low,y0_frdn_0)
buy_up_line=tog_exit?ta.crossover(high,y_up_lvl):high>y_up_lvl//orfrup_buy
sell_dn_line=tog_exit?ta.crossunder(low,y_dn_lvl):low<y_dn_lvl//orfrdn_sell
//------------------------grid--------------------------
re_grid=0.
re_grid:=nz(high>re_grid[1]+grid_gaporlow<re_grid[1]-grid_gap?close:re_grid[1])
grid_ct_buy=re_grid<re_grid[1]
grid_ct_sell=re_grid>re_grid[1]
grid_re_buy=re_grid>re_grid[1]
grid_re_sell=re_grid<re_grid[1]
//plot(re_grid,"PlotEntryGrid",color=color.yellow,linewidth=2)
//----------------------reversefractalsignalandfilter--------------------------
up_bar=close[0]>open[0]
dn_bar=close[0]<open[0]
hl=low[0]>low[1]
lh=high[0]<high[1]
rev_up_fr_sell=ta.pivothigh(high,3,0)anddn_barandup_bar[1]orta.pivothigh(high,4,1)anddn_barandup_bar[1]orta.pivothigh(high,4,1)andlhandup_barandup_bar[1]
rev_dn_fr_buy=ta.pivotlow(low,3,0)andup_baranddn_bar[1]orta.pivotlow(low,4,1)andup_baranddn_bar[1]orta.pivotlow(low,4,1)andhlanddn_baranddn_bar[1]
//--------------------------pinbarentrysignal-------------------------------
candle_body=math.abs(open-close)
pivot_up=ta.pivothigh(high,p_bar_sens_2,0)
pivot_dn=ta.pivotlow(low,p_bar_sens_2,0)
up_wick=close>open?high-close:high-open
dn_wick=close>open?open-low:close-low
pin_up_def=high-open>p_bar_sens_1*candle_bodyandclose<openorhigh-close>p_bar_sens_1*candle_bodyandclose>open
pin_dn_def=open-low>p_bar_sens_1*candle_bodyandclose>openorclose-low>p_bar_sens_1*candle_bodyandclose<open
p_bar_sell=pin_up_defandpivot_upandup_wick>dn_wick
p_bar_buy=pin_dn_defandpivot_dnandup_wick<dn_wick
//------------------ema21/sma20filter-------------------------
ema_f(src,ema_len)=>ta.ema(src,ema_len)//mafunctiondefinition
sma_f(src,sma_len)=>ta.sma(src,sma_len)
ema_21=ema_f(close,21)
sma_20=sma_f(close,20)
ma_cross_buy=high>ema_21andhigh>sma_20andema_21>sma_20
ma_cross_sell=low<ema_21andlow<sma_20andema_21<sma_20
//------------------------ema1xema2---------------------------
ema1_f=ema_f(close,ema1_len_f)
ema2_f=ema_f(close,ema2_len_f)
ema1_x=ema_f(close,ema1_len_x)
ema2_x=ema_f(close,ema2_len_x)
ema_1x2_buy_f=ema1_f>ema2_f
ema_1x2_buy_x=tog_exit?ta.crossover(ema1_x,ema2_x):ema1_x>ema2_x
ema_1x2_sell_x=tog_exit?ta.crossunder(ema1_x,ema2_x):ema1_x<ema2_x
//---------------------alma------------------------
//filters
alma_f=ta.alma(close,windowsize_f,offset_f,sigma_f)
alma_slo_up_f=ta.rising(alma_f,1)
//exits
alma_x=ta.alma(close,windowsize_x,offset_x,sigma_x)
alma_slo_up_x=tog_exit?ta.rising(alma_x,1)andnotta.rising(alma_x,1)[1]:ta.rising(alma_x,1)
alma_slo_dn_x=tog_exit?ta.falling(alma_x,1)andnotta.falling(alma_x,1)[1]:ta.falling(alma_x,1)
//-----------------------macdfilter-----------------------
[macdLine_f,signalLine_f,histLine_f]=ta.macd(close,12,26,9)
//filters
macd_buy=macdLine_f>signalLine_f
macd_sell=macdLine_f<signalLine_f
//exit
macd_buy_x=tog_exit?ta.crossover(macdLine_f,signalLine_f):macdLine_f>signalLine_f
macd_sell_x=tog_exit?ta.crossunder(macdLine_f,signalLine_f):macdLine_f<signalLine_f
//macdfastlineslope
macd_slope_up=ta.rising(macdLine_f,slope_len)//entryandfilter
macd_slope_up_x=tog_exit?ta.rising(macdLine_f,slope_len_x)andnotta.rising(macdLine_f,slope_len_x)[1]:ta.rising(macdLine_f,slope_len_x)//exit
macd_slope_dn_x=tog_exit?ta.falling(macdLine_f,slope_len_x)andnotta.falling(macdLine_f,slope_len_x)[1]:ta.falling(macdLine_f,slope_len_x)
//----------------------rsifiltersandentrysignal------------------------
//entry
rsi_f=ta.rsi(close,rsi_period)
rsi_f_buy=rsi_f>50
rsi_f_sell=rsi_f<50
//filters
rsi_f_buy_f=rsi_f>50
rsi_f_sell_f=rsi_f<50
//exit
rsi_f_x=ta.rsi(close,rsi_period_x)
rsi_f_buy_x=tog_exit?ta.crossover(rsi_f_x,50):rsi_f_x>50
rsi_f_sell_x=tog_exit?ta.crossunder(rsi_f_x,50):rsi_f_x<50
//----------------BillWilliamsFractals(filterandentrysignal)-----------------
up_fr=ta.pivothigh(fr_period,fr_period)
dn_fr=ta.pivotlow(fr_period,fr_period)
fractal_up_v=ta.valuewhen(up_fr,high[fr_period],0)
fractal_dn_v=ta.valuewhen(dn_fr,low[fr_period],0)
//entrysignal
fr_upx=ta.crossover(high,fractal_up_v)
fr_dnx=ta.crossunder(low,fractal_dn_v)
//filters
fr_upx_f=high>fractal_up_v
fr_dnx_f=low<fractal_dn_v
//exit
up_fr_x=ta.pivothigh(fr_period_x,fr_period_x)
dn_fr_x=ta.pivotlow(fr_period_x,fr_period_x)
fractal_up_v_x=ta.valuewhen(up_fr_x,high[fr_period_x],fr_past_x)
fractal_dn_v_x=ta.valuewhen(dn_fr_x,low[fr_period_x],fr_past_x)
fr_upx_x=tog_exit?ta.crossover(high,fractal_up_v_x):high>fractal_up_v_x
fr_dnx_x=tog_exit?ta.crossunder(low,fractal_dn_v_x):low<fractal_dn_v_x
//-----------higherlowandhigherhigh-lowerhighandlowerlow-entry--------------
fractal_dn_v_1=ta.valuewhen(dn_fr,low[fr_period],1)
fractal_up_v_1=ta.valuewhen(up_fr,high[fr_period],1)
hl_hh_buy=fractal_dn_v>fractal_dn_v_1andhigh>fractal_up_v//123signalandfilter
lh_ll_sell=fractal_up_v<fractal_up_v_1andlow<fractal_dn_v
//--------------------SuperTrendfilterandentrysignal---------------------
//entry
[SuperTrend,Dir]=ta.supertrend(mult,len)
sup_buy=high>SuperTrend
sup_sell=low<SuperTrend
//filters
sup_buy_f=high>SuperTrend
sup_sell_f=low<SuperTrend
//exit
[SuperTrend_x,Dir_x]=ta.supertrend(mult_x,len_x)
sup_buy_x=tog_exit?ta.crossover(high,SuperTrend_x):high>SuperTrend_x
sup_sell_x=tog_exit?ta.crossunder(low,SuperTrend_x):low<SuperTrend_x
//-----------------ParabolicSARSignal(pb/ps)andfilter-------------------
psar_buy=tog_exit?ta.crossover(high,ta.sar(start,inc,max)):high>ta.sar(start,inc,max)[0]
psar_sell=tog_exit?ta.crossunder(low,ta.sar(start,inc,max)):low<ta.sar(start,inc,max)[0]
//--------------------------ADXentryandfilter---------------------------
//adxsignal1/2andfilter
[diplus_s,diminus_s,adx_s]=ta.dmi(di_length_s,adx_smooth_s)
adx_above_thres=adx_s>adx_thres_s
long_1=diplus_s>diminus_sandadx_s<diplus_sandadx_s>diminus_s//ADXDMIentryandfilterclassic
short_1=diplus_s<diminus_sandadx_s>diplus_sandadx_s<diminus_s
long_2=diplus_s>diminus_sandadx_above_thres
short_2=diplus_s<diminus_sandadx_above_thres
//filter
adx_up_f=ta.rising(adx_s,1)//ADXfilterrising/falling
//exit
[diplus_x,diminus_x,adx_x]=ta.dmi(di_length_x,adx_smooth_x)
adx_thres_f_x=tog_exit?ta.crossunder(adx_x,adx_thres_x):adx_x<adx_thres_x//ADXexitclassic
dmi_long_x=tog_exit?ta.crossover(diplus_x,diminus_x):diplus_x>diminus_x//dmiexit
dmi_short_x=tog_exit?ta.crossunder(diplus_x,diminus_x):diplus_x<diminus_x
adx_dn_x=tog_exit?ta.falling(adx_x,1)andnotta.falling(adx_x,1)[1]:ta.falling(adx_x,1)//ADXexitfalling
//--------------------------SMA50filterandentry---------------------------
//entry
sma_buy=close[2]>ema_f(close,ma_period)
sma_sell=close[2]<ema_f(close,ma_period)
//filters
sma_buy_f=close[2]>sma_f(close,ma_period)
sma_sell_f=close[2]<sma_f(close,ma_period)
//exit
sma_buy_x=tog_exit?ta.crossover(close[1],sma_f(close,ma_period_x)):close[1]>sma_f(close,ma_period_x)
sma_sell_x=tog_exit?ta.crossunder(close[1],sma_f(close,ma_period_x)):close[1]<sma_f(close,ma_period_x)
//---------------------------Segmentssignal----------------------------
count1_l=0
count2_l=0
segment_1_stat_l=false
segment_2_stat_l=false
segment_3_stat_l=false
higher_low=low>low[1]
varlinesegment_low_1_l=na
varlinesegment_low_2_l=na
varlinesegment_low_3_l=na
//longsegments
fori=0tosbby1
count1_l:=count1_l+1
iflow[1]>low[i+2]andhigher_low
segment_1_stat_l:=true
break
fori=count1_ltosb+count1_lby1
count2_l:=count2_l+1
iflow[1+count1_l]>low[i+2]andsegment_1_stat_l
segment_2_stat_l:=true
break
fori=count2_ltosb+count2_lby1
iflow[1+count1_l+count2_l]>low[i+2+count1_l]andsegment_2_stat_l
segment_3_stat_l:=true
break
//shortsegments
count1_s=0
count2_s=0
segment_1_stat_s=false
segment_2_stat_s=false
segment_3_stat_s=false
lower_high=high<high[1]
varlinesegment_high_1=na
varlinesegment_high_2=na
varlinesegment_high_3=na
fori=0tosbby1
count1_s:=count1_s+1
ifhigh[1]<high[i+2]andlower_high
segment_1_stat_s:=true
break
fori=count1_stosb+count1_sby1
count2_s:=count2_s+1
ifhigh[1+count1_s]<high[i+2]andsegment_1_stat_s
segment_2_stat_s:=true
break
fori=count2_stosb+count2_sby1
ifhigh[1+count1_s+count2_s]<high[i+2+count1_s]andsegment_2_stat_s
segment_3_stat_s:=true
break
//segmentssignals
seg_stat_l=segment_1_stat_landsegment_2_stat_landsegment_3_stat_l
seg_stat_s=segment_1_stat_sandsegment_2_stat_sandsegment_3_stat_s
//entry
segments_buy=high>high[1]andseg_stat_l[1]
segments_sell=low<low[1]andseg_stat_s[1]
//filters
segments_buy_f=high>high[1]andseg_stat_l[1]
segments_sell_f=low<low[1]andseg_stat_s[1]
//--------------------------------------------------------------------------EntrySignalOptions----------------------------------------------------------------------
//buysignaloptions1
opt_sig_buy_1=x_opt_1=='---'?false:
x_opt_1=='BBreverse'?bb_long_s:
x_opt_1=='Grid-countertrend'?grid_ct_buy:
x_opt_1=='Grid-reentry'?grid_re_buy:
x_opt_1=='Pinbar'?p_bar_buy:
x_opt_1=='Fractals'?fr_upx:
x_opt_1=='Reversefractal'?rev_dn_fr_buy:false
//sellsignaloptions1
opt_sig_sell_1=x_opt_1=='---'?false:
x_opt_1=='BBreverse'?bb_short_s:
x_opt_1=='Grid-countertrend'?grid_ct_sell:
x_opt_1=='Grid-reentry'?grid_re_sell:
x_opt_1=='Pinbar'?p_bar_sell:
x_opt_1=='Fractals'?fr_dnx:
x_opt_1=='Reversefractal'?rev_up_fr_sell:false
//buysignaloptions2
opt_sig_buy_2=x_opt_2=='---'?false:
x_opt_2=='BBreverse'?bb_long_s:
x_opt_2=='Grid-countertrend'?grid_ct_buy:
x_opt_2=='Grid-reentry'?grid_re_buy:
x_opt_2=='Pinbar'?p_bar_buy:
x_opt_2=='Fractals'?fr_upx:
x_opt_2=='Reversefractal'?rev_dn_fr_buy:false
//sellsignaloptions2
opt_sig_sell_2=x_opt_2=='---'?false:
x_opt_2=='BBreverse'?bb_short_s:
x_opt_2=='Grid-countertrend'?grid_ct_sell:
x_opt_2=='Grid-reentry'?grid_re_sell:
x_opt_2=='Pinbar'?p_bar_sell:
x_opt_2=='Fractals'?fr_dnx:
x_opt_2=='Reversefractal'?rev_up_fr_sell:false
//------------------------------------------------------------------------------entryfilters-----------------------------------------------------------------------------
f_secureSecurity(_symbol,_res,_src)=>request.security(_symbol,_res,_src[repaint=='Allowed'?0:1])//norepainting-takenfromPineCoders

entry_filter_sig_buy_1=entry_f_1=='---'?true:
entry_f_1=='TRIXslopefilter'?trix_slo_up_f:
entry_f_1=='EMA1xEMA2filter'?ema_1x2_buy_f:
entry_f_1=='2HMAcrossfilter'?hma_c_up_f:
entry_f_1=='HMAslopefilter'?hma_up_f:
entry_f_1=='MACD(fast)slopefilter'?macd_slope_up:
entry_f_1=='MACDfilter'?macd_buy:
entry_f_1=='RSI50filter'?rsi_f_buy_f:
entry_f_1=='Fractalsfilter'?fr_upx_f:
entry_f_1=='SuperTrendfilter'?sup_buy_f:
entry_f_1=='ParabolicSARfilter'?psar_buy:
entry_f_1=='SMAfilter'?sma_buy_f:
entry_f_1=='ADXslopefilter'?adx_up_f:
entry_f_1=='ADXDMIfilter'?adx_above_thres:
entry_f_1=='Fractals1-2-3filter'?hl_hh_buy:
entry_f_1=='Reversefractalfilter'?rev_dn_fr_buy:
entry_f_1=='EMA21/SMA20filter'?ma_cross_buy:
entry_f_1=='ALMAslopefilter'?alma_slo_up_f:
entry_f_1=='PriceXKumofilter'?kumo_buy_f:
entry_f_1=='PriceXKijunfilter'?kijun_buy_f:
entry_f_1=='Kumoflipfilter'?kumo_flip_buy_f:
entry_f_1=='ChikouXpricefilter'?chikou_X_price_buy_f:
entry_f_1=='ChikouXKumofilter'?chikou_X_kumo_buy_f:
entry_f_1=='PriceXTenkanfilter'?price_X_tenkan_buy_f:
entry_f_1=='TenkanXKumofilter'?tenkan_X_kumo_buy_f:
entry_f_1=='TenkanXKijunfilter'?tenkan_X_kijun_buy_f:true
entry_filter_sig_sell_1=entry_f_1=='---'?true:
entry_f_1=='TRIXslopefilter'?nottrix_slo_up_f:
entry_f_1=='EMA1xEMA2filter'?notema_1x2_buy_f:
entry_f_1=='2HMAcrossfilter'?hma_c_dn_f:
entry_f_1=='HMAslopefilter'?hma_dn_f:
entry_f_1=='MACD(fast)slopefilter'?notmacd_slope_up:
entry_f_1=='MACDfilter'?macd_sell:
entry_f_1=='RSI50filter'?rsi_f_sell_f:
entry_f_1=='Fractalsfilter'?fr_dnx_f:
entry_f_1=='SuperTrendfilter'?sup_sell_f:
entry_f_1=='ParabolicSARfilter'?psar_sell:
entry_f_1=='SMAfilter'?sma_sell_f:
entry_f_1=='ADXslopefilter'?notadx_up_f:
entry_f_1=='ADXDMIfilter'?adx_above_thres:
entry_f_1=='Fractals1-2-3filter'?lh_ll_sell:
entry_f_1=='Reversefractalfilter'?rev_up_fr_sell:
entry_f_1=='EMA21/SMA20filter'?ma_cross_sell:
entry_f_1=='ALMAslopefilter'?notalma_slo_up_f:
entry_f_1=='PriceXKumofilter'?kumo_sell_f:
entry_f_1=='PriceXKijunfilter'?kijun_sell_f:
entry_f_1=='Kumoflipfilter'?kumo_flip_sell_f:
entry_f_1=='ChikouXpricefilter'?chikou_X_price_sell_f:
entry_f_1=='ChikouXKumofilter'?chikou_X_kumo_sell_f:
entry_f_1=='PriceXTenkanfilter'?price_X_tenkan_sell_f:
entry_f_1=='TenkanXKumofilter'?tenkan_X_kumo_sell_f:
entry_f_1=='TenkanXKijunfilter'?tenkan_X_kijun_sell_f:true
entry_filter_sig_buy_2=entry_f_2=='---'?true:
entry_f_2=='TRIXslopefilter'?trix_slo_up_f:
entry_f_2=='EMA1xEMA2filter'?ema_1x2_buy_f:
entry_f_2=='2HMAcrossfilter'?hma_c_up_f:
entry_f_2=='HMAslopefilter'?hma_up_f:
entry_f_2=='MACD(fast)slopefilter'?macd_slope_up:
entry_f_2=='MACDfilter'?macd_buy:
entry_f_2=='RSI50filter'?rsi_f_buy_f:
entry_f_2=='Fractalsfilter'?fr_upx_f:
entry_f_2=='SuperTrendfilter'?sup_buy_f:
entry_f_2=='ParabolicSARfilter'?psar_buy:
entry_f_2=='SMAfilter'?sma_buy_f:
entry_f_2=='ADXslopefilter'?adx_up_f:
entry_f_2=='ADXDMIfilter'?adx_above_thres:
entry_f_2=='Fractals1-2-3filter'?hl_hh_buy:
entry_f_2=='Reversefractalfilter'?rev_dn_fr_buy:
entry_f_2=='EMA21/SMA20filter'?ma_cross_buy:
entry_f_2=='ALMAslopefilter'?alma_slo_up_f:
entry_f_2=='PriceXKumofilter'?kumo_buy_f:
entry_f_2=='PriceXKijunfilter'?kijun_buy_f:
entry_f_2=='Kumoflipfilter'?kumo_flip_buy_f:
entry_f_2=='ChikouXpricefilter'?chikou_X_price_buy_f:
entry_f_2=='ChikouXKumofilter'?chikou_X_kumo_buy_f:
entry_f_2=='PriceXTenkanfilter'?price_X_tenkan_buy_f:
entry_f_2=='TenkanXKumofilter'?tenkan_X_kumo_buy_f:
entry_f_2=='TenkanXKijunfilter'?tenkan_X_kijun_buy_f:true
entry_filter_sig_sell_2=entry_f_2=='---'?true:
entry_f_2=='TRIXslopefilter'?nottrix_slo_up_f:
entry_f_2=='EMA1xEMA2filter'?notema_1x2_buy_f:
entry_f_2=='2HMAcrossfilter'?hma_c_dn_f:
entry_f_2=='HMAslopefilter'?hma_dn_f:
entry_f_2=='MACD(fast)slopefilter'?notmacd_slope_up:
entry_f_2=='MACDfilter'?macd_sell:
entry_f_2=='RSI50filter'?rsi_f_sell_f:
entry_f_2=='Fractalsfilter'?fr_dnx_f:
entry_f_2=='SuperTrendfilter'?sup_sell_f:
entry_f_2=='ParabolicSARfilter'?psar_sell:
entry_f_2=='SMAfilter'?sma_sell_f:
entry_f_2=='ADXslopefilter'?notadx_up_f:
entry_f_2=='ADXDMIfilter'?adx_above_thres:
entry_f_2=='Fractals1-2-3filter'?lh_ll_sell:
entry_f_2=='Reversefractalfilter'?rev_up_fr_sell:
entry_f_2=='EMA21/SMA20filter'?ma_cross_sell:
entry_f_2=='ALMAslopefilter'?notalma_slo_up_f:
entry_f_2=='PriceXKumofilter'?kumo_sell_f:
entry_f_2=='PriceXKijunfilter'?kijun_sell_f:
entry_f_2=='Kumoflipfilter'?kumo_flip_sell_f:
entry_f_2=='ChikouXpricefilter'?chikou_X_price_sell_f:
entry_f_2=='ChikouXKumofilter'?chikou_X_kumo_sell_f:
entry_f_2=='PriceXTenkanfilter'?price_X_tenkan_sell_f:
entry_f_2=='TenkanXKumofilter'?tenkan_X_kumo_sell_f:
entry_f_2=='TenkanXKijunfilter'?tenkan_X_kijun_sell_f:true
//entrybuyfilter1
entry_filter_buy_1=htf_entr_opt_1=='current'?entry_filter_sig_buy_1[repaint=='Allowed'?0:1]:
f_secureSecurity(syminfo.tickerid,
htf_entr_opt_1=='5m'?'5':htf_entr_opt_1=='10m'?'10':htf_entr_opt_1=='15m'?'15':htf_entr_opt_1=='30m'?'30':htf_entr_opt_1=='1H'?'60':htf_entr_opt_1=='2H'?'120':
htf_entr_opt_1=='3H'?'180':htf_entr_opt_1=='4H'?'240':htf_entr_opt_1=='6H'?'360':htf_entr_opt_1=='8H'?'480':htf_entr_opt_1=='12H'?'720':
htf_entr_opt_1=='D'?'D':htf_entr_opt_1=='3D'?'3D':htf_entr_opt_1=='W'?'W':htf_entr_opt_1=='M'?'M':na,entry_filter_sig_buy_1)
entry_filter_buy_11=entry_f_1=='Fractalstrendlinesfilter(notffilter)'?buy_up_line[repaint=='Allowed'?0:1]:
entry_f_1=='Segmentsfilter(notffilter)'?segments_buy[repaint=='Allowed'?0:1]:
entry_f_1=='BBreversefilter(notffilter)'?bb_long_f[repaint=='Allowed'?0:1]:
entry_f_1=='PricefilteredKumoflipfilter(notffilter)'?price_filtered_kumo_flip_buy_f[repaint=='Allowed'?0:1]:true
//entrysellfilter1
entry_filter_sell_1=htf_entr_opt_1=='Current'?entry_filter_sig_sell_1[repaint=='Allowed'?0:1]:
f_secureSecurity(syminfo.tickerid,
htf_entr_opt_1=='5m'?'5':htf_entr_opt_1=='10m'?'10':htf_entr_opt_1=='15m'?'15':
htf_entr_opt_1=='30m'?'30':htf_entr_opt_1=='1H'?'60':htf_entr_opt_1=='2H'?'120':htf_entr_opt_1=='3H'?'180':htf_entr_opt_1=='4H'?'240':
htf_entr_opt_1=='6H'?'360':htf_entr_opt_1=='8H'?'480':htf_entr_opt_1=='12H'?'720':htf_entr_opt_1=='D'?'D':htf_entr_opt_1=='3D'?'3D':
htf_entr_opt_1=='W'?'W':htf_entr_opt_1=='M'?'M':na,entry_filter_sig_sell_1)
entry_filter_sell_11=entry_f_1=='Fractalstrendlinesfilter(notffilter)'?sell_dn_line[repaint=='Allowed'?0:1]:
entry_f_1=='Segmentsfilter(notffilter)'?segments_sell[repaint=='Allowed'?0:1]:
entry_f_1=='BBreversefilter(notffilter)'?bb_short_f[repaint=='Allowed'?0:1]:
entry_f_1=='PricefilteredKumoflipfilter(notffilter)'?price_filtered_kumo_flip_sell_f[repaint=='Allowed'?0:1]:true
//entrybuyfilter2
entry_filter_buy_2=htf_entr_opt_2=='Current'?entry_filter_sig_buy_2[repaint=='Allowed'?0:1]:
f_secureSecurity(syminfo.tickerid,
htf_entr_opt_2=='5m'?'5':htf_entr_opt_2=='10m'?'10':htf_entr_opt_2=='15m'?'15':
htf_entr_opt_2=='30m'?'30':htf_entr_opt_2=='1H'?'60':htf_entr_opt_2=='2H'?'120':htf_entr_opt_2=='3H'?'180':htf_entr_opt_2=='4H'?'240':
htf_entr_opt_2=='6H'?'360':htf_entr_opt_1=='8H'?'480':htf_entr_opt_2=='12H'?'720':htf_entr_opt_2=='D'?'D':htf_entr_opt_2=='3D'?'3D':
htf_entr_opt_2=='W'?'W':htf_entr_opt_2=='M'?'M':na,entry_filter_sig_buy_2)
entry_filter_buy_22=entry_f_2=='Fractalstrendlinesfilter(notffilter)'?buy_up_line[repaint=='Allowed'?0:1]:
entry_f_2=='Segmentsfilter(notffilter)'?segments_buy[repaint=='Allowed'?0:1]:
entry_f_2=='BBreversefilter(notffilter)'?bb_long_f[repaint=='Allowed'?0:1]:
entry_f_2=='PricefilteredKumoflipfilter(notffilter)'?price_filtered_kumo_flip_buy_f[repaint=='Allowed'?0:1]:true
//entrysellfilter2
entry_filter_sell_2=htf_entr_opt_2=='Current'?entry_filter_sig_sell_2[repaint=='Allowed'?0:1]:
f_secureSecurity(syminfo.tickerid,
htf_entr_opt_2=='5m'?'5':htf_entr_opt_2=='10m'?'10':htf_entr_opt_2=='15m'?'15':
htf_entr_opt_2=='30m'?'30':htf_entr_opt_2=='1H'?'60':htf_entr_opt_2=='2H'?'120':htf_entr_opt_2=='3H'?'180':htf_entr_opt_2=='4H'?'240':
htf_entr_opt_2=='6H'?'360':htf_entr_opt_1=='8H'?'480':htf_entr_opt_2=='12H'?'720':htf_entr_opt_2=='D'?'D':htf_entr_opt_2=='3D'?'3D':
htf_entr_opt_2=='W'?'W':htf_entr_opt_2=='M'?'M':na,entry_filter_sig_sell_2)
entry_filter_sell_22=entry_f_2=='Fractalstrendlinesfilter(notffilter)'?sell_dn_line[repaint=='Allowed'?0:1]:
entry_f_2=='Segmentsfilter(notffilter)'?segments_sell[repaint=='Allowed'?0:1]:
entry_f_2=='BBreversefilter(notffilter)'?bb_short_f[repaint=='Allowed'?0:1]:
entry_f_2=='PricefilteredKumoflipfilter(notffilter)'?price_filtered_kumo_flip_sell_f[repaint=='Allowed'?0:1]:true
//-----------------------------------------------------------------------exitfilters------------------------------------------------------------------------
exit_sig_buy_1=exit_f_1=='---'?false:
exit_f_1=='BBreverseexit'?bb_long_x:
exit_f_1=='TRIXslopeexit'?trix_slo_up_x:
exit_f_1=='EMA1xEMA2exit'?ema_1x2_buy_x:
exit_f_1=='2HMAcrossexit'?hma_c_up_x:
exit_f_1=='HMAslopeexit'?hma_up_x:
exit_f_1=='ALMAslopeexit'?alma_slo_up_x:
exit_f_1=='Reversefractalexit'?rev_dn_fr_buy:
exit_f_1=='MACD(fast)slopeexit'?macd_slope_up_x:
exit_f_1=='MACDexit'?macd_buy_x:
exit_f_1=='RSI50exit'?rsi_f_buy_x:
exit_f_1=='Fractalsexit'?fr_upx_x:
exit_f_1=='SuperTrendexit'?sup_buy_x:
exit_f_1=='ParabolicSARexit'?psar_buy:
exit_f_1=='SMAexit'?sma_buy_x:
exit_f_1=='DMIexit'?dmi_long_x:
exit_f_1=='ADXslopeexit'?adx_dn_x:
exit_f_1=='ADXThresholdexit'?adx_thres_f_x:
exit_f_1=='Cloudexit'?kumo_buy_x:
exit_f_1=='Kijunexit'?kijun_buy_x:false
exit_sig_sell_1=exit_f_1=='---'?false:
exit_f_1=='BBreverseexit'?bb_short_x:
exit_f_1=='TRIXslopeexit'?trix_slo_dn_x:
exit_f_1=='EMA1xEMA2exit'?ema_1x2_sell_x:
exit_f_1=='2HMAcrossexit'?hma_c_dn_x:
exit_f_1=='HMAslopeexit'?hma_dn_x:
exit_f_1=='ALMAslopeexit'?alma_slo_dn_x:
exit_f_1=='Reversefractalexit'?rev_up_fr_sell:
exit_f_1=='MACD(fast)slopeexit'?macd_slope_dn_x:
exit_f_1=='MACDexit'?macd_sell_x:
exit_f_1=='RSI50exit'?rsi_f_sell_x:
exit_f_1=='Fractalsexit'?fr_dnx_x:
exit_f_1=='SuperTrendexit'?sup_sell_x:
exit_f_1=='ParabolicSARexit'?psar_sell:
exit_f_1=='SMAexit'?sma_sell_x:
exit_f_1=='DMIexit'?dmi_short_x:
exit_f_1=='ADXslopeexit'?adx_dn_x:
exit_f_1=='ADXThresholdexit'?adx_thres_f_x:
exit_f_1=='Cloudexit'?kumo_sell_x:
exit_f_1=='Kijunexit'?kijun_sell_x:false
exit_sig_buy_2=exit_f_2=='---'?false:
exit_f_2=='BBreverseexit'?bb_long_x:
exit_f_2=='TRIXslopeexit'?trix_slo_up_x:
exit_f_2=='EMA1xEMA2exit'?ema_1x2_buy_x:
exit_f_2=='2HMAcrossexit'?hma_c_up_x:
exit_f_2=='HMAslopeexit'?hma_up_x:
exit_f_2=='ALMAslopeexit'?alma_slo_up_x:
exit_f_2=='Reversefractalexit'?rev_dn_fr_buy:
exit_f_2=='MACD(fast)slopeexit'?macd_slope_up_x:
exit_f_2=='MACDexit'?macd_buy_x:
exit_f_2=='RSI50exit'?rsi_f_buy_x:
exit_f_2=='Fractalsexit'?fr_upx_x:
exit_f_2=='SuperTrendexit'?sup_buy_x:
exit_f_2=='ParabolicSARexit'?psar_buy:
exit_f_2=='SMAexit'?sma_buy_x:
exit_f_2=='DMIexit'?dmi_long_x:
exit_f_2=='ADXslopeexit'?adx_dn_x:
exit_f_2=='ADXThresholdexit'?adx_thres_f_x:
exit_f_2=='Cloudexit'?kumo_buy_x:
exit_f_2=='Kijunexit'?kijun_buy_x:false
exit_sig_sell_2=exit_f_2=='---'?false:
exit_f_2=='BBreverseexit'?bb_short_s:
exit_f_2=='TRIXslopeexit'?trix_slo_dn_x:
exit_f_2=='EMA1xEMA2exit'?ema_1x2_sell_x:
exit_f_2=='2HMAcrossexit'?hma_c_dn_x:
exit_f_2=='HMAslopeexit'?hma_dn_x:
exit_f_2=='ALMAslopeexit'?alma_slo_dn_x:
exit_f_2=='Reversefractalexit'?rev_up_fr_sell:
exit_f_2=='MACD(fast)slopeexit'?macd_slope_dn_x:
exit_f_2=='MACDexit'?macd_sell_x:
exit_f_2=='RSI50exit'?rsi_f_sell_x:
exit_f_2=='Fractalsexit'?fr_dnx_x:
exit_f_2=='SuperTrendexit'?sup_sell_x:
exit_f_2=='ParabolicSARexit'?psar_sell:
exit_f_2=='SMAexit'?sma_sell_x:
exit_f_2=='DMIexit'?dmi_short_x:
exit_f_2=='ADXslopeexit'?adx_dn_x:
exit_f_2=='ADXThresholdexit'?adx_thres_f_x:
exit_f_2=='Cloudexit'?kumo_sell_x:
exit_f_2=='Kijunexit'?kijun_sell_x:false
//highertimeframefilter
//shortexitbuyfilter1
exit_filter_buy_1=htf_exit_opt_1=='Current'?exit_sig_buy_1[repaint=='Allowed'?0:1]:
f_secureSecurity(syminfo.tickerid,
htf_exit_opt_1=='5m'?'5':htf_exit_opt_1=='10m'?'10':htf_exit_opt_1=='15m'?'15':
htf_exit_opt_1=='30m'?'30':htf_exit_opt_1=='1H'?'60':htf_exit_opt_1=='2H'?'120':htf_exit_opt_1=='3H'?'180':htf_exit_opt_1=='4H'?'240':
htf_exit_opt_1=='6H'?'360':htf_entr_opt_1=='8H'?'480':htf_exit_opt_1=='12H'?'720':htf_exit_opt_1=='D'?'D':htf_exit_opt_1=='3D'?'3D':htf_exit_opt_1=='W'?'W':
htf_exit_opt_1=='M'?'M':na,exit_sig_buy_1)

exit_filter_buy_11=exit_f_1=='Fractalstrendlinesfilter(notf-filter)'?buy_up_line[repaint=='Allowed'?0:1]:false
//longexitsellfilter1
exit_filter_sell_1=htf_exit_opt_1=='Current'?exit_sig_sell_1[repaint=='Allowed'?0:1]:
f_secureSecurity(syminfo.tickerid,
htf_exit_opt_1=='5m'?'5':htf_exit_opt_1=='10m'?'10':htf_exit_opt_1=='15m'?'15':
htf_exit_opt_1=='30m'?'30':htf_exit_opt_1=='1H'?'60':htf_exit_opt_1=='2H'?'120':htf_exit_opt_1=='3H'?'180':htf_exit_opt_1=='4H'?'240':htf_exit_opt_1=='6H'?'360':
htf_entr_opt_1=='8H'?'480':htf_exit_opt_1=='12H'?'720':htf_exit_opt_1=='D'?'D':htf_exit_opt_1=='3D'?'3D':htf_exit_opt_1=='W'?'W':htf_exit_opt_1=='M'?'M':na,
exit_sig_sell_1)
exit_filter_sell_11=exit_f_1=='Fractalstrendlinesfilter(notf-filter)'?sell_dn_line[repaint=='Allowed'?0:1]:false
//shortexitbuyfilter2
exit_filter_buy_2=htf_exit_opt_2=='Current'?exit_sig_buy_2[repaint=='Allowed'?0:1]:
f_secureSecurity(syminfo.tickerid,
htf_exit_opt_2=='5m'?'5':htf_exit_opt_2=='10m'?'10':htf_exit_opt_2=='15m'?'15':
htf_exit_opt_2=='30m'?'30':htf_exit_opt_2=='1H'?'60':htf_exit_opt_2=='2H'?'120':htf_exit_opt_2=='3H'?'180':htf_exit_opt_2=='4H'?'240':htf_exit_opt_2=='6H'?'360':
htf_entr_opt_1=='8H'?'480':htf_exit_opt_2=='12H'?'720':htf_exit_opt_2=='D'?'D':htf_exit_opt_2=='3D'?'3D':htf_exit_opt_2=='W'?'W':htf_exit_opt_2=='M'?'M':na,
exit_sig_buy_2)
exit_filter_buy_22=exit_f_2=='Fractalstrendlinesfilter(notf-filter)'?buy_up_line[repaint=='Allowed'?0:1]:false
//longexitsellfilter2
exit_filter_sell_2=htf_exit_opt_2=='Current'?exit_sig_sell_2[repaint=='Allowed'?0:1]:
f_secureSecurity(syminfo.tickerid,
htf_exit_opt_2=='5m'?'5':htf_exit_opt_2=='10m'?'10':htf_exit_opt_2=='15m'?'15':
htf_exit_opt_2=='30m'?'30':htf_exit_opt_2=='1H'?'60':htf_exit_opt_2=='2H'?'120':htf_exit_opt_2=='3H'?'180':htf_exit_opt_2=='4H'?'240':htf_exit_opt_2=='6H'?'360':
htf_entr_opt_1=='8H'?'480':htf_exit_opt_2=='12H'?'720':htf_exit_opt_2=='D'?'D':htf_exit_opt_2=='3D'?'3D':htf_exit_opt_2=='W'?'W':htf_exit_opt_2=='M'?'M':na,
exit_sig_sell_2)
exit_filter_sell_22=exit_f_2=='Fractalstrendlinesfilter(notf-filter)'?sell_dn_line[repaint=='Allowed'?0:1]:false
//------------------------------------------------------------triggerandborderlevels-------------------------------------------------------
//close&stoplevel
varboolcl_st_sw=false
if(ta.cross(high,cl_st_lvl)orta.cross(low,cl_st_lvl))andbarstate.isrealtime
cl_st_sw:=true
strat_cl_st=en_close_stopandcl_st_sw
//triggerlevel
varbooltrig_sw=false
if(ta.cross(high,trig_lvl)orta.cross(low,trig_lvl))andbacktest_period()
trig_sw:=true
en_strat_st=en_trig_lvl?trig_sw:true
//upperborderlevel
varboolupper_sw=true
if(ta.cross(high,bup_lvl)orta.cross(low,bup_lvl))anden_strat_standbacktest_period()
upper_sw:=false
en_strat_bup=en_border_up?upper_sw:true
//lowerborderlevel
varboollower_sw=true
if(ta.cross(high,bdn_lvl)orta.cross(low,bdn_lvl))anden_strat_standbacktest_period()
lower_sw:=false
en_strat_bdn=en_border_dn?lower_sw:true
border_close=en_strat_stand(noten_strat_bupornoten_strat_bdn)//borderlevelclose
en_strat=en_strat_standen_strat_bupanden_strat_bdn//stopsentries
varboolen_idle=false
varboolen_close=false
ifborder_con=='Idle'
en_idle:=true
ifborder_con=='CloseAll'
en_close:=true
strat_idle=en_idle?en_strat:true//makesentirestrategyidleifbordersarecrossed
//-----------------------------------------------------------entryandexitconditions-----------------------------------------------------------
exit_long=exit_filter_sell_1orexit_filter_sell_2orexit_filter_sell_11orexit_filter_sell_22
exit_short=exit_filter_buy_1orexit_filter_buy_2orexit_filter_buy_11orexit_filter_buy_22
long_filter=entry_filter_buy_1andentry_filter_buy_2andentry_filter_buy_11andentry_filter_buy_22
short_filter=entry_filter_sell_1andentry_filter_sell_2andentry_filter_sell_11andentry_filter_sell_22
es_l_cond=notexit_longanden_strat
es_s_cond=notexit_shortanden_strat
entry_long_1=opt_sig_buy_1andlong_filterandes_l_cond
entry_long_2=opt_sig_buy_2andlong_filterandes_l_cond
entry_short_1=opt_sig_sell_1andshort_filterandes_s_cond
entry_short_2=opt_sig_sell_2andshort_filterandes_s_cond
//--------------------------------------------------------------takeaverageprofit--------------------------------------------------------------
tp_step=0.
tp_step:=nz(high>tp_step[1]+avtp_steporlow<tp_step[1]-avtp_step?close:tp_step[1])
tp_step_l=tp_step>tp_step[1]
tp_step_s=tp_step<tp_step[1]
av_profit_l=close-strategy.position_avg_price>av_tpandtp_step_landlong
av_profit_s=strategy.position_avg_price-close>av_tpandtp_step_sandshort
//---------------------------------------------------------stoplossofaverageposition--------------------------------------------------------
sl_step=0.
sl_step:=nz(high>sl_step[1]+avsl_steporlow<sl_step[1]-avsl_step?close:sl_step[1])
sl_step_l=sl_step<sl_step[1]
sl_step_s=sl_step>sl_step[1]
top=.0
top:=nz(ta.pivothigh(high,sl_sen,0),top[1])
bottom=.0
bottom:=nz(ta.pivotlow(low,sl_sen,0),bottom[1])
av_loss_l=tb_tog?strategy.position_avg_price-close>av_slandsl_step_landlong:top-close>av_slandsl_step_landlong
av_loss_s=tb_tog?close-strategy.position_avg_price>av_slandsl_step_sandshort:close-bottom>av_slandsl_step_sandshort
//----------------------------------------------------------------tpandslcounter---------------------------------------------------------------
no_open_pos=strategy.position_size==0
//breakeven
varfirst_close_be=false
first_close_be:=strategy.netprofit>0//enablesbreakeven.Profitofallcompletedtrades.
vareven_sw=false
ifta.cross(close,strategy.position_avg_price)[repaint=='Allowed'?0:1]andfirst_close_beand(inst_grid?barstate.isrealtime:backtest_period())
even_sw:=true
break_ev=break_evenandeven_sw
//tpcounter
vartp_ev_count_l=0
vartp_ev_count_s=0
ifav_profit_landlong
tp_ev_count_l:=tp_ev_count_l+1
ifav_profit_sandshort
tp_ev_count_s:=tp_ev_count_s+1
count_con_tp_l=tp_ev_count_l>=tp_countorexit_longorno_open_pos//counterexitcondition-longs
count_con_tp_s=tp_ev_count_s>=tp_countorexit_shortorno_open_pos//counterexitcondition-shorts
ifcount_con_tp_l//counterresetcondiotonforfilter-longs
tp_ev_count_l:=0
ifcount_con_tp_s//counterresetcondiotonforfilter-shorts.
tp_ev_count_s:=0
av_tp_qty_c_l=count_con_tp_landen_tp_counter?100:av_tp_qty//counterswitchfortp-longs
av_tp_qty_c_s=count_con_tp_sanden_tp_counter?100:av_tp_qty//counterswitchfortp-shorts
//slcounter
varsl_ev_count_l=0
varsl_ev_count_s=0
ifav_loss_landlong
sl_ev_count_l:=sl_ev_count_l+1
ifav_loss_sandshort
sl_ev_count_s:=sl_ev_count_s+1
count_con_sl_l=sl_ev_count_l>=sl_countorexit_longorno_open_pos
count_con_sl_s=sl_ev_count_s>=sl_countorexit_shortorno_open_pos
ifcount_con_sl_l
sl_ev_count_l:=0
ifcount_con_sl_s
sl_ev_count_s:=0
av_sl_qty_c_l=count_con_sl_landen_sl_counter?100:av_sl_qty
av_sl_qty_c_s=count_con_sl_sanden_sl_counter?100:av_sl_qty
//scalpingmode
varscalp_sw=false
iflongandlong_filterandnotlong_filter[1]orshortandshort_filterandnotshort_filter[1]orbothand(long_filterandnotlong_filter[1]orshort_filterandnotshort_filter[1])
scalp_sw:=true
ifstrategy.opentrades[1]!=0andstrategy.opentrades==0
scalp_sw:=false
enabled_sl_tp=av_tp_enandav_sl_enanden_tp_counteranden_sl_counter
scalp_l=(entry_long_1orentry_long_2)anden_scalp_modeandscalp_swandenabled_sl_tp//andtp_ev_count_l<tp_count
scalp_s=(entry_short_1orentry_short_2)anden_scalp_modeandscalp_swandenabled_sl_tp//andtp_ev_count_s<tp_count
//----------------------------------------------------------1stpositionfactorandauto-increaseofpositioncalc-----------------------------------------------------------------
varfirst_close_mr=false
first_close_mr:=strategy.closedtrades==0//makesmartingaleworkinguntilthefirstclose
pos_c_cond=pos_count_in>strategy.opentrades//tradecountercondition
no_exit_filter=exit_f_1=='---'andexit_f_2=='---'//makesfirstpositionfactoronlyworkingwhennoexitfiltersareactive
//calcandcond-backtesting
pos_qty=en_pos_martandpos_c_condandfirst_close_mrandnotbothandno_exit_filter?
no_open_pos?
pos_start_mart:math.abs(strategy.position_size)*pos_factor:
en_1st_pos_f?
no_open_pos?
pos_start_1st:lot_size_b:lot_size_b//martingalecalcandsw-conditionformartingaleand1stposition-backtesting
//calcandcond-livetrading
varfloatmart_lot_size=pos_start_mart_lv
mart_lot_size:=mart_lot_size*pos_factor+mart_lot_size[1]
pos_qty_lv=en_pos_martandpos_c_condandfirst_close_mrandnotbothandno_exit_filter?
no_open_pos?
pos_start_mart_lv:mart_lot_size:
en_1st_pos_f?
no_open_pos?
pos_start_1st_lv:lot_size_lv:lot_size_lv//martingalecalcandsw-conditionformartingaleand1stposition-livetrading
//somethinglike"getposition_size"forlotsizeonbybitisneededforlivetrading.
//-------------------------------------repetitivebreakevencondition----------------------------------
rep_even_long=rep_evenandlow[1]>strategy.position_avg_priceandlow<strategy.position_avg_priceandnotno_open_posandmath.abs(strategy.position_size)>be_min_lot
rep_even_short=rep_evenandhigh[1]<strategy.position_avg_priceandhigh>strategy.position_avg_priceandnotno_open_posandmath.abs(strategy.position_size)>be_min_lot

//rep_even_long_lv=rep_evenandlow[1]>strategy.position_avg_priceandlow<strategy.position_avg_priceandnotno_open_posandmath.abs(strategy.position_size)>be_min_lot
//rep_even_short_lv=rep_evenandhigh[1]<strategy.position_avg_priceandhigh>strategy.position_avg_priceandnotno_open_posandmath.abs(strategy.position_size)>be_min_lot
//somethinglike"getposition_size"forlotsizeonbybitisneededforlivetrading.
//----------------------------------------------------------------------strategyentriesandexits---------------------------------------------------------------------
//strategyentriesandexits(backtesting)
ifinst_grid?barstate.isrealtimeandstrat_idleandnotbreak_ev[1]andnotstrat_cl_st[1]:backtest_period()andstrat_idleandnotbreak_ev[1]andnotstrat_cl_st[1]
iflong
ifentry_long_1andnoten_scalp_mode
strategy.entry('os_b',strategy.long,qty=pos_qty)

ifentry_long_2andnoten_scalp_mode
strategy.entry('os_b',strategy.long,qty=pos_qty)
ifinst_posanden_1st_pos_fandno_open_posanden_stratandnoten_scalp_mode
strategy.entry('os_b',strategy.long,qty=pos_qty)
ifscalp_l
strategy.entry('os_b',strategy.long,qty=pos_qty)
ifav_tp_enandav_profit_landnotno_open_pos
strategy.close('os_b',qty_percent=av_tp_qty_c_l)
ifav_sl_enandav_loss_landnotno_open_pos
strategy.close('os_b',qty_percent=av_sl_qty_c_l)
ifexit_longandnotexit_long[1]andnotno_open_pos
strategy.close('os_b',qty_percent=qyt_exit)
ifborder_closeanden_closeandnotno_open_pos
strategy.close('os_b',qty_percent=100)
ifbreak_evandnotno_open_pos
strategy.close('os_b',qty_percent=100)
ifstrat_cl_standnotno_open_pos
strategy.close('os_b',qty_percent=100)
ifrep_even_long
strategy.close('os_b',qty_percent=rep_ev_qty)
ifshort
ifentry_short_1andnoten_scalp_mode
strategy.entry('os_s',strategy.short,qty=pos_qty)
ifentry_short_2andnoten_scalp_mode
strategy.entry('os_s',strategy.short,qty=pos_qty)
ifinst_posanden_1st_pos_fandno_open_posanden_stratandnoten_scalp_mode
strategy.entry('os_s',strategy.short,qty=pos_qty)
ifscalp_s
strategy.entry('os_s',strategy.short,qty=pos_qty)
ifav_tp_enandav_profit_sandnotno_open_pos
strategy.close('os_s',qty_percent=av_tp_qty_c_s)
ifav_sl_enandav_loss_sandnotno_open_pos
strategy.close('os_s',qty_percent=av_sl_qty_c_s)
ifexit_shortandnotexit_short[1]andnotno_open_pos
strategy.close('os_s',qty_percent=qyt_exit)
ifborder_closeanden_closeandnotno_open_pos
strategy.close('os_s',qty_percent=100)
ifbreak_evandnotno_open_pos
strategy.close('os_s',qty_percent=100)
ifstrat_cl_standnotno_open_pos
strategy.close('os_s',qty_percent=100)
ifrep_even_short
strategy.close('os_s',qty_percent=rep_ev_qty)
//strategyentriesandexits(livetradingwithalertatrononbybit)-alertmessages-sameconditionslikestrategy....()
varfloatav_tp_qty_c_l_var=100-av_tp_qty_c_l//calcbecauseofalertatronsyntaxstring
varfloatav_sl_qty_c_l_var=100-av_sl_qty_c_l
varfloatav_tp_qty_c_s_var=100-av_tp_qty_c_s
varfloatav_sl_qty_c_s_var=100-av_sl_qty_c_s
varfloatqyt_exit_var=100-qyt_exit
varfloatrep_ev_qty_var=100-rep_ev_qty
ifinst_grid?barstate.isrealtimeandstrat_idleandnotbreak_ev[1]andnotstrat_cl_st[1]:backtest_period()andstrat_idleandnotbreak_ev[1]andnotstrat_cl_st[1]
//entries
iflongand(entry_long_1orentry_long_2)
alert(message='BybitAPI(BTCUSD){continue(if=positionShort);market(position=0);}
BybitAPI(BTCUSD){wait(0.5s);market(side=buy,amount='+str.tostring(pos_qty_lv)+');}\n#bot',freq=alert.freq_once_per_bar)
iflongandinst_posanden_1st_pos_fandno_open_posanden_strat
alert(message='BybitAPI(BTCUSD){continue(if=positionShort);market(position=0);}
BybitAPI(BTCUSD){wait(0.5s);market(side=buy,amount='+str.tostring(pos_qty_lv)+');}\n#bot',freq=alert.freq_once_per_bar)
ifshortand(entry_short_1orentry_short_2)
alert(message='BybitAPI(BTCUSD){continue(if=positionLong);market(position=0);}
BybitAPI(BTCUSD){wait(0.5s);market(side=sell,amount='+str.tostring(pos_qty_lv)+');}\n#bot',freq=alert.freq_once_per_bar)
ifshortandinst_posanden_1st_pos_fandno_open_posanden_strat
alert(message='BybitAPI(BTCUSD){continue(if=positionLong);market(position=0);}
BybitAPI(BTCUSD){wait(0.5s);market(side=sell,amount='+str.tostring(pos_qty_lv)+');}\n#bot',freq=alert.freq_once_per_bar)
//tpandsl
iflongandav_tp_enandav_profit_landnotno_open_pos
alert(message='BybitAPI(BTCUSD){market(position='+str.tostring(av_tp_qty_c_l_var)+'%p);}\n#bot',freq=alert.freq_once_per_bar)
iflongandav_sl_enandav_loss_landnotno_open_pos
alert(message='BybitAPI(BTCUSD){market(position='+str.tostring(av_sl_qty_c_l_var)+'%p);}\n#bot',freq=alert.freq_once_per_bar)
ifshortandav_tp_enandav_profit_sandnotno_open_pos
alert(message='BybitAPI(BTCUSD){market(position='+str.tostring(av_tp_qty_c_s_var)+'%p);}\n#bot',freq=alert.freq_once_per_bar)
ifshortandav_sl_enandav_loss_sandnotno_open_pos
alert(message='BybitAPI(BTCUSD){market(position='+str.tostring(av_sl_qty_c_s_var)+'%p);}\n#bot',freq=alert.freq_once_per_bar)
//exitfilters
iflongandnotno_open_posandexit_longandnotexit_long[1]orshortandexit_shortandnotexit_short[1]
alert(message='BybitAPI(BTCUSD){market(position='+str.tostring(qyt_exit_var)+'%p);}\n#bot',freq=alert.freq_once_per_bar)
//startstrategy,borderexits
ifborder_closeanden_closeandnotno_open_pos
alert(message='BybitAPI(BTCUSD){market(position=0);}\n#bot',freq=alert.freq_once_per_bar)
//breakeven
ifbreak_evandnotno_open_pos
alert(message='BybitAPI(BTCUSD){market(position=0);}\n#bot',freq=alert.freq_once_per_bar)
//close&stop
ifstrat_cl_standnotno_open_pos
alert(message='BybitAPI(BTCUSD){market(position=0);}\n#bot',freq=alert.freq_once_per_bar)
//repetitivebreakeven
ifrep_even_long
alert(message='BybitAPI(BTCUSD){market(position='+str.tostring(rep_ev_qty_var)+'%p);}\n#bot',freq=alert.freq_once_per_bar)
ifrep_even_short
alert(message='BybitAPI(BTCUSD){market(position='+str.tostring(rep_ev_qty_var)+'%p);}\n#bot',freq=alert.freq_once_per_bar)
Expand (1603 lines)
