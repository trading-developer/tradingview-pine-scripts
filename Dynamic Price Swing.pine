Script Name: Dynamic Price Swing
Author: Solutions1978
Description: Finally, a price channel oscillator that works.

I programmed three flavors into this.

The first flavor uses the Fast and Slow EMA to check for the trend to ensure you don't trade in the wrong direction simply because the price crosses the previous highest high or lowest low (based on lookback bars).

The second flavor uses a seven point average of the...
PineScript code:

Pine Script™ strategy
Dynamic Price Swing
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//@version=4
//**********************************************************************************************************
//  Gradient  Color  Bars  incorporated  based  on  Color  Gradient  Function  script  by  e2e4mfck
//**********************************************************************************************************
//  ██████╗██████╗  ███████╗  █████╗  ████████╗███████╗██████╗          ██████╗  ██╗      ██╗
//██╔════╝██╔══██╗██╔════╝██╔══██╗╚══██╔══╝██╔════╝██╔══██╗        ██╔══██╗╚██╗  ██╔╝
//██║          ██████╔╝█████╗    ███████║      ██║      █████╗    ██║    ██║        ██████╔╝  ╚████╔╝
//██║          ██╔══██╗██╔══╝    ██╔══██║      ██║      ██╔══╝    ██║    ██║        ██╔══██╗    ╚██╔╝
//╚██████╗██║    ██║███████╗██║    ██║      ██║      ███████╗██████╔╝        ██████╔╝      ██║
//  ╚═════╝╚═╝    ╚═╝╚══════╝╚═╝    ╚═╝      ╚═╝      ╚══════╝╚═════╝          ╚═════╝        ╚═╝

//███████╗  ██████╗  ██╗          ██╗      ██╗████████╗██╗  ██████╗  ███╗      ██╗███████╗  ██╗  █████╗  ███████╗  █████╗
//██╔════╝██╔═══██╗██║          ██║      ██║╚══██╔══╝██║██╔═══██╗████╗    ██║██╔════╝███║██╔══██╗╚════██║██╔══██╗
//███████╗██║      ██║██║          ██║      ██║      ██║      ██║██║      ██║██╔██╗  ██║███████╗╚██║╚██████║        ██╔╝╚█████╔╝
//╚════██║██║      ██║██║          ██║      ██║      ██║      ██║██║      ██║██║╚██╗██║╚════██║  ██║  ╚═══██║      ██╔╝  ██╔══██╗
//███████║╚██████╔╝███████╗╚██████╔╝      ██║      ██║╚██████╔╝██║  ╚████║███████║  ██║  █████╔╝      ██║    ╚█████╔╝
//╚══════╝  ╚═════╝  ╚══════╝  ╚═════╝        ╚═╝      ╚═╝  ╚═════╝  ╚═╝    ╚═══╝╚══════╝  ╚═╝  ╚════╝        ╚═╝      ╚════╝

strategy(shorttitle='DPS',title='Dynamic  Price  Swing',  overlay=true,  initial_capital  =  1000,  process_orders_on_close=false,  close_entries_rule="ANY",  default_qty_type  =  strategy.percent_of_equity,  default_qty_value  =  100,  commission_type=strategy.commission.percent,  commission_value=0.18,  calc_on_every_tick=false)
//  —————  Constants
var  string  SH1  =  "Red  ⮀  Green"
var  string  SH2  =  "Purple  ⮀  Blue"
var  string  SH3  =  "Yellow  ⮀    DarkGreen"
var  string  SH4  =  "White  ⮀  Black"
var  string  SH5  =  "White  ⮀  Blue"
var  string  SH6  =  "White  ⮀  Red"
var  string  SH7  =  "Rainbow"
bgcolor(color.new(#000000,15),  title="Dark  Background")
white  =  color.new(color.white,  50)
//  -----------------    Strategy  Inputs  -------------------------------------------------------------
//Instructions
general  =  input(false,  "Backtest  Dates,  Strategy  Selection,  and  Risk  Management  Inputs  apply  to  all  strategies")
//Backtest  dates  with  auto  finish  date  of  today
start  =  input(defval  =  timestamp("21  June  2021  00:00  -0500"),  title  =  "Start  Time",  type  =  input.time,  group="Backtest  Dates")
finish  =  input(defval  =  timestamp("31  December  2021  00:00  -0600"),  title  =  "End  Time",  type  =  input.time,  group="Backtest  Dates")
window()    =>  time  >=  start  and  time  <=  finish  ?  true  :  false              //  create  function  "within  window  of  time"
//  Strategy  Selection  -  Long,  Short,  or  Both
general2  =  input(false,  "Average  Price  Channel  strategy  buys  and  sells  when  price  crosses  above  or  below  the  previous  highest  high  and  lowest  low",  group="Strategy  Descriptions")
general3  =  input(false,  "Moving  Average  strategy  buys  and  sells  when  the  price  crosses  above  or  below  the  selected  price  band,  which  also  is  shaded  based  on  what  you  select.",  group="Strategy  Descriptions")
general4  =  input(false,  "Fibonacci  strategy  buys  and  sells  whenthepricecrossesabovetheFibonaccilevelselected.",group="StrategyDescriptions")
general5=input(false,"PeaksandValleysbuysandsellsbasedonthecombinedcrossingoftheVWMA,ALMA,andAverageMACDTrueRangetrendlines.",group="StrategyDescriptions")
general5b=input(false,"Thesettingsforeachstrategyisgrouped.Onlytheinputsindicatedfortheselectedstrategywillimpactthetriggers.",group="StrategyDescriptions")
general5c=input(false,"AllstrategiesusetheRiskManagementandUp/DownTrendSettings.",group="StrategyDescriptions")
trigger=input("AveragePriceChannel","SelectaPriceSwingTrigger",options=["AveragePriceChannel","MovingAverage","Fibonacci","PeaksandValleys"],group="StrategySelection")
usePrice=trigger=="AveragePriceChannel"?true:false
useMA=trigger=="MovingAverage"?true:false
useFib=trigger=="Fibonacci"?true:false
usePV=trigger=="PeaksandValleys"?true:false
general6=input(false,"UseLong/Shortonlyforbacktestcomparisons.LongisifyouarestartingwithFIAT,Shortisifyouarestartingwithcrypto.",group="StrategySelection")
strat=input(title="TradeTypes",defval="Long/Short",options=["LongOnly","Long/Short","ShortOnly"],group="StrategySelection")
strat_val=strat=="LongOnly"?1:strat=="Long/Short"?0:-1
//—————Inputs
varbool_1=input(false,"═══════════⥑Gradient⥏═══════════",group="VisualizationSelection")
varboolcolorbars=input(true,"UseGradientColorBars?",group="VisualizationSelection")
varstringi_scheme=input(SH1," 》ColorScheme",options=[SH1,SH2,SH3,SH4,SH5,SH6,SH7],group="VisualizationSelection")
varbooli_invert=input(false,"InvertColors",group="VisualizationSelection")
varbooli_barcolor=input(false,"ColorizeBars",group="VisualizationSelection")
//}
//——————————Colorarray{
varcolor[]c_gradients=array.new_color(na)
//RiskManagementInputs
general7=input(false,"Youcancontrolyourgainsandlosseswiththeseinputsthatshouldbeself-explanatory.",group="RiskManagement")
sl=input(50.0,"StopLoss%",minval=0,maxval=100,step=0.01,group="RiskManagement")
stoploss=sl/100
tp=input(50.0,"TargetProfit%",minval=0,maxval=100,step=0.01,group="RiskManagement")
TargetProfit=tp/100
ld=input(10,"StopTradingAfterThisManyLosingDays",type=input.integer,minval=0,maxval=100,step=1,group="RiskManagement")
strategy.risk.max_cons_loss_days(count=ld)
ml=input(50,"Maximum%ofEquityLosttoHaltTrading",type=input.integer,minval=1,maxval=100,step=1,group="RiskManagement")
strategy.risk.max_drawdown(value=ml,type=strategy.percent_of_equity)
//GeneralSettings
general8=input(false,"ThissectionisforadjustingtheEMAlengthandpricelookbackperiodforidentifyingupward/downwardzones.YoucanaddtheTripleEMAindicatortoanewpanetovisuallytweakthesesettings.",group="Up/DownTrendSettings")
fastLength=input(5,minval=1,title="EMAFastLength",group="Up/DownTrendSettings")
slowLength=input(12,minval=1,title="EMASlowLength",group="Up/DownTrendSettings")
general9=input(false,"TheAverage#ofbarsiswhatyouobserveasthenumberofupanddownbarsinacycle",group="Up/DownTrendSettings")
general10=input(false,"Forexample,ifacrypto'scharthas6upand4downforeachcyclebeforeitrepeats",group="Up/DownTrendSettings")
general11=input(false,"thenyourAverage#ofbarsis10andyourPriceLookbackPeriodis5(halfoftheAvg#)",group="Up/DownTrendSettings")
AvgLkbk=input(20,minval=1,title="Average#ofbarsinUp/DownTrend",group="Up/DownTrendSettings")
lkbk=input(10,"PriceLookbackPeriod",group="Up/DownTrendSettings")
high_source=input(high,"HighSource",group="Up/DownTrendSettings")
low_source=input(low,"LowSource",group="Up/DownTrendSettings")
diff1=input(2.5,"HighPriceKnifePercentage(%differencetotriggeraquicksell)",group="PriceChannelSettings")
diff=diff1/100
//MovingAverageInputs
general12=input(false,"FortheMovingAverageStrategy-definethepercentagefromthecenterpricelineyouwanttradestooccur",group="MovingAverageSettings")
general13=input(false,"thedefaultistousethefirstband(shadedingreenandred)oryoucanchoosetousethesecondorthirdpricechannelbands.",group="MovingAverageSettings")
InnerValue=input(1.6,title="1stPriceBand%",group="MovingAverageSettings")
OuterValue=input(2.6,title="2ndPriceBand%",group="MovingAverageSettings")
ExtremeValue=input(4.2,title="ExtremePriceBand%",group="MovingAverageSettings")
BandUse=input("First","SelectPriceBandtoTriggerTrades",options=["First","Second","Extremes"],group="StrategySelection")
band=BandUse=="First"?1:BandUse=="Second"?2:BandUse=="Extremes"?3:na
//FibInputs
general14=input(false,"ThestandardFibonacciretracementlevelsareavailableinthedropdownselectionfortheFibonaccistrategy.",group="FibonacciSettings")
general15=input(false,"Level1iswherethetradewillhappenifthepricecrossesandthezoneisup(forsell)anddown(forbuy)",group="FibonacciSettings")
general16=input(false,"Level2iswherethetradewillalwayshappenwhenthepricecrossesregardlessoftrendindicators.",group="FibonacciSettings")
Fib1=input(1.618,"FibonacciLevel1",options=[1.382,1.618,1.786,2.000,2.272,2.382,2.618,3,3.382,3.618],group="FibonacciSettings")
Fib2=input(2.618,"FibonacciLevel2",options=[1.382,1.618,1.786,2.000,2.272,2.382,2.618,3,3.382,3.618],group="FibonacciSettings")
//PeaksandValleysInputs
general17=input(false,"PeaksandValleysisamoreaggressiveformofthemovingaveragestrategy.YoucanchangethetypeofMAtohavefasterscalps.",group="PeaksandValleysOptions")
maInput=input(title="MAType(EMAisdefault-therestexperimental)",defval="EMA",options=["EMA","SMA","VWMA","WMA"],group="PeaksandValleysOptions")
//Entryareaforcustombotmessages(i.e.Quadency,3Commas,etc)
general18=input(false,"HereyoucaneithercopyandpasteatriggermessageforabotoracustommessageforanEmailorSMSalert",group="BotWebhookMessages")
general19=input(false,"replacethealertbodymessagewith{{strategy.order.alert_message}}forasinglemessagetomaptoallllong/shorttriggers.",group="BotWebhookMessages")
message_long_entry=input("longentrymessage",group="BotWebhookMessages")
message_long_exit=input("longexitmessage",group="BotWebhookMessages")
message_short_entry=input("shortentrymessage",group="BotWebhookMessages")
message_short_exit=input("shortexitmessage",group="BotWebhookMessages")
//================================================================WheretheMagicHappens========================================================================
//--------------------------------PriceChannelCalculation----------------------------------
high1=highest(high_source,AvgLkbk)
high2=highest(high_source,lkbk)
lasthigh=max(high1,high2)
low1=lowest(low_source,AvgLkbk)
low2=lowest(low_source,lkbk)
lastlow=min(low1,low2)
hiHighs=lasthigh[1]
loLows=lastlow[1]
mids=(hiHighs+loLows)/2
plot(series=usePrice?mids:na,title="PriceMidline",color=white,linewidth=1)
plot(series=usePrice?hiHighs:na,title="PriceHighLine",color=white,linewidth=1)
plot(series=usePrice?loLows:na,title="PriceLowLine",color=white,linewidth=1)
//---------------------------------MovingAverages-------------------------------------------
//ImprovedPriceChannels
CMA=mids
CenteredMA=plot(series=usePrice?na:CMA,color=color.blue,linewidth=2)
HMA=usePrice?hiHighs:CMA+(CMA*(InnerValue/100))
HMA2=usePrice?na:useFib?CMA+(atr(lkbk)*Fib1):CMA+(CMA*(OuterValue/100))
HMA3=usePrice?na:useFib?CMA+(atr(lkbk)*Fib2):CMA+(CMA*(ExtremeValue/100))
LMA=usePrice?loLows:CMA-(CMA*(InnerValue/100))
LMA2=usePrice?na:useFib?CMA-(atr(lkbk)*Fib1):CMA-(CMA*(OuterValue/100))
LMA3=usePrice?na:useFib?CMA-(atr(lkbk)*Fib2):CMA-(CMA*(ExtremeValue/100))
//ForPriceChannels
ma3=sma(close,3),vwma3=vwma(close,3)
ma5=sma(close,5),vwma5=vwma(close,5)
ma9=sma(close,9),vwma9=vwma(close,9)
ma10=sma(close,10)
ma15=sma(close,15)
//ForFibonacci
MA1=ema(close,5),HA1=ema(high,5),LA1=ema(low,5)
MA2=ema(close,8),HA2=ema(high,8),LA2=ema(low,8)
MA3=ema(close,13),HA3=ema(high,13),LA3=ema(low,13)
MA4=ema(close,21),HA4=ema(high,21),LA4=ema(low,21)
MA5=ema(close,34),HA5=ema(high,34),LA5=ema(low,34)
MA6=ema(close,55),HA6=ema(high,55),LA6=ema(low,55)
MA7=ema(close,89),HA7=ema(high,89),LA7=ema(low,89)
//ForPeaksandValleys
getMA(src,length)=>
ma=0.0
ifmaInput=="EMA"
ma:=ema(src,length)
ifmaInput=="SMA"
ma:=sma(src,length)
ifmaInput=="VWMA"
ma:=vwma(src,length)
ifmaInput=="WMA"
ma:=wma(src,length)
ma
FastAvgValue=getMA(close,fastLength)
SlowAvgValue=getMA(close,slowLength)
fHi=highest(high,fastLength)
fLo=lowest(low,fastLength)
sHi=highest(high,slowLength)
sLo=lowest(low,slowLength)
FastStoch=(FastAvgValue-fHi)/(fHi-fLo)
SlowStoch=(SlowAvgValue-sLo)/(sHi-sLo)
STMACD=(FastStoch-SlowStoch)*100
STMACDAvg=getMA(STMACD,AvgLkbk)
//======================================TrendDirectionCalculations===========================================
//--------------VolumeTrend------------------
cumUp=0.0
cntUp=0
cumDown=0.0
cntDown=0
fori=0tolkbk-1
ifclose[i]>open[i]
cumUp:=cumUp+volume[i]
cntUp:=cntUp+1
else
cumDown:=cumDown+volume[i]
cntDown:=cntDown+1
averagevolumeup=(cumUp/cntUp)
averagevolumedown=-(cumDown/cntDown)
volUp=(averagevolumeup)<=volumeandclose>open
volDown=(averagevolumedown)>=-volumeandclose<open
flow=cumUp-cumDown
//Callbullshitwhentrenddoesn'tagreewiththenumbers(fakepumpsanddumps)
BullShit1=flow>0andflow[1]>0andvolDown
BullShit2=flow<0andflow[1]<0andvolUp
BullShit=BullShit1orBullShit2
upVol=volUpandflow>0andnotBullShit
downVol=volDownandflow<0andnotBullShit
//-----------------RangeBreakoutTrend-------------------
src=high_source
smoothrng(x,t,m)=>
wper=(t*2)-1
avrng=ema(abs(x-x[1]),t)
smoothrng=ema(avrng,wper)*m
smoothrng
smrng=smoothrng(close,slowLength,lkbk)
rngfilt(x,r)=>
rngfilt=x
rngfilt:=x>nz(rngfilt[1])?((x-r)<nz(rngfilt[1])?nz(rngfilt[1]):(x-r)):((x+r)>nz(rngfilt[1])?nz(rngfilt[1]):(x+r))
rngfilt
filt=rngfilt(src,smrng)
upward=0.0
upward:=filt>filt[1]?nz(upward[1])+1:filt<filt[1]?0:nz(upward[1])
downward=0.0
downward:=filt<filt[1]?nz(downward[1])+1:filt>filt[1]?0:nz(downward[1])
hband=filt+smrng
lband=filt-smrng
uptrend1=(src>filt)and(src>src[1])and(upward>0)
uptrend2=(src>filt)and(src<src[1])and(upward>0)
longCond=uptrend1oruptrend2
downtrend1=(src<filt)and(src<src[1])and(downward>0)
downtrend2=(src<filt)and(src>src[1])and(downward>0)
shortCond=downtrend1ordowntrend2
CondIni=0
CondIni:=longCond?1:shortCond?-1:CondIni[1]
stroking=longCondandCondIni[1]==-1
//ArnaudLegouxMovingAverage(ALMA)
xrf(values,length)=>
r_val=float(na)
iflength>=1
fori=0tolengthby1
ifna(r_val)ornotna(values[i])
r_val:=values[i]
r_val
r_val
ma20=sma(close,20)
ma50=sma(close,50)
ma200=sma(close,200)
change2=cmo(close,2)
change9=cmo(close,9)
trendline=alma((close-sma(close,40))/sma(close,40)*100,21,0.85,6)
tradingline=ema(ema(ema((2*close+high+low)/4,4),4),4)
fastLine=(sma((tradingline-xrf(tradingline,1))/xrf(tradingline,1)*100,1))*10
slowLine=alma(sma((tradingline-xrf(tradingline,1))/xrf(tradingline,1)*100,2),3,0.85,6)*10
pd=(high[1]-close[1])/close[1]
//Breakout(upwardmomentum)andDumpout(downwardmomentumm)conditionsbasedonALMAindicatortriggerscombinedwithvolumetrendasacrosschecktoreducefalsealerts
//Fakeoutbasedonpatternswherethehighpointofthepriceisareverseknife(whenhighisgreaterthan2%ofthecloseprice)-thistypicallyleadstoasmalldumpofFOOMOsellers
breakout=fastLine>slowLineandfastLine<0andlongCond
dumpout=fastLine<slowLineandfastLine>0andshortCond
fakeout=pd>difforhigh>=HMA3
//------------------------PriceChannelPlots--------------------------------------------------------
Ctr_Top=(useMAoruseFib)?(band==1?mids:band==2?HMA:band==3?HMA2:na):mids
Ctr_Bottom=(useMAoruseFib)?(band==1?mids:band==2?LMA:band==3?LMA2:na):mids
upper_function=(useMAoruseFib)?(band==1?HMA:band==2?HMA2:band==3?HMA3:na):hiHighs
lower_function=(useMAoruseFib)?(band==1?LMA:band==2?LMA2:band==3?LMA3:na):loLows
Ctr1=plot(Ctr_Top,color=white)
Ctr2=plot(Ctr_Bottom,color=white)
Upper=plot(upper_function,color=white)
Lower=plot(lower_function,color=white)
upper_color=color.new(color.green,90)
lower_color=color.new(color.red,90)
fill(Ctr1,Upper,upper_color)
fill(Ctr2,Lower,lower_color)
//—————Fillthearraywithcolorsonlyonthefirstiterationofthescript
ifbarstate.isfirst
ifi_scheme==SH1
array.push(c_gradients,#ff0000),array.push(c_gradients,#ff2c00),array.push(c_gradients,#fe4200),array.push(c_gradients,#fc5300),array.push(c_gradients,#f96200),array.push(c_gradients,#f57000),array.push(c_gradients,#f07e00),array.push(c_gradients,#ea8a00),array.push(c_gradients,#e39600),array.push(c_gradients,#dca100),array.push(c_gradients,#d3ac00),array.push(c_gradients,#c9b600),array.push(c_gradients,#bfc000),array.push(c_gradients,#b3ca00),array.push(c_gradients,#a6d400),array.push(c_gradients,#97dd00),array.push(c_gradients,#86e600),array.push(c_gradients,#71ee00),array.push(c_gradients,#54f700),array.push(c_gradients,#1eff00)
elseifi_scheme==SH2
array.push(c_gradients,#ff00d4),array.push(c_gradients,#f71fda),array.push(c_gradients,#ef2ee0),array.push(c_gradients,#e63ae5),array.push(c_gradients,#de43ea),array.push(c_gradients,#d44bee),array.push(c_gradients,#cb52f2),array.push(c_gradients,#c158f6),array.push(c_gradients,#b75df9),array.push(c_gradients,#ac63fb),array.push(c_gradients,#a267fe),array.push(c_gradients,#966bff),array.push(c_gradients,#8b6fff),array.push(c_gradients,#7e73ff),array.push(c_gradients,#7276ff),array.push(c_gradients,#6479ff),array.push(c_gradients,#557bff),array.push(c_gradients,#437eff),array.push(c_gradients,#2e80ff),array.push(c_gradients,#0082ff)
elseifi_scheme==SH3
array.push(c_gradients,#fafa6e),array.push(c_gradients,#e0f470),array.push(c_gradients,#c7ed73),array.push(c_gradients,#aee678),array.push(c_gradients,#97dd7d),array.push(c_gradients,#81d581),array.push(c_gradients,#6bcc86),array.push(c_gradients,#56c28a),array.push(c_gradients,#42b98d),array.push(c_gradients,#2eaf8f),array.push(c_gradients,#18a48f),array.push(c_gradients,#009a8f),array.push(c_gradients,#00908d),array.push(c_gradients,#008589),array.push(c_gradients,#007b84),array.push(c_gradients,#0c707d),array.push(c_gradients,#196676),array.push(c_gradients,#215c6d),array.push(c_gradients,#275263),array.push(c_gradients,#2a4858)
elseifi_scheme==SH4
array.push(c_gradients,#ffffff),array.push(c_gradients,#f0f0f0),array.push(c_gradients,#e1e1e1),array.push(c_gradients,#d2d2d2),array.push(c_gradients,#c3c3c3),array.push(c_gradients,#b5b5b5),array.push(c_gradients,#a7a7a7),array.push(c_gradients,#999999),array.push(c_gradients,#8b8b8b),array.push(c_gradients,#7e7e7e),array.push(c_gradients,#707070),array.push(c_gradients,#636363),array.push(c_gradients,#575757),array.push(c_gradients,#4a4a4a),array.push(c_gradients,#3e3e3e),array.push(c_gradients,#333333),array.push(c_gradients,#272727),array.push(c_gradients,#1d1d1d),array.push(c_gradients,#121212),array.push(c_gradients,#000000)
elseifi_scheme==SH5
array.push(c_gradients,#ffffff),array.push(c_gradients,#f4f5fa),array.push(c_gradients,#e9ebf5),array.push(c_gradients,#dee1f0),array.push(c_gradients,#d3d7eb),array.push(c_gradients,#c8cde6),array.push(c_gradients,#bdc3e1),array.push(c_gradients,#b2b9dd),array.push(c_gradients,#a7b0d8),array.push(c_gradients,#9ca6d3),array.push(c_gradients,#919dce),array.push(c_gradients,#8594c9),array.push(c_gradients,#7a8bc4),array.push(c_gradients,#6e82bf),array.push(c_gradients,#6279ba),array.push(c_gradients,#5570b5),array.push(c_gradients,#4768b0),array.push(c_gradients,#385fab),array.push(c_gradients,#2557a6),array.push(c_gradients,#004fa1)
elseifi_scheme==SH6
array.push(c_gradients,#ffffff),array.push(c_gradients,#fff4f1),array.push(c_gradients,#ffe9e3),array.push(c_gradients,#ffded6),array.push(c_gradients,#ffd3c8),array.push(c_gradients,#fec8bb),array.push(c_gradients,#fdbdae),array.push(c_gradients,#fbb2a1),array.push(c_gradients,#f8a794),array.push(c_gradients,#f69c87),array.push(c_gradients,#f3917b),array.push(c_gradients,#f0856f),array.push(c_gradients,#ec7a62),array.push(c_gradients,#e86e56),array.push(c_gradients,#e4634a),array.push(c_gradients,#df563f),array.push(c_gradients,#db4933),array.push(c_gradients,#d63a27),array.push(c_gradients,#d0291b),array.push(c_gradients,#cb0e0e)
elseifi_scheme==SH7
array.push(c_gradients,#E50000),array.push(c_gradients,#E6023B),array.push(c_gradients,#E70579),array.push(c_gradients,#E908B7),array.push(c_gradients,#E00BEA),array.push(c_gradients,#A70DEB),array.push(c_gradients,#6E10ED),array.push(c_gradients,#3613EE),array.push(c_gradients,#162DEF),array.push(c_gradients,#1969F1),array.push(c_gradients,#1CA4F2),array.push(c_gradients,#1FDFF4),array.push(c_gradients,#22F5D2),array.push(c_gradients,#25F69C),array.push(c_gradients,#28F867),array.push(c_gradients,#2CF933),array.push(c_gradients,#5DFA2F),array.push(c_gradients,#96FC32),array.push(c_gradients,#CDFD35),array.push(c_gradients,#FFF938)

//Invertcolorsinarray
ifi_invert
array.reverse(c_gradients)

//—————Rescalefunction
//CreditstoLucF,https://www.pinecoders.com/faq_and_code/#how-can-i-rescale-an-indicator-from-one-scale-to-another
f_rescale(_src,_min,_max)=>
//Rescalesserieswithknownmin/maxtothecolorarraysize.
//Dependency:c_gradientsarray
//_src:seriestorescale.
//_min,_max:min/maxvaluesofseriestorescale.
varint_size=array.size(c_gradients)-1
int_colorStep=int(_size*(_src-_min))/int(max(_max-_min,10e-10))
_colorStep:=_colorStep>_size?_size:_colorStep<0?0:_colorStep
int(_colorStep)
//—————Result
//Dependency:c_gradientsarray
f_colGrad(_src,_min,_max)=>array.get(c_gradients,f_rescale(_src,_min,_max))
//Example:
//resultColor=f_colGrad(_src,_min,_max)
//}
//—————Rsiasasource
rsi=rsi(close,100)
//—————BollingerbandsontopofRsiasgradient'sminandmax
[_,rsiUpperBand,rsiLowerBand]=bb(rsi,200,1.618)
//—————Colorizetheboundedsource
colorc_rsi=f_colGrad(rsi,rsiLowerBand,rsiUpperBand)
barcolor(i_barcolor?crossover(STMACD,STMACDAvg)?color.red:crossunder(STMACD,STMACDAvg)?color.yellow:BullShit?color.white:c_rsi:na)
//=============================================================================EntryandExitLogic======================================================================
//EntryLogic
//LogicforChannelBuy/Sell
CB1=low<loLowsandlongCondandwindow()
CB2=breakoutandwindow()
Channel_Buy=CB1orCB2
CS1=high>=hiHighsandshortCondandwindow()
CS2=dumpoutandwindow()
CS3=fakeoutandwindow()
Channel_Sell=CS1orCS2orCS3
//LogicforMovingAverage
MS1=(band==1?high>HMA:band==2?high>HMA2:band==3?high>HMA3:na)andshortCondandwindow()
MS2=(band==1?high>HMA:band==2?high>HMA2:band==3?high>HMA3:na)andcrossunder(STMACD,STMACDAvg)andwindow()
MA_Sell=MS1orMS2
MB1=(band==1?low<LMA:band==2?low<LMA2:band==3?low<LMA3:na)andlongCondandwindow()
MB2=(band==1?low<LMA:band==2?low<LMA2:band==3?low<LMA3:na)andcrossover(STMACD,STMACDAvg)andwindow()
MA_Buy=MB1orMB2
//LogicforFib
Fib_Sell1=high[1]>=HMA2andhigh>=HMA3andwindow()
Fib_Sell2=high[1]>=HMA2andclose<HMA3andwindow()
Fib_Sell3=high>=HMA2andBullShitandwindow()
Fib_Sell4=high>HMA3andwindow()
Fib_Sell=Fib_Sell1orFib_Sell2orFib_Sell3orFib_Sell4
Fib_Buy1=low[3]<=LMA3andlow[2]<=LMA3andlow[1]<=LMA3andlow<=LMA3andwindow()
Fib_Buy2=low<=LMA3andBullShitandwindow()
Fib_Buy3=low<=LMA2andcrossover(STMACD,STMACDAvg)andwindow()
Fib_Buy=Fib_Buy1orFib_Buy2orFib_Buy3
//-----LogicforPeaksandValleys-----------------------------
//LBisLongBuylogicandSBisShortBuyLogic
//LSisforLongSellandisthesameforShortSells
LB=low<loLowsandcrossover(STMACD,STMACDAvg)andwindow()
SB=low<loLowsandBullShitandwindow()
PVBuy=LBorSB
SS1=high>=hiHighsandcrossunder(STMACD,STMACDAvg)andwindow()
LS1=BullShitandhigh>=hiHighsandwindow()
PVSell=LS1orSS1
//------------------------StrategyTrades-------------------------------------------------------------
GoLong=usePrice?Channel_Buy:useMA?MA_Buy:useFib?Fib_Buy:usePV?PVBuy:false
GoShort=usePrice?Channel_Sell:useMA?MA_Sell:useFib?Fib_Sell:usePV?PVSell:false
CloseShort=usePrice?Channel_Buy:useMA?MA_Buy:useFib?Fib_Buy:usePV?PVBuy:false
CloseLong=usePrice?Channel_Sell:useMA?MA_Sell:useFib?Fib_Sell:usePV?PVSell:false
//StrategyOpenandClose
if(GoLongandstrat_val==0andstrategy.position_size==0andbarstate.isconfirmed)
strategy.entry(id="MIXED",long=true,oca_type=strategy.oca.cancel,oca_name="MixedEntry",alert_message=message_long_entry)
if(GoLongandstrat_val==1andstrategy.position_size==0andbarstate.isconfirmed)
strategy.entry("LONG",strategy.long,alert_message=message_long_entry)
if(GoShortandstrat_val==0andstrategy.position_size==0andstrategy.position_size[1]==0andbarstate.isconfirmed)
strategy.entry(id="MIXED",long=false,oca_type=strategy.oca.cancel,oca_name="MixedEntry",alert_message=message_short_entry)
if(GoShortandstrat_val==-1andstrategy.position_size==0andbarstate.isconfirmed)
strategy.entry("SHORT",strategy.short,alert_message=message_short_entry)
if(CloseLongandstrategy.position_size>0andstrat_val==1andbarstate.isconfirmed)
strategy.close("LONG",alert_message=message_long_exit)
if(CloseLongandstrategy.position_size>0andstrat_val==0andbarstate.isconfirmed)
strategy.close("MIXED",alert_message=message_long_exit)
if(CloseShortandstrategy.position_size<0andstrat_val==-1andbarstate.isconfirmed)
strategy.close("SHORT",alert_message=message_short_exit)
if(CloseShortandstrategy.position_size<0andstrat_val==0andbarstate.isconfirmed)
strategy.close("MIXED",alert_message=message_short_exit)
//--------------------RISKMANAGEMENTFUNCTIONS------------------------
//Calculatestopandtakeprofitprices
longStopPrice=strategy.position_avg_price*(1-stoploss)
longTakePrice=strategy.position_avg_price*(1+TargetProfit)
shortStopPrice=strategy.position_avg_price*(1+stoploss)
shortTakePrice=strategy.position_avg_price*(1-TargetProfit)
//Setexitstrategyparameters
if(strategy.position_size>0andstrat_val==1)
strategy.exit(id="ExitLong",from_entry="LONG",stop=longStopPrice,limit=longTakePrice,alert_message=message_long_exit)
if(strategy.position_size>0andstrat_val==0)
strategy.exit(id="ExitMixed",from_entry="MIXED",oca_name="MixedEntry",stop=longStopPrice,limit=longTakePrice,alert_message=message_long_exit)
if(strategy.position_size<0andstrat_val==-1)
strategy.exit(id="ExitShort",from_entry="SHORT",stop=shortStopPrice,limit=shortTakePrice,alert_message=message_short_exit)
if(strategy.position_size<0andstrat_val==0)
strategy.exit(id="ExitMixed",from_entry="MIXED",oca_name="MixedEntry",stop=shortStopPrice,limit=shortTakePrice,alert_message=message_short_exit)
Expand (506 lines)
