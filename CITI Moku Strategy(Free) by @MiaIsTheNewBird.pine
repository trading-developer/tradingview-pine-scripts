Script Name: CITI Moku Strategy(Free) by @MiaIsTheNewBird
Author: CITIAlgo
Description: CITI Moku Strategy  - This is a high win rate strategy based on Ichimoku Cloud and Lines and helps with catching trends in any markets on many Timeframes and detailed backtesting. This strategy uses high probability entry signals, Ichimoku cloud & kijun filtering system and Moving Average filters.

Entry Signals can be chosen to be any one of the 6 conditions, by...
PineScript code:

Pine Script™ strategy
CITI Moku Strategy(Free) by @MiaIsTheNewBird
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//@version=5
//@strategy_alert_message  {{strategy.order.alert_message}}"
//Base  Indicator  SuperIchi  from  LuxALgo  with  changes
//Created  by  Mia  &  Nomi
//Backtester  template  from  @Haldro
//Dashboard  &  Time  filter  template  from  Vermt
strategy('CITI  Moku  Strategy(Free)  by  @MiaIsTheNewBird',  shorttitle  =  "CITI  Moku  Strategy  (Free)",
                  overlay                      =  true,
                  initial_capital      =  10000,
                  commission_value    =  0.025,
                  default_qty_value  =  25,
                  slippage                    =  1,
                  pyramiding                =  0,
                  max_lines_count      =  500,
                  max_labels_count    =  500,
                  currency                    =  currency.USD,
                  default_qty_type    =  strategy.percent_of_equity)
//------------------------------------------------------------------------------
tenkan_len    =  input(9,'Tenkan',inline='tenkan',group="Ichimoku  Lines  &  Cloud  Settings")
tenkan_mult  =  input(2.,'',inline='tenkan',group="Ichimoku  Lines  &  Cloud  Settings")
kijun_len      =  input(26,'Kijun',inline='kijun',group="Ichimoku  Lines  &  Cloud  Settings")
kijun_mult    =  input(8.,'',inline='kijun',group="Ichimoku  Lines  &  Cloud  Settings")
spanB_len      =  input(52,'Senkou  Span  B',inline='span',group="Ichimoku  Lines  &  Cloud  Settings")
spanB_mult    =  input(8.,'',inline='span',group="Ichimoku  Lines  &  Cloud  Settings")
chikou_offset            =  input(26,'Chikou  Offset',group="Ichimoku  Lines  &  Cloud  Settings")
kumo_offset                =  input(26,'Kumo  Offset',group="Ichimoku  Lines  &  Cloud  Settings")
//------------------------------------------------------------------------------
avg(src,length,mult)=>
        atr  =  ta.atr(length)*mult
        up  =  hl2  +  atr
        dn  =  hl2  -  atr
        upper  =  0.,lower  =  0.
        upper  :=  src[1]  <  upper[1]  ?  math.min(up,upper[1])  :  up
        lower  :=  src[1]  >  lower[1]  ?  math.max(dn,lower[1])  :  dn

        os  =  0,max  =  0.,min  =  0.
        os  :=  src  >  upper  ?  1  :  src  <  lower  ?  0  :  os[1]
        spt  =  os  ==  1  ?  lower  :  upper
        max  :=  ta.cross(src,spt)  ?  math.max(src,max[1])  :  os  ==  1  ?  math.max(src,max[1])  :  spt
        min  :=  ta.cross(src,spt)  ?  math.min(src,min[1])  :  os  ==  0  ?  math.min(src,min[1])  :  spt
        math.avg(max,min)
tenkan  =  avg(close,tenkan_len,tenkan_mult)
kijun  =  avg(close,kijun_len,kijun_mult)
senkouA  =  math.avg(kijun,tenkan)
senkouB  =  avg(close,spanB_len,spanB_mult)
chikou  =  close
//------------------------------------------------------------------------------
plot(tenkan,  title  =  'Tenkan-Sen',  linewidth=1,  color=#32C4EE  )
plot(kijun,  title  =  'Kinjun-Sen',  linewidth=1,  color=#EC3E6F  )
plot(chikou,  title  =  'Chikou  Span',  linewidth=1,  offset  =  -chikou_offset+1,  color=color.fuchsia,  display=display.none)
cloud_a  =  #0C3D4E
cloud_b  =  #451721
A  =  plot(senkouA,'Senkou  Span  A',na,offset=kumo_offset-1)
B  =  plot(senkouB,'Senkou  Span  B',na,offset=kumo_offset-1)
fill(A,B,senkouA  >  senkouB  ?  cloud_a  :  cloud_b)
//Entry  Signals
Entry1  =  input.bool(false,  title="Price  Crossing  Tenkan  Line",  group="Entry  Signals  Settings  -  Select  Conditions  for  Entry")
Entry2  =  input.bool(true,  title="Tenkan  Line  Crossing  Kijun  Line",  group="Entry  Signals  Settings  -  Select  Conditions  for  Entry")
Entry3  =  input.bool(false,  title="Price  Crossing  Kijun  Line",  group="Entry  Signals  Settings  -  Select  Conditions  for  Entry")
Entry1Long  =  Entry1  ?  ta.crossover(close,tenkan)  :  true
Entry2Long  =  Entry2  ?  ta.crossover(tenkan,kijun)  :  true
Entry3Long  =  Entry3  ?  ta.crossover(close,kijun)  :  true
Entry1Short  =  Entry1  ?  ta.crossunder(close,tenkan)  :  true
Entry2Short  =  Entry2  ?  ta.crossunder(tenkan,kijun)  :  true
Entry3Short  =  Entry3  ?  ta.crossunder(close,kijun)  :  true
//Assemble  Entries
longEntry  =  Entry1Long  and  Entry2Long  and  Entry3Long
shortEntry  =  Entry1Short  and  Entry2Short  and  Entry3Short
//  Exit  Signals
Exit1  =  input.bool(false,  title="Price  Crossunder  Tenkan  Line",  group="Exit  Signals  Settings-  Use  as  Indicator")
Exit2  =  input.bool(true,  title="Tenkan  Line  Crossunder  Kijun  Line",  group="Exit  Signals  Settings-  Use  as  Indicator")
Exit3  =  input.bool(false,  title="Price  Crossunder  Kijun  Line",  group="Exit  Signals  Settings-  Use  as  Indicator")
//Assemble  Exit  Filters
Exit1Long  =  Exit1  ?  ta.crossunder(close,tenkan)  :  true
Exit2Long  =  Exit2  ?  ta.crossunder(tenkan,kijun)  :  true
Exit3Long  =  Exit3  ?  ta.crossunder(close,kijun)  :  true
Exit1Short  =  Exit1  ?  ta.crossover(close,tenkan)  :  true
Exit2Short  =  Exit2  ?  ta.crossover(tenkan,kijun)  :  true
Exit3Short  =  Exit3  ?  ta.crossover(close,kijun)  :  true
//Assemble  Exits
longExit  =  Exit1Long  and  Exit2Long  and  Exit3Long
shortExit  =  Exit1Short  and  Exit2Short  and  Exit3Short
///Plot  Letters  as  Indicators
var  bool  PlotLong  =  input.bool  (true,  "Plot  Buy  Trades"  ,  group="Use  as  Indicator")
var  bool  PlotShorts  =  input.bool  (true,  "Plot  Sell  Trades"  ,  group="Use  as  Indicator")
var  bool  PlotLongExit  =  input.bool  (true,  "Plot  Buy-  Exit  Trades"  ,  group="Use  as  Indicator")
var  bool  PlotShortsExit  =  input.bool  (true,  "Plot  Sell-  Exit  Trades"  ,  group="Use  as  Indicator")
//Backtester  from  @Haldro
//  ——————  ToolTips
TTreversesignal    =  'Wait  End  Deal-  Enable/Disable  waiting  for  a  trade  to  close  at  Stop  Loss/Take  Profit.  Until  the  trade  closes  on  the  Stop  Loss  or  Take  Profit,  no  new  trade  will  open.'
TTreOpenDeal          =  'ReEntry  Deal-  If  true  trade  was  long  and    SL/TP  was  reached  then  go  long  again  and  vice  versa.  \n'
                                  +  'ReOpen  Deal-  If  true  and  Wait  End  Deal  is  false  then  in  case  you  are  in  a  Long  position  and  a  new  signal  to  Long,  you  will  reEnter  a  new  Long  position  and  vice  versa  for  Shorts.'
TTslType                  =  'Fixed%-  Fixed  SL/TP  in  percent.  \n'
                                  +  'Fixed$-  Fixed  SL/TP  in  cash.  \n'
                                  +  'Trailing  %-  Trailing  stop  in  %  like  on  exchanges.  Regulated  by  the  "Trailing%"  parameter.  \n'
                                  +  'Fast  Trail-  If  in  a  long,  it  immediately  follows  the  price  when  it  rises  otherwise  it  stands  still.  Vice  versa  for  shorts.  Regulated  by  the  "Trailing%  parameter.  \n'
                                  +  'ATR  -  Fixed  TP/SL  depending  on  the  current  ATR.  It  is  regulated  by  the  "ATR  period"  |  "Multiplier"  parameters.  \n'
                                  +  'R:R-  Risk  Reward  sets  the  TP  depending  on  the  size  of  the  SL.  For  example,  if  SL  is  $100,  and  R:R  =  2,  then  the  TP  is  $200.  \n'
                                  +  'HH/LL-  Searches  for  the  last  Extremum  (High/Low)  for  the  specified  number  of  bars  and  sets  a  fixed  Take.  \n'
                                  +  'LO/HI  Sets  the  SL  for  High/Low  candles.  "LO/HI"  =  1  Sets  the  SL  for  the  last  High/Low.  \n'
                                  +  'MA-  Movinng  Average  SL.  A  very  diverse  type  of  SL.'
//  ——————  Main  Inputs
bullDeal                  =  input.bool      (true,                ' Long  Deals    ',            group='Trade  Direction',  inline='deal')
bearDeal      =input.bool(true,' ShortDeals',group='TradeDirection',inline='deal')
groupset='TP-SLStrategy'
waitEndDeal=input.bool(true,' WaitEndDeal ',group=groupset,inline='ord1')
reEntryDeal=input.bool(true,' ReEntryDeal  ',group=groupset,inline='ord1')
tpType=input.string('ATRTP',' 𝐓𝐚𝐤𝐞 𝐏𝐫𝐨𝐟𝐢𝐭',group=groupset,inline='type',options=['None','FIXED％','FIXED＄','ATRTP','R:R','HH/LL'])
slType=input.string('ATRSL',' 𝐒𝐭𝐨𝐩 𝐋𝐨𝐬𝐬 ',group=groupset,inline='type',options=['None','FIXED％','FIXED＄','TRAILING','FASTTRAIL','ATRSL','ATRTRAIL','LO/HI','MA'],tooltip=TTslType)
grouptakes='TakeProfitLevels'
ontake1=input.bool(true,'🇹🇵¹',group=grouptakes,inline='take')
qtake1=input.int(5,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
ontake2=input.bool(false,'🇹🇵²',group=grouptakes,inline='take')
qtake2=input.int(20,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
ontake3=input.bool(false,'🇹🇵³',group=grouptakes,inline='take')
qtake3=input.int(50,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
onstop0=input.bool(false,'🇸🇱⁰ ',group=grouptakes,inline='take')
qstop0=input.int(30,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
//————————————————SIGNALFORBACKTESTSYSTEM————————————————
Entrysignals_=longEntry?+1:shortEntry?-1:0
//——————VariablesInitialisation
Entrysignals=nz(Entrysignals_)
bull=Entrysignals==+1//+1isbullsignal
bear=Entrysignals==-1//-1isbearsignal
//Backtester//Credit©VertMT
startFilter=input.bool(group='📆TimeFilter📆',title="",defval=true,inline="Start")
endFilter=input.bool(group='📆TimeFilter📆',title="",defval=true,inline="End")
startTime=input.time(group='📆TimeFilter📆',title="StartTimeㅤㅤ",defval=timestamp('UTC01Jan202000:00'),inline="Start")
endTime=input.time(group='📆TimeFilter📆',title="EndTimeㅤㅤ",defval=timestamp('UTC31Dec205023:45'),inline="End")
session=input.session(group='📆TimeFilter📆',title="TimeSession",defval='0000-0000',tooltip="00:00-00:00todisable.")
zoneTime=input.string(group='📆TimeFilter📆',title="UTC",defval="UTC",options=["UTC-10","UTC-8","UTC-7","UTC-6","UTC-5","UTC-4","UTC-3","UTC","UTC+1","UTC+2","UTC+3","UTC+4","UTC+4:30","UTC+5","UTC+5:30","UTC+6","UTC+7","UTC+8","UTC+9","UTC+9:30","UTC+10","UTC+11","UTC+12","UTC+12:45","UTC+13"],tooltip="Matchthistimezonewiththatofyourgraphsothatallvaluesaredisplayedcorrectly.")
mon=input.bool(group='📆TimeFilter📆',title="Monㅤ",defval=true,inline="Days")
tue=input.bool(group='📆TimeFilter📆',title="Tueㅤ",defval=true,inline="Days")
wed=input.bool(group='📆TimeFilter📆',title="Wedㅤ",defval=true,inline="Days")
thu=input.bool(group='📆TimeFilter📆',title="Thuㅤ",defval=true,inline="Days")
fri=input.bool(group='📆TimeFilter📆',title="Friㅤ",defval=true,inline="Days")
sat=input.bool(group='📆TimeFilter📆',title="Satㅤ",defval=true,inline="Days")
sun=input.bool(group='📆TimeFilter📆',title="Sunㅤ",defval=true,inline="Days")
//📆TimeFilter📆—————
tradeDateIsAllowed()=>
start=startFilter?time>=startTime:true
end=endFilter?time<=endTime:true

ses=time==time("S",session,zoneTime)?true:false
monF=(dayofweek(time,zoneTime)==dayofweek.monday)andmon?true:false
tueF=(dayofweek(time,zoneTime)==dayofweek.tuesday)andtue?true:false
wedF=(dayofweek(time,zoneTime)==dayofweek.wednesday)andwed?true:false
thuF=(dayofweek(time,zoneTime)==dayofweek.thursday)andthu?true:false
friF=(dayofweek(time,zoneTime)==dayofweek.friday)andfri?true:false
satF=(dayofweek(time,zoneTime)==dayofweek.saturday)andsat?true:false
sunF=(dayofweek(time,zoneTime)==dayofweek.sunday)andsun?true:false
dayF=monFortueForwedForthuForfriForsatForsunF?true:false
filter=start?end?ses?dayF?true:false:false:false:false
dateRange=tradeDateIsAllowed()
//—————————————————————————————————————————————SignalFilters———————————————————————————————————————————————————————————\\//Credit@pAulseperformance
groupsignal='SignalFilters'
FilterType1=input.bool(true,'1.MAFilter',group=groupsignal,inline='FT1')
FilterType1MAType=input.string('EMA','',group=groupsignal,inline='FT1',options=['EMA','HMA','SMA'])
FilterType1Len=input.int(21,'',group=groupsignal,inline='FT1',minval=1,tooltip='MAType,MASource,MALength\nLong=close>MA\nShort=close<MA')
varboolma1Status=input.bool(false,group=groupsignal,title="ShowMALine?")
source=close
MA(FilterType4MAType,source,FilterType4Len)=>
ma=0.0
ifFilterType4MAType=="SMA"//Simple
ma:=ta.sma(source,FilterType4Len)

ifFilterType4MAType=="EMA"//Exponential
ma:=ta.ema(source,FilterType4Len)

ifFilterType4MAType=="VWMA"//VolumeWeighted
ma:=ta.vwma(source,FilterType4Len)

ifFilterType4MAType=="HMA"//HullMA
ma:=ta.hma(source,FilterType4Len)

resultMA=ma
ma=MA(FilterType1MAType,source,FilterType1Len)
plot(ma,"MovingAverage1",color=ma1Status?color.yellow:na)
FilterType2=input.bool(true,'2.Above/BelowKumoCloudSettings',group=groupsignal,inline='FT2')
FilterType3=input.bool(false,'3.Bullish/BearishKumoCloudFilterSettings',group=groupsignal,inline='FT3')
FilterType4=input.bool(false,'4.Bullish/BearishKijunFilterSettings',group=groupsignal,inline='FT4')
//——————Filter1:MovingAverage
Filter1Ma=FilterType1?MA(FilterType1MAType,close,FilterType1Len):0.
Filter1Long=FilterType1?close>Filter1Ma:true
Filter1Short=FilterType1?close<Filter1Ma:true
//Filter2:Above/BelowKumoCloudSettings
Filter2Long=FilterType2?close>math.max(senkouA[kumo_offset-1],senkouB[kumo_offset-1]):true
Filter2Short=FilterType2?close<math.min(senkouA[kumo_offset-1],senkouB[kumo_offset-1]):true
//Filter3:Bullish/BearishKumoCloudFilterSettings
Filter3Long=FilterType3?senkouA[kumo_offset-1]>senkouB[kumo_offset-1]:true
Filter3Short=FilterType3?senkouA[kumo_offset-1]<senkouB[kumo_offset-1]:true
//Filter4:Bullish/BearishKijunFilterSettings
Filter4Long=FilterType4?kijun>math.max(senkouA[kumo_offset-1],senkouB[kumo_offset-1]):true
Filter4Short=FilterType4?kijun<math.min(senkouA[kumo_offset-1],senkouB[kumo_offset-1]):true
//——————Filter12:Bullish/BearishChikouSpanSettings
//——————AssembleFilters
FilterLongOK=Filter1LongandFilter2LongandFilter3LongandFilter4Long
FilterShortOK=Filter1ShortandFilter2ShortandFilter3ShortandFilter4Short
//RiskManagment\\//Credit@Daveatt
grouprisk='RiskManagement'
setmaxLosingStreak=input.bool(false,'',group=grouprisk,inline='1')
maxLosingStreak=input.int(15,'LossStreak   ',group=grouprisk,inline='1',minval=1)
setmaxWinStreak=input.bool(false,'',group=grouprisk,inline='1')
maxWinStreak=input.int(15,'WinStreak   ',group=grouprisk,inline='1',minval=1,tooltip='𝐋𝐨𝐬𝐬 𝐒𝐭𝐫𝐞𝐚𝐤 ➖SetMaxnumberofconsecutivelosstrades.\n𝐖𝐢𝐧 𝐒𝐭𝐫𝐞𝐚𝐤 ➖MaxWinningStreakLength.')
setmaxLosingDaysStreak=input.bool(false,'',group=grouprisk,inline='2')
maxLosingDaysStreak=input.int(3,'RowLossInDay',group=grouprisk,inline='2',minval=1)
setMaxDrawdown=input.bool(false,'',group=grouprisk,inline='2')
maxPercDd=input.int(10,'DrawDown％',group=grouprisk,inline='2',minval=1,maxval=100,tooltip='𝐑𝐨𝐰 𝐋𝐨𝐬𝐬 𝐈𝐧𝐃𝐚𝐲 ➖Maxofconsecutivedayswithalossinarow.\n𝐃𝐫𝐚𝐰𝐃𝐨𝐰𝐧％ ➖MaxDrawDown(in%ofstrategyequity).')
setMaxIntradayLoss=input.bool(false,'',group=grouprisk,inline='3')
maxIntradayLoss=input.int(3,'InDayLoss％ ',group=grouprisk,inline='3',minval=1,maxval=100)
setNumberDailyTrades=input.bool(false,'',group=grouprisk,inline='3')
maxDailyTrades=input.int(10,'DailyTrades  ',group=grouprisk,inline='3',minval=1,maxval=100,tooltip='𝐈𝐧𝐃𝐚𝐲 𝐋𝐨𝐬𝐬 ％ ➖SetMaxIntradayLoss.\n𝐃𝐚𝐢𝐥𝐲 𝐓𝐫𝐚𝐝𝐞𝐬 ➖LimitthenumberofMAXtradesperday.')
setNumberWeeklyTrades=input.bool(false,'',group=grouprisk,inline='4')
maxWeeklyTrades=input.int(50,'WeeklyTrades',group=grouprisk,inline='4',minval=1,maxval=100,tooltip='𝐖𝐞𝐞𝐤𝐥𝐲 𝐓𝐫𝐚𝐝𝐞𝐬 ➖LimitthenumberofMAXtradesperweek.')
QTYMethod=input.string('EQUITY','     OrderSize',group=grouprisk,inline='',options=['NONE','EQUITY','SIZE','CONTRACTS'])
useNetProfit=input.bool(true,'UseNetProfit',group=grouprisk,inline='',tooltip='𝐔𝐬𝐞 𝐍𝐞𝐭 𝐏𝐫𝐨𝐟𝐢𝐭 ➖On/Offtheuseofprofitinthefollowingtrades.*OnlyworksifthetypeisEQUITY')
riskPerc=input.int(30,'​🇪​​🇶​​🇺​​🇮​​🇹​​🇾​',group=grouprisk,inline='.',minval=1,maxval=100)
riskSize=input.int(1000,'​🇸​​🇮​​🇿​​🇪',group=grouprisk,inline='.',minval=1)
riskCntr=input.int(1,'​🇨​​🇴​​🇳​​🇹​​🇷​​🇦​​🇨​​🇹​​🇸​',group=grouprisk,inline='.',minval=1,tooltip='𝐎𝐫𝐝𝐞𝐫𝐒𝐢𝐳𝐞:\n𝐍𝐎𝐍𝐄 ➖UsethedefaultpositionsizesettingsinTab"Properties".\n𝐄𝐐𝐔𝐈𝐓𝐘 ➖％pertradefromtheinitialcapital.\n𝐒𝐈𝐙𝐄 ➖Fixedsizeamountoftrade.\n𝐂𝐎𝐍𝐓𝐑𝐀𝐂𝐓𝐒 ➖Thefixedamountofthedealincontracts.\n')
//——————OrderSize
eqty=switchQTYMethod
'NONE'=>na
'EQUITY'=>riskPerc/close
'SIZE'=>riskSize/close
'CONTRACTS'=>riskCntr
//
//——————IntradayLoss％
condintradayloss=setMaxIntradayLoss?maxIntradayLoss:100
strategy.risk.max_intraday_loss(value=condintradayloss,type=strategy.percent_of_equity)
//——————MaxDrawdown％
condmaxdrawdown=setMaxDrawdown?maxPercDd:100
strategy.risk.max_drawdown(value=condmaxdrawdown,type=strategy.percent_of_equity)
//——————Dailytradescalculation
tradesIntradayCount=setNumberDailyTrades?maxDailyTrades:1000
strategy.risk.max_intraday_filled_orders(count=tradesIntradayCount)
//——————Weeklytradescalculation
tradesLastWeek=0
tradesLastWeek:=dayofweek==dayofweek.mondayanddayofweek!=dayofweek[1]?strategy.closedtrades[1]+strategy.opentrades[1]:tradesLastWeek[1]
//——————Calculatenumberoftradesthisweek
weeklyTrades=strategy.closedtrades+strategy.opentrades-tradesLastWeek
okToTradeWeekly=setNumberWeeklyTrades?weeklyTrades<maxWeeklyTrades:true
//——————Consecutivelossdaysinarow
countConsLossDays=setmaxLosingDaysStreak?maxLosingDaysStreak:1000
strategy.risk.max_cons_loss_days(countConsLossDays)
//——————Calculatethetotallosingstreaks
newLoss=strategy.losstrades>strategy.losstrades[1]andstrategy.wintrades==strategy.wintrades[1]andstrategy.eventrades==strategy.eventrades[1]
//——————Determinecurrentlosingstreaklength
streakLossLen=0
streakLossLen:=newLoss?nz(streakLossLen[1])+1:strategy.wintrades>strategy.wintrades[1]orstrategy.eventrades>strategy.eventrades[1]?0:nz(streakLossLen[1])
//——————Checkiflosingstreakisundermaxallowed
okToTradeLossStreak=setmaxLosingStreak?streakLossLen<maxLosingStreak:true
//——————Calculatethetotalwinningstreaks
newWin=strategy.wintrades>strategy.wintrades[1]andstrategy.losstrades==strategy.losstrades[1]andstrategy.eventrades==strategy.eventrades[1]
//——————Figureoutcurrentwinningstreaklength
streakWinLen=0
streakWinLen:=newWin?nz(streakWinLen[1])+1:strategy.losstrades>strategy.losstrades[1]orstrategy.eventrades>strategy.eventrades[1]?0:nz(streakWinLen[1])
//——————Checkifwinningstreakisundermaxallowed
okToTradeWinStreak=setmaxWinStreak?streakWinLen<maxWinStreak:true
//TP-SLExitStrategy
percentTP=input.float(4.5,' Profit％    ',group=groupset,inline='fix',minval=0.1,step=0.1)
percentSL=input.float(1.5,' Stop％  ',group=groupset,inline='fix',minval=0.1,step=0.1)
moneyTP=input.float(333,' Profit＄    ',group=groupset,inline='mon',minval=1,step=5)
moneySL=input.float(100,' Stop＄  ',group=groupset,inline='mon',minval=1,step=5)
ATRLenTP=input.int(30,' ATRTPPeriod  ',group=groupset,inline='atrTP',minval=1,step=1)
ATRMultTP=input.float(3,' TPMultiplier',group=groupset,inline='atrTP',minval=0.1,step=0.1)
ATRLenSL=input.int(30,' ATRSLPeriod  ',group=groupset,inline='atrSL',minval=1,step=1)
ATRMultSL=input.float(4,'SLMultiplier',group=groupset,inline='atrSL',minval=0.1,step=0.1)
trailPerc=input.float(3,' Trailing％  ',group=groupset,inline='trl',minval=0.1,step=0.1)
riskReward=input.float(2,' R:R    1:',group=groupset,inline='trl',minval=0.5,step=0.1)
fixedRR=input.bool(true,'FixedRR',group=groupset,inline='trl',tooltip='𝐅𝐢𝐱𝐞𝐝 𝗥:𝗥 ➖IfthestoplossisDynamic(TrailingorMA)thenR:RcanalsobemadeDynamic')
HHLL=input.int(200,' HH/LL   ',group=groupset,inline='hls',minval=1,step=5)
LoHi=input.int(5,'  LO/HI ',group=groupset,inline='hls',minval=1,step=1)
addPerc=input.bool(false,'Add％',group=groupset,inline='hls',tooltip='𝐀𝐝𝐝 ％ ➖Iftrue,thenwiththe"𝗦𝘁𝗼𝗽 ％"parameteryoucanaddpercentagestoanyofthecurrentSL.\nCanbeespeciallyusefulwhenusingStop-𝗔𝗧𝗥or𝗠𝗔or𝗟𝗢/𝗛𝗜.\nForexamplewith𝗟𝗢/𝗛𝗜toputastopforthelastHigh/Lowandadd0.5%additionalStoploss')
maStopType=input.string('EMA',' MAStop',group=groupset,inline='mas',options=['EMA','HMA','SMA'])
maStopLen=input.int(15,' Len',group=groupset,inline='mas',minval=1,step=2)
maPerc=input.float(0.1,' Step',group=groupset,inline='mas',minval=0,step=0.1,tooltip='𝐌𝐀 𝐒𝐭𝐨𝐩 ➖allowstochoosewhichMAtouse.\n𝐋𝐞𝐧 ➖LengthofchosenMA.\n𝐒𝐭𝐞𝐩 ➖％stepofchangeMA.Step=0willusetheselectedMAwithoutchanges.\nWARNING:When𝐀𝐝𝐝％ison,theMAcalculationchanges..')
varboolPaintStrategy=input.bool(false,"PaintStrategyandTP/SLonChart",group=grouptakes,tooltip="PlotstradesforTP-SLStrategy")
slNumber=input.int(1,' SL0Position',group=grouptakes,inline='pos',minval=1,maxval=2)
ontpBE=input.bool(false,'',group=grouptakes,inline='pos')
tpBEnumber=input.int(2,'BreakevenonTP',group=grouptakes,inline='pos',minval=1,maxval=3,tooltip='𝐒𝐋 𝟎 𝐏𝐨𝐬𝐢𝐭𝐢𝐨𝐧 ➖ChangesthepositionoftheintermediateStopLoss.\nThevalue=3-themiddle.\n𝐁𝐫𝐞𝐚𝐤𝐞𝐯𝐞𝐧 𝐨𝐧 𝐓𝐏 ➖IftrueSetStopLosstoBreakevenafterthespecifiedTakeProfitisreached.')
barCoolDwn=input.int(0,' CoolDown#Bars',group=grouptakes,inline='',minval=0,tooltip='DoNotopenanewpositionuntil#barshavepassedsincethelasttrade.\nValue=0-disablesthefunction.')
//——————Tradevariables
entry=strategy.position_avg_price
sizePos=strategy.position_size
inLong=sizePos>0
inShort=sizePos<0
inTrade=inLongorinShort
inPos=(inLongandnotinShort[1])or(inShortandnotinLong[1])
varID='TradeID'
vartpPrice=float(na)
varslPrice=float(na)
//——————Entrysolutions
direction=0
directionL=bulland(nz(direction[1])==0ornz(direction[1])==-1)
directionS=bearand(nz(direction[1])==0ornz(direction[1])==+1)
direction:=directionL?+1:directionS?-1:(reEntryDeal?direction[1]:direction[0])
checkCoolDwn=barCoolDwn>0?notinTrade[barCoolDwn]:true
OkToTrade=dateRangeandokToTradeLossStreakandokToTradeWinStreakandcheckCoolDwn
goLong=(waitEndDeal?notinTradeanddirection==+1:direction==+1)andbullDealandOkToTradeandFilterLongOK
goShort=(waitEndDeal?notinTradeanddirection==-1:direction==-1)andbearDealandOkToTradeandFilterShortOK
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
DynamicStops=(slType=='TRAILING'orslType=='FASTTRAIL'orslType=='MA')
//——————FixedSL/TP
iftpType=='FIXED％'
tpPrice:=inLongandnotinTrade[1]?entry*(1+percentTP/100):inShortandnotinTrade[1]?entry*(1-percentTP/100):tpPrice
ifslType=='FIXED％'
slPrice:=inLongandnotinTrade[1]?entry*(1-percentSL/100):inShortandnotinTrade[1]?entry*(1+percentSL/100):slPrice
//——————MoneySL/TP
iftpType=='FIXED＄'
tpPrice:=inLongandnotinTrade[1]?entry+(moneyTP/math.abs(sizePos)):inShortandnotinTrade[1]?entry-(moneyTP/math.abs(sizePos)):tpPrice
ifslType=='FIXED＄'
slPrice:=inLongandnotinTrade[1]?entry-(moneySL/math.abs(sizePos)):inShortandnotinTrade[1]?entry+(moneySL/math.abs(sizePos)):slPrice
//——————TrailingStop
ifslType=='TRAILING'
StopL=0.,StopS=0.
StopL:=inLong?math.max(close*(1-trailPerc/100),StopL[1]):0
StopS:=inShort?math.min(close*(1+trailPerc/100),StopS[1]):999999
slPrice:=inLong?StopL:inShort?StopS:slPrice
//——————FastTrailingStop
ifslType=='FASTTRAIL'
varstop=float(na)
stop:=inLongandnotinTrade[1]?entry*(1-trailPerc/100):inShortandnotinTrade[1]?entry*(1+trailPerc/100):stop
stop:=inLongandclose>close[1]?stop+(close-close[1]):inShortandclose<close[1]?stop+(close-close[1]):stop
slPrice:=stop
//——————ATRFixedTP
StopATRTP=ta.atr(ATRLenTP)*ATRMultTP
iftpType=='ATRTP'
tpPrice:=inLongandnotinTrade[1]?entry+StopATRTP:inShortandnotinTrade[1]?entry-StopATRTP:tpPrice
//——————ATRFixedSL
StopATRSL=ta.atr(ATRLenSL)*ATRMultSL
ifslType=='ATRSL'
slPrice:=inLongandnotinTrade[1]?entry-StopATRSL:inShortandnotinTrade[1]?entry+StopATRSL:slPrice
//——————LO/HIStop
ifslType=='LO/HI'
HiStop=ta.highest(high,LoHi)
LoStop=ta.lowest(low,LoHi)
slPrice:=inLongandnotinTrade[1]?LoStop:inShortandnotinTrade[1]?HiStop:slPrice
//——————HH/LLTake
iftpType=='HH/LL'
HiStop=ta.highest(high,HHLL)
LoStop=ta.lowest(low,HHLL)
tpPrice:=inLongandnotinTrade[1]?HiStop:inShortandnotinTrade[1]?LoStop:tpPrice
//——————MA'sStops
ifslType=='MA'
maSType=MA(maStopType,close,maStopLen)
Stop=maSType*(maPerc/100)
slPrice:=inLong?math.max(nz(slPrice[1],0),maSType-Stop):inShort?math.min(nz(slPrice[1],999999),maSType+Stop):na
//——————RiskRewardTake
iftpType=='R:R'
check=fixedRR?notinTrade[1]:true
tpPrice:=inLongandcheck?entry+(entry-slPrice)*riskReward:inShortandcheck?entry-(slPrice-entry)*riskReward:tpPrice
//——————AddPercentstoSL
ifaddPerc
check=DynamicStops?true:notinTrade[1]
slPrice:=inLongandcheck?slPrice*(1-percentSL/100):inShortandcheck?slPrice*(1+percentSL/100):slPrice
//——————TPSL's
TypeStop=tpType!='None'orslType=='FIXED％'orslType=='FIXED＄'orslType=='ATR'orslType=='LO/HI'
BuildLeveles(take,nTake)=>//CreatingIntermediateLevelsoftheSL/TP-byshiftingthecurrentTP/SLtotheentrylevel
nTakes=4
varoffset=float(na)
offset:=notinPos[1]?(entry-take):offset
xentry=take+offset
levels=array.new_float()
fori=1tonTakes-1
array.push(levels,xentry+(take-xentry)*i/(nTakes))
result=nTake>=0andnTake<=nTakes?array.get(levels,nTake):na
CheckLevels(lvl,isTake)=>//CheckiftheSL/TPisreached
varfloatlevel=na
ifisTakeand((inLongandhigh>=lvl)or(inShortandlow<=lvl))
level:=entry
ifnotisTakeand((inLongandlow<=lvl)or(inShortandhigh>=lvl))
level:=entry
ifnotinTrade
level:=na
level
//——————GetandCheckLevels
stop0=tpType!='None'?BuildLeveles(slPrice,slNumber-1):slPrice,checkStop0=TypeStop?CheckLevels(stop0,false):CheckLevels(stop0,true)
take1=BuildLeveles(TypeStop?tpPrice:slPrice,0),checkTake1=TypeStop?CheckLevels(take1,true):CheckLevels(take1,false)
take2=BuildLeveles(TypeStop?tpPrice:slPrice,1),checkTake2=TypeStop?CheckLevels(take2,true):CheckLevels(take2,false)
take3=BuildLeveles(TypeStop?tpPrice:slPrice,2),checkTake3=TypeStop?CheckLevels(take3,true):CheckLevels(take3,false)
//——————MoveStoptoBreakeven
slbecheck=(tpBEnumber==1andontake1)or(tpBEnumber==2andontake2)or(tpBEnumber==3andontake3)
ifontpBEandslbecheckandnotDynamicStops
slbe=TypeStop?CheckLevels(BuildLeveles(tpPrice,tpBEnumber-1),true):CheckLevels(BuildLeveles(slPrice,tpBEnumber-1),false)
slPrice:=slbe>0?slbe:slPrice
stop0:=slPrice==entry?slPrice:stop0
//ALERTS
i_alert_message_long_txt=input.text_area(defval="",title='APILongEntry',group='APIforLongBotAlerts')
i_alert_message_short_txt=input.text_area(defval="",title='APIShortEntry',group='APIforShortBotAlerts')
i_alert_txt_exit_TPSL0=input.text_area(defval="",title='APIExit0',group='APITP-SLStrategyExitAlerts')
i_alert_txt_exit_TPSL1=input.text_area(defval="",title='APIExit1',group='APITP-SLStrategyExitAlerts')
i_alert_txt_exit_TPSL2=input.text_area(defval="",title='APIExit2',group='APITP-SLStrategyExitAlerts')
i_alert_txt_exit_TPSL3=input.text_area(defval="",title='APIExit3',group='APITP-SLStrategyExitAlerts')
i_alert_txt_exit_TPSLX=input.text_area(defval="",title='APIExitX',group='APITP-SLStrategyExitAlerts')
//——————Entry's
eqty(qty)=>QTYMethod=='EQUITY'?qty/100*(strategy.initial_capital+(useNetProfit?strategy.netprofit:0)):QTYMethod=='SIZE'?qty/syminfo.pointvalue:qty
ifgoLong
ID:='Long'
strategy.entry(ID,strategy.long,qty=eqty(eqty),comment=ID,alert_message=ID+i_alert_message_long_txt)
ifgoShort
ID:='Short'
strategy.entry(ID,strategy.short,qty=eqty(eqty),comment=ID,alert_message=ID+i_alert_message_short_txt)
//——————Exit's
qty(perc)=>math.abs(sizePos*perc/100)
ifinTrade
strategy.exit('End_0',onstop0?ID:'na',qty=qty(qstop0),limit=tpPrice,stop=stop0,comment_profit='TP0',comment_loss='SL0',alert_message=ID+i_alert_txt_exit_TPSL0)
strategy.exit('End_1',ontake1?ID:'na',qty=qty(qtake1),limit=TypeStop?take1:tpPrice,stop=TypeStop?slPrice:take1,comment_profit='TP1',comment_loss='SL1',alert_message=ID+i_alert_txt_exit_TPSL1)
strategy.exit('End_2',ontake2?ID:'na',qty=qty(qtake2),limit=TypeStop?take2:tpPrice,stop=TypeStop?slPrice:take2,comment_profit='TP2',comment_loss='SL2',alert_message=ID+i_alert_txt_exit_TPSL2)
strategy.exit('End_3',ontake3?ID:'na',qty=qty(qtake3),limit=TypeStop?take3:tpPrice,stop=TypeStop?slPrice:take3,comment_profit='TP3',comment_loss='SL3',alert_message=ID+i_alert_txt_exit_TPSL3)
strategy.exit('End_X',ID,limit=tpPrice,stop=slPrice,comment_profit='TPX',comment_loss='SLX',alert_message=ID+i_alert_txt_exit_TPSLX)
//========================================================================================================================
///==============================================================================================================
//PlottingandDebugging-Style1-PaintStrategy
//========================================================================================================================
bullcolor=input.color(color.new(color.teal,70),'Colors:FG',group=grouptakes,inline='col')
bearcolor=input.color(color.new(color.red,70),'',group=grouptakes,inline='col')
bullcolorb=input.color(color.new(color.teal,80),'BG',group=grouptakes,inline='col')
bearcolorb=input.color(color.new(color.red,80),'',group=grouptakes,inline='col')
//Style1-PaintStrategyonChart
plotColx=inLongandPaintStrategy?bullcolor:inShort?bearcolor:na
plotColy=inLongandPaintStrategy?bullcolorb:inShort?bearcolorb:na
tpcolor=tpType!='None'?bullcolor:plotColx
tp1=plot(inPosandPaintStrategy?tpPrice:na,'Take',color=tpType!='None'?bullcolor:plotColx,style=plot.style_linebr,editable=false)
sl1=plot(inPosandPaintStrategy?slPrice:na,'Stop',color=tpType!='None'?bearcolor:plotColx,style=plot.style_linebr,editable=false)
en1=plot(TypeStopandPaintStrategy?(inLongandslPrice>entryorinShortandslPrice<entry?slPrice:entry):inPos?close:na,'Price',color=TypeStop?#787b86:na,style=plot.style_linebr)
fill(tp1,en1,color=TypeStop?bullcolorb:plotColy,editable=false)
fill(sl1,en1,color=TypeStop?bearcolorb:plotColy,editable=false)
plotchar(inPosandnotinPos[1]andPaintStrategy?tpPrice:na,'TakeStart',color=tpType!='None'?bullcolor:plotColx,char='?',location=location.absolute,size=size.tiny)
plotchar(inPosandnotinPos[1]andPaintStrategy?slPrice:na,'StopStart',color=tpType!='None'?bearcolor:plotColx,char='?',location=location.absolute,size=size.tiny)
plot(inPosandontake1andnotcheckTake1[1]andPaintStrategy?take1:na,'TP1',color=tpcolor,style=plot.style_linebr,editable=false)
plot(inPosandontake2andnotcheckTake2[1]andPaintStrategy?take2:na,'TP2',color=tpcolor,style=plot.style_linebr,editable=false)
plot(inPosandontake3andnotcheckTake3[1]andPaintStrategy?take3:na,'TP3',color=tpcolor,style=plot.style_linebr,editable=false)
plot(inPosandonstop0andnotcheckStop0[1]andPaintStrategy?stop0:na,'SL0',color=bearcolor,style=plot.style_linebr,editable=false)
//Style-PlotLettersonChart
plotshape(goLongandPlotLong,'BullishSignals',text='Buy',location=location.belowbar,style=shape.labelup,size=size.tiny,color=#32C4EE,textcolor=color.white,offset=0)
plotshape(inLongandlongExitandPlotLongandPlotLongExit,'LongExit',location=location.abovebar,style=shape.xcross,size=size.tiny,color=#32C4EE,textcolor=color.white,offset=2)
plotshape(goShortandPlotShorts,'BearishSignals',text='Sell',location=location.abovebar,style=shape.labeldown,size=size.tiny,color=#EC3E6F,textcolor=color.white,offset=0)
plotshape(inShortandshortExitandPlotShortsandPlotShortsExit,'ShortExit',location=location.belowbar,style=shape.xcross,size=size.tiny,color=#EC3E6F,textcolor=color.white,offset=2)
//PlotDashboard
//📊Plots📊
//Thedatacollectedduringthebacktestwillbedisplayedonscreenwithinadashboardandvariousdrawingstovisualizetheoperations.
plotDashboard=input.bool(group="📊Plots📊",title="PlotDashboard",defval=true)
maxProfit=input.float(group="📊Plots📊",title="Profitㅤㅤ🟢if>to:",defval=0.1,inline="Profit")
minProfit=input.float(group="📊Plots📊",title="ㅤ🔴if<to:",defval=0,inline="Profit")
maxWinRate=input.float(group="📊Plots📊",title="WinRateㅤ🟢if>to:",defval=70,inline="Winrate",minval=0,maxval=100)
minWinRate=input.float(group="📊Plots📊",title="ㅤ🔴if<to:",defval=50,inline="Winrate",minval=0,maxval=100)
maxPFactor=input.float(group="📊Plots📊",title="P.Factorㅤ🟢if>to:",defval=2,inline="PFactor",minval=0)
minPFactor=input.float(group="📊Plots📊",title="ㅤ🔴if<to:",defval=1,inline="PFactor",minval=0)
bgcolor(dateRange?na:color.new(color.white,80))
MTLabel(ftimestamp,etimestamp,statusProfit,statusWinRate,statusPFactor,maxWinRow,maxLossRow)=>
timefr=timeframe.isminutes?'min':''
string_text='🔰CITIMoku(Free)🔰'+'\n'
_text+='➖➖➖➖➖➖➖➖➖➖'+'\n'
_text+=''+'\n'
_text+='Ticker:'+'\n'
_text+=''+syminfo.ticker+''+timeframe.period+timefr
_text+=''+'\n\n'
_text+='Since:'+'\n'
_text+=str.format("{0,date,long}",ftimestamp)+str.format("{0,time,HH:mm}",ftimestamp)+'\n'
_text+='To:'+'\n'
_text+=str.format("{0,date,long}",etimestamp)+str.format("{0,time,HH:mm}",etimestamp)+'\n'
_text+=''+'\n'
_text+='➖➖➖➖➖➖➖➖➖➖'+'\n'
_text+=''+'\n'
_text+='#Trades:'+str.tostring(strategy.closedtrades,'##.##')+'\n'
_text+=''+'\n'
_text+='Profit:'+'\n'
_text+=''+str.tostring(statusProfit)+str.tostring((strategy.netprofit/strategy.initial_capital)*100,'##.##')+'%\n'
_text+='WinRate:'+'\n'
_text+=''+str.tostring(statusWinRate)+str.tostring((strategy.wintrades/strategy.closedtrades)*100,'##.##')+'%\n'
_text+='ProfitFactor:'+'\n'
_text+=''+str.tostring(statusPFactor)+str.tostring((strategy.grossprofit/strategy.grossloss),'##.###')+'\n'
_text+=''+'\n'
_text+='WinTrades:'+str.tostring(strategy.wintrades,'######')+'\n'
_text+='LossTrades:'+str.tostring(strategy.losstrades,'######')+'\n'
_text+=''+'\n'
_text+='AvgWin:'+str.tostring(((strategy.grossprofit/strategy.wintrades)*100)/strategy.initial_capital,'##.##')+'%\n'
_text+='AvgLoss:'+str.tostring(((strategy.grossloss/strategy.losstrades)*100)/strategy.initial_capital,'##.##')+'%\n'
_text+=''+'\n'
_text+='MaxWininaRow:'+str.tostring(maxWinRow,'######')+'\n'
_text+='MaxLossinaRow:'+str.tostring(maxLossRow,'######')+'\n'
_text+=''+'\n'
_text+='➖➖➖➖➖➖➖➖➖➖'+'\n'
ftimestamp=startFilter?timestamp(year(startTime,zoneTime),month(startTime,zoneTime),dayofmonth(startTime,zoneTime),hour(startTime,zoneTime),minute(startTime,zoneTime),second(startTime,zoneTime)):timestamp(year(ta.valuewhen(barstate.isfirst,time,0),zoneTime),month(ta.valuewhen(barstate.isfirst,time,0),zoneTime),dayofmonth(ta.valuewhen(barstate.isfirst,time,0),zoneTime),hour(ta.valuewhen(barstate.isfirst,time,0),zoneTime),minute(ta.valuewhen(barstate.isfirst,time,0),zoneTime))
etimestamp=endFilter?timestamp(year(endTime,zoneTime),month(endTime,zoneTime),dayofmonth(endTime,zoneTime),hour(endTime,zoneTime),minute(endTime,zoneTime),second(endTime,zoneTime)):timestamp(year(timenow,zoneTime),month(timenow,zoneTime),dayofmonth(timenow,zoneTime),hour(timenow,zoneTime),minute(timenow,zoneTime))
statusProfit=((strategy.netprofit/strategy.initial_capital)*100)+0.001>=maxProfit?"🟢":((strategy.netprofit/strategy.initial_capital)*100)-0.001<=minProfit?"🔴":"🟡"
statusWinRate=((strategy.wintrades/strategy.closedtrades)*100)+0.001>=maxWinRate?"🟢":((strategy.wintrades/strategy.closedtrades)*100)-0.001<=minWinRate?"🔴":"🟡"
statusPFactor=(strategy.grossprofit/strategy.grossloss)+0.001>=maxPFactor?"🟢":(strategy.grossprofit/strategy.grossloss)-0.001<=minPFactor?"🔴":"🟡"
varipintwinRow=0
varipintlossRow=0
varipintmaxWinRow=0
varipintmaxLossRow=0
if(strategy.wintrades>strategy.wintrades[1])and(strategy.losstrades==strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
lossRow:=0
winRow:=winRow+1
ifwinRow>maxWinRow
maxWinRow:=winRow
if(strategy.wintrades==strategy.wintrades[1])and(strategy.losstrades>strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
winRow:=0
lossRow:=lossRow+1
iflossRow>maxLossRow
maxLossRow:=lossRow
labella=na
label.delete(la[1])
la:=plotDashboard?label.new(x=bar_index+5,y=close,text=MTLabel(ftimestamp,etimestamp,statusProfit,statusWinRate,statusPFactor,maxWinRow,maxLossRow),color=color.new(color.black,50),style=label.style_label_left,textcolor=color.white,size=size.normal,textalign=text.align_left):na
Expand (581 lines)
