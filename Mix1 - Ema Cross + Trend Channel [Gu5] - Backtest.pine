Script Name: Mix1 - Ema Cross + Trend Channel [Gu5] - Backtest
Author: gu5tavo71
Description: Backtest of the indicator "Mix1: Ema Cross + Trend Channel  "

Trend indicator, by the crossing of moving averages

SMA200 with a channel as a filter confirms the trend.
The crossing of two moving averages, give alert only in trend.
PineScript code:

Pine Script™ strategy
Mix1 : Ema Cross + Trend Channel [Gu5] - Backtest
//@version=5
//  Indicator  to  combines:
//                      Trend  Channel[Gu5]  (SMA  200)  +
//                      EMA's  cross    (26,  50  )  +
//                      Golden  Cross  (50,  200)
//  Author:  @gu5tavo71  08/2019
//  v2.3.24,  2022.07.10
//  Trend  Channel  [Gu5]  //  Author:  @gu5tavo71  08/2019
//
//  This  source  code  is  subject  to  these  terms:
//  Attribution-NonCommercial  4.0  International  (CC  BY-NC  4.0)
//  https://www.safecreative.org/work/2202190517452-mix1-ema-cross-trend-channel-gu5-
//  You  are  free  to:
//  Share,  copy  and  redistribute  this  script
//  Adapt,  transform  and  build  on  this  script
//  Under  the  following  terms:
//  Non-commercial:  You  cannot  sell  my  indicator.  You  can't  sell  my  work.
//  Attribution:  If  you  post  part  of  my  code,  you  must  give  me  proper  credit
//
//  I  am  using  part  of  this  code  published  by  @PineCoders  and  Public  Library
//  Disclaimer:  I  am  not  a  financial  advisor.
//                          For  purpose  educate  only.  Use  at  your  own  risk.
strategy(title  =  'Mix1  :  Ema  Cross  +  Trend  Channel  [Gu5]  -  Backtest',  shorttitle  =  'Mix01',  overlay  =  true,
    initial_capital                  =  100,
    default_qty_value              =  100,
    format                                    =  format.price,
    precision                              =  2,
    process_orders_on_close  =  true)
//  ———————————  <constant_declarations>  {
//  <color>
C_GREEN            =  #006400    //Green
C_GREENLIGHT  =  #388e3c    //Green  Light
C_RED                =  #8B0000    //Red
C_REDLIGHT      =  #b71c1c    //Red  Light
//}
//  ———————————  <inputs>  {
i_maSrc            =  input.source          (close,          'MA  Source'                                          ,  group        =  'EMAs')
i_maFast1        =  input.int                (26,                'EMA  Fast'                                            ,  group        =  'EMAs')
i_maFast2        =  input.int                (50,                'EMA  Medium'                                        ,  group        =  'EMAs')
i_maLen            =  input.int                (200,              'MA  Trend'                                            ,  group        =  'Trend  Channel')
o_maLen1          =                                                            'EMA'
o_maLen2          =                                                            'SMA'
i_maLenSel      =  input.string          (o_maLen2,    'MA  Type'                                              ,  group        =  'Trend  Channel',
          options  =                                                            [o_maLen1,  o_maLen2],
          tooltip  =                                                            "EMA  or  SMA")
i_htf                =  input.timeframe    ('',                'Select  Higher  Timeframe'              ,  group        =  'Trend  Channel',
          tooltip  =                                                            'Only  for  MA  Trend')
i_rangeLen      =  input.float            (0.618,          'Channel  Range  Length'                    ,  group        =  'Trend  Channel',
          tooltip  =                                                            'ATR  of  the  MA  Trend')
i_slOn              =  input.bool              (true,            '■  Stop  Loss  On/Off'                        ,  group        =  'Stop  Loss')
i_sl                  =  input.float            (1.5,              'SL  %'                                                    ,  group        =  'Stop  Loss',  step          =  0.1)
i_periodSw      =  input.bool              (true,            '■  Period  On/Off'                              ,  group        =  'Period')
o_start            =  timestamp                (                      '2020-01-01  00:00  GMT-3'                )
o_end                =  timestamp                (                      '2099-12-31  00:00  GMT-3'                )
i_periodStar  =  input.time              (o_start,      'Start  Time'                                ,group='Period')
i_periodEnd=input.time(o_end,'EndTime',group='Period')
o_posSel1='OnlyLong'
o_posSel2='OnlyShort'
o_posSel3='Both'
i_posSel=input.string(o_posSel3,'PositionType',group='Strategy',
options=[o_posSel1,o_posSel2,o_posSel3],
tooltip="OnlyLong,OnlyshortorBoth")
o_typeS1='Strategy1'
o_typeS2='Strategy2'
i_typeS=input.string(o_typeS2,'StrategyType',group='Strategy',
options=[o_typeS1,o_typeS2],
tooltip="Strategy1:\nLong,whentheprice(close)crossestheema.\nStrategy2:\nLong,onlywhenemagoesup")
i_barColOn=input.bool(true,'■BarColorOn/Off',group='Display')
i_alertOn=input.bool(false,'■AlertOn/Off',group='Display')
i_channelOn=input.bool(false,'■ChannelRangeOn/Off',group='Display',
tooltip='Iftheprice(close)isoverthanthechannel,thetrendisbullish.Ifthepriceisunder,bearish.Andifthepriceisinthechannel,itisinrange')
i_goldenOn=input.bool(false,'■GoldenCrossOn/Off')
o_alert='{{strategy.order.comment}}'
i_alert=input.string(o_alert,'Settingalert',group='Display',
tooltip='ForAlerts,justcopy{{strategy.order.comment}}andpasteinalertwindow.')
//}
//———————————<calculations>{
//<setinitialvalues>
condition=0.0
maFast1=ta.ema(i_maSrc,i_maFast1)
maFast2=ta.ema(i_maSrc,i_maFast2)
maDir=maFast1>maFast2?1:-1
maTrend=request.security(syminfo.tickerid,i_htf,
i_maLenSel=="SMA"?ta.sma(close,i_maLen)[1]:ta.ema(close,i_maLen)[1],
lookahead=barmerge.lookahead_on)//Norepaint
maTrendDir=i_maSrc>=maTrend?1:-1
rangeAtr=ta.atr(i_maLen)*i_rangeLen
rangeTop=maTrend+rangeAtr
rangeBot=maTrend-rangeAtr
rangeCh=(open<=rangeToporclose<=rangeTop)and
(open>=rangeBotorclose>=rangeBot)
trendDir=i_typeS=='Strategy1'?
rangeCh?0:
maTrendDir==1andmaDir==1andmaTrend>maFast2?0:
maTrendDir==-1andmaDir==-1andmaTrend<maFast2?0:
maTrendDir==1andmaDir==1?1:
maTrendDir==-1andmaDir==-1?-1:0:
rangeCh?0:
maTrendDir==1andmaDir==1?1:
maTrendDir==-1andmaDir==-1?-1:0
GCross=i_goldenOn?ta.crossover(maFast2,maTrend):na
DCross=i_goldenOn?ta.crossunder(maFast2,maTrend):na
period=i_periodSw?time>=i_periodStarandtime<=i_periodEnd:true
//<rules>
entryLong=trendDir==1and
i_posSel!='OnlyShort'and
period
entryShort=trendDir==-1and
i_posSel!='OnlyLong'and
period
exitLong=trendDir!=1and
i_posSel!='OnlyShort'and
period
exitShort=trendDir!=-1and
i_posSel!='OnlyLong'and
period
//<stoplossforindicator,forpercentage>
slEntry=close*i_sl/100
slTop=close+slEntry
slBot=close-slEntry
slTopBuff=ta.valuewhen(condition[1]!=1andentryLong,slBot,0)
slBotBuff=ta.valuewhen(condition[1]!=-1andentryShort,slTop,0)
slLine=condition[1]==-1andentryLong?slTopBuff:
condition[1]==1andentryShort?slBotBuff:
condition[1]==1orentryLong?slTopBuff:
condition[1]==-1orentryShort?slBotBuff:na
slTopCross=condition[1]==1andta.crossunder(low,slLine)
slBotCross=condition[1]==-1andta.crossover(high,slLine)
slExit=i_slOn?slTopCrossorslBotCross:na
//<conditions>
condition:=condition[1]!=1andentryLong?1:
condition[1]!=-1andentryShort?-1:
condition[1]!=0andslExit?0:
condition[1]==1andexitLong?0:
condition[1]==-1andexitShort?0:nz(condition[1])
long=condition[1]!=1andcondition==1
short=condition[1]!=-1andcondition==-1
xl=condition[1]==1andcondition==0andnotslExit
xs=condition[1]==-1andcondition==0andnotslExit
sl=condition[1]!=0andslExit
//<color>
c_emas=xl?color.new(color.orange,99):
xs?color.new(color.orange,99):
trendDir==1andmaDir==1?color.new(C_GREEN,99):
trendDir==-1andmaDir==-1?color.new(C_RED,99):
color.new(color.orange,99)
c_maFill=xl?color.new(color.orange,70):
xs?color.new(color.orange,70):
trendDir==1andmaDir==1?color.new(C_GREEN,70):
trendDir==-1andmaDir==-1?color.new(C_RED,70):
color.new(color.orange,70)
c_maTrend=trendDir==0?color.new(color.orange,0):
trendDir==1andmaTrend[1]<maTrend?color.new(C_GREEN,0):
trendDir==1andmaTrend[1]>=maTrend?color.new(C_GREENLIGHT,0):
trendDir==-1andmaTrend[1]<maTrend?color.new(C_REDLIGHT,0):
trendDir==-1andmaTrend[1]>=maTrend?color.new(C_RED,0):na
c_ch=trendDir==0?color.new(color.orange,50):
trendDir==1?color.new(C_GREEN,50):
trendDir==-1?color.new(C_RED,50):na
c_slLineUp=ta.rising(slLine,1)
c_slLineDn=ta.falling(slLine,1)
c_slLine=c_slLineUp?na:
c_slLineDn?na:color.red
c_barCol=trendDir==0andopen<=close?color.new(color.orange,0):
trendDir==0andopen>close?color.new(color.yellow,0):
trendDir==1andopen<=close?color.new(C_GREEN,0):
trendDir==1andopen>close?color.new(C_GREENLIGHT,0):
trendDir==-1andopen>=close?color.new(C_RED,0):
trendDir==-1andopen<close?color.new(C_REDLIGHT,0):
color.new(color.orange,0)
//}
//———————————<plots>{
p_maFast1=plot(
maFast1,
title='EMAFast1',
color=c_emas,
linewidth=1)
p_maFast2=plot(
maFast2,
title='EMAFast2',
color=c_emas,
linewidth=2)
fill(
p_maFast1,p_maFast2,
title='EMAsFill',
color=c_maFill)
plot(
maTrend,
title='SMATrend',
color=c_maTrend,
linewidth=3)
p_chTop=plot(
i_channelOn?rangeTop:na,
title='TopChannel',
color=c_maTrend,
linewidth=1)
p_chBot=plot(
i_channelOn?rangeBot:na,
title='BottomChannel',
color=c_maTrend,
linewidth=1)
fill(
p_chTop,p_chBot,
title='Channel',
color=c_ch)
plot(
i_slOnandcondition!=0?slLine:na,
title='StopLossLine',
color=c_slLine,
linewidth=1,
style=plot.style_linebr)
//}
//———————————<strategy_calls>{
iflongandbarstate.isconfirmed
strategy.entry('Long',strategy.long,comment='long')
ifshortandbarstate.isconfirmed
strategy.entry('Short',strategy.short,comment='short')
strategy.exit(
id='XL',
from_entry='Long',
stop=i_slOn?slLine:na)
strategy.exit(
id='XS',
from_entry='Short',
stop=i_slOn?slLine:na)
ifxl
strategy.close(
'Long',
comment='Close')
ifxs
strategy.close(
'Short',
comment='Close')
//}
//———————————<alerts>{
barcolor(i_barColOn?c_barCol:na)
plotshape(
i_alertOnandlong?high:na,
title='LongLabel',
text='Long',
textcolor=color.white,
color=color.new(C_GREEN,0),
style=shape.labelup,
size=size.normal,
location=location.belowbar)
plotshape(
i_alertOnandshort?low:na,
title='ShortLabel',
text='Short',
textcolor=color.white,
color=color.new(C_RED,0),
style=shape.labeldown,
size=size.normal,
location=location.abovebar)
plotshape(
i_alertOnand(xlorxs)?close:na,
title='CloseLabel',
text='Close',
textcolor=color.orange,
color=color.new(color.orange,0),
style=shape.xcross,
size=size.small,
location=location.absolute)
plotshape(
i_alertOnandsl?slLine:na,
title='StopLoss',
text='Stop\nLoss',
textcolor=color.orange,
color=color.new(color.orange,0),
style=shape.xcross,
size=size.small,
location=location.absolute)
plotshape(
i_alertOnandi_goldenOnandGCross?maTrend:na,
title='GoldenCrossLabel',
text='Golden\nCross',
textcolor=color.white,
color=color.new(color.orange,0),
style=shape.labelup,
size=size.normal,
location=location.absolute)
plotshape(
i_alertOnandi_goldenOnandDCross?maTrend:na,
title='DeathCrossLabel',
text='Death\nCross',
textcolor=color.white,
color=color.new(color.orange,0),
style=shape.labeldown,
size=size.normal,
location=location.absolute)
bgcolor(
i_periodSwandnotperiod?color.new(color.gray,90):na,
title='Session')
//}
//<debug>
plotchar(
maTrendDir,
title="maTrendDir",
text="",
location=location.absolute,
color=color.new(color.blue,100))
plotchar(
maDir,
title="maDir",
text="",
location=location.absolute,
color=color.new(color.blue,100))
plotchar(
trendDir,
title="trendDir",
text="",
location=location.absolute,
color=color.new(color.blue,100))
plotchar(
exitLong,
title="exitLong",
text="",
location=location.absolute,
color=color.new(color.blue,100))
Expand (327 lines)
