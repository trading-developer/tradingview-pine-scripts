Script Name: Moving Average Rainbow (Stormer)
Author: AugustoErni
Description: This strategy is based and shown by trader and investor Alexandre Wolwacz "Stormer".

 Overview
The strategy uses 12 moving averages (default EMA) to identify trends and generate trading signals opening positions.
Allowing to select the type of moving average and length to be used.
The conditions includes relationship between moving averages, the position of the...
PineScript code:

Pine Script™ strategy
Moving Average Rainbow (Stormer)
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  AugustoErni
//@version=5
strategy('Moving  Average  Rainbow  (Stormer)',  overlay=true,  process_orders_on_close=true,  calc_on_every_tick=false,  calc_on_order_fills=false,  initial_capital=10000,  currency=currency.USD,  default_qty_type=strategy.percent_of_equity,  default_qty_value=10,  pyramiding=0,  commission_type=strategy.commission.percent,  commission_value=0.12)
maType                                                =  input.string('EMA',  title='Moving  Average  Type/Tipo  de  Média  Móvel',  options=['EMA',  'SMA',  'RMA',  'WMA',  'HMA',  'VWMA'],  tooltip='This  option  is  to  select  the  type  of  Moving  Average  that  the  Rainbow  will  use./Esta  opção  é  para  selecionar  o  tipo  de  Média  Móvel  que  o  Rainbow  utilizará.',  group='Moving  Averages/Médias  Móveis')
maLengthFirst                                  =  input.int(3,  title='MA  #1',  minval=1,  step=1,  tooltip='First  MA  length./Comprimento  da  primeira  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthSecond                                =  input.int(5,  title='MA  #2',  minval=1,  step=1,  tooltip='Second  MA  length./Comprimento  da  segunda  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthThird                                  =  input.int(8,  title='MA  #3',  minval=1,  step=1,  tooltip='Third  MA  length./Comprimento  da  terceira  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthFourth                                =  input.int(13,  title='MA  #4',  minval=1,  step=1,  tooltip='Fourth  MA  length./Comprimento  da  quarta  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthFifth                                  =  input.int(20,  title='MA  #5',  minval=1,  step=1,  tooltip='Fifth  MA  length./Comprimento  da  quinta  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthSixth                                  =  input.int(25,  title='MA  #6',  minval=1,  step=1,  tooltip='Sixth  MA  length./Comprimento  da  sexta  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthSeventh                              =  input.int(30,  title='MA  #7',  minval=1,  step=1,  tooltip='Seventh  MA  length./Comprimento  da  sétima  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthEighth                                =  input.int(35,  title='MA  #8',  minval=1,  step=1,  tooltip='Eighth  MA  length./Comprimento  da  oitava  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthNineth                                =  input.int(40,  title='MA  #9',  minval=1,  step=1,  tooltip='Nineth  MA  length./Comprimento  da  nona  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthTenth                                  =  input.int(45,  title='MA  #10',  minval=1,  step=1,  tooltip='Tenth  MA  length./Comprimento  da  décima  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthEleventh                            =  input.int(50,  title='MA  #11',  minval=1,  step=1,  tooltip='Eleventh  MA  length./Comprimento  da  décima  primeira  MA.',  group='Moving  Averages/Médias  Móveis')
maLengthTwelveth                            =  input.int(55,  title='MA  #12',  minval=1,  step=1,  tooltip='Twelveth  MA  length./Comprimento  da  décima  segunda  MA.',  group='Moving  Averages/Médias  Móveis')
targetFactor                                    =  input.float(1.6,  title='Target  Take  Profit/Objetivo  de  Lucro  Alvo',  minval=0.1,  step=0.1,  tooltip='Calculate  the  take  profit  factor  when  entry  position./Calcula  o  fator  do  alvo  lucro  ao  entrar  na  posição.',  group='Risk  Management/Gerenciamento  de  Risco')
verifyTurnoverTrend                      =  input.bool(true,  title='Verify  Turnover  Trend/Verificar  Tendência  de  Rotatividade',  tooltip='This  option  checks  for  a  supposedly  turnover  trend  and  setup  new  target  (for  long  is  the  highest  high  and  for  short  is  the  lowest  low  identified)./Esta  opção  verifica  uma  suposta  tendência  de  rotatividade  e  estabelece  um  novo  objetivo  (para  long  é  a  máxima  mais  alta,  para  short  é  a  mínima  mais  baixa  identificados).',  group='Turnover  Trend/Rotatividade  Tendência')
verifyTurnoverSignal                    =  input.bool(false,  title='Verify  Turnover  Signal/Verificar  Sinal  de  Rotatividade',  tooltip='This  option  checks  for  a  supposedly  turnover  signal,  closing  the  current  position  and  opening  a  new  one  (for  long  it  will  close  and  open  a  new  for  short,  for  short  it  will  close  and  open  a  new  for  long)./Essa  opção  verifica  um  sinal  de  possível  reversão,  fechando  a  posição  atual  e  abrindo  uma  nova  (para  long  fechará  e  abrirá  uma  nova  para  short,  para  short  fechará  e  abrirá  uma  nova  para  long).',  group='Turnover  Signal/Rotatividade  Sinal')
verifyTurnoverSignalPriceExit  =  input.bool(false,  title='Verify  Price  Exit  Turnover  Signal/Verificar  Saída  de  Preço  Sinal  de  Rotatividade',  tooltip='This  option  complements  "turnover  signal"  by  veryfing  the  price  if  profitable  before  exiting  the  current  position./Esta  opção  complementa  o  "sinal  de  rotatividade"  verificando  o  preço  do  lucro  antes  de  sair  da  posição  atual.',  group='Turnover  Signal/Rotatividade  Sinal')
mas(maType,  maLengthFirst,  maLengthSecond,  maLengthThird,  maLengthFourth,  maLengthFifth,  maLengthSixth,  maLengthSeventh,  maLengthEighth,  maLengthNineth,  maLengthTenth,  maLengthEleventh,  maLengthTwelveth)  =>
        if  (maType  ==  'SMA')
                [ta.sma(close,  maLengthFirst),  ta.sma(close,  maLengthSecond),  ta.sma(close,  maLengthThird),  ta.sma(close,  maLengthFourth),  ta.sma(close,  maLengthFifth),  ta.sma(close,  maLengthSixth),  ta.sma(close,  maLengthSeventh),  ta.sma(close,  maLengthEighth),  ta.sma(close,  maLengthNineth),  ta.sma(close,  maLengthTenth),  ta.sma(close,  maLengthEleventh),  ta.sma(close,  maLengthTwelveth)]
        else  if  (maType  ==  'RMA')
                [ta.rma(close,  maLengthFirst),  ta.rma(close,  maLengthSecond),  ta.rma(close,  maLengthThird),  ta.rma(close,  maLengthFourth),  ta.rma(close,  maLengthFifth),  ta.rma(close,  maLengthSixth),  ta.rma(close,  maLengthSeventh),  ta.rma(close,  maLengthEighth),  ta.rma(close,  maLengthNineth),  ta.rma(close,  maLengthTenth),  ta.rma(close,  maLengthEleventh),  ta.rma(close,  maLengthTwelveth)]
        else  if  (maType  ==  'WMA')
                [ta.wma(close,  maLengthFirst),  ta.wma(close,  maLengthSecond),  ta.wma(close,  maLengthThird),  ta.wma(close,  maLengthFourth),  ta.wma(close,  maLengthFifth),  ta.wma(close,  maLengthSixth),  ta.wma(close,  maLengthSeventh),  ta.wma(close,  maLengthEighth),  ta.wma(close,  maLengthNineth),  ta.wma(close,  maLengthTenth),  ta.wma(close,  maLengthEleventh),  ta.wma(close,  maLengthTwelveth)]
        else  if  (maType  ==  'HMA')
                [ta.hma(close,  maLengthFirst),  ta.hma(close,  maLengthSecond),  ta.hma(close,  maLengthThird),  ta.hma(close,  maLengthFourth),  ta.hma(close,  maLengthFifth),  ta.hma(close,  maLengthSixth),  ta.hma(close,  maLengthSeventh),  ta.hma(close,  maLengthEighth),  ta.hma(close,  maLengthNineth),  ta.hma(close,  maLengthTenth),  ta.hma(close,  maLengthEleventh),  ta.hma(close,  maLengthTwelveth)]
        else  if  (maType  ==  'VWMA')
                [ta.vwma(close,  maLengthFirst),  ta.vwma(close,  maLengthSecond),  ta.vwma(close,  maLengthThird),  ta.vwma(close,  maLengthFourth),  ta.vwma(close,  maLengthFifth),  ta.vwma(close,  maLengthSixth),  ta.vwma(close,  maLengthSeventh),  ta.vwma(close,  maLengthEighth),  ta.vwma(close,  maLengthNineth),  ta.vwma(close,  maLengthTenth),  ta.vwma(close,  maLengthEleventh),  ta.vwma(close,  maLengthTwelveth)]
        else
                [ta.ema(close,  maLengthFirst),  ta.ema(close,  maLengthSecond),  ta.ema(close,  maLengthThird),  ta.ema(close,  maLengthFourth),  ta.ema(close,  maLengthFifth),  ta.ema(close,  maLengthSixth),  ta.ema(close,  maLengthSeventh),  ta.ema(close,  maLengthEighth),  ta.ema(close,  maLengthNineth),  ta.ema(close,  maLengthTenth),  ta.ema(close,  maLengthEleventh),  ta.ema(close,  maLengthTwelveth)]
[ma1,  ma2,  ma3,  ma4,  ma5,  ma6,  ma7,  ma8,  ma9,  ma10,  ma11,  ma12]  =  mas(maType,  maLengthFirst,  maLengthSecond,  maLengthThird,  maLengthFourth,  maLengthFifth,  maLengthSixth,  maLengthSeventh,  maLengthEighth,  maLengthNineth,  maLengthTenth,  maLengthEleventh,  maLengthTwelveth)
maTouchPriceTrend(ma1,  ma2,  ma3,  ma4,  ma5,  ma6,  ma7,  ma8,  ma9,  ma10,  ma11,  ma12,  trend)  =>
        var  float  touchPrice  =  na
        if  (trend  ==  'UPTREND')
                if  (low  <=  ma1  and  low  >=  ma2)
                        touchPrice  :=  ma2
                else  if  (low  <=  ma2  and  low  >=  ma3)
                        touchPrice  :=  ma3
                else  if  (low  <=  ma3  and  low  >=  ma4)
                        touchPrice  :=  ma4
                else  if  (low  <=  ma4  and  low  >=  ma5)
                        touchPrice  :=  ma5
                else  if  (low  <=  ma5  and  low  >=  ma6)
                        touchPrice  :=  ma6
                else  if  (low  <=  ma6  and  low  >=  ma7)
                        touchPrice  :=  ma7
                else  if  (low  <=  ma7  and  low  >=  ma8)
                        touchPrice  :=  ma8
                else  if  (low  <=  ma8  and  low  >=  ma9)
                        touchPrice  :=  ma9
        elseif(low<=ma9andlow>=ma10)
touchPrice:=ma10
elseif(low<=ma10andlow>=ma11)
touchPrice:=ma11
elseif(low<=ma11andlow>=ma12)
touchPrice:=ma12
else
touchPrice:=na
elseif(trend=='DOWNTREND')
if(high>=ma1andhigh<=ma2)
touchPrice:=ma2
elseif(high>=ma2andhigh<=ma3)
touchPrice:=ma3
elseif(high>=ma3andhigh<=ma4)
touchPrice:=ma4
elseif(high>=ma4andhigh<=ma5)
touchPrice:=ma5
elseif(high>=ma5andhigh<=ma6)
touchPrice:=ma6
elseif(high>=ma6andhigh<=ma7)
touchPrice:=ma7
elseif(high>=ma7andhigh<=ma8)
touchPrice:=ma8
elseif(high>=ma8andhigh<=ma9)
touchPrice:=ma9
elseif(high>=ma9andhigh<=ma10)
touchPrice:=ma10
elseif(high>=ma10andhigh<=ma11)
touchPrice:=ma11
elseif(high>=ma11andhigh<=ma12)
touchPrice:=ma12
else
touchPrice:=na
maMean=((ma1+ma2+ma3+ma4+ma5+ma6+ma7+ma8+ma9+ma10+ma11+ma12)/12)
isMa1To4Above=ma1>ma2andma2>ma3andma3>ma4?1:0
isMa1To4Below=ma1<ma2andma2<ma3andma3<ma4?1:0
isMa5To8Above=ma5>ma6andma6>ma7andma7>ma8?1:0
isMa5To8Below=ma5<ma6andma6<ma7andma7<ma8?1:0
isCloseGreaterMaMean=close>maMean?1:0
isCloseLesserMaMean=close<maMean?1:0
isCurHighGreaterPrevHigh=high>high[1]?1:0
isCurLowLesserPrevLow=low<low[1]?1:0
isMaUptrend=isCloseGreaterMaMeanandisMa5To8Above?1:0
isMaDowntrend=isCloseLesserMaMeanandisMa5To8Below?1:0
isUptrend=isMaUptrend?'UPTREND':na
isDowntrend=isMaDowntrend?'DOWNTREND':na
curTouchPriceUptrend=maTouchPriceTrend(ma1,ma2,ma3,ma4,ma5,ma6,ma7,ma8,ma9,ma10,ma11,ma12,isUptrend)
prevTouchPriceUptrend=curTouchPriceUptrend[1]
curTouchPriceDowntrend=maTouchPriceTrend(ma1,ma2,ma3,ma4,ma5,ma6,ma7,ma8,ma9,ma10,ma11,ma12,isDowntrend)
prevTouchPriceDowntrend=curTouchPriceDowntrend[1]
isPrevTouchPriceUptrendTouched=prevTouchPriceUptrend>0.0ornotna(prevTouchPriceUptrend)?1:0
isPrevTouchPriceDowntrendTouched=prevTouchPriceDowntrend>0.0ornotna(prevTouchPriceDowntrend)?1:0
isPrevTouchedPriceUptrend=isPrevTouchPriceUptrendTouchedandisMaUptrend?1:0
isPrevTouchedPriceDowntrend=isPrevTouchPriceDowntrendTouchedandisMaDowntrend?1:0
isPositionFlat=strategy.position_size==0?1:0
varfloatpositionEntryPrice=na
varboolpositionIsEntryLong=false
varboolpositionIsEntryShort=false
varfloatlongPositionHighestHigh=na
varfloatshortPositionLowestLow=na
varfloatstopLossLong=na
varfloatstopLossShort=na
varfloattargetLong=na
varfloattargetShort=na
varboolisTurnoverTrendLongTrigger=na
varboolisTurnoverTrendShortTrigger=na
isPositionLongClose=na(positionEntryPrice)andnotpositionIsEntryLong?1:0
isPositionShortClose=na(positionEntryPrice)andnotpositionIsEntryShort?1:0
isLongCondition=isMaUptrendandisCurHighGreaterPrevHighandisPrevTouchedPriceUptrend?1:0
isShortCondition=isMaDowntrendandisCurLowLesserPrevLowandisPrevTouchedPriceDowntrend?1:0
longTurnoverExit=verifyTurnoverSignalandverifyTurnoverSignalPriceExit?(verifyTurnoverSignalandisLongConditionandpositionIsEntryShortandclose<positionEntryPrice):verifyTurnoverSignal?(verifyTurnoverSignalandisLongConditionandpositionIsEntryShort):na
shortTurnoverExit=verifyTurnoverSignalandverifyTurnoverSignalPriceExit?(verifyTurnoverSignalandisShortConditionandpositionIsEntryLongandclose>positionEntryPrice):verifyTurnoverSignal?(verifyTurnoverSignalandisShortConditionandpositionIsEntryLong):na
if(isPositionFlat)
positionEntryPrice:=na
positionIsEntryLong:=false
positionIsEntryShort:=false
stopLossLong:=na
targetLong:=na
stopLossShort:=na
targetShort:=na
isTurnoverTrendLongTrigger:=na
isTurnoverTrendShortTrigger:=na
if((isLongConditionandisPositionLongClose)orlongTurnoverExit)
positionEntryPrice:=close
positionIsEntryLong:=true
positionIsEntryShort:=false
longPositionHighestHigh:=na
shortPositionLowestLow:=na
isTurnoverTrendLongTrigger:=na
isTurnoverTrendShortTrigger:=na
stopLossLong:=prevTouchPriceUptrend
if(isCurLowLesserPrevLow)
curLowToucedPrice=na(curTouchPriceUptrend)?low:curTouchPriceUptrend
stopLossLong:=na(curTouchPriceUptrend)?((stopLossLong+curLowToucedPrice)/2):curLowToucedPrice
targetLong:=(positionEntryPrice+(math.abs(positionEntryPrice-stopLossLong)*targetFactor))
if(targetLong>0andstopLossLong>0)
alertMessage='{"side/lado":"buy","entry/entrada":'+str.tostring(positionEntryPrice)+',"stop":'+str.tostring(stopLossLong)+',"target/alvo":'+str.tostring(targetLong)+'}'
alert(alertMessage)
strategy.entry('Long',strategy.long)
strategy.exit('ExitLong','Long',stop=stopLossLong,limit=targetLong)
if((isShortConditionandisPositionShortClose)orshortTurnoverExit)
positionEntryPrice:=close
positionIsEntryLong:=false
positionIsEntryShort:=true
longPositionHighestHigh:=na
shortPositionLowestLow:=na
isTurnoverTrendLongTrigger:=na
isTurnoverTrendShortTrigger:=na
stopLossShort:=prevTouchPriceDowntrend
if(isCurHighGreaterPrevHigh)
curHighToucedPrice=na(curTouchPriceDowntrend)?high:curTouchPriceDowntrend
stopLossShort:=na(curTouchPriceDowntrend)?((stopLossShort+curHighToucedPrice)/2):curHighToucedPrice
targetShort:=(positionEntryPrice-(math.abs(positionEntryPrice-stopLossShort)*targetFactor))
if(targetShort>0andstopLossShort>0)
alertMessage='{"side/lado":"sell","entry/entrada":'+str.tostring(positionEntryPrice)+',"stop":'+str.tostring(stopLossShort)+',"target/alvo":'+str.tostring(targetShort)+'}'
alert(alertMessage)
strategy.entry('Short',strategy.short)
strategy.exit('ExitShort','Short',stop=stopLossShort,limit=targetShort)
if(verifyTurnoverTrendandpositionIsEntryLong)
curHighestHigh=high
if(curHighestHigh>longPositionHighestHighorna(longPositionHighestHigh))
longPositionHighestHigh:=curHighestHigh
if(isMa1To4BelowandisCloseLesserMaMeanandlongPositionHighestHigh>positionEntryPrice)
isTurnoverTrendLongTrigger:=true
alertMessage='{"side/lado":"buy","stop":'+str.tostring(stopLossLong)+',"target/alvo":'+str.tostring(longPositionHighestHigh)+',"newsetup/novadefinição":'+str.tostring(isTurnoverTrendLongTrigger)+'}'
alert(alertMessage)
strategy.exit('ExitLong','Long',stop=stopLossLong,limit=longPositionHighestHigh)
if(verifyTurnoverTrendandpositionIsEntryShort)
curLowestLow=low
if(curLowestLow<shortPositionLowestLoworna(shortPositionLowestLow))
shortPositionLowestLow:=curLowestLow
if(isMa1To4AboveandisCloseGreaterMaMeanandshortPositionLowestLow<positionEntryPrice)
isTurnoverTrendShortTrigger:=true
alertMessage='{"side/lado":"sell","stop":'+str.tostring(stopLossShort)+',"target/alvo":'+str.tostring(shortPositionLowestLow)+',"newsetup/novadefinição":'+str.tostring(isTurnoverTrendShortTrigger)+'}'
alert(alertMessage)
strategy.exit('ExitShort','Short',stop=stopLossShort,limit=shortPositionLowestLow)
plot(ma1,title='1stMovingAverage',color=color.rgb(240,240,240))
plot(ma2,title='2ndMovingAverage',color=color.rgb(220,220,220))
plot(ma3,title='3rdMovingAverage',color=color.rgb(200,200,200))
plot(ma4,title='4thMovingAverage',color=color.rgb(180,180,180))
plot(ma5,title='5thMovingAverage',color=color.rgb(160,160,160))
plot(ma6,title='6thMovingAverage',color=color.rgb(140,140,140))
plot(ma7,title='7thMovingAverage',color=color.rgb(120,120,120))
plot(ma8,title='8thMovingAverage',color=color.rgb(100,120,120))
plot(ma9,title='9thMovingAverage',color=color.rgb(80,120,120))
plot(ma10,title='10thMovingAverage',color=color.rgb(60,120,120))
plot(ma11,title='11thMovingAverage',color=color.rgb(40,120,120))
plot(ma12,title='12thMovingAverage',color=color.rgb(20,120,120))
tablePosition=position.bottom_right
tableColumns=2
tableRows=7
tableFrameWidth=1
tableBorderColor=color.gray
tableBorderWidth=1
tableInfoTrade=table.new(position=tablePosition,columns=tableColumns,rows=tableRows,frame_width=tableFrameWidth,border_color=tableBorderColor,border_width=tableBorderWidth)
table.cell(table_id=tableInfoTrade,column=0,row=0)
table.cell(table_id=tableInfoTrade,column=1,row=0)
table.cell(table_id=tableInfoTrade,column=0,row=1,text='EntrySide/LadodaEntrada',text_color=color.white)
table.cell(table_id=tableInfoTrade,column=0,row=2,text=positionIsEntryLong?'LONG':positionIsEntryShort?'SHORT':'NONE/NENHUM',text_color=color.yellow)
table.cell(table_id=tableInfoTrade,column=1,row=1,text='EntryPrice/PreçodaEntrada',text_color=color.white)
table.cell(table_id=tableInfoTrade,column=1,row=2,text=notna(positionEntryPrice)?str.tostring(positionEntryPrice):'NONE/NENHUM',text_color=color.blue)
table.cell(table_id=tableInfoTrade,column=0,row=3,text='TakeProfitPrice/PreçoAlvoLucro',text_color=color.white)
table.cell(table_id=tableInfoTrade,column=0,row=4,text=positionIsEntryLong?str.tostring(targetLong):positionIsEntryShort?str.tostring(targetShort):'NONE/NENHUM',text_color=color.green)
table.cell(table_id=tableInfoTrade,column=1,row=3,text='StopLossPrice/PreçoStopLoss',text_color=color.white)
table.cell(table_id=tableInfoTrade,column=1,row=4,text=positionIsEntryLong?str.tostring(stopLossLong):positionIsEntryShort?str.tostring(stopLossShort):'NONE/NENHUM',text_color=color.red)
table.cell(table_id=tableInfoTrade,column=0,row=5,text='NewTarget/NovoAlvo',text_color=color.white)
table.cell(table_id=tableInfoTrade,column=0,row=6,text=verifyTurnoverTrendandpositionIsEntryLongandisTurnoverTrendLongTrigger?str.tostring(longPositionHighestHigh):verifyTurnoverTrendandpositionIsEntryShortandisTurnoverTrendShortTrigger?str.tostring(shortPositionLowestLow):'NONE/NENHUM',text_color=color.green)
table.cell(table_id=tableInfoTrade,column=1,row=5,text='PossibleMarketTurnover/PossívelViradadoMercado',text_color=color.white)
table.cell(table_id=tableInfoTrade,column=1,row=6,text=verifyTurnoverTrendandpositionIsEntryLongandisTurnoverTrendLongTrigger?'YES/SIM(Possiblelonggoingshort/Possívellongindoshort)':verifyTurnoverTrendandpositionIsEntryShortandisTurnoverTrendShortTrigger?'YES/SIM(Possibleshortgoinglong/Possívelshortindolong)':'NONE/NENHUM',text_color=color.red)
Expand (250 lines)
