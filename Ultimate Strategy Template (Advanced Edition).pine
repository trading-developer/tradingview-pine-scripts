Script Name: Ultimate Strategy Template (Advanced Edition)
Author: Daveatt
Description: Hello traders

This script is an upgraded version of that one below



 New features

- Upgraded to Pinescript version 5
- Added the exit SL/TP now in real-time
- Added text fields for the alerts - easier to send the commands to your trading bots

 Step 1: Create your connector

Adapt your indicator with only 2 lines of code and then connect it to this...
PineScript code:

Pine Script™ strategy
Ultimate Strategy Template (Advanced Edition)
//@version=5
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  Daveatt
//  #  =========================================================================  #
//  #                                      |    SAMPLE  INDICATOR    |
//  #  =========================================================================  #
//  Sample  script  to  plug  to  the  strategy  template
//  //@version=5
//indicator(title='Moving  Average  Cross',  shorttitle='Moving  Average  Cross',  overlay=true,  precision=6,  max_labels_count=500,  max_lines_count=500)
//  type_ma1  =  input.string(title='MA1  type',  defval='SMA',  options=['RMA',  'SMA',  'EMA'])
//  length_ma1  =  input(10,  title='[ALL  but  VWAP]  MA1  length')
//  type_ma2  =  input.string(title='MA2  type',  defval='SMA',  options=['RMA',  'SMA',  'EMA'])
//  length_ma2  =  input(100,  title='[ALL  but  VWAP]  MA2  length')
//  //  MA
//  f_ma(smoothing,  src,  length)  =>
//          rma_1  =  ta.rma(src,  length)
//          sma_1  =  ta.sma(src,  length)
//          ema_1  =  ta.]ema(src,  length)
//          iff_1  =  smoothing  ==  'EMA'  ?  ema_1  :  src
//          iff_2  =  smoothing  ==  'SMA'  ?  sma_1  :  iff_1
//          smoothing  ==  'RMA'  ?  rma_1  :  iff_2
//  MA1  =  f_ma(type_ma1,  close,  length_ma1)
//  MA2  =  f_ma(type_ma2,  close,  length_ma2)
//  //  buy  and  sell  conditions
//  buy  =  ta.crossover(MA1,  MA2)
//  sell  =  ta.crossunder(MA1,  MA2)
//  plot(MA1,  color=color.new(color.green,  0),  title='Plot  MA1',  linewidth=3)
//  plot(MA2,  color=color.new(color.red,  0),  title='Plot  MA2',  linewidth=3)
//  plotshape(buy,  title='LONG  SIGNAL',  style=shape.circle,  location=location.belowbar,  color=color.new(color.green,  0),  size=size.normal)
//  plotshape(sell,  title='SHORT  SIGNAL',  style=shape.circle,  location=location.abovebar,  color=color.new(color.red,  0),  size=size.normal)
//  ///////////////////////////  SIGNAL  FOR  STRATEGY  /////////////////////////
//  Signal  =  buy  ?  1  :  sell  ?  -1  :  0
//  plot(Signal,  title='🔌Connector🔌',  display  =  display.data_window)
//  #  =========================================================================  #
//  #                                      |      SAMPLE  INDICATOR    |
//  #  =========================================================================  #
VERSION  =  "V7"
SCRIPT_NAME  =  "BEST  Strategy  Template  "  +  VERSION

//  #  =========================================================================  #
//  #                                      |      STRATEGY    |
//  #  =========================================================================  #
//  These  values  are  used  both  in  the  strategy()  header  and  in  the  script's  relevant  inputs  as  default  values  so  they  match.
//  Unless  these  values  match  in  the  script's  Inputs  and  the  TV  backtesting  Properties,  results  between  them  cannot  be  compared.
InitCapital  =  10000000
InitPosition  =  2.0
InitCommission  =  0.075
InitPyramidMax  =  1
CalcOnorderFills  =  false
ProcessOrdersOnClose  =  true
CalcOnEveryTick  =  false
CloseEntriesRule  =  "FIFO"
strategy(title=SCRIPT_NAME,  shorttitle=SCRIPT_NAME,
  overlay=true,  pyramiding=InitPyramidMax,  initial_capital=InitCapital,  default_qty_type=strategy.percent_of_equity,  process_orders_on_close=ProcessOrdersOnClose,
  default_qty_value=InitPosition,  commission_type=strategy.commission.percent,  commission_value=InitCommission,  calc_on_order_fills=CalcOnorderFills,
  calc_on_every_tick=CalcOnEveryTick,
  precision=9,  max_lines_count=500,  max_labels_count=500)
//  #  =========================================================================  #
//  #  =========================================================================  #
//  #                                      ||      Alerts    ||
//  #  =========================================================================  #
//  #  =========================================================================  #
i_alert_txt_entry_long  =  input.text_area(defval  =  "",  title  =  "Long  Entry  Message",  group  =  "Alerts")
i_alert_txt_entry_short  =  input.text_area(defval  =  "",  title  =  "Short  Entry  Message",  group  =  "Alerts")
i_alert_txt_exit_SL_long  =  input.text_area(defval  =  "",  title  =  "Long  Exit  SL  Message",  group  =  "Alerts")
i_alert_txt_exit_TP1_long  =  input.text_area(defval  =  "",  title  =  "Long  Exit  TP1  Message",  group  =  "Alerts")
i_alert_txt_exit_custom_long  =  input.text_area(defval  =  "",  title  =  "Long  Custom  Exit  Message",  group  =  "Alerts")
i_alert_txt_exit_SL_short  =  input.text_area(defval  =  "",  title  =  "Short  Exit  SL  Message",  group  =  "Alerts")
i_alert_txt_exit_TP1_short  =  input.text_area(defval  =  "",  title  =  "Short  Exit  TP1  Message",  group  =  "Alerts")
i_alert_txt_exit_custom_short  =  input.text_area(defval  =  "",  title  =  "Short  Custom  Exit  Message",  group  =  "Alerts")
//  —————  You  capture  the  Source  of  your  indicator  here
ext_source_  =  input.source(close,  title='Data  source',  group  =  "General")
//  Custom  close  signal
custom_close  =  input.bool(false,  title='Use  Custom  Close?',  group  =  "General")
//  Last  trades  data  displayed  in  a  table
display_last_trade_data  =  input.bool(true,  title  =  "Display  the  current  opened  trades  data",  group  =  "Table")
_table_location  =  input.string(title="Table  Location",  defval="TOP  RIGHT",  options=["TOP  LEFT",  "TOP  CENTER",  "TOP  RIGHT",  "BOTTOM  LEFT",  "BOTTOM  CENTER",  "BOTTOM  RIGHT"],  group  =  "Table")
_table_txt_size        =  input.string("Normal",  title  =  "Txt  Size",  options=["Tiny",  "Small",  "Normal",  "Large",  "Huge"],  group  =  "Table")
table_cell_bg_color  =  input.color(color.white,  title  =  "Cells  Background  Color",  group  =  "Table",  inline  =  "table_cells")
table_cell_txt_color  =  input.color(color.black,  title  =  "Cells  Text  Color",  group  =  "Table",  inline  =  "table_cells")
table_frame_color  =  input.color(color.black,  title  =  "Frame  Color",  group  =  "Table",  inline  =  "table_frame")
table_frame_width  =  input.int(1,  title  =  "Frame  Width",  minval  =  0,  group  =  "Table",  inline  =  "table_frame")
table_border_color  =  input.color(color.black,  title  =  "Border  Color",  group  =  "Table",  inline  =  "table_borders")
table_border_width  =  input.int(1,  title  =  "Border  Width",  minval  =  0,  group  =  "Table",  inline  =  "table_borders")
table_header_bg_color  =  input.color(#0b3880,  title  =  "Header  Background  Color",  group  =  "Table  Header",  inline  =  "header_color")
table_header_txt_color  =  input.color(color.white,  title  =  "Header  Text  Color",  group  =  "Table  Header",  inline  =  "header_color")
//  Pie  Chart  Winners/Losers
display_pie_chart  =  false//input.bool(true,  title  =  "Display  Pie  Chart  Winners/Losers",  group  =  "Pie  Chart")
//  —————  Bar  Coloring
clrBars  =  input.bool(true,  title='Colour  Candles  to  Trade  Order  state',  group='Coloring')
CloseSession  =  input.bool(false,  title='Close  positions  at  market  at  the  end  of  each  session  ?',  group='Session')
Session  =  input.session(title='Trading  Session',  defval='0000-2345',  group='Session')
OpenDirection  =  input.string(defval='ALL',  title='Open    Trading  Direction',  options=['ALL',  'LONG',  'SHORT'],  group='Direction')
CloseDirection  =  input.string(defval='ALL',  title='Close  Trading  Direction',  options=['ALL',  'LONG',  'SHORT'],  group='Direction')
closeOnOpposite  =  input.bool(true,  title='Close  on  Opposite  Signal',  group='Strategy')
//  —————  Date  range  filtering
DateFilter  =  input.bool(false,  'Date  Range  Filtering',  group='Date')
//  —————  Syntax  coming  from  https://www.tradingview.com/blog/en/new-parameter-for-date-input-added-to-pine-21812/
i_startTime  =  input.time(defval=timestamp('01Jan201913:30+0000'),title='StartTime',group='Date')
i_endTime=input.time(defval=timestamp('30Dec202123:30+0000'),title='EndTime',group='Date')
TradeDateIsAllowed()=>
DateFilter?time>=i_startTimeandtime<=i_endTime:true
//—————Setthemaxlosingstreaklengthwithaninput
setmaxLosingStreak=input.bool(title='SetMaxnumberofconsecutivelosstrades',defval=false,group='RiskManagement')
maxLosingStreak=input.int(title='Maxofconsecutivelosstrades',defval=15,minval=1,group='RiskManagement')
setmaxWinStreak=input.bool(title='SetMaxnumberofconsecutivewontrades',defval=false,group='RiskManagement')
maxWinStreak=input.int(title='MaxWinningStreakLength',defval=15,minval=1,group='RiskManagement')
//—————Setthemaxconsecutivedayswithaloss
setmaxLosingDaysStreak=input.bool(title='SetMAXconsecutivedayswithalossinarow',defval=false,group='RiskManagement')
maxLosingDaysStreak=input.int(title='Maxofconsecutivedayswithalossinarow',defval=3,minval=1,group='RiskManagement')
setMaxDrawdown=input.bool(title='SetMaxTotalDrawDown',defval=false,group='RiskManagement')
//—————Inputforthestrategy'smaximumdrawdown(in%ofstrategyequity)
maxPercDd=input.int(title='MaxDrawdown(%)',defval=10,minval=1,maxval=100,group='RiskManagement')
setMaxIntradayLoss=input.bool(title='SetMaxIntradayLoss',defval=false,group='RiskManagement')
//—————Inputforthestrategy'smaximumintradayloss(in%ofstrategyequity)
maxIntradayLoss=input.int(title='MaxIntradayLoss(%)',defval=3,minval=1,maxval=100,group='RiskManagement')
setNumberDailyTrades=input.bool(title='Limitthenumberoftradesperday',defval=false,group='RiskManagement')
maxDailyTrades=input.int(title='NumberMAXofdailytrades',defval=10,minval=1,maxval=100,group='RiskManagement')
setNumberWeeklyTrades=input.bool(title='Limitthenumberoftradesperweek',defval=false,group='RiskManagement')
maxWeeklyTrades=input.int(title='NumberMAXofweeklytrades',defval=50,minval=1,maxval=100,group='RiskManagement')
//HardExit
//#=========================================================================#
//#|StopLoss|
//#=========================================================================#
StopType=input.string(title='StopTypeSelection',defval='Percent',options=['None','Percent','Trailing','ATR'],group='StopLoss')
//—————Percent
LossPerc=input.float(title='StopLoss(%)',minval=0.0,step=0.5,defval=10,group='PercentStopLoss')*0.01
TrailPerc=input.float(title='TrailStopLoss(%)',minval=0.0,step=0.5,defval=3,group='TrailingStopLoss',tooltip="ActivatedwhentheselectedStopLoss=Trailing")*0.01
//—————ATR
atrStopLength=input.int(title='StopLength',defval=14,group='ATRStopLoss')
riskRatioATR=input.float(defval=1,title='RiskRatio',step=0.10,group='ATRStopLoss')
//#=========================================================================#
//#|TakeProfit|
//#=========================================================================#
TakeProfitType=input.string(title='TakeProfitTypeSelection',defval='Percent',options=['None','Percent','ATR'],group='TakeProfit')
TP1_ratio=100//input.float(defval=50,title='ClosingX%atTP1',group='TakeProfit',tooltip='Example:50closing50%ofthepositiononceTP1isreached.\nFor1TPonly,set100toclose100%ofthetrade')
//—————TP1—————
//—————Percent
ProfitPerc1=input.float(title='TakeProfit(%)',minval=0.0,step=0.5,defval=5,group='TakeProfit1')*0.01
//—————ATR
atrTakeProfitLength1=input.int(title='TakeProfitLength',defval=14,group='ATRTakeProfit1',inline='ATRTP1')
rewardRatioATR1=input.float(defval=2,title='RewardRatio',step=0.10,group='ATRTakeProfit1',inline='ATRTP1')
//#=========================================================================#
//#|StopLosstoBreakeven|
//#=========================================================================#
use_sl_be=input.bool(false,title="UseStopLosstoBreakevenMode?",group="StopLossBreakeven")
sl_be_mode=input.string("$",title="Mode",options=["pips","%","$"],group="StopLossBreakeven")
sl_be_value=input.float(1,step=0.1,minval=0,title="StopLosstoBreakeven+/-X",group="StopLossBreakeven")
//#=========================================================================#
//#|CustomExit|
//#=========================================================================#
custom_exit_mode=input.string(title='CustomExitTypeSelection',defval='None',options=['None','Numberofbars'],group='CustomExit')
i_custom_exit_nb_bars=input.int(5,title="Nbbarstoexit",group="CustomExit",tooltip="Exitthetrade(s)afterXbarshaveclosedsincethetradeopen")
BIG_NUMBER_COUNT=1000
//variablesinitialisation
ext_source=nz(ext_source_)
//1isbullsignal
bull=ext_source==1
//-1isbearsignal
bear=ext_source==-1
plotshape(
series=bullandnotbull[1],
title="Buy",
style=shape.triangleup,
location=location.bottom,
color=color.new(color=color.green,transp=0),
size=size.normal
)
plotshape(
series=bearandnotbear[1],
title="Sell",
style=shape.triangledown,
location=location.top,
color=color.new(color=color.red,transp=0),
size=size.normal
)
//2exitcustomcloselong
exit_bull=custom_closeandext_source==2
//-2exitcustomcloseshort
exit_bear=custom_closeandext_source==-2
//EntryPrice
entry_price=ta.valuewhen(condition=(bear[1]andstrategy.position_size[1]>=0)or(bull[1]andstrategy.position_size[1]<=0),source=close,occurrence=0)
entry_price_long=ta.valuewhen(condition=(bullandstrategy.position_size<=0),source=close,occurrence=0)
entry_price_short=ta.valuewhen(condition=(bearandstrategy.position_size>=0),source=close,occurrence=0)
//—————RISKMANAGEMENT
condintradayloss=setMaxIntradayLoss?maxIntradayLoss:100
strategy.risk.max_intraday_loss(value=condintradayloss,type=strategy.percent_of_equity)
condmaxdrawdown=setMaxDrawdown?maxPercDd:100
strategy.risk.max_drawdown(value=condmaxdrawdown,type=strategy.percent_of_equity)
//dailytradescalculation
oktoTradeDaily=true
tradesIntradayCount=setNumberDailyTrades?maxDailyTrades:BIG_NUMBER_COUNT
strategy.risk.max_intraday_filled_orders(count=tradesIntradayCount)
//weeklytradescalculation
tradesLastWeek=0
tradesLastWeek:=ifdayofweek==dayofweek.mondayanddayofweek!=dayofweek[1]
strategy.closedtrades[1]+strategy.opentrades[1]
else
tradesLastWeek[1]
//Calculatenumberoftradesthisweek
weeklyTrades=strategy.closedtrades+strategy.opentrades-tradesLastWeek
okToTradeWeekly=setNumberWeeklyTrades?weeklyTrades<maxWeeklyTrades:true
//consecutivelossdaysinarow
countConsLossDays=setmaxLosingDaysStreak?maxLosingDaysStreak:BIG_NUMBER_COUNT
strategy.risk.max_cons_loss_days(countConsLossDays)
//Calculatethetotallosingstreaks
//Checkifthere'sanewlosingtradethatincreasedthestreak
newLoss=strategy.losstrades>strategy.losstrades[1]andstrategy.wintrades==strategy.wintrades[1]andstrategy.eventrades==strategy.eventrades[1]
//Determinecurrentlosingstreaklength
streakLossLen=0
streakLossLen:=ifnewLoss
nz(streakLossLen[1])+1
else
ifstrategy.wintrades>strategy.wintrades[1]orstrategy.eventrades>strategy.eventrades[1]
0
else
nz(streakLossLen[1])
//Checkiflosingstreakisundermaxallowed
okToTradeLossStreak=setmaxLosingStreak?streakLossLen<maxLosingStreak:true
//Calculatethetotalwinningstreaks
//Seeifthere'sanewwinnerthatincreasedthestreak
newWin=strategy.wintrades>strategy.wintrades[1]andstrategy.losstrades==strategy.losstrades[1]andstrategy.eventrades==strategy.eventrades[1]
//Figureoutcurrentwinningstreaklength
streakWinLen=0
streakWinLen:=ifnewWin
nz(streakWinLen[1])+1
else
ifstrategy.losstrades>strategy.losstrades[1]orstrategy.eventrades>strategy.eventrades[1]
0
else
nz(streakWinLen[1])
//Checkifwinningstreakisundermaxallowed
okToTradeWinStreak=setmaxWinStreak?streakWinLen<maxWinStreak:true
varfloatlongPercStopPrice=0.
varfloatshortPercStopPrice=0.
//Stoplossmanagement
ifstrategy.position_size>0
longPercStopPrice:=entry_price_long*(1-LossPerc)
elseifstrategy.position_size<0
shortPercStopPrice:=entry_price_short*(1+LossPerc)
//trailing
//Determinetrailstoplossprices
varfloatlongTrailStopPrice=0.0
varfloatshortTrailStopPrice=0.0
varfloatfinal_SL_Long=0.0
varfloatfinal_SL_Short=0.0
varMaxReached=0.0//Maxhigh/lowreachedsincebeginningoftrade.
signal_candle=(bullandstrategy.position_size<=0)
or(bearandstrategy.position_size>=0)
ifsignal_candle[1]
MaxReached:=strategy.position_size>0?high:low
//UpdateMaxpointreachedduringtrade(usedbothfortrailingstopreferencepointandin-trademaxdrawdowncalcs).
//starttrailingonlywhenbeyongthebreakevenpoint
MaxReached:=strategy.position_size>0
?math.max(nz(MaxReached,high),high)
:strategy.position_size<0?math.min(nz(MaxReached,low),low):na
//ifstrategy.position_size>0
//stopValue=close*(1-TrailPerc)
//longTrailStopPrice:=math.max(stopValue,longTrailStopPrice)
//else
//longTrailStopPrice:=0
//ifstrategy.position_size<0
//stopValue=close*(1+TrailPerc)
//shortTrailStopPrice:=math.min(stopValue,shortTrailStopPrice)
//else
//shortTrailStopPrice:=999999
ifstrategy.position_size>0
longTrailStopPrice:=MaxReached*(1-TrailPerc)
elseifstrategy.position_size<0
shortTrailStopPrice:=MaxReached*(1+TrailPerc)
useSL=StopType!='None'
use_SL_Percent=StopType=='Percent'
use_SL_Trail=StopType=='Trailing'
use_SL_ATR=StopType=='ATR'
//UsethisfunctiontoreturnthecorrectpipvalueforpipsonForexsymbols
pip()=>syminfo.mintick
//ATR
//Functionatr(averagetruerange)returnstheRMAoftruerange.
//Truerangeismax(high-low,abs(high-close[1]),abs(low-close[1]))
atr_stop=ta.atr(atrStopLength)
atr_tp1=ta.atr(atrTakeProfitLength1)
//ATRusedforRisk:Reward
varfloatRR_STOP_ATR=0.0
//RR_STOP_ATR:=nz(RR_STOP_ATR[1])
varfloatRR_TP1_ATR=0.0
//RR_TP1_ATR:=nz(RR_TP1_ATR[1])
//Capturigtheatrvalueatsignaltimeonly
if(bullandstrategy.position_size<=0)or(bearandstrategy.position_size>=0)
RR_STOP_ATR:=atr_stop
RR_TP1_ATR:=atr_tp1
if(strategy.position_size<=0andbull)
ifuse_SL_Percent
final_SL_Long:=longPercStopPrice
elseifuse_SL_ATR
final_SL_Long:=entry_price_long-RR_STOP_ATR*riskRatioATR
elseif(strategy.position_size>=0andbear)
ifuse_SL_Percent
final_SL_Short:=shortPercStopPrice
elseifuse_SL_ATR
final_SL_Short:=entry_price_short+RR_STOP_ATR*riskRatioATR
ifuse_SL_Trail
ifstrategy.position_size>0
final_SL_Long:=longTrailStopPrice
elseifstrategy.position_size<0
final_SL_Short:=shortTrailStopPrice
//TakeProfitManangement
useTakeProfit=TakeProfitType!='None'
use_TP_Percent=TakeProfitType=='Percent'
use_TP_ATR=TakeProfitType=='ATR'
varfloatTP1longPrice=0.
varfloatTP1shortPrice=0.
varboolis_TP1_REACHED=false
if(strategy.position_size<=0andbull)
TP1longPrice:=use_TP_Percent?entry_price_long*(1+ProfitPerc1):entry_price_long+RR_TP1_ATR*rewardRatioATR1
elseif(strategy.position_size>=0andbear)

TP1shortPrice:=use_TP_Percent?entry_price_short*(1-ProfitPerc1):entry_price_short-RR_TP1_ATR*rewardRatioATR1
ifstrategy.position_size[1]>0andhigh>=TP1longPrice
is_TP1_REACHED:=true
elseifstrategy.position_size[1]<0andlow<=TP1shortPrice
is_TP1_REACHED:=true
//Plottakeprofitvaluesforconfirmation
plot(series=strategy.position_size>0anduseTakeProfit?TP1longPrice:na,color=color.new(color.green,0),style=plot.style_circles,linewidth=3,title='LongTakeProfit1')
plot(series=strategy.position_size<0anduseTakeProfit?TP1shortPrice:na,color=color.new(color.red,0),style=plot.style_circles,linewidth=3,title='ShortTakeProfit1')
//UsedfordebugandchecktheATRTPvalue
plot(use_TP_ATRandstrategy.position_size!=0?RR_TP1_ATR*rewardRatioATR1:na,color=color.new(color.green,100),title='ATRTP1Value')
//#=========================================================================#
//#|StopLossToBreakeven|
//#=========================================================================#
varboolSL_BE_REACHED=false
varboolis_SL_REACHED=false
ifuse_sl_beanduseSL
current_profit=strategy.opentrades.profit(strategy.opentrades-1)
ifstrategy.position_size[1]>0
ifnotSL_BE_REACHED
ifsl_be_mode=="pips"andcurrent_profit*pip()>=sl_be_value*pip()
final_SL_Long:=entry_price_long//+(sl_be_value*pip())
SL_BE_REACHED:=true
elseifsl_be_mode=="$"andcurrent_profit>=sl_be_value
final_SL_Long:=entry_price_long//+(sl_be_value)
SL_BE_REACHED:=true
elseifsl_be_mode=="%"andmath.abs(((high-entry_price_long)/entry_price_long))*100>=sl_be_value
final_SL_Long:=entry_price_long//*(1+(sl_be_value/100))
SL_BE_REACHED:=true
elseifstrategy.position_size[1]<0
ifnotSL_BE_REACHED
ifsl_be_mode=="pips"andcurrent_profit*pip()>=sl_be_value*pip()
final_SL_Short:=entry_price_short//-(sl_be_value*pip())
SL_BE_REACHED:=true
elseifsl_be_mode=="$"andcurrent_profit>=sl_be_value
final_SL_Short:=entry_price_short//-(sl_be_value)
SL_BE_REACHED:=true
elseifsl_be_mode=="%"andmath.abs(((entry_price_short-low)/low))*100>=sl_be_value
final_SL_Short:=entry_price_short//*(1-(sl_be_value/100))
SL_BE_REACHED:=true
//Plotstoplossvaluesforconfirmation
plot(series=strategy.position_size>0anduseSL?final_SL_Long:na,color=color.new(color.red,0),style=plot.style_cross,linewidth=2,title='LongStopLoss')
plot(series=strategy.position_size<0anduseSL?final_SL_Short:na,color=color.new(color.red,0),style=plot.style_cross,linewidth=2,title='ShortStopLoss')
//UsedfordebugandchecktheATRSLvalue
plot(use_SL_ATRandstrategy.position_size!=0?RR_STOP_ATR*riskRatioATR:na,color=color.new(color.red,100),title='ATRStopValue')
//Sessioncalculations
//TheBarInSessionfunctionreturnstruewhen
//thecurrentbarisinsidethesessionparameter
BarInSession(sess)=>
time(timeframe.period,sess)!=0
in_session=BarInSession(Session)
okToTradeInSession=CloseSession?in_session:true
new_session=in_sessionandnotin_session[1]
bgcolor(color=CloseSessionandBarInSession(Session)[1]?color.new(color.green,85):na,title='TradingSession')
//consolidationoftheconditions
okToTrade=okToTradeWeeklyandokToTradeLossStreakandokToTradeWinStreakandTradeDateIsAllowed()andokToTradeInSession//andTradeHourlyIsAllowed()
//Orderspart
longs_opened=strategy.position_size>0
shorts_opened=strategy.position_size<0
trades_opened=strategy.position_size!=0
longs_opened_in_session=CloseSessionandlongs_opened
shorts_opened_in_session=CloseSessionandshorts_opened
//trades_opened_in_session=CloseSessionandtrades_opened
open_all=OpenDirection=='ALL'
open_all_longs=OpenDirection!='SHORT'
open_all_shorts=OpenDirection!='LONG'
close_all=CloseDirection=='ALL'
close_all_longs=CloseDirection!='SHORT'
close_all_shorts=CloseDirection!='LONG'
//Golong
longCondition=bull
iflongConditionandokToTradeandokToTradeInSessionandopen_all_longs
alert_message_long_txt="entry:"+str.tostring(close)+"sl:"+str.tostring(final_SL_Long)+"tp:"+str.tostring(TP1longPrice)
strategy.entry('Long',strategy.long,alert_message=alert_message_long_txt,comment=alert_message_long_txt)
//GoShort
shortCondition=bear
ifshortConditionandokToTradeandokToTradeInSessionandopen_all_shorts
alert_message_short_txt="entry:"+str.tostring(close)+"sl:"+str.tostring(final_SL_Short)+"tp:"+str.tostring(TP1shortPrice)
strategy.entry('Short',strategy.short,alert_message=alert_message_short_txt,comment=alert_message_short_txt)
//ExecuteExits
ifcloseOnOppositeandstrategy.position_size>0andshortCondition//andopen_all_shorts
strategy.close(id='Long',comment='ShortSignal\nCloseLong')
ifcloseOnOppositeandstrategy.position_size<0andlongCondition//andopen_all_longs
strategy.close(id='Short',comment='LongSignal\nCloseShort')
//#=========================================================================#
//#|CustomUser-Definedclose|
//#=========================================================================#
ifstrategy.position_size>0andexit_bullandclose_all_longs
strategy.close(id='Long',alert_message=i_alert_txt_exit_custom_long,comment='CustomUser-Defined\nCloseLongSignal')
alert(i_alert_txt_exit_custom_long,alert.freq_once_per_bar_close)
ifstrategy.position_size<0andexit_bearandclose_all_shorts
strategy.close(id='Short',alert_message=i_alert_txt_exit_custom_short,comment='CustomUser-Defined\nCloseShortSignal')
alert(i_alert_txt_exit_custom_short,alert.freq_once_per_bar_close)
//#=========================================================================#
//#|Customtemplateclose|
//#=========================================================================#
custom_exit_bull=custom_exit_mode=="Numberofbars"andta.barssince(bullandstrategy.position_size<=0)>=i_custom_exit_nb_bars
custom_exit_bear=custom_exit_mode=="Numberofbars"andta.barssince(bearandstrategy.position_size>=0)>=i_custom_exit_nb_bars
//plot(ta.barssince(bullandstrategy.position_size<=0),title="test",display=display.data_window)
ifstrategy.position_size>0andcustom_exit_bullandclose_all_longs
strategy.close(id='Long',alert_message=i_alert_txt_exit_custom_long,comment='CustomCloseSignal\nCloseLong')
alert(i_alert_txt_exit_custom_long,alert.freq_once_per_bar_close)
ifstrategy.position_size<0andcustom_exit_bearandclose_all_shorts
strategy.close(id='Short',alert_message=i_alert_txt_exit_custom_short,comment='CustomCloseSignal\nCloseShort')
alert(i_alert_txt_exit_custom_short,alert.freq_once_per_bar_close)
//#=========================================================================#
//#|SL/TP1/TP2exits|
//#=========================================================================#
ifstrategy.position_size>0andclose_all_longs
strategy.exit(id='ExitLongSL/TP',from_entry='Long',stop=useSL?final_SL_Long:na,limit=useTakeProfit?TP1longPrice:na,comment_loss="ExitSLLong",alert_loss=i_alert_txt_exit_SL_long,comment_profit="ExitTPLong",alert_profit=i_alert_txt_exit_TP1_long)
ifstrategy.position_size<0andclose_all_shorts
strategy.exit(id='ExitShortSL/TP',from_entry='Short',stop=useSL?final_SL_Short:na,limit=useTakeProfit?TP1shortPrice:na,comment_loss="ExitSLShort",alert_loss=i_alert_txt_exit_SL_short,comment_profit="ExitTPShort",alert_profit=i_alert_txt_exit_TP1_short)
////CloseallLongsonly
//ifnotokToTradeInSessionandclose_all_longsandlongs_opened_in_session
//strategy.close(id="Long")
////CloseallShortsonly
//ifnotokToTradeInSessionandclose_all_shortsandshorts_opened_in_session
//strategy.close(id="Short")
//Closeallpositionsattheendofeachsessionregardelessoftheirprofit/loss
ifnotokToTradeInSessionandclose_allandtrades_opened
strategy.close_all()
//Flattenstrategywhenmaxlosingstreakisreached
close_strat=notokToTradeWeeklyornotokToTradeLossStreakornotokToTradeWinStreakornotTradeDateIsAllowed()
ifclose_strat
//closeallexistingorders
strategy.close_all()
//Colourcodethecandles
bclr=notclrBars?na:strategy.position_size==0?color.gray:longs_opened?color.lime:shorts_opened?color.red:color.gray
barcolor(bclr,title='TradeStateBarColouring')
//#=========================================================================#
//#|EntryPrice|
//#=========================================================================#
plot(strategy.position_size!=0?strategy.position_avg_price:na,title="EntryPrice",style=plot.style_circles,linewidth=2)
//#=========================================================================#
//#|Table|
//#=========================================================================#
f_location()=>
_loc=""
if_table_location=="TOPLEFT"
_loc:=position.top_left
elseif_table_location=="TOPCENTER"
_loc:=position.top_center
elseif_table_location=="TOPRIGHT"
_loc:=position.top_right
elseif_table_location=="BOTTOMLEFT"
_loc:=position.bottom_left
elseif_table_location=="BOTTOMCENTER"
_loc:=position.bottom_center
elseif_table_location=="BOTTOMRIGHT"
_loc:=position.bottom_right
_loc
vartable_location=f_location()
varcurrent_trades_table=table.new(position=table_location,
columns=8,
rows=10,
bgcolor=table_header_bg_color,
frame_color=table_frame_color,
frame_width=table_frame_width,
border_color=table_border_color,
border_width=table_border_width
)
table_txt_size=switch_table_txt_size
"Tiny"=>size.tiny
"Small"=>size.small
"Normal"=>size.normal
"Large"=>size.large
"Huge"=>size.huge
tradeDirection(_size)=>
_size<0?"Short":"Long"
varintnb_row=0
//FunctionsfromtherefmanV5
//Getthebiggestmaxtraderunupvaluefromalloftheopentrades.
maxOpenTradeRunUp()=>
maxRunup=0.0
fortradeNo=0tostrategy.opentrades-1
maxRunup:=math.max(maxRunup,strategy.opentrades.max_runup(tradeNo))
result=maxRunup
//Getthebiggestmaxtradedrawdownvaluefromalloftheopentrades.
maxTradeDrawDown()=>
maxDrawdown=0.0
fortradeNo=0tostrategy.opentrades-1
maxDrawdown:=math.max(maxDrawdown,strategy.opentrades.max_drawdown(tradeNo))
result=maxDrawdown
//Calculateopenprofitorlossfortheopenpositions.
tradeOpenPL()=>
sumProfit=0.0
fortradeNo=0tostrategy.opentrades-1
sumProfit+=strategy.opentrades.profit(tradeNo)
result=sumProfit
//Calculateavgentrypricefortheopenpositions.
tradeAvgEntryPrice()=>
avgProfit=0.0
fortradeNo=0tostrategy.opentrades-1
avgProfit+=strategy.opentrades.entry_price(tradeNo)
result=nz(avgProfit/strategy.opentrades)
//Returnthenumberofopenedlongsandshorts
tradeOpenNbLongsShorts()=>

nbLongs=0
nbShorts=0
fortradeNo=0tostrategy.opentrades-1
size=strategy.opentrades.size(tradeNo)
ifsize>0
nbLongs+=1
else
nbShorts+=1
[nbLongs,nbShorts]
ifbarstate.islastconfirmedhistoryandstrategy.opentrades>0anddisplay_last_trade_data
table.cell(table_id=current_trades_table,column=0,row=0,text="TradeNo",text_color=table_header_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_header_bg_color)
table.cell(table_id=current_trades_table,column=1,row=0,text="Direction",text_color=table_header_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_header_bg_color)
table.cell(table_id=current_trades_table,column=2,row=0,text="EntryPrice",text_color=table_header_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_header_bg_color)
table.cell(table_id=current_trades_table,column=3,row=0,text="EntryTime",text_color=table_header_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_header_bg_color)
table.cell(table_id=current_trades_table,column=4,row=0,text="Profit/Loss",text_color=table_header_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_header_bg_color)
table.cell(table_id=current_trades_table,column=5,row=0,text="MaxDrawdown",text_color=table_header_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_header_bg_color)
table.cell(table_id=current_trades_table,column=6,row=0,text="MaxRunUp",text_color=table_header_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_header_bg_color)
table.cell(table_id=current_trades_table,column=7,row=0,text="Equity",text_color=table_header_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_header_bg_color)
fortradeNo=0tostrategy.opentrades-1
nb_row:=tradeNo+1
str_tradeNo=str.tostring(nb_row)
str_direction=tradeDirection(strategy.opentrades.size(tradeNo))
str_entry_Price=str.tostring(strategy.opentrades.entry_price(tradeNo),format.mintick)
str_entry_Time=str.format_time(strategy.opentrades.entry_time(tradeNo),"yyyy-MM-ddHH:mm",syminfo.timezone)
str_profit_loss=str.tostring(strategy.opentrades.profit(tradeNo),"#.##")
str_max_DD=str.tostring(strategy.opentrades.max_drawdown(tradeNo),"#.##")
str_max_runUP=str.tostring(strategy.opentrades.max_runup(tradeNo),"#.##")
str_equity=str.tostring(strategy.equity,"#.##")+""+strategy.account_currency
table.cell(table_id=current_trades_table,column=0,row=nb_row,text=str_tradeNo,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=1,row=nb_row,text=str_direction,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=2,row=nb_row,text=str_entry_Price,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=3,row=nb_row,text=str_entry_Time,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=4,row=nb_row,text=str_profit_loss,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=5,row=nb_row,text=str_max_DD,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=6,row=nb_row,text=str_max_runUP,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=7,row=nb_row,text=str_equity,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
//displaySumifthereismorethan1tradeopened
ifstrategy.opentrades>1andnb_row==strategy.opentrades
//CreatingtheTotalmergedrow
table.cell(table_id=current_trades_table,column=0,row=strategy.opentrades+1,text="Total",text_color=table_header_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_header_bg_color)
table.merge_cells(current_trades_table,0,strategy.opentrades+1,7,strategy.opentrades+1)
//Displayingthetotal
LastRow=strategy.opentrades+2
str_nb_opened_trades="Openedtrades:"+str.tostring(strategy.opentrades)
[nbLongs,nbShorts]=tradeOpenNbLongsShorts()
str_nbLongsShorts=""
ifnbLongs>0
str_nbLongsShorts:="OpenedLongs:"+str.tostring(nbLongs)
ifnbShorts>0
str_nbLongsShorts:=str_nbLongsShorts+"\n"
ifnbShorts>0
str_nbLongsShorts:=str_nbLongsShorts+"OpenedShorts:"+str.tostring(nbShorts)
str_avg_entry_price=str.tostring(tradeAvgEntryPrice(),"#.##")
str_last_entry_Time="LastOpenedTradeTime:"+str.format_time(strategy.opentrades.entry_time(strategy.opentrades-1),"yyyy-MM-ddHH:mm",syminfo.timezone)
str_sum_profit_loss=str.tostring(tradeOpenPL(),"#.##")
str_max_DD=str.tostring(maxTradeDrawDown(),"#.##")
str_max_runUP=str.tostring(maxOpenTradeRunUp(),"#.##")
str_equity=str.tostring(strategy.equity,"#.##")+""+strategy.account_currency
table.cell(table_id=current_trades_table,column=0,row=LastRow,text=str_nb_opened_trades,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=1,row=LastRow,text=str_nbLongsShorts,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=2,row=LastRow,text=str_avg_entry_price,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=3,row=LastRow,text=str_last_entry_Time,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=4,row=LastRow,text=str_sum_profit_loss,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=5,row=LastRow,text=str_max_DD,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=6,row=LastRow,text=str_max_runUP,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
table.cell(table_id=current_trades_table,column=7,row=LastRow,text=str_equity,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
//table.cell(table_id=current_trades_table,column=7,row=LastRow,text=str_equity,text_color=table_cell_txt_color,text_halign=text.align_center,text_valign=text.align_center,text_size=table_txt_size,bgcolor=table_cell_bg_color)
////#=========================================================================#
////#|PIECHART|
////#=========================================================================#
//r=input.int(0,"*Insideradius*",minval=0,maxval=50,step=10,inline="3")
//R=input.int(120,"*Outsideradius*",minval=80,maxval=200,step=10,tooltip="🔘Radiusofinsiderandoutercircle\nNOTE🔰\n*Ifthislargerradiusexceedstheallowedlimit,\nthechartmaydisappearSo,tosolvethisproblem,shiftthegraphtotheleftside*👇",inline="3")
//w=input.int(10,"|Overlap|",minval=0,maxval=10,step=2,inline="4")
//p_x=input.int(-50,"<<==Shift==>>",step=50,tooltip="Overlap:LinesThickness\nshift:(-)shifttoleftside_OR_rightside(+)",inline="4")
//colorCLR=na
//win_rate=math.round((strategy.wintrades/strategy.closedtrades)*100,2)
//loss_rate=math.round((strategy.losstrades/strategy.closedtrades)*100,2)
//C1=int(win_rate*360/100)
//C2=C1+int(loss_rate*360/100)
//fori=0to360by1
//x0=int(r*math.sin(math.toradians(i)))
//y0=int(r*math.cos(math.toradians(i)))
//x=int(R*math.sin(math.toradians(i)))
//y=int(R*math.cos(math.toradians(i)))
//CLR:=i<C1?color.lime:i<C2?color.red:color.fuchsia
//ifbarstate.islastanddisplay_pie_chart
//line=line.new(bar_index+p_x+R+x0,close+y0,bar_index+p_x+x+R,close+y,color=CLR,style=w==0?line.style_arrow_right:line.style_solid,extend=extend.none,width=w)

//L1=label.new(bar_index+p_x+R,close,"Winners/Losers\n🔎Distribution🔍",color=color.black,style=label.style_label_center,textcolor=color.yellow,textalign=text.align_center,size=size.small)
//ifdisplay_pie_chartandstrategy.closedtrades>0
//L2=label.new(bar_index+p_x+R+int((r+R)/2*math.sin(math.toradians(C1/2))),close+int((r+R)/2*math.cos(math.toradians(C1/2))),"Winners="+str.tostring(win_rate)+"%",style=label.style_none,textcolor=color.white,textalign=text.align_center,size=size.large,tooltip="WinRate")
//label.delete(L2[1])
//L3=label.new(bar_index+p_x+R+int((r+R)/2*math.sin(math.toradians((C1+C2)/2))),close+int((r+R)/2*math.cos(math.toradians((C1+C2)/2))),"ETH.D="+str.tostring(loss_rate)+"%",style=label.style_none,textcolor=color.white,textalign=text.align_center,size=size.normal,tooltip="LossRate")
//label.delete(L3[1])
ifstrategy.position_size==0
or(strategy.position_size>0andstrategy.position_size[1]<0)
or(strategy.position_size<0andstrategy.position_size[1]>0)
is_TP1_REACHED:=false
SL_BE_REACHED:=false
Expand (831 lines)
