Script Name: 3C QFL Mean reversal
Author: Kveie
Description: What is QFL trading strategy?

QFL stands for Quickfingersluc, and sometimes it is referred to as the Base Strategy or Mean Reversals. Its main idea is about identifying the moment of panic selling and buying below the base level and utilizing Safety orders.

What is Base level or Support Level?

Base level or Support Level refers to the lowest price level that...
PineScript code:

Pine Scriptâ„¢ strategy
3C QFL Mean reversal
//@Kveie
//@version=5
strategy(title='3C  QFL  Mean  reversal  v3.1',  shorttitle='3C  QFL  v3.1',
  overlay=true,  max_labels_count=500,  pyramiding=99,  initial_capital=10000,
    calc_on_order_fills=false,  commission_type=strategy.commission.percent,  commission_value=0.075)
f_secureSecurity(_symbol,  _res,  _src)  =>
        request.security(_symbol,  _res,  _src[1],  lookahead=barmerge.lookahead_on)
import  jason5480/time_filters/1  as  tif
//used  for  labels
i_theme  =  input.string(defval='dark',  title='Chart  theme',  options=['light',  'dark'])
theme_text_color  =  i_theme  ==  'dark'  ?  color.white  :  color.black
f_print(_text)  =>
        //  Create  label  on  the  first  bar.
        var  _label  =  label.new(x=bar_index,  y=na,  text=str.tostring(_text),  xloc=xloc.bar_index,  yloc=yloc.price,  color=color.blue,  style=label.style_label_up,  textcolor=theme_text_color,  size=size.normal,  textalign=text.align_left)
        //  On  next  bars,  update  the  label's  x  and  y  position,  and  the  text  it  displays.
        if  barstate.islastconfirmedhistory
                label.set_xy(_label,  bar_index,  low  *  0.99)
                label.set_text(_label,  str.tostring(_text))
//  ðŸ“†ðŸ“ˆ  FILTERS  =====================================================================================================
//  Description:  Module  responsible  for  filtering  out  long  and  short  open  signals  that  do  not  meet  user  defined  rules
//  Dependencies:  NONE
//  Results:  longFiltersApproval,  shortFiltersApproval
//  INPUT  ============================================================================================================
usefromDate  =  input.bool(defval  =  true,  title  =  'From',  inline  =  'From  Date',  group  =  'ðŸ“†  Filters  -  Time')
fromDate  =  input.time(defval  =  timestamp('01  Jan  2022  00:00  UTC'),  title  =  '',  inline  =  'From  Date',  group  =  'ðŸ“†  Filters  -  Time')
usetoDate  =  input.bool(defval  =  false,  title  =  'Toâ€ƒ',  inline  =  'To  Date',  group  =  'ðŸ“†  Filters  -  Time')
toDate  =  input.time(defval  =  timestamp('31  Dec  2121  23:59  UTC'),  title  =  '',  inline  =  'To  Date',  group  =  'ðŸ“†  Filters  -  Time')
useSessionDay  =  input.bool(defval  =  false,  title  =  'Session  Days',  inline  =  'Session  Days',  group  =  'ðŸ“†  Filters  -  Time')
mon  =  input.bool(defval  =  true,  title  =  'Mon',  inline  =  'Session  Days',  group  =  'ðŸ“†  Filters  -  Time')
tue  =  input.bool(defval  =  true,  title  =  'Tue',  inline  =  'Session  Days',  group  =  'ðŸ“†  Filters  -  Time')
wed  =  input.bool(defval  =  true,  title  =  'Wed',  inline  =  'Session  Days',  group  =  'ðŸ“†  Filters  -  Time')
thu  =  input.bool(defval  =  true,  title  =  'Thu',  inline  =  'Session  Days',  group  =  'ðŸ“†  Filters  -  Time')
fri  =  input.bool(defval  =  true,  title  =  'Fri',  inline  =  'Session  Days',  group  =  'ðŸ“†  Filters  -  Time')
sat  =  input.bool(defval  =  true,  title  =  'Sat',  inline  =  'Session  Days',  group  =  'ðŸ“†  Filters  -  Time')
sun  =  input.bool(defval  =  true,  title  =  'Sun',  inline  =  'Session  Days',  group  =  'ðŸ“†  Filters  -  Time')
useSessionStart  =  input.bool(defval  =  false,  title  =  'Session  Start',  inline  =  'Session  Start',  group  =  'ðŸ“†  Filters  -  Time')
sessionStartHour  =  input.int(defval  =  12,  title  =  '',  minval  =  0,  maxval  =  23,  step  =  1,  inline  =  'Session  Start',  group  =  'ðŸ“†  Filters  -  Time')
sessionStartMinute  =  input.int(defval  =  00,  title  =  ':',  minval  =  0,  maxval  =  59,  step  =  1,  tooltip  =  'Start  time  of  the  session.',  inline  =  'Session  Start',  group  =  'ðŸ“†  Filters  -  Time')
useSessionEnd  =  input.bool(defval  =  false,  title  =  'Session  End',  inline  =  'Session  End',  group  =  'ðŸ“†  Filters  -  Time')
sessionEndHour  =  input.int(defval  =  20,  title  =  '',  minval  =  0,  maxval  =  23,  step  =  1,  inline  =  'Session  End',  group  =  'ðŸ“†  Filters  -  Time')
sessionEndMinute  =  input.int(defval  =  00,  title  =  ':',  minval  =  0,  maxval  =  59,  step  =  1,  tooltip  =  'End  time  of  the  session.',  inline  =  'Session  End',  group  =  'ðŸ“†  Filters  -  Time')
bool  dateFilterApproval  =  tif.is_in_date_range(fromDate,  toDate,  usefromDate,  usetoDate)
bool  sessionFilterApproval  =  tif.is_in_session(useSessionStart,  sessionStartHour,  sessionStartMinute,  useSessionEnd,  sessionEndHour,  sessionEndMinute,  useSessionDay,  mon,  tue,  wed,  thu,  fri,  sat,  sun)
bool  timeFilterApproval  =  dateFilterApproval  and  sessionFilterApproval
string  _tooltip_bot_control          =  'If  this  is  enabled  the  strategy  can  control  some  bot  operations  via  Webhook  calls.\n\nTo  enable  Webhook  calls,  check  this  option,  complete  Bot  id  and  Email  Token.  After  the  strategy  is  configured,  create  an  alert  on  the  strategy,  select  Order  fills  only,  and  in  the  message  field  simply  input  {{strategy.order.alert_message}}.'
bool  i_enable_bot_control          =  input.bool(title='Enable  Bot  Control  Via  Webhook',  defval=false,  group='3commas  Bot  Settings',  tooltip=_tooltip_bot_control)
string  i_bot_id                              =  input.string(title='Bot  id',  defval='',  group='3commas  Bot  Settings')
string  i_email_token                    =  input.string(title='Email  token',  defval='',  group='3commas  Bot  Settings')
bool  i_exec_deal_start                =  input.bool(title='Deal  start',  defval=true,  group='3commas  Bot  Settings')
bool  i_exec_safety_order            =  input.bool(title='Safety  Orders  SPOT  ONLY',  defval=true,  group='3commas  Bot  Settings',
  tooltip="  SPOT  ONLY!  The  strategy  will  send  a  message  to  add  funds  in  the  quote  currency  (for  BTCUSDT  quote  is  USDT).  The  amount  of  funds  are  calculated  based  on  SO  settings  (size,  volume  steps).  For  exact  values  use  the  steps  table.")
bool  i_exec_take_profit              =  input.bool(title='Take  profitdealstop',defval=true,group='3commasBotSettings',tooltip='Thestrategywillsendamessagetotakeprofit')
booli_exec_stop_loss=input.bool(title='StopLoss',defval=true,group='3commasBotSettings',tooltip='Thestrategywillsendamessagetoexecutestoploss')
varg_strategy="Strategy"
i_strategy_type=input.string(title='StrategyType',defval='long',options=['long','short'],group='Strategysettings')
varboolIS_LONG=i_strategy_type=='long'
tf=input.timeframe(title='QFLtimeframe',defval='current',group='Strategysettings',tooltip='Donotselectatimeframebelowthecurrenttimeframe(example:ifthechartisin15mdonoselect5minthisoption,youcanselect30morhigherTFs).')
vamp=input(title='QFLvolumeMA',group='Strategysettings',defval=60)
maxbaseage=input.int(10,'Maxcandleage',group='Strategysettings',tooltip='Itwon\'topenadealifthepriceisbelowabasethathaslivedforlongerthanXcandles.Use0todisablethiscondition.')
allowConsecutiveSignals=input.bool(false,'Allowconsecutivesignals',group='Strategysettings',tooltip='Iftheconditionsaremetintoconsecutivecandles,allowbothtotriggerthesignalandnotonlythefirstcandle.')
plotLevels=input(true,'plotbases',group='Strategysettings')
/////
i_take_profit_type=input.string(title='TakeProfitType',defval='%Fromtotalvolume',options=['%Frombaseorder','%Fromtotalvolume'],group='Strategysettings')
floati_take_profit_perc=input.float(title='TakeProfit(%)',minval=0.0,step=0.1,defval=1,group='Strategysettings')
floati_base_order_size_usd=input.float(title='Baseordersize',defval=30,step=10,group='Strategysettings')
floati_safety_order_size_usd=input.float(title='Safetyordersize',defval=60,step=10,group='Strategysettings')
string_tooltip2="Percentage:OpenSOorderseveryN%ofpricemovement.Thepriceandsizearecalculatedaccordingtosettingsbelow(stepscale,volumescale)\nExternalindicator:OpenSOordersusinganexternalindicator(configuresettingsbelow)"
safety_order_condition=false
floatdeal_start_condition=input.float(0.5,step=0.1,group='Strategysettings',title='QFLpercentagetobuy',tooltip='Whenthepricefallsbelowthecurrentbasethispercentageabuysignalwillbetriggered.')
floati_safety_order_price_deviation_perc=input.float(title='PriceDeviationToOpenSafetyTrades(%)',minval=0.0,step=0.1,defval=0.5,group='Strategysettings')
floati_safety_order_volume_scale=input.float(title='SafetyOrderVolumeScale',defval=2,step=0.1,group='Strategysettings')
floati_safety_order_price_step_scale=input.float(title='SafetyOrderStepScale',defval=2,step=0.1,group='Strategysettings')
floati_max_safety_orders=input.float(title='MaxSafetyTradesCount',defval=6,group='Strategysettings')
booli_enable_stop_loss=input.bool(title='EnableStopLoss',defval=false,group='Strategysettings')
floati_stop_loss_perc=input.float(title='StopLoss(%)',minval=0.0,step=0.1,defval=20,group='Strategysettings')
floati_commision_percent=input.float(title='FEE(%)',minval=0.0,step=0.001,defval=0.075,group='FEE')
//visuals
inti_decimals=input.int(title='DecimalsForDisplay',defval=2,group='Visuals')
booli_show_pnl_labels=input.bool(title='ShowPnLLabels',defval=true,group='Visuals')
booli_show_stats_table=input.bool(title='ShowTableWithStatistics',defval=true,group='Visuals')
booli_show_settings_table=input.bool(title='ShowTableWithStrategySettings',defval=false,group='Visuals')
booli_show_step_table=input.bool(title='ShowTableWithStepsSimilarTo3commas',defval=false,group='Visuals',tooltip='MakesuretheTablewithStrategySettingsisdisabledbecausetheyusethesameposition\n\nIftheSafetyorderstypeisnotpercentageallsignificantvalueswillbereplacedby-(dashes)')
floati_steps_bo_price=input.float(title='BOEntryPriceForStepsTable',defval=0,group='Visuals',tooltip="CustomBOpriceusedtocalculatealltablevalues.Ifthisisnotconfigured,theclosevaluewillbeused")
//Basecalculations
vam=ta.sma(volume,vamp)
up=high[3]>high[4]andhigh[4]>high[5]andhigh[2]<high[3]andhigh[1]<high[2]andvolume[3]>vam[3]
down=low[3]<low[4]andlow[4]<low[5]andlow[2]>low[3]andlow[1]>low[2]andvolume[3]>vam[3]
//weneedtousefunctionssowedon'tupsetsecurity.Inpine4youcanonlypassunmutablevaluestosecurity!
fractaldownF()=>
fd=0.0
fd:=down?low[3]:nz(fd[1])

fractalupF()=>
fu=0.0
fu:=up?high[3]:nz(fu[1])
fuptf=f_secureSecurity(syminfo.tickerid,tf=="current"?timeframe.period:tf,fractalupF())
fdowntf=f_secureSecurity(syminfo.tickerid,tf=="current"?timeframe.period:tf,fractaldownF())
plot(fuptf,"FractalUp",color=color.new(color.lime,plotLevels?0:100),linewidth=1,style=plot.style_cross,offset=-3,join=false)
plot(fdowntf,"FractalDown",color=color.new(color.red,plotLevels?0:100),linewidth=1,style=plot.style_cross,offset=-3,join=false)
//barssince
age=ta.barssince(fuptf!=fuptf[1])
agecond=maxbaseage==0orage<maxbaseage
buy=100*(close/fdowntf)<100-deal_start_conditionandagecond
sell=100*(close/fuptf)>100+deal_start_conditionandagecond
signal=i_strategy_type=='long'?buyand(allowConsecutiveSignalsornotbuy[1]orfdowntf!=fdowntf[1]):i_strategy_type=='short'?selland(allowConsecutiveSignalsornotsell[1]orfuptf!=fuptf[1]):na
//howmanysafetyorderswereexecutedincurrenttrade
varintcount_executed_safety_orders=0
varfloatc_take_profit_price=na
varfloatc_stop_loss_price=na
varfloatc_base_order_price=na
varfloatc_base_order_qty=na
varfloatc_next_safety_order_price=na
//REMOVED
//varfloatc_next_safety_order_qty=na
//calculatedbasedonBOsize,SOsize,andsteps
varfloatc_required_capital=na
//usedforstatsandtocalculatecommision
varfloatc_total_volume=0
//weusethesevariablestorememberpositionsizeanduseit
//tocalculatepnlafterthedealwasclosed
varfloatc_current_deal_position_size=na
varfloatc_current_deal_avg_price=na
//REMOVED
//varfloatc_current_deal_prev_position_size=na
//Usedtotrytoobtainrealpricesforordersalreadyexecuted
varfloatc_strategy_prev_netprofit=0
//Theseremainglobalbecauseofexecutionimprovement
varfloatc_current_deal_close_value=0
varfloatc_current_deal_pnl=0
//usedasaflagforcodelogic
varboolc_still_in_deal=false
varstringc_debug_text=""
vardebug_printed=false
//usedtoavoidplacingSOordersoverandoveragain
//needstoberesetonceatradeisclosed
//false-SOordersnotplaced
//true-SOordersalreadyplace
varboolc_so_orders_placed=false
//arraythatholdsstatsforusedSO
varint[]statsarray_safety_orders=array.new_int(0)
varint[]statsarray_safety_orders_timeout=array.new_int(0)
varintc_dealstart_bar_index=0
varint[]statsarray_no_of_bars=array.new_int(0)
varintc_dealstart_bar_time=0
varfloat[]statsarray_no_of_days=array.new_float(0)
varfloatstats_max_days_in_deal=0
varstats_max_days_in_deal_start_time=0
varstats_max_days_in_deal_close_time=0
varboolfirstdeal_started=false
varintfirstdeal_bar_index=0
varfloatfirstdeal_start_price=0
varfirstdeal_start_time=0
varintlastdeal_close_bar_index=0
varlastdeal_close_time=0
//buyandholdstats
varfloatbh_start_price=0
varbh_start_time=0
varfloatbh_end_price=0
varbh_end_time=0
varboolbh_calculation_started=false
//maxdrawndowninadealvsavgpositionprice
varfloatstats_max_drawdown=0
varstats_max_drawdown_time=0
varfloatstats_max_drawdown_equity_percent=0
//biggestpercentdeviationvsbaseorder
varfloatstats_biggest_dev=0
varstats_biggest_dev_time=0
varfloatstats_deals_started=0
varfloatstats_deals_finished=0
varfloatstats_deals_stop_loss_finished=0
varfloatstats_deals_take_profit_finished=0
//willkeepprofit/losses
varfloat[]statsarray_winning_deals_pnl=array.new_float(0)
varfloat[]statsarray_losing_deals_pnl=array.new_float(0)
//FUNCTIONS
//so_index0isforBO,from1..nonitisforSOn
//calculatespercentsonoadjustmentforlongvsshort
stepped_deviation(so_index)=>
float_stepped_deviation=0
ifso_index>0
for_i=1toso_indexby1
_stepped_deviation:=_stepped_deviation+i_safety_order_price_deviation_perc*math.pow(i_safety_order_price_step_scale,_i-1)
else
_stepped_deviation:=0
//Returnsrequriedpriceinordertoachievespecificpercentage
steps_required_price(_bo_price,_avg_price,_pos_size,_take_profit_percent)=>
float_price=0
ifi_take_profit_type=='%Fromtotalvolume'
ifIS_LONG
_required_price=_avg_price*(1+_take_profit_percent/100)
else
_required_price=_avg_price*(1-_take_profit_percent/100)

elseifi_take_profit_type=="%Frombaseorder"
ifIS_LONG
_req_usdt=i_base_order_size_usd*i_take_profit_perc/100
_required_price=((_avg_price*_pos_size)+_req_usdt)/_pos_size
else
_req_usdt=i_base_order_size_usd*i_take_profit_perc/100
_required_price=((_avg_price*_pos_size)-_req_usdt)/_pos_size
//Returnsthe%neededfor_last_pricetoreach_required_price
steps_required_percent(_last_price,_required_price)=>
ifIS_LONG
_required_percent=math.round((_required_price*100/_last_price)-100,2)
else
_required_percent=math.round(100-(_required_price*100/_last_price),2)
valid_stop_loss()=>
bool_valid=false
ifi_enable_stop_loss
//stoplosspercentisbiggerthanlastsafetyorderpercent
if(i_stop_loss_perc>stepped_deviation(i_max_safety_orders))
_valid:=true
else
_valid:=false
next_so_price(so_index,_bo_price)=>
float_stepped_deviation=stepped_deviation(so_index)
ifIS_LONG
float_next_so_price=_bo_price*(1-_stepped_deviation/100)
else
float_next_so_price=_bo_price*(1+_stepped_deviation/100)
next_so_size_usd(so_index)=>
float_next_so_size_usd=i_safety_order_size_usd*math.pow(i_safety_order_volume_scale,so_index-1)
next_so_qty(so_index,_bo_price)=>
float_next_so_size_usd=next_so_size_usd(so_index)
float_next_so_qty=_next_so_size_usd/next_so_price(so_index,_bo_price)
get_required_capital()=>
float_total_buy=0
ifi_max_safety_orders>0
_total_buy:=_total_buy+i_base_order_size_usd
for_i=1toi_max_safety_ordersby1
_total_buy:=_total_buy+next_so_size_usd(_i)
else
_total_buy:=_total_buy+i_base_order_size_usd
get_days(start_time,end_time)=>
time_diff=end_time-start_time
diff_days=math.round(time_diff/86400000,1)
get_timestring_from_seconds(seconds)=>
ifseconds>=86400
string_string=str.tostring(math.round(seconds/86400,1))+'days'
elseifseconds>=3600
string_string=str.tostring(math.round(seconds/3600,1))+'hours'
else
string_string=str.tostring(math.round(seconds/60,1))+'mins'
get_timestring_from_days(days)=>
get_timestring_from_seconds(days*86400)
get_timespan_string(start_time,end_time)=>
_seconds_diff=(end_time-start_time)/1000
get_timestring_from_seconds(_seconds_diff)
//f_print(get_timestring_from_days(0.5)+"\n"+get_timestring_from_days(0.01)+"\n"+get_timestring_from_days(0.7))
get_commission_for_volume(vol)=>
_commision=vol*i_commision_percent/100
get_final_pnl_new()=>
float_pnl=0
ifarray.size(statsarray_losing_deals_pnl)>0
_pnl:=_pnl+array.sum(statsarray_losing_deals_pnl)
ifarray.size(statsarray_winning_deals_pnl)>0
_pnl:=_pnl+array.sum(statsarray_winning_deals_pnl)
//addorsubstractcurrentdealopenprofit
//commissionisalreadysubstracted
_pnl:=_pnl+strategy.openprofit
get_final_pnl_prct_new()=>
get_final_pnl_new()*100/c_required_capital
//take_profit_price(_avg_price=strategy.position_avg_price,_position_size=strategy.position_size)=>
take_profit_price(_avg_price=strategy.position_avg_price,_pos_size=strategy.position_size)=>
ifi_take_profit_type=="%Fromtotalvolume"
ifIS_LONG
_tp_price=_avg_price*(1+i_take_profit_perc/100)
else
_tp_price=_avg_price*(1-i_take_profit_perc/100)
elseifi_take_profit_type=="%Frombaseorder"
ifIS_LONG
_tp_size_usd=i_base_order_size_usd*i_take_profit_perc/100
_tp_price=((_avg_price*_pos_size)+_tp_size_usd)/_pos_size
else
_tp_size_usd=i_base_order_size_usd*i_take_profit_perc/100
_tp_price=((_avg_price*_pos_size)-_tp_size_usd)/_pos_size
stop_loss_price(_bo_price)=>
ifIS_LONG
_bo_price*(1-i_stop_loss_perc/100)
else
_bo_price*(1+i_stop_loss_perc/100)
take_profit_price_hit()=>
ifIS_LONG
high>=c_take_profit_priceandstrategy.position_size==0
else
low<=c_take_profit_priceandstrategy.position_size==0
stop_loss_price_hit()=>
bool_cond=false
ifvalid_stop_loss()
ifIS_LONG
_cond:=low<=c_stop_loss_priceandstrategy.position_size==0
else
_cond:=high>=c_stop_loss_priceandstrategy.position_size==0
else
_cond:=false
get_current_dev_vs_bo_price()=>
ifIS_LONG
_dev=low*100/c_base_order_price-100
else
_dev=100-high*100/c_base_order_price
get_current_drawdown_equity()=>
_deal_total_value=strategy.position_size*strategy.position_avg_price
ifIS_LONG
_drawdown_actual_value=strategy.position_size*low
_drawdown_equity_percent=_drawdown_actual_value*100/_deal_total_value-100
else
_drawdown_actual_value=strategy.position_size*high
_drawdown_equity_percent=100-_drawdown_actual_value*100/_deal_total_value
//Teststhesizeofthepositionsize
is_deal_started()=>
bool_flag=false
ifIS_LONGandstrategy.position_size>0
_flag:=true
elseifnotIS_LONGandstrategy.position_size<0
_flag:=true
else
_flag:=false
//Afteradealiscompletedweneedtoresetspecificvariables
was_deal_marked_as_finished()=>
//Ifwearenotinadealanymorebutsomeglobalvariablewasnotresetyet
ifc_still_in_deal==true
_state=false
else
_state=true
//initarraywith0values
init_stats_array_safety_orders()=>
for_i=0toi_max_safety_ordersby1
array.push(statsarray_safety_orders,0)
array.push(statsarray_safety_orders_timeout,0)
get_3cbot_startdeal_json()=>
_string='{"message_type":"bot","bot_id":"'+i_bot_id+'","email_token":"'+i_email_token+'","delay_seconds":0}'
get_3cbot_stopdeal_json()=>
_string='{"action":"close_at_market_price_all","message_type":"bot","bot_id":"'+i_bot_id+'","email_token":"'+i_email_token+'","delay_seconds":0}'
get_3cbot_addfundsinquote_json(add_volume=0)=>
_string='{"action":"add_funds_in_quote","message_type":"bot","bot_id":"'+i_bot_id+'","email_token":"'+i_email_token+'","delay_seconds":0,"volume":"'+str.tostring(add_volume)+'"}'
get_month_string(month_number)=>
ifmonth_number==1
_string='Jan'
elseifmonth_number==2
_string='Feb'
elseifmonth_number==3
_string='Mar'
elseifmonth_number==4
_string='Apr'
elseifmonth_number==5
_string='May'
elseifmonth_number==6
_string='Jun'
elseifmonth_number==7
_string='Jul'
elseifmonth_number==8
_string='Aug'
elseifmonth_number==9
_string='Sep'
elseifmonth_number==10
_string='Oct'
elseifmonth_number==11
_string='Nov'
elseifmonth_number==12
_string='Dec'
time_to_date_string(timeinms)=>
iftimeinms>0
_string=str.tostring(dayofmonth(timeinms),'00/')+get_month_string(month(timeinms))+'/'+str.tostring(year(timeinms),'0000')+''+str.tostring(hour(timeinms),'00:')+str.tostring(minute(timeinms),'00:')+str.tostring(second(timeinms),'00')
else
_string=''
get_bg_color_grey(row)=>
_bgcolor=row%2==0?#CACACA:#E5E5E5
get_bg_color_blue(transp=0)=>
_bgcolor=color.new(#006bb3,transp)
get_bg_color_green(transp=0)=>
_bgcolor=color.new(#A6E59B,transp)
get_bg_color_red(transp=0)=>
_bgcolor=color.new(#E59B9B,transp)
get_bg_color_lightblue(transp=0)=>
_bgcolor=color.new(#00BFFF,transp)
get_bg_color_orange(transp=0)=>
_bgcolor=color.new(#FFA500,transp)
//statsforbuyandholdreturn
iftimeFilterApprovalandbh_calculation_started==false
bh_start_price:=open
bh_start_time:=time
bh_calculation_started:=true
bh_end_price:=close
bh_end_time:=time_close
//updatestatsforbuyandholdaslongaswe'restillinsidedaterange
iftimeFilterApproval
bh_end_price:=close
bh_end_time:=time_close
//conditionforbaseorder
iftimeFilterApprovalandsignalandnotis_deal_started()andwas_deal_marked_as_finished()
//statsforthefirstdeal
iffirstdeal_started==false
firstdeal_started:=true
firstdeal_bar_index:=bar_index
firstdeal_start_price:=close
firstdeal_start_time:=time
init_stats_array_safety_orders()
c_still_in_deal:=true
stats_deals_started:=stats_deals_started+1
c_dealstart_bar_index:=bar_index
c_dealstart_bar_time:=time
//Adjustc_strategy_prev_netprofitbeforestartinganewdealifdifferentthanthepinescriptstrategy
//Thissolvesabugwhenpinescriptsellsatasligthlydifferentpricethanthecloseprice.
//Casewasfoundwhenclosingdealfromexternalindicator
ifc_strategy_prev_netprofit!=strategy.netprofit
c_strategy_prev_netprofit:=strategy.netprofit
//howmanycoins
c_base_order_qty:=i_base_order_size_usd/close
//Thisvaluewillbeoverwrittenwiththeactualexecutedmarketpriceonthenextcandle
c_base_order_price:=close
//enterwithmarketorderbecausewithlimitordertheopenofnextcandlemightbeabitdifferent
//thancloseofcurrentcandleandthedealmightnotstart
_alert_human='D'+str.tostring(stats_deals_started)+'-BO('+str.tostring(syminfo.basecurrency)+'-'+
str.tostring(syminfo.currency)+(i_strategy_type=='long'?'LONG':'SHORT')+')|'+
str.tostring(c_base_order_qty*c_base_order_price)+''+str.tostring(syminfo.currency)
ifi_enable_bot_controlandi_exec_deal_start
_alert_json=get_3cbot_startdeal_json()
strategy.entry(id='D'+str.tostring(stats_deals_started)+'-BO',direction=IS_LONG?strategy.long:strategy.short,
qty=c_base_order_qty,alert_message=_alert_json)
alert(_alert_human,alert.freq_once_per_bar_close)
else
strategy.entry(id='D'+str.tostring(stats_deals_started)+'-BO',direction=IS_LONG?strategy.long:strategy.short,
qty=c_base_order_qty)
alert(_alert_human,alert.freq_once_per_bar_close)

//ifweareinadeal
ifis_deal_started()andnotwas_deal_marked_as_finished()

//------------------------
//ONLYBOWASEXECUTED
//IftheonlyexecutedorderisBO,overwriteSLpriceandBOpriceandsizebasedonexecutedvalues
//takenfromstragey.xxxvariables
ifstrategy.opentrades==1andnotc_so_orders_placed
c_so_orders_placed:=true
c_base_order_price:=strategy.position_avg_price
c_base_order_qty:=strategy.position_size

count_executed_safety_orders:=0

c_debug_text+="BO:"+str.tostring(math.round(c_base_order_qty,i_decimals))+"*"+
str.tostring(math.round(c_base_order_price,i_decimals))+"="+str.tostring(c_base_order_qty*c_base_order_price)+"\n"
//placeallPercentageSOordersaslimitorders
ifi_max_safety_orders>0
for_so_number=1toi_max_safety_orders
_next_so_price=next_so_price(_so_number,c_base_order_price)
_next_so_qty=next_so_qty(_so_number,c_base_order_price)
_next_so_size_usd=next_so_size_usd(_so_number)


c_debug_text+="SO"+str.tostring(_so_number)+":"+str.tostring(math.round(_next_so_qty,i_decimals))+"*"+
str.tostring(math.round(_next_so_price,i_decimals))+"="+str.tostring(_next_so_qty*_next_so_price)+"\n"

ifi_enable_bot_controlandi_exec_safety_order
_alert_json=get_3cbot_addfundsinquote_json(_next_so_size_usd)
strategy.entry(id='D'+str.tostring(stats_deals_started)+'-SO'+str.tostring(_so_number),
direction=IS_LONG?strategy.long:strategy.short,qty=_next_so_qty,limit=_next_so_price,alert_message=_alert_json)
else
strategy.entry(id='D'+str.tostring(stats_deals_started)+'-SO'+str.tostring(_so_number),
direction=IS_LONG?strategy.long:strategy.short,qty=_next_so_qty,limit=_next_so_price)
//usedforplot
c_next_safety_order_price:=next_so_price(1,c_base_order_price)

//createSLorderaslimit
ifvalid_stop_loss()
c_stop_loss_price:=stop_loss_price(c_base_order_price)

c_debug_text+="SL:"+str.tostring(c_stop_loss_price)+"\n"

ifi_enable_bot_controlandi_exec_stop_loss
_alert_json=get_3cbot_stopdeal_json()
strategy.exit(id='D'+str.tostring(stats_deals_started)+'-SL',stop=c_stop_loss_price,
when=is_deal_started(),alert_message=_alert_json)
else

strategy.exit(id='D'+str.tostring(stats_deals_started)+'-SL',stop=c_stop_loss_price,when=is_deal_started())

//------------------------
//ATLEASTONESAFETYORDER(PERCENTAGE)WASEXECUTEDINTHEMEANTIME
//Updatestatisticsandsendalerts
ifstrategy.opentrades>(count_executed_safety_orders+1)
for_i=count_executed_safety_orders+1tostrategy.opentrades
_next_so_price=next_so_price(_i,c_base_order_price)
_next_so_qty=next_so_qty(_i,c_base_order_price)
//delayedalertaboutpreviousSOexecution
_alert_human='D'+str.tostring(stats_deals_started)+'-SO'+str.tostring(_i)+'[delayed]('+
str.tostring(syminfo.basecurrency)+'_'+str.tostring(syminfo.currency)+
(i_strategy_type=='long'?'LONG':'SHORT')+')|'+
str.tostring(_next_so_price*_next_so_qty)+''+str.tostring(syminfo.currency)
alert(_alert_human,alert.freq_once_per_bar_close)

//updatetocurrentopentrades
count_executed_safety_orders:=(strategy.opentrades-1)

//forvisualplot
ifcount_executed_safety_orders<i_max_safety_orders
c_next_safety_order_price:=next_so_price(count_executed_safety_orders+1,c_base_order_price)
elseifcount_executed_safety_orders==i_max_safety_orders
c_next_safety_order_price:=na
//------------------------
//SAFETYORDERFROMEXTERNALINDICATOR
//Placesafetyorderasmarketorderatcurrentclose
ifsafety_order_condition==trueandcount_executed_safety_orders<i_max_safety_orders
count_executed_safety_orders:=count_executed_safety_orders+1
_next_so_size_usd=next_so_size_usd(count_executed_safety_orders)
_next_so_qty=_next_so_size_usd/close

ifi_enable_bot_controlandi_exec_safety_order
_alert_json=get_3cbot_addfundsinquote_json(_next_so_size_usd)
strategy.entry(id='D'+str.tostring(stats_deals_started)+'-SO'+str.tostring(count_executed_safety_orders),
direction=IS_LONG?strategy.long:strategy.short,qty=_next_so_qty,alert_message=_alert_json)
else
strategy.entry(id='D'+str.tostring(stats_deals_started)+'-SO'+str.tostring(count_executed_safety_orders),
direction=IS_LONG?strategy.long:strategy.short,qty=_next_so_qty)
_alert_human='D'+str.tostring(stats_deals_started)+'-SO'+str.tostring(count_executed_safety_orders)+'('+
str.tostring(syminfo.basecurrency)+'_'+str.tostring(syminfo.currency)+
(i_strategy_type=='long'?'LONG':'SHORT')+')|'+
str.tostring(_next_so_size_usd)+''+str.tostring(syminfo.currency)
alert(_alert_human,alert.freq_once_per_bar_close)


//------------------------
//GENERALUPDATESFOREACHCANDLE
//TAKEPROFIT
//RecalculateTPpricebasedoncurrentstrategy.position_avg_price
//andstrategy.position_sizeandUPDATEORDER

ifi_take_profit_type=='%Fromtotalvolume'
c_take_profit_price:=take_profit_price()

//PlaceorupdateTPorder
ifi_enable_bot_controlandi_exec_take_profit
_alert_json=get_3cbot_stopdeal_json()
strategy.order(id='D'+str.tostring(stats_deals_started)+'-TP',limit=c_take_profit_price,
direction=IS_LONG?strategy.short:strategy.long,qty=math.abs(strategy.position_size),
when=is_deal_started(),alert_message=_alert_json)
else
strategy.order(id='D'+str.tostring(stats_deals_started)+'-TP',limit=c_take_profit_price,
direction=IS_LONG?strategy.short:strategy.long,qty=math.abs(strategy.position_size),
when=is_deal_started())

//hackbecauseifclausehasreturntype
string_dumb_string=""

else
c_take_profit_price:=na

//hackbecauseifclausehasreturntype
string_dumb_string=""




//------------------------
//GENERALSTATISTICS
//savethesevariablesforpushingstatsafterthedealisfinished
c_current_deal_position_size:=strategy.position_size
c_current_deal_avg_price:=strategy.position_avg_price
//statsformaxdrawndown
ifstrategy.openprofit<stats_max_drawdown
stats_max_drawdown:=strategy.openprofit
stats_max_drawdown_equity_percent:=get_current_drawdown_equity()
//approx
stats_max_drawdown_time:=time
//Biggestdropvsbaseorderprice
_current_dev_vs_bo_price=get_current_dev_vs_bo_price()
if_current_dev_vs_bo_price<stats_biggest_dev
stats_biggest_dev:=_current_dev_vs_bo_price
//approx
stats_biggest_dev_time:=time
//----------------------------------
//ISDEALFINISHEDONTHISCANDLE?
condition_take_profit=false
condition_stop_external_indicator=false
condition_stop_loss=false
ifstop_loss_price_hit()andnotis_deal_started()andnotwas_deal_marked_as_finished()
condition_stop_loss:=true
elseifi_take_profit_type=='%Fromtotalvolume'andtake_profit_price_hit()andnotis_deal_started()andnotwas_deal_marked_as_finished()
condition_take_profit:=true

condition_to_cancel_open_orders=condition_take_profitorcondition_stop_loss
//resetvariablesfornexttradeandpushstats
ifcondition_to_cancel_open_orders
strategy.cancel_all(when=condition_to_cancel_open_orders)

//commonstatsforallcases
stats_deals_finished:=stats_deals_finished+1
//addtoTotalVolumethecurerntdealVOLUMEuptothispoint(withoutexitorder)
c_total_volume:=c_total_volume+(c_current_deal_position_size*c_current_deal_avg_price)
_current_days_in_deal=get_days(c_dealstart_bar_time,time)
array.push(statsarray_no_of_bars,bar_index-c_dealstart_bar_index)
array.push(statsarray_no_of_days,_current_days_in_deal)
ifstats_max_days_in_deal<=_current_days_in_deal
stats_max_days_in_deal:=_current_days_in_deal
//approx
stats_max_days_in_deal_start_time:=c_dealstart_bar_time
stats_max_days_in_deal_close_time:=time

//statisticsthatarespecifictoeachclosetype
ifcondition_stop_loss
stats_deals_stop_loss_finished:=stats_deals_stop_loss_finished+1
//ExtractingPNL.Thisisdifferentcalculationforeachdealclosetype
c_current_deal_pnl:=strategy.netprofit-c_strategy_prev_netprofit
c_strategy_prev_netprofit:=strategy.netprofit
c_current_deal_close_value:=c_current_deal_position_size*c_stop_loss_price
c_total_volume:=c_total_volume+c_current_deal_close_value
array.push(statsarray_losing_deals_pnl,c_current_deal_pnl)
ifi_show_pnl_labels
label.new(bar_index,c_stop_loss_price,text=str.tostring(math.round(c_current_deal_pnl,i_decimals))+
''+str.tostring(syminfo.currency)+'\n'+get_timespan_string(c_dealstart_bar_time,time),
yloc=yloc.price,size=size.normal,style=label.style_label_down,textcolor=color.black,color=get_bg_color_red())
//delayedalertaboutdealclosebystoploss
_alert_human='D'+str.tostring(stats_deals_started)+'-SL[delayed]('+str.tostring(syminfo.basecurrency)+
'_'+str.tostring(syminfo.currency)+(i_strategy_type=='long'?'LONG':'SHORT')+')|'+
str.tostring(math.round(c_current_deal_pnl,i_decimals))+''+str.tostring(syminfo.currency)+
'|'+get_timespan_string(c_dealstart_bar_time,time)
alert(_alert_human,alert.freq_once_per_bar_close)
//ExtractingPNL.Thisisdifferentcalculationforeachdealclosetype
c_current_deal_pnl:=strategy.netprofit-c_strategy_prev_netprofit
c_strategy_prev_netprofit:=strategy.netprofit
//executesonopenprice
c_current_deal_close_value:=c_current_deal_position_size*open
c_total_volume:=c_total_volume+c_current_deal_close_value
ifc_current_deal_pnl>=0
array.push(statsarray_winning_deals_pnl,c_current_deal_pnl)
else
array.push(statsarray_losing_deals_pnl,c_current_deal_pnl)
//increaseSOarrayaswellbutalsoaseparatethatholdstimeoutdealscount
array.set(statsarray_safety_orders,count_executed_safety_orders,array.get(statsarray_safety_orders,count_executed_safety_orders)+1)
array.set(statsarray_safety_orders_timeout,count_executed_safety_orders,array.get(statsarray_safety_orders_timeout,count_executed_safety_orders)+1)
//weconsiderthatdealclosedwithanySO,ifnotclosedwithSL
elseifcondition_take_profit
array.set(statsarray_safety_orders,count_executed_safety_orders,array.get(statsarray_safety_orders,count_executed_safety_orders)+1)
stats_deals_take_profit_finished:=stats_deals_take_profit_finished+1
//ExtractingPNL.Thisisdifferentcalculationforeachdealclosetype
c_current_deal_pnl:=strategy.netprofit-c_strategy_prev_netprofit
c_strategy_prev_netprofit:=strategy.netprofit
c_current_deal_close_value:=c_current_deal_position_size*c_take_profit_price
c_total_volume:=c_total_volume+c_current_deal_close_value
array.push(statsarray_winning_deals_pnl,c_current_deal_pnl)
ifi_show_pnl_labels
label.new(bar_index,c_take_profit_price,text=''+str.tostring(math.round(c_current_deal_pnl,i_decimals))+
''+str.tostring(syminfo.currency)+'\n'+get_timespan_string(c_dealstart_bar_time,time),
yloc=yloc.price,size=size.normal,style=label.style_label_up,textcolor=color.black,color=get_bg_color_green())
//delayedalertaboutdealclosebytakeprofit
_alert_human='D'+str.tostring(stats_deals_started)+'-TP[delayed]('+str.tostring(syminfo.basecurrency)+'_'+
str.tostring(syminfo.currency)+(i_strategy_type=='long'?'LONG':'SHORT')+')|'+
str.tostring(math.round(c_current_deal_pnl,i_decimals))+''+str.tostring(syminfo.currency)+
'|'+get_timespan_string(c_dealstart_bar_time,time)
alert(_alert_human,alert.freq_once_per_bar_close)
elseifcondition_stop_external_indicator

//Thisorderhastobeplacedafterstrategy.cancel_all(),otherwiseitwillgetcanceledaswell
//Itwillgetexecutedonthenextbaropenusingmarketorder
//CancelTPorderifany
ifi_enable_bot_control
_alert_json=get_3cbot_stopdeal_json()
strategy.order(id='D'+str.tostring(stats_deals_started)+'-EXT-IND',direction=IS_LONG?strategy.short:strategy.long,
qty=math.abs(strategy.position_size),alert_message=_alert_json)
else
strategy.order(id='D'+str.tostring(stats_deals_started)+'-EXT-IND',direction=IS_LONG?strategy.short:strategy.long,
qty=math.abs(strategy.position_size))



array.set(statsarray_safety_orders,count_executed_safety_orders,array.get(statsarray_safety_orders,count_executed_safety_orders)+1)
stats_deals_take_profit_finished:=stats_deals_take_profit_finished+1
c_current_deal_close_value:=c_current_deal_position_size*close
c_total_volume:=c_total_volume+c_current_deal_close_value

//ExtractingPNLbeforethedealisactuallyclosed.Dealwillgetclosedon
//theopenofnextcandle
//Thisisdifferentcalculationforeachdealclosetype
c_current_deal_pnl:=strategy.openprofit-get_commission_for_volume(c_current_deal_close_value)

c_strategy_prev_netprofit:=strategy.netprofit+c_current_deal_pnl

ifc_current_deal_pnl>=0
array.push(statsarray_winning_deals_pnl,c_current_deal_pnl)
else
array.push(statsarray_losing_deals_pnl,c_current_deal_pnl)

ifi_show_pnl_labels

label.new(bar_index,close,text=''+str.tostring(math.round(c_current_deal_pnl,i_decimals))+
''+str.tostring(syminfo.currency)+'\n'+get_timespan_string(c_dealstart_bar_time,time),
yloc=yloc.price,size=size.normal,style=label.style_label_up,textcolor=color.black,color=get_bg_color_orange())

//RESETGLOBALSAFTERDEALCOMPLETION
c_still_in_deal:=false

lastdeal_close_bar_index:=bar_index
//approximate
lastdeal_close_time:=time
c_take_profit_price:=na
c_stop_loss_price:=na
c_base_order_price:=na
c_base_order_qty:=na
c_next_safety_order_price:=na

c_so_orders_placed:=false

//REMOVE?
//c_next_safety_order_qty:=na

c_current_deal_position_size:=na

//REMOVE?
//c_current_deal_prev_position_size:=na
c_current_deal_avg_price:=na
c_current_deal_close_value:=na
c_current_deal_pnl:=0
c_debug_text:=""
debug_printed:=false
c_dealstart_bar_index:=na
c_dealstart_bar_time:=na
//REMOVE?
//count_placed_safety_orders:=0
count_executed_safety_orders:=0
//----------------------
//PLOTSTUFF
_color_avg_price=theme_text_color
_color_take_profit=get_bg_color_green(90)

p1=plot(c_take_profit_price,color=get_bg_color_green(),style=plot.style_circles,title='TakeProfit')
p2=plot(strategy.position_avg_price,color=theme_text_color,style=plot.style_circles,title='Dealavgprice')
p3=plot(c_next_safety_order_price,color=get_bg_color_red(),style=plot.style_circles,title='Safetyorder')
p4=plot(c_stop_loss_price,color=get_bg_color_orange(),style=plot.style_circles,title='Stoploss')
fill(p1,p2,color=_color_take_profit,title='Filltakeprofit')
fill(p2,p3,color=get_bg_color_red(90),title='Fillsafetyorder')
//Normallyfillstoplossfromlastsoprice
fill(p3,p4,color=get_bg_color_orange(90),title='Fillstoploss')
//IfSOarenotconfiguredorallSOwereexecutedfillSLfromAVGPRICE
_col=(i_max_safety_orders==0orna(c_next_safety_order_price))?get_bg_color_red(90):get_bg_color_red(100)
fill(p2,p4,color=_col,title='Fillstoploss')
//---------------------
//LASTCANDLE-DRAWALLTABLES
ifbarstate.islastconfirmedhistory
c_required_capital:=get_required_capital()
//ifwearestillinadeal,updatesomestatstocurrentbar
_deal_in_progress=stats_deals_finished<stats_deals_started
if_deal_in_progress
lastdeal_close_bar_index:=bar_index
//approximate
lastdeal_close_time:=time
array.push(statsarray_no_of_bars,bar_index-c_dealstart_bar_index)
array.push(statsarray_no_of_days,get_days(c_dealstart_bar_time,time_close))
ifstats_max_days_in_deal<=get_days(c_dealstart_bar_time,time_close)
stats_max_days_in_deal:=get_days(c_dealstart_bar_time,time_close)
stats_max_days_in_deal_start_time:=c_dealstart_bar_time
stats_max_days_in_deal_close_time:=time_close
//----------------------------------------------------------------
//datavalidationandatablewithwarnings
string_text_warnings=''
ifstats_deals_started==0
_text_warnings:=_text_warnings+'-Nodealstarted\n'
ifstats_deals_finished==0
_text_warnings:=_text_warnings+'-Nodealfinished\n'
ifi_enable_stop_lossandvalid_stop_loss()==false
_text_warnings:=_text_warnings+'-Stoplossislessthanlastsafetyorder(shouldbemorethan'+str.tostring(math.round(stepped_deviation(i_max_safety_orders),2))+'%'+')\n'
ifstepped_deviation(i_max_safety_orders)>100
_text_warnings:=_text_warnings+'-Covereddeviationviasafetyordersisover100%\n'
if_text_warnings!=''
tablewarnings=table.new(position.bottom_center,columns=1,rows=2,frame_width=1,frame_color=color.red,border_width=1,border_color=color.red,bgcolor=color.red)
table.cell(warnings,0,0,'WARNINGS!\n(Fixthem,otherwisethestatsareinnacurate)',text_color=color.white,text_halign=text.align_center)
table.cell(warnings,0,1,_text_warnings,text_color=color.white,text_halign=text.align_left)
//----------------------------------------------------------------
//----------------------------------------------------------------
//atablewithbuyingsteps,volumes,pricessimilarto3commas
//setcustomvaluesforboentryprice
ifi_show_step_table
ifi_steps_bo_price==0orna(i_steps_bo_price)
i_steps_bo_price:=close

_steps_bo_size=i_base_order_size_usd/i_steps_bo_price
tablesteps_amount=table.new(position.bottom_left,columns=12,rows=int(i_max_safety_orders)+4,frame_width=1,frame_color=color.black,border_width=1,border_color=color.black,bgcolor=color.blue)
table.cell(steps_amount,0,0,'Order\nno',text_color=color.white,text_size=size.small)
table.cell(steps_amount,1,0,'Deviation\n(%)',text_color=color.white,text_size=size.small)
table.cell(steps_amount,2,0,'Size\n('+str.tostring(syminfo.basecurrency)+')',text_color=color.white,text_size=size.small)
table.cell(steps_amount,3,0,'Volume\n('+str.tostring(syminfo.currency)+')',text_color=color.white,text_size=size.small)
table.cell(steps_amount,4,0,'Price\n('+str.tostring(syminfo.currency)+')',text_color=color.white,text_size=size.small)
table.cell(steps_amount,5,0,'Avgprice\n('+str.tostring(syminfo.currency)+')',text_color=color.white,text_size=size.small)

table.cell(steps_amount,6,0,'PriceforTP\n('+str.tostring(syminfo.currency)+')',text_color=color.white,text_size=size.small)
table.cell(steps_amount,7,0,'%change\nforTP',text_color=color.white,text_size=size.small)
table.cell(steps_amount,8,0,'%change\nforBEP',text_color=color.white,text_size=size.small)

table.cell(steps_amount,9,0,'Totalsize\n('+str.tostring(syminfo.basecurrency)+')',text_color=color.white,text_size=size.small)
table.cell(steps_amount,10,0,'TotalVol\n('+str.tostring(syminfo.currency)+')',text_color=color.white,text_size=size.small)
float_steps_total_size=_steps_bo_size
float_steps_total_volume=i_steps_bo_price*_steps_bo_size
//baseorder
table.cell(steps_amount,0,1,'BO',text_color=color.white,text_size=size.small)
table.cell(steps_amount,1,1,'0',text_color=color.white,text_size=size.small)
table.cell(steps_amount,2,1,str.tostring(math.round(_steps_bo_size,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,3,1,str.tostring(math.round(i_steps_bo_price*_steps_bo_size,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,4,1,str.tostring(math.round(i_steps_bo_price,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,5,1,str.tostring(math.round(_steps_total_volume/_steps_total_size,i_decimals)),text_color=color.white,text_size=size.small)

_req_price_for_tp=steps_required_price(i_steps_bo_price,_steps_total_volume/_steps_total_size,_steps_total_size,i_take_profit_perc)
table.cell(steps_amount,6,1,str.tostring(math.round(_req_price_for_tp,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,7,1,str.tostring(steps_required_percent(i_steps_bo_price,_req_price_for_tp)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,8,1,str.tostring(steps_required_percent(i_steps_bo_price,i_steps_bo_price)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,9,1,str.tostring(math.round(_steps_total_size,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,10,1,str.tostring(_steps_total_volume),text_color=color.white,text_size=size.small)
float_steps_next_safety_order_price=0
float_steps_next_safety_order_qty=0
ifi_max_safety_orders>0
for_i=1toi_max_safety_ordersby1
_steps_next_safety_order_price:=next_so_price(_i,i_steps_bo_price)
_steps_next_safety_order_qty:=next_so_qty(_i,i_steps_bo_price)
_steps_total_size+=_steps_next_safety_order_qty
_steps_total_volume+=_steps_next_safety_order_qty*_steps_next_safety_order_price
table.cell(steps_amount,0,_i+2,str.tostring(_i),text_color=color.white,text_size=size.small)
table.cell(steps_amount,1,_i+2,str.tostring(stepped_deviation(_i)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,2,_i+2,str.tostring(math.round(_steps_next_safety_order_qty,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,3,_i+2,str.tostring(math.round(_steps_next_safety_order_qty*_steps_next_safety_order_price,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,4,_i+2,str.tostring(math.round(_steps_next_safety_order_price,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,5,_i+2,str.tostring(math.round(_steps_total_volume/_steps_total_size,i_decimals)),text_color=color.white,text_size=size.small)

_req_price_for_tp:=steps_required_price(i_steps_bo_price,_steps_total_volume/_steps_total_size,_steps_total_size,i_take_profit_perc)
table.cell(steps_amount,6,_i+2,str.tostring(math.round(_req_price_for_tp,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,7,_i+2,str.tostring(steps_required_percent(_steps_next_safety_order_price,_req_price_for_tp)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,8,_i+2,str.tostring(steps_required_percent(_steps_next_safety_order_price,_steps_total_volume/_steps_total_size)),text_color=color.white,text_size=size.small)

table.cell(steps_amount,9,_i+2,str.tostring(math.round(_steps_total_size,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,10,_i+2,str.tostring(_steps_total_volume),text_color=color.white,text_size=size.small)
elseifi_max_safety_orders>0
float_steps_next_safety_order_qty_usd=0
for_i=1toi_max_safety_ordersby1
_steps_next_safety_order_qty_usd:=next_so_size_usd(_i)
_steps_total_volume+=_steps_next_safety_order_qty_usd
table.cell(steps_amount,0,_i+2,str.tostring(_i),text_color=color.white,text_size=size.small)
table.cell(steps_amount,1,_i+2,"-",text_color=color.white,text_size=size.small)
table.cell(steps_amount,2,_i+2,"-",text_color=color.white,text_size=size.small)
table.cell(steps_amount,3,_i+2,str.tostring(math.round(_steps_next_safety_order_qty_usd,i_decimals)),text_color=color.white,text_size=size.small)
table.cell(steps_amount,4,_i+2,"-",text_color=color.white,text_size=size.small)
table.cell(steps_amount,5,_i+2,"-",text_color=color.white,text_size=size.small)
table.cell(steps_amount,6,_i+2,"-",text_color=color.white,text_size=size.small)
table.cell(steps_amount,7,_i+2,"-",text_color=color.white,text_size=size.small)
table.cell(steps_amount,8,_i+2,"-",text_color=color.white,text_size=size.small)
table.cell(steps_amount,9,_i+2,"-",text_color=color.white,text_size=size.small)
table.cell(steps_amount,10,_i+2,str.tostring(_steps_total_volume),text_color=color.white,text_size=size.small)
//----------------------------------------------------------------
//----------------------------------------------------------------
//atablewithallkindofstatisticsaboutstrategyresults
ifi_show_stats_table
introwsforstats=array.size(statsarray_safety_orders)+25
tablesostats=table.new(position.top_right,columns=2,rows=rowsforstats,frame_width=1,frame_color=color.black)
_row=0
table.cell(sostats,column=0,row=_row,text='QFLBacktester'+str.tostring(syminfo.basecurrency)+'/'+str.tostring(syminfo.currency),text_halign=text.align_left,text_size=size.small,text_color=color.white,bgcolor=get_bg_color_orange())
table.cell(sostats,column=1,row=_row,text='',text_size=size.small,text_color=color.white,bgcolor=get_bg_color_orange())
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Status:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
if_deal_in_progress
table.cell(sostats,column=1,row=_row,text='Dealinprogress',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_red())
elseifstats_deals_started==0andstats_deals_finished==0
table.cell(sostats,column=1,row=_row,text='Nodeals',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_red())
else
table.cell(sostats,column=1,row=_row,text='Alldealsclosed',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_green())
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Opendeals:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
ifstats_deals_started-stats_deals_finished==0
table.cell(sostats,column=1,row=_row,text='0',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_green())
else
_current_deal_total_value=strategy.position_size*strategy.position_avg_price
_current_deal_actual_value=strategy.position_size*close
float_current_deal_equity_percent=0
ifIS_LONG
_current_deal_equity_percent:=_current_deal_actual_value*100/_current_deal_total_value-100
_current_deal_equity_percent
else
_current_deal_equity_percent:=100-_current_deal_actual_value*100/_current_deal_total_value
_text0=str.tostring(stats_deals_started-stats_deals_finished)+'deal\n'
_text0:=_text0+str.tostring(math.round(strategy.openprofit,i_decimals))+''+str.tostring(syminfo.currency)
_text0:=_text0+'('+str.tostring(math.round(_current_deal_equity_percent,2))+'%)\n'
_text0:=_text0+str.tostring(get_timespan_string(c_dealstart_bar_time,time_close))+',currentlyatSO'+str.tostring(count_executed_safety_orders+1)+'\n'
_text0:=_text0+'(start:'+str.tostring(time_to_date_string(c_dealstart_bar_time))+')'
table.cell(sostats,column=1,row=_row,text=_text0,text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_red())
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Finisheddeals:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(stats_deals_finished),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Winningdeals:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
ifstats_deals_take_profit_finished==0
table.cell(sostats,column=1,row=_row,text=str.tostring(array.size(statsarray_winning_deals_pnl)),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
else
_text5=''
_text5:=_text5+str.tostring(stats_deals_take_profit_finished)
_text5:=_text5+'('+str.tostring(math.round(array.avg(statsarray_winning_deals_pnl),i_decimals))
_text5:=_text5+''+str.tostring(syminfo.currency)+'onavg)'
table.cell(sostats,column=1,row=_row,text=_text5,text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_green())
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Losingdeals:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
ifarray.size(statsarray_losing_deals_pnl)==0
table.cell(sostats,column=1,row=_row,text=str.tostring(array.size(statsarray_losing_deals_pnl)),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_green())
else
_text6=''
_text6:=_text6+str.tostring(array.size(statsarray_losing_deals_pnl))
_text6:=_text6+'('+str.tostring(math.round(array.avg(statsarray_losing_deals_pnl),i_decimals))
_text6:=_text6+''+str.tostring(syminfo.currency)+'onavg)'
table.cell(sostats,column=1,row=_row,text=_text6,text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_red())
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Totaltime(Max|Avgtimeindeal):',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_text4=''+str.tostring(get_timespan_string(bh_start_time,bh_end_time))+'('
_text4:=_text4+''+get_timestring_from_days(array.max(statsarray_no_of_days))+'|'
_text4:=_text4+''+get_timestring_from_days(array.avg(statsarray_no_of_days))+')'
table.cell(sostats,column=1,row=_row,text=_text4,text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Totalbacktest:\n'+str.tostring(time_to_date_string(bh_start_time))+'\n'+str.tostring(time_to_date_string(bh_end_time)),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text='Maxdaysindeal:\n'+str.tostring(time_to_date_string(stats_max_days_in_deal_start_time))+'\n'+str.tostring(time_to_date_string(stats_max_days_in_deal_close_time)),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Requiredcapital:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(c_required_capital)+''+str.tostring(syminfo.currency),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Profit:\n(aftercommision)',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_text1=str.tostring(math.round(get_final_pnl_new(),i_decimals))+''+str.tostring(syminfo.currency)
_text1:=_text1+'('+str.tostring(math.round(get_final_pnl_prct_new(),2))+'%)\n'
ifget_days(bh_start_time,bh_end_time)>=1
_text1:=_text1+str.tostring(math.round(get_final_pnl_prct_new()/get_days(bh_start_time,bh_end_time),2))+'%/day'
else
_text1:=_text1+str.tostring(math.round(get_final_pnl_prct_new(),2))+'%/day'
table.cell(sostats,column=1,row=_row,text=_text1,text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
//ifdaterangeislimitedcalculatebetweenstartandenddate
_bh_equity=c_required_capital/bh_start_price*bh_end_price-c_required_capital
_bh_commision=get_commission_for_volume(c_required_capital+c_required_capital/bh_start_price*bh_end_price)
_bh_equity:=_bh_equity-_bh_commision
_bh_prct_total=math.round(_bh_equity*100/c_required_capital,2)
table.cell(sostats,column=0,row=_row,text='Buy&holdreturn:\n(aftercommision)',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_text2=str.tostring(math.round(_bh_equity,i_decimals))+''+str.tostring(syminfo.currency)
_text2:=_text2+'('+str.tostring(_bh_prct_total)+'%)\n'
ifget_days(bh_start_time,bh_end_time)>=1
_text2:=_text2+str.tostring(math.round(_bh_prct_total/get_days(bh_start_time,bh_end_time),2))+'%/day'
else
_text2:=_text2+str.tostring(math.round(_bh_prct_total,2))+'%/day'
_text2
table.cell(sostats,column=1,row=_row,text=_text2,text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Covereddeviation:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(math.round(stepped_deviation(i_max_safety_orders),2))+'%',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
string_bef=valid_stop_loss()?'beforeSL':''
table.cell(sostats,column=0,row=_row,text='Maxdeviation:\n(Dealstartpricevsworstcandle'+_bef+')',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(math.round(stats_biggest_dev,2))+'%\n'+'('+time_to_date_string(stats_biggest_dev_time)+')',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Maxdrawdownfrombreakeven:\n(Avgpricevsworstcandle'+_bef+')',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(math.round(stats_max_drawdown,i_decimals))+''+str.tostring(syminfo.currency)+'('+str.tostring(math.round(stats_max_drawdown_equity_percent,2))+'%)\n'+'('+time_to_date_string(stats_max_drawdown_time)+')',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Max#barsindeal:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(array.max(statsarray_no_of_bars)),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Avg#barsindeal:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(math.round(array.avg(statsarray_no_of_bars),2)),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Totalvolume:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(math.round(c_total_volume,i_decimals))+''+str.tostring(syminfo.currency),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
table.cell(sostats,column=0,row=_row,text='Commision:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(math.round(get_commission_for_volume(c_total_volume),i_decimals))+''+str.tostring(syminfo.currency),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
_row:=_row+1
ifarray.size(statsarray_safety_orders)>0
table.cell(sostats,column=0,row=_row,text='Closestatsfor'+str.tostring(stats_deals_finished)+'deals',text_color=color.white,text_size=size.small,bgcolor=get_bg_color_orange(),text_halign=text.align_left)
table.cell(sostats,column=1,row=_row,text='Number(%)/Exitwithtimeout',text_color=color.white,text_size=size.small,bgcolor=get_bg_color_orange())
_row:=_row+1
_saved_row=_row
_row:=_row+2
_max_safety_orders=0
float_avg_safety_orders=0
for_i=0toarray.size(statsarray_safety_orders)-1by1
string_closed_text=''
if_i==0
_closed_text:='BO('+str.tostring(math.round(stepped_deviation(_i),2))+'%)'
else
_closed_text:='SO'+str.tostring(_i)+'('+str.tostring(math.round(stepped_deviation(_i),2))+'%)'
_cnt=array.get(statsarray_safety_orders,_i)
if_cnt>0and_i>_max_safety_orders
_max_safety_orders:=_i
_avg_safety_orders:=_avg_safety_orders+_cnt*_i
table.cell(sostats,column=0,row=_row+_i,text='Closedwith'+_closed_text,text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row+_i))
table.cell(sostats,column=1,row=_row+_i,text=str.tostring(_cnt)+'('+str.tostring(math.round(_cnt*100/stats_deals_finished,2))+'%)/'+str.tostring(array.get(statsarray_safety_orders_timeout,_i)),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row+_i))
_avg_safety_orders:=math.round(_avg_safety_orders/array.sum(statsarray_safety_orders),1)
table.cell(sostats,column=0,row=_saved_row,text='MaxSOused:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_saved_row))
table.cell(sostats,column=1,row=_saved_row,text=str.tostring(_max_safety_orders),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_saved_row))
table.cell(sostats,column=0,row=_saved_row+1,text='AvgSOused:',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_saved_row+1))
table.cell(sostats,column=1,row=_saved_row+1,text=str.tostring(_avg_safety_orders),text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_saved_row+1))
ifvalid_stop_loss()
_row:=_row+array.size(statsarray_safety_orders)
table.cell(sostats,column=0,row=_row,text='ClosedwithStopLoss('+str.tostring(i_stop_loss_perc)+'%)',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
table.cell(sostats,column=1,row=_row,text=str.tostring(stats_deals_stop_loss_finished)+'('+str.tostring(math.round(stats_deals_stop_loss_finished*100/stats_deals_finished,2))+'%)',text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=stats_deals_stop_loss_finished>0?get_bg_color_red():get_bg_color_green())
//----------------------------------------------------------------
//----------------------------------------------------------------
ifi_show_settings_table
tablesettings=table.new(position.bottom_left,columns=1,rows=2,frame_width=1,frame_color=color.black)
_row=0
table.cell(settings,column=0,row=0,text='DCASettings',text_halign=text.align_left,text_size=size.small,text_color=color.white,bgcolor=get_bg_color_blue())
_text='QFL:'+str.tostring(i_strategy_type)+';'
_text:=_text+'Commision:'+str.tostring(i_commision_percent)+'%;\n'
_text:=_text+'Condition:'+str.tostring(deal_start_condition)+''
_text:=_text+'TP:'+str.tostring(i_take_profit_perc)+'%'
_text:=_text+'('+str.tostring(i_take_profit_type)+')'
ifi_enable_stop_loss
_text:=_text+'\nSL:'+str.tostring(i_stop_loss_perc)+'%'
_text:=_text+'\n\n'
_text:=_text+'BO:'+str.tostring(i_base_order_size_usd)+''+str.tostring(syminfo.currency)+';'
_text:=_text+'SO:'+str.tostring(i_safety_order_size_usd)+''+str.tostring(syminfo.currency)+';\n'
_text:=_text+'SODev:'+str.tostring(i_safety_order_price_deviation_perc)+'%;'
_text:=_text+'MaxSO:'+str.tostring(i_max_safety_orders)+';'
_text:=_text+'Covered:'+str.tostring(math.round(stepped_deviation(i_max_safety_orders),2))+'%;\n'
_text:=_text+'SOVolumeScale:'+str.tostring(i_safety_order_volume_scale)+';'
_text:=_text+'SOStepScale:'+str.tostring(i_safety_order_price_step_scale)+';\n'

table.cell(settings,column=0,row=1,text=_text,text_halign=text.align_left,text_color=color.black,text_size=size.small,bgcolor=get_bg_color_grey(_row))
Expand (1321 lines)
