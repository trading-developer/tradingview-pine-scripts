Script Name: Big Snapper Alerts R3.0 + Chaiking Volatility condition + TP RSI
Author: Batosbados
Description: //@version=5
//
// Bannos
// #NotTradingAdvice #DYOR
// Disclaimer.
// I AM NOT A FINANCIAL ADVISOR.
// THESE IDEAS ARE NOT ADVICE AND ARE FOR EDUCATION PURPOSES ONLY.
// ALWAYS DO YOUR OWN RESEARCH
//
// Author:  Adaptation from JustUncleL Big Snapper by Bannos
// Date:    May-2022
// Version: R1.0

//Description of this addon - Script using several new...
PineScript code:

Pine Script™ strategy
Big Snapper Alerts R3.0 + Chaiking Volatility condition + TP RSI
//@version=5
//
//  Bannos
//  #NotTradingAdvice  #DYOR
//  Disclaimer.
//  I  AM  NOT  A  FINANCIAL  ADVISOR.
//  THESE  IDEAS  ARE  NOT  ADVICE  AND  ARE  FOR  EDUCATION  PURPOSES  ONLY.
//  ALWAYS  DO  YOUR  OWN  RESEARCH
//
//  Author:    Adaptation  from  JustUncleL  Big  Snapper  by  Bannos
//  Date:        May-2022
//  Last:        Nov-2022
//  Version:  R4.0
//Description  of  this  addon  -  Script  using  several  new  conditions  to  give  Long/short  and  SL  levels  which  was  not  proposed  in  the  Big  Snapper  strategy  "Big  Snapper  Alerts  R3.0"
//"
//This  strategy  is  based  on  the  use  of  the  Big  Snapper  outputs  from  the  JustUncleL  script  and  the  addition  of  several  conditions  to  define  filtered  conditions  selecting  signal  synchrones  with  a  trend  and  a  rise  of  the  volatility.
//Also  the  strategy  proposes  to  define  proportional  stop  losses  and  dynamic  Take  profit  using  an  RSI  strategy.
//  After  delivering  the  temporary  ong/short  signal  and  ploting  a  green  or  purple  signal,  several  conditions  are  defined  to  consider  a  Signal  is  Long  or  short.
//Let  s  take  the  long  signal  as  example(this  is  the  same  process  with  the  opposite  values  for  a  short).
//step  1  -  Long  Definition:
        //  Snapper  long  signal  stored  in  the  buffer  variable  Longbuffer  to  say  that  in  a  close  future,  we  could  have  all  conditions  for  a  long
        //  Now  we  need  some  conditions  to  combine  with  it:
        //the  second  one  is  to  be  over  the  Ma_medium(55)
        //and  because  this  is  not  selective  enough,  the  third  one  is  a  Volatility  indicator  "Chaikin  Volatility"  indicator  giving  an  indication  about  the  volatility  of  the  price  compared  to  the  10  last  values
        //  ->  Using  the  volatility  indicator  gives  the  possibility  to  increase  the  potential  rise  if  the  volatility  is  higher  compared  to  the  last  periods.
        //With  these  3  signals,  we  get  a  robust  indication  about  a  potential  long  signal  which  is  then  stored  in  the  variable  "Longe"

        //Now  we  have  a  long  signal  and  can  give  a  long  signal  with  its  Stop  Loss
        //  The  Long  Signal  is  automatically  given  as  the  3  conditions  above  are  satisfied.
        //  The  Stop  loss  is  a  function  of  the  last  Candle  sizes  giving  a  stop  below  the  70%  of  the  overall  candle  which  can  be  assimilated  to  a  Fibonacci  level.  Below  this  level  it  makes  sense  to  stop  the  trade  as  the  chance  to  recover  the  complete  Candle  is  more  than  60%

        //Now  we  are  in  an  open  Long  and  can  use  all  the  mentioned  Stop  loss  condition  but  still  need  a  Take  Profit  condition
        //The  take  profit  condition  is  based  on  a  RSI  strategy  consisting  in  taking  profit  as  soon  as  the  RSI  come  back  from  the  overbought  area  (which  is  here  defined  as  a  rsi  over  70)  and  reaching  the  63.5  level  to  trigger  the  Take  Profit
        //This  TP  condition  is  only  active  when  Long  is  active  and  when  an  entry  value  as  been  defined.

        //Entry  and  SL  level  appreas  as  soon  as  a  Long  or  short  arrow  signal  does  appears.  The  Take  profit  will  be  conidtioned  to  the  RSI.

        //The  final  step  in  the  cycle  is  a  reinitialization  of  all  the  values  giving  the  possibility  to  detect  and  treat  any  long  new  signal  coming  from  the  Big  Snapper  signal.
//-------------------------------------------------------------------------------------------------------
strategy(title='Big  Snapper  Chaiking  Volatility  +  TP  RSI  +  Trend  determination  using  RVWAP  +  spkie  filtering  using  Vol.  oscilator',  shorttitle='SNAPPER  Bannos',  overlay=true)
//Super  Oscillator----------------------------------------------------------------------------------------------------------------------
length  =  input.int(10,  minval=1)
mult  =  input.float(2.,  minval=1)
smooth  =  input.int(72,  minval=1)
//Misc
fixed  =  input.bool(false,  'Fixed  Transparency',  group='Misc')
show_ln  =  input.bool(true,  'Show  Lines',  group='Misc')
show_lb  =  input.bool(true,  'Show  Labels',  group='Misc')
show_per  =  input.bool(false,  'Show  %  False  Signals',  group='Misc')
//----
src  =  close
lowerr  =  0.
upperr  =  0.
trend  =  0
var  up_col  =  array.new_color(0)
var  dn_col  =  array.new_color(0)
if  barstate.isfirst
        array.push(up_col,  color.new(#0cb51a,  100))
        array.push(up_col,  color.new(#0cb51a,  99))
        array.push(up_col,  color.new(#0cb51a,  98))
        array.push(up_col,  color.new(#0cb51a,  97))
        array.push(up_col,  color.new(#0cb51a,  96))
        array.push(up_col,  color.new(#0cb51a,  95))
        array.push(up_col,  color.new(#0cb51a,  94))
        array.push(up_col,  color.new(#0cb51a,  93))
        array.push(up_col,  color.new(#0cb51a,  92))
        array.push(up_col,  color.new(#0cb51a,  91))
        array.push(up_col,  color.new(#0cb51a,  90))
        array.push(up_col,  color.new(#0cb51a,  89))
        array.push(up_col,  color.new(#0cb51a,  88))
        array.push(up_col,  color.new(#0cb51a,  87))
        array.push(up_col,  color.new(#0cb51a,  86))
        array.push(up_col,  color.new(#0cb51a,  85))
        array.push(up_col,  color.new(#0cb51a,  84))
        array.push(up_col,  color.new(#0cb51a,  83))
        array.push(up_col,  color.new(#0cb51a,  82))
        array.push(up_col,  color.new(#0cb51a,  81))
        array.push(up_col,  color.new(#0cb51a,  80))
        array.push(up_col,  color.new(#0cb51a,  79))
        array.push(up_col,  color.new(#0cb51a,  78))
        array.push(up_col,  color.new(#0cb51a,  77))
        array.push(up_col,  color.new(#0cb51a,  76))
        array.push(up_col,  color.new(#0cb51a,  75))
        array.push(up_col,  color.new(#0cb51a,  74))
        array.push(up_col,  color.new(#0cb51a,  73))
        array.push(up_col,  color.new(#0cb51a,  72))
        array.push(up_col,  color.new(#0cb51a,  71))
        array.push(up_col,  color.new(#0cb51a,  70))
        array.push(up_col,  color.new(#0cb51a,  69))
        array.push(up_col,  color.new(#0cb51a,  68))
        array.push(up_col,  color.new(#0cb51a,  67))
        array.push(up_col,  color.new(#0cb51a,  66))
        array.push(up_col,  color.new(#0cb51a,  65))
        array.push(up_col,  color.new(#0cb51a,  64))
        array.push(up_col,  color.new(#0cb51a,  63))
        array.push(up_col,  color.new(#0cb51a,  62))
        array.push(up_col,  color.new(#0cb51a,  61))
        array.push(up_col,  color.new(#0cb51a,  60))
        array.push(up_col,  color.new(#0cb51a,  59))
        array.push(up_col,  color.new(#0cb51a,  58))
        array.push(up_col,  color.new(#0cb51a,  57))
        array.push(up_col,  color.new(#0cb51a,  56))
        array.push(up_col,  color.new(#0cb51a,  55))
        array.push(up_col,  color.new(#0cb51a,  54))
        array.push(up_col,  color.new(#0cb51a,  53))
        array.push(up_col,  color.new(#0cb51a,  52))
        array.push(up_col,  color.new(#0cb51a,  51))
        array.push(up_col,  color.new(#0cb51a,  50))
        array.push(up_col,  color.new(#0cb51a,  49))
        array.push(up_col,  color.new(#0cb51a,  48))
        array.push(up_col,  color.new(#0cb51a,  47))
        array.push(up_col,  color.new(#0cb51a,  46))
        array.push(up_col,  color.new(#0cb51a,  45))
        array.push(up_col,  color.new(#0cb51a,  44))
        array.push(up_col,  color.new(#0cb51a,  43))
        array.push(up_col,  color.new(#0cb51a,  42))
        array.push(up_col,  color.new(#0cb51a,  41))
        array.push(up_col,  color.new(#0cb51a,  40))
        array.push(up_col,  color.new(#0cb51a,  39))
        array.push(up_col,  color.new(#0cb51a,  38))
        array.push(up_col,  color.new(#0cb51a,  37))
        array.push(up_col,  color.new(#0cb51a,  36))
        array.push(up_col,  color.new(#0cb51a,  35))
        array.push(up_col,  color.new(#0cb51a,  34))
        array.push(up_col,  color.new(#0cb51a,  33))
        array.push(up_col,  color.new(#0cb51a,  32))
        array.push(up_col,  color.new(#0cb51a,  31))
        array.push(up_col,  color.new(#0cb51a,  30))
        array.push(up_col,  color.new(#0cb51a,  29))
    array.push(up_col,color.new(#0cb51a,28))
array.push(up_col,color.new(#0cb51a,27))
array.push(up_col,color.new(#0cb51a,26))
array.push(up_col,color.new(#0cb51a,25))
array.push(up_col,color.new(#0cb51a,24))
array.push(up_col,color.new(#0cb51a,23))
array.push(up_col,color.new(#0cb51a,22))
array.push(up_col,color.new(#0cb51a,21))
array.push(up_col,color.new(#0cb51a,20))
array.push(up_col,color.new(#0cb51a,19))
array.push(up_col,color.new(#0cb51a,18))
array.push(up_col,color.new(#0cb51a,17))
array.push(up_col,color.new(#0cb51a,16))
array.push(up_col,color.new(#0cb51a,15))
array.push(up_col,color.new(#0cb51a,14))
array.push(up_col,color.new(#0cb51a,13))
array.push(up_col,color.new(#0cb51a,12))
array.push(up_col,color.new(#0cb51a,11))
array.push(up_col,color.new(#0cb51a,10))
array.push(up_col,color.new(#0cb51a,9))
array.push(up_col,color.new(#0cb51a,8))
array.push(up_col,color.new(#0cb51a,7))
array.push(up_col,color.new(#0cb51a,6))
array.push(up_col,color.new(#0cb51a,5))
array.push(up_col,color.new(#0cb51a,4))
array.push(up_col,color.new(#0cb51a,3))
array.push(up_col,color.new(#0cb51a,2))
array.push(up_col,color.new(#0cb51a,1))
array.push(dn_col,color.new(#ff1100,100))
array.push(dn_col,color.new(#ff1100,99))
array.push(dn_col,color.new(#ff1100,98))
array.push(dn_col,color.new(#ff1100,97))
array.push(dn_col,color.new(#ff1100,96))
array.push(dn_col,color.new(#ff1100,95))
array.push(dn_col,color.new(#ff1100,94))
array.push(dn_col,color.new(#ff1100,93))
array.push(dn_col,color.new(#ff1100,92))
array.push(dn_col,color.new(#ff1100,91))
array.push(dn_col,color.new(#ff1100,90))
array.push(dn_col,color.new(#ff1100,89))
array.push(dn_col,color.new(#ff1100,88))
array.push(dn_col,color.new(#ff1100,87))
array.push(dn_col,color.new(#ff1100,86))
array.push(dn_col,color.new(#ff1100,85))
array.push(dn_col,color.new(#ff1100,84))
array.push(dn_col,color.new(#ff1100,83))
array.push(dn_col,color.new(#ff1100,82))
array.push(dn_col,color.new(#ff1100,81))
array.push(dn_col,color.new(#ff1100,80))
array.push(dn_col,color.new(#ff1100,79))
array.push(dn_col,color.new(#ff1100,78))
array.push(dn_col,color.new(#ff1100,77))
array.push(dn_col,color.new(#ff1100,76))
array.push(dn_col,color.new(#ff1100,75))
array.push(dn_col,color.new(#ff1100,74))
array.push(dn_col,color.new(#ff1100,73))
array.push(dn_col,color.new(#ff1100,72))
array.push(dn_col,color.new(#ff1100,71))
array.push(dn_col,color.new(#ff1100,70))
array.push(dn_col,color.new(#ff1100,69))
array.push(dn_col,color.new(#ff1100,68))
array.push(dn_col,color.new(#ff1100,67))
array.push(dn_col,color.new(#ff1100,66))
array.push(dn_col,color.new(#ff1100,65))
array.push(dn_col,color.new(#ff1100,64))
array.push(dn_col,color.new(#ff1100,63))
array.push(dn_col,color.new(#ff1100,62))
array.push(dn_col,color.new(#ff1100,61))
array.push(dn_col,color.new(#ff1100,60))
array.push(dn_col,color.new(#ff1100,59))
array.push(dn_col,color.new(#ff1100,58))
array.push(dn_col,color.new(#ff1100,57))
array.push(dn_col,color.new(#ff1100,56))
array.push(dn_col,color.new(#ff1100,55))
array.push(dn_col,color.new(#ff1100,54))
array.push(dn_col,color.new(#ff1100,53))
array.push(dn_col,color.new(#ff1100,52))
array.push(dn_col,color.new(#ff1100,51))
array.push(dn_col,color.new(#ff1100,50))
array.push(dn_col,color.new(#ff1100,49))
array.push(dn_col,color.new(#ff1100,48))
array.push(dn_col,color.new(#ff1100,47))
array.push(dn_col,color.new(#ff1100,46))
array.push(dn_col,color.new(#ff1100,45))
array.push(dn_col,color.new(#ff1100,44))
array.push(dn_col,color.new(#ff1100,43))
array.push(dn_col,color.new(#ff1100,42))
array.push(dn_col,color.new(#ff1100,41))
array.push(dn_col,color.new(#ff1100,40))
array.push(dn_col,color.new(#ff1100,39))
array.push(dn_col,color.new(#ff1100,38))
array.push(dn_col,color.new(#ff1100,37))
array.push(dn_col,color.new(#ff1100,36))
array.push(dn_col,color.new(#ff1100,35))
array.push(dn_col,color.new(#ff1100,34))
array.push(dn_col,color.new(#ff1100,33))
array.push(dn_col,color.new(#ff1100,32))
array.push(dn_col,color.new(#ff1100,31))
array.push(dn_col,color.new(#ff1100,30))
array.push(dn_col,color.new(#ff1100,29))
array.push(dn_col,color.new(#ff1100,28))
array.push(dn_col,color.new(#ff1100,27))
array.push(dn_col,color.new(#ff1100,26))
array.push(dn_col,color.new(#ff1100,25))
array.push(dn_col,color.new(#ff1100,24))
array.push(dn_col,color.new(#ff1100,23))
array.push(dn_col,color.new(#ff1100,22))
array.push(dn_col,color.new(#ff1100,21))
array.push(dn_col,color.new(#ff1100,20))
array.push(dn_col,color.new(#ff1100,19))
array.push(dn_col,color.new(#ff1100,18))
array.push(dn_col,color.new(#ff1100,17))
array.push(dn_col,color.new(#ff1100,16))
array.push(dn_col,color.new(#ff1100,15))
array.push(dn_col,color.new(#ff1100,14))
array.push(dn_col,color.new(#ff1100,13))
array.push(dn_col,color.new(#ff1100,12))
array.push(dn_col,color.new(#ff1100,11))
array.push(dn_col,color.new(#ff1100,10))
array.push(dn_col,color.new(#ff1100,9))
array.push(dn_col,color.new(#ff1100,8))
array.push(dn_col,color.new(#ff1100,7))
array.push(dn_col,color.new(#ff1100,6))
array.push(dn_col,color.new(#ff1100,5))
array.push(dn_col,color.new(#ff1100,4))
array.push(dn_col,color.new(#ff1100,3))
array.push(dn_col,color.new(#ff1100,2))
array.push(dn_col,color.new(#ff1100,1))
//----
atr=ta.atr(length)*mult
uppp=hl2+atr
dn=hl2-atr
upperr:=src[1]<upperr[1]?math.min(uppp,upperr[1]):uppp
lowerr:=src[1]>lowerr[1]?math.max(dn,lowerr[1]):dn
trend:=src>upperr[1]?1:src<lowerr[1]?0:trend[1]
Spt=trend*lowerr+(1-trend)*upperr
//----
ama=0.
osc=math.max(math.min((src-Spt)/(upperr-lowerr),1),-1)
alpha=math.pow(osc,2)/length
ama:=nz(ama[1]+alpha*(osc-ama[1]),osc)
hist=ta.ema(osc-ama,smooth)
//----
fix_css=osc>0?#0cb51a:#ff1100
var_css=osc>0?array.get(up_col,math.round(osc*99)):array.get(dn_col,math.round(osc*-1*99))
sig_css=ama>0?#2157f3:#673ab7
//plot(fixed?osc*100:na,'MainFixed',fix_css,1,plot.style_area)
//plot(fixed?na:osc*100,'MainTransp',var_css,1,plot.style_columns,editable=false)
//plot(hist*100,'Histogram',color.new(#808080,40),1,plot.style_area)
//plot(ama*100,'Signal',sig_css)
//----
a=hline(80)
b=hline(-80)
fill(a,b,color.new(#2157f3,90))
//----
css=osc>0?#ff1100:#0cb51a
sig=ta.change(math.sign(osc))?osc*-100:na
plot(show_ln?sig:na,color=css)
//----
n=bar_index
cross=ta.cross(src,Spt)
x2=ta.valuewhen(cross,n,0)
//----
false_buy=ta.valuewhen(ta.crossunder(src,Spt),src,0)<ta.valuewhen(ta.crossover(src,Spt),src,0)
false_sell=ta.valuewhen(ta.crossover(src,Spt),src,0)>ta.valuewhen(ta.crossunder(src,Spt),src,0)
num=ta.cum(crossand(false_buyorfalse_sell)?1:0)
den=ta.cum(cross?1:0)
per=num/den*100
//----
ifbarstate.islastandshow_ln
line.delete(line.new(x2,math.sign(osc)*-100,n,osc*100,color=osc<0?#ff1100:#0cb51a)[1])
ifshow_lb
ifta.crossover(src,Spt)
txt=false_sell?'❌':'✔️'
label.new(x2,-80,txt,color=#00000000,style=label.style_label_up,textcolor=color.gray,textalign=text.align_center)
ifta.crossunder(src,Spt)
txt=false_buy?'❌':'✔️'
label.new(x2,80,txt,color=#00000000,style=label.style_label_down,textcolor=color.gray,textalign=text.align_center)
ifbarstate.islastandshow_per
txt='❌'+str.tostring(per,'#.##')+'%'
label.delete(label.new(n,osc,txt,color=#00000000,style=label.style_label_left,textcolor=color.gray,textalign=text.align_left)[1])
//plot(osc,"osc")
//===INPUTS===
//ColouredMA-type,length,source
typeColoured=input.string(defval='HullMA',title='ColouredMAType:',options=['SMA','EMA','WMA','VWMA','SMMA','DEMA','TEMA','HullMA','ZEMA','TMA','SSMA'])
lenColoured=input.int(defval=18,title='ColouredMA-Length',minval=1)
srcColoured=input(close,title='ColouredMA-Source')
//FastMA-type,length
typeFast=input.string(defval='EMA',title='FastMAType:',options=['SMA','EMA','WMA','VWMA','SMMA','DEMA','TEMA','HullMA','ZEMA','TMA','SSMA'])
lenFast=input.int(defval=21,title='FastMA-Length',minval=1)
//MediumMA-type,length
typeMedium=input.string(defval='EMA',title='MediumMAType:',options=['SMA','EMA','WMA','VWMA','SMMA','DEMA','TEMA','HullMA','ZEMA','TMA','SSMA'])
lenMedium=input.int(defval=55,title='MediumMA-Length',minval=1)
//SlowMA-type,length
typeSlow=input.string(defval='EMA',title='SlowMAType:',options=['SMA','EMA','WMA','VWMA','SMMA','DEMA','TEMA','HullMA','ZEMA','TMA','SSMA'])
lenSlow=input.int(defval=89,title='SlowMALength',minval=1)
//3xMAsource
ma_src=input(close,title='3xMAandBollingerSource')
//
filterOption=input.string('SuperTrend',title='SignalFilterOption:',options=['3xMATrend','SuperTrend','SuperTrend+3xMA','ColouredMA','NoAlerts','MACross','MACross+ST','MACross+3xMA','OutsideIn:MACross','OutsideIn:MACross+ST','OutsideIn:MACross+3xMA'])
//
hideMALines=input(false)
hideSuperTrend=input(true)
hideBollingerBands=input(true)
hideTrendDirection=input(true)
//
disableFastMAFilter=input(false)
disableMediumMAFilter=input(false)
disableSlowMAFilter=input(false)
//
uKC=false//input(false,title="UseKeltnerChannel(KC)insteadofBollinger")
bbLength=input.int(20,minval=2,step=1,title='BollingeBandsLength')
bbStddev=input.float(2.0,minval=0.5,step=0.1,title='BollingerBandsStdDevs')
oiLength=input(8,title='BollingerOutsideInLookBack')
//
SFactor=input.float(3.618,minval=1.0,title='SuperTrendFactor')
SPd=input.int(5,minval=1,title='SuperTrendLength')
//
buyColour_=input.string('Green',title='BUYMarkerColour:',options=['Green','Lime','Aqua','DodgerBlue','Gray','Yellow'])
sellColour_=input.string('Maroon',title='SELLMarkerColour:',options=['Maroon','Red','Fuchsia','Blue','Black','Orange'])
//---AllocateCorrectFilteringChoice
//Canonlybeonechoice
uSuperTrendFilter=filterOption=='SuperTrend'?true:false
u3xMATrendFilter=filterOption=='3xMATrend'?true:false
uBothTrendFilters=filterOption=='SuperTrend+3xMA'?true:false
//uOIFilter=filterOption=="OutsideIn:ClrMA"?true:false
uOIMACrossFilter=filterOption=='OutsideIn:MACross'?true:false
uOI3xMAFilter=filterOption=='OutsideIn:MACross+3xMA'?true:false
uOISTFilter=filterOption=='OutsideIn:MACross+ST'?true:false
uMACrossFilter=filterOption=='MACross'?true:false
uMACrossSTFilter=filterOption=='MACross+ST'?true:false
uMACross3xMAFilter=filterOption=='MACross+3xMA'?true:false
//unlessall3MAsdisabled.
disable3xMAFilter=disableFastMAFilteranddisableMediumMAFilteranddisableSlowMAFilter
u3xMATrendFilter:=disable3xMAFilter?false:u3xMATrendFilter
//ifnofiltersselectedthenmustbe"NoFilters"option
disableAllFilters=u3xMATrendFilteroruSuperTrendFilteroruBothTrendFiltersoruOI3xMAFilteroruOISTFilteroruOIMACrossFilteroruMACrossFilteroruMACrossSTFilteroruMACross3xMAFilter?false:true
//if"NoAlerts"optionselected,thendisableallselections
disableAllFilters:=filterOption=='NoAlerts'?false:disableAllFilters
uSuperTrendFilter:=filterOption=='NoAlerts'?false:uSuperTrendFilter
u3xMATrendFilter:=filterOption=='NoAlerts'?false:u3xMATrendFilter
uBothTrendFilters:=filterOption=='NoAlerts'?false:uBothTrendFilters
//uOIFilter:=filterOption=="NoAlerts"?false:uOIFilter
uOIMACrossFilter:=filterOption=='NoAlerts'?false:uOIMACrossFilter
uOI3xMAFilter:=filterOption=='NoAlerts'?false:uOI3xMAFilter
uOISTFilter:=filterOption=='NoAlerts'?false:uOISTFilter
uMACrossFilter:=filterOption=='NoAlerts'?false:uMACrossFilter
uMACrossSTFilter:=filterOption=='NoAlerts'?false:uMACrossSTFilter
uMACross3xMAFilter:=filterOption=='NoAlerts'?false:uMACross3xMAFilter
//---CONSTANTS---
dodgerblue=#1E90FF
lightcoral=#F08080
buyColour=color.green//forbigArrows,mustbeaconstant.
sellColour=color.maroon//forbigArrows
//ColourSelectableforBigFatBars.
buyclr=buyColour_=='Lime'?color.lime:buyColour_=='Aqua'?color.aqua:buyColour_=='DodgerBlue'?dodgerblue:buyColour_=='Gray'?color.gray:buyColour_=='Yellow'?color.yellow:color.green
sellclr=sellColour_=='Red'?color.red:sellColour_=='Fuchsia'?color.fuchsia:sellColour_=='Blue'?color.blue:sellColour_=='Black'?color.black:sellColour_=='Orange'?color.orange:color.maroon
//===/INPUTS===
//===FUNCTIONS===
//ReturnsMAinputselectionvariant,defaulttoSMAifblankortypo.
variant(type,src,len)=>
v1=ta.sma(src,len)//Simple
v2=ta.ema(src,len)//Exponential
v3=ta.wma(src,len)//Weighted
v4=ta.vwma(src,len)//VolumeWeighted
v5=0.0
sma_1=ta.sma(src,len)//Smoothed
v5:=na(v5[1])?sma_1:(v5[1]*(len-1)+src)/len
v6=2*v2-ta.ema(v2,len)//DoubleExponential
v7=3*(v2-ta.ema(v2,len))+ta.ema(ta.ema(v2,len),len)//TripleExponential
v8=ta.wma(2*ta.wma(src,len/2)-ta.wma(src,len),math.round(math.sqrt(len)))//HullWMA=(2*WMA(n/2)−WMA(n)),sqrt(n))
v11=ta.sma(ta.sma(src,len),len)//Triangular
//SuperSmootherfilter
//©2013JohnF.Ehlers
a1=math.exp(-1.414*3.14159/len)
b1=2*a1*math.cos(1.414*3.14159/len)
c2=b1
c3=-a1*a1
c1=1-c2-c3
v9=0.0
v9:=c1*(src+nz(src[1]))/2+c2*nz(v9[1])+c3*nz(v9[2])
//ZeroLagExponential
e=ta.ema(v1,len)
v10=v1+v1-e
//returnvariant,defaultstoSMAifinputinvalid.
type=='EMA'?v2:type=='WMA'?v3:type=='VWMA'?v4:type=='SMMA'?v5:type=='DEMA'?v6:type=='TEMA'?v7:type=='HullMA'?v8:type=='SSMA'?v9:type=='ZEMA'?v10:type=='TMA'?v11:v1
//===/FUNCTIONS===
//===SERIESVARIABLES===
//MA's
ma_fast=variant(typeFast,ma_src,lenFast)
ma_medium=variant(typeMedium,ma_src,lenMedium)
ma_slow=variant(typeSlow,ma_src,lenSlow)
ma_coloured=variant(typeColoured,srcColoured,lenColoured)
//GetDirectionofColouredMovingAverage
clrdirection=1
falling_1=ta.falling(ma_coloured,2)
clrdirection:=ta.rising(ma_coloured,2)?1:falling_1?-1:nz(clrdirection[1],1)
//get3xMAtrenddirectionbasedonselections.
madirection=ma_fast>ma_mediumandma_medium>ma_slow?1:ma_fast<ma_mediumandma_medium<ma_slow?-1:0
madirection:=disableSlowMAFilter?ma_fast>ma_medium?1:ma_fast<ma_medium?-1:0:madirection
madirection:=disableMediumMAFilter?ma_fast>ma_slow?1:ma_fast<ma_slow?-1:0:madirection
madirection:=disableFastMAFilter?ma_medium>ma_slow?1:ma_medium<ma_slow?-1:0:madirection
madirection:=disableFastMAFilteranddisableMediumMAFilter?ma_coloured>ma_slow?1:-1:madirection
madirection:=disableFastMAFilteranddisableSlowMAFilter?ma_coloured>ma_medium?1:-1:madirection
madirection:=disableSlowMAFilteranddisableMediumMAFilter?ma_coloured>ma_fast?1:-1:madirection
//
//SupertrendCalculations
SUp=hl2-SFactor*ta.atr(SPd)
SDn=hl2+SFactor*ta.atr(SPd)
STrendUp=0.0
STrendDown=0.0
STrendUp:=close[1]>STrendUp[1]?math.max(SUp,STrendUp[1]):SUp
STrendDown:=close[1]<STrendDown[1]?math.min(SDn,STrendDown[1]):SDn
STrend=0
STrend:=close>STrendDown[1]?1:close<STrendUp[1]?-1:nz(STrend[1],1)
Tsl=STrend==1?STrendUp:STrendDown
//StandardBollingerorKCBands
basis=ta.sma(ma_src,bbLength)
rangema=ta.sma(ta.tr,bbLength)
stdev_1=ta.stdev(ma_src,bbLength)
dev=uKC?bbStddev*rangema:bbStddev*stdev_1
//CalculateBollingerorKCChannel
upper=basis+dev
lower=basis-dev
//Lookbackforprevioushighestbarindex
noiupper=math.abs(ta.highestbars(oiLength))
noilower=math.abs(ta.lowestbars(oiLength))
//ColouredMAOutsideIn
//oiupper=clrdirection<0andnoiupper>0andhighest(oiLength)>upper[noiupper]?1:0
//oilower=clrdirection>0andnoilower>0andlowest(oiLength)<lower[noilower]?1:0
//MACrossOutsideIN
oiMACrossupper=ta.crossunder(ma_fast,ma_coloured)andnoiupper>0andta.highest(oiLength)>upper[noiupper]?1:0
oiMACrosslower=ta.crossover(ma_fast,ma_coloured)andnoilower>0andta.lowest(oiLength)<lower[noilower]?1:0
//===/SERIESVARIABLES===
//===PLOTTING===
//AlltheMA's
//plot(ma_coloured,title='ColouredMA',color=clrdirection<0?lightcoral:color.blue,linewidth=3,transp=20)
//plot(hideMALines?na:ma_fast,title='FastMA',color=color.new(color.lime,20),linewidth=2)
//plot(hideMALines?na:ma_medium,title='MediumMA',color=color.new(color.red,10),linewidth=2)
//plot(hideMALines?na:ma_slow,title='SlowMA',color=color.new(color.gray,10),linewidth=2)
//show3xMATrendDirectionState.
dcolour=madirection==1?color.green:madirection==-1?color.red:color.yellow
//plotshape(hideTrendDirection?na:madirection,title='3xMATrendDirection',location=location.bottom,style=shape.square,color=dcolour,transp=10)
////SuperTrend
//plot(hideSuperTrend?na:Tsl,color=STrend==1?color.green:color.maroon,style=plot.style_line,linewidth=2,title='SuperTrend')
//BollingerBands
p1=plot(hideBollingerBands?na:upper,title='BBupper',color=color.new(dodgerblue,20),linewidth=1)
p2=plot(hideBollingerBands?na:lower,title='BBlower',color=color.new(dodgerblue,20),linewidth=1)
fill(p1,p2,color=color.new(dodgerblue,96),title='BBfill')
//===/PLOTTING===
//===ALERTING===
//3xMAFiltering
_3xmabuy=0
_3xmasell=0
_3xmabuy:=clrdirection==1andclose>ma_fastandmadirection==1?nz(_3xmabuy[1])+1:clrdirection==1andmadirection==1?nz(_3xmabuy[1])>0?nz(_3xmabuy[1])+1:0:0
_3xmasell:=clrdirection==-1andclose<ma_fastandmadirection==-1?nz(_3xmasell[1])+1:clrdirection==-1andmadirection==-1?nz(_3xmasell[1])>0?nz(_3xmasell[1])+1:0:0
//
//SuperTrendFiltering
stbuy=0
stsell=0
stbuy:=clrdirection==1andSTrend==1?nz(stbuy[1])+1:0
stsell:=clrdirection==-1andSTrend==-1?nz(stsell[1])+1:0
//
//3xMA&SuperTrendFiltering
//
st3xmabuy=0
st3xmasell=0
st3xmabuy:=(disable3xMAFilteror_3xmabuy>0)andstbuy>0?nz(st3xmabuy[1])+1:0
st3xmasell:=(disable3xMAFilteror_3xmasell>0)andstsell>0?nz(st3xmasell[1])+1:0
//BollingerOutsideInusingColuredMAdirectionFilter.
//oibuy=0
//oisell=0
//oibuy:=clrdirection==1andoilower==1?nz(oibuy[1])+1:0
//oisell:=clrdirection==-1andoiupper==1?nz(oisell[1])+1:0
//BollingerOutsideInusingMACrosssignalFilter
oiMACrossbuy=0
oiMACrosssell=0
oiMACrossbuy:=oiMACrosslower==1?nz(oiMACrossbuy[1])+1:0
oiMACrosssell:=oiMACrossupper==1?nz(oiMACrosssell[1])+1:0
//BollingerOutsideIn+3xMAFilter
oi3xmabuy=0
oi3xmasell=0
oi3xmabuy:=oiMACrossbuy>0and(disable3xMAFilterormadirection==1)?nz(oi3xmabuy[1])+1:0
oi3xmasell:=oiMACrosssell>0and(disable3xMAFilterormadirection==-1)?nz(oi3xmasell[1])+1:0
//BollingerOutsideIn+SuperTrendFilter
oistbuy=0
oistsell=0
oistbuy:=oiMACrossbuy>0andSTrend==1?nz(oistbuy[1])+1:0
oistsell:=oiMACrosssell>0andSTrend==-1?nz(oistsell[1])+1:0
//FastMAcrossoverHullMAandSuperTrend
macrossSTbuy=0
macrossSTsell=0
macrossSTbuy:=ta.crossover(ma_fast,ma_coloured)andSTrend==1?nz(macrossSTbuy[1])+1:0
macrossSTsell:=ta.crossunder(ma_fast,ma_coloured)andSTrend==-1?nz(macrossSTsell[1])+1:0
//FastMAcrossoverHullMAand3xMA
macross3xMAbuy=0
macross3xMAsell=0
macross3xMAbuy:=ta.crossover(ma_fast,ma_coloured)and(disable3xMAFilterormadirection==1)?nz(macross3xMAbuy[1])+1:0
macross3xMAsell:=ta.crossunder(ma_fast,ma_coloured)and(disable3xMAFilterormadirection==-1)?nz(macross3xMAsell[1])+1:0
//
//CheckanyAlertsset
long=u3xMATrendFilterand_3xmabuy==1oruSuperTrendFilterandstbuy==1oruBothTrendFiltersandst3xmabuy==1oruOI3xMAFilterandoi3xmabuy==1oruOISTFilterandoistbuy==1oruOIMACrossFilterandoiMACrossbuy==1oruMACrossSTFilterandmacrossSTbuy==1oruMACross3xMAFilterandmacross3xMAbuy==1
short=u3xMATrendFilterand_3xmasell==1oruSuperTrendFilterandstsell==1oruBothTrendFiltersandst3xmasell==1oruOI3xMAFilterandoi3xmasell==1oruOISTFilterandoistsell==1oruOIMACrossFilterandoiMACrosssell==1oruMACrossSTFilterandmacrossSTsell==1oruMACross3xMAFilterandmacross3xMAsell==1
//
//IfAlertDetected,thenDrawBigfatliner
plotshape(long?long:na,title='LongLineMarker',location=location.belowbar,style=shape.arrowup,color=buyclr,size=size.auto,text='█',textcolor=buyclr,transp=20)//size=size.auto,text='████████████████'
plotshape(short?short:na,title='ShortLineMarker',location=location.abovebar,style=shape.arrowdown,color=sellclr,size=size.auto,text='█',textcolor=sellclr,transp=20)//text='████████████████',
//---Arrowstylesignals
//NoFiltersonlyHullSignals
hbuy=0
hsell=0
hbuy:=clrdirection==1?nz(hbuy[1])+1:0
hsell:=clrdirection==-1?nz(hsell[1])+1:0
//FastMAcrossoverHullMA
macrossbuy=0
macrosssell=0
macrossbuy:=ta.crossover(ma_fast,ma_coloured)?nz(macrossbuy[1])+1:0
macrosssell:=ta.crossunder(ma_fast,ma_coloured)?nz(macrosssell[1])+1:0
//
along=disableAllFiltersandhbuy==1oruMACrossFilterandmacrossbuy==1
ashort=disableAllFiltersandhsell==1oruMACrossFilterandmacrosssell==1
//
//IfColouredMAorMACrossthendrawbigarrows
plotarrow(along?1:ashort?-1:na,title='ColouredMAorMACrossArrow',colorup=color.new(buyColour,20),colordown=color.new(sellColour,20),maxheight=100,minheight=50)
//--------------------------------RVWAP
importPineCoders/ConditionalAverages/1aspc
//————————————————————ConstantsandInputs{
//—————Constants
intMS_IN_MIN=60*1000
intMS_IN_HOUR=MS_IN_MIN*60
intMS_IN_DAY=MS_IN_HOUR*24
stringTT_SRC="ThesourceusedtocalculatetheVWAP.Thedefaultistheaverageofthehigh,lowandcloseprices."
stringTT_WINDOW="Bydefault,thetimeperiodusedtocalculatetheRVWAPautomaticallyadjustswiththechart'stimeframe.
Checkthistouseafixed-sizetimeperiodinstead,whichyoudefinewiththefollowingthreevalues."
stringTT_MINBARS="Theminimumnumberoflastvaluestokeepinthemovingwindow,evenifthesevaluesareoutsidethetimeperiod.
Thisavoidssituationswherealargetimegapbetweentwobarswouldcausethetimewindowtobeempty."
stringTT_STDEV="ThemultiplierforthestandarddeviationbandsoffsetaboveandbelowtheRVWAP.Example:1.0is100%oftheoffsetvalue.
\n\nNOTE:Avalueof0.0willhidethebands."
stringTT_TABLE="Displaysthetimeperiodoftherollingwindow."
//—————Inputs
floatsrcInput=input.source(hlc3,"Source",tooltip=TT_SRC)
stringGRP2='═══════════  TimePeriod  ═══════════'
boolfixedTfInput=input.bool(false,"Useafixedtimeperiod",group=GRP2,tooltip=TT_WINDOW)
intdaysInput=input.int(1,"Days",group=GRP2,minval=0,maxval=90)*MS_IN_DAY
inthoursInput=input.int(0,"Hours",group=GRP2,minval=0,maxval=23)*MS_IN_HOUR
intminsInput=input.int(0,"Minutes",group=GRP2,minval=0,maxval=59)*MS_IN_MIN
boolshowInfoBoxInput=input.bool(true,"Showtimeperiod",group=GRP2)
stringinfoBoxSizeInput=input.string("small","Size ",inline="21",group=GRP2,options=["tiny","small","normal","large","huge","auto"])
stringinfoBoxYPosInput=input.string("bottom","↕",inline="21",group=GRP2,options=["top","middle","bottom"])
stringinfoBoxXPosInput=input.string("left","↔",inline="21",group=GRP2,options=["left","center","right"])
colorinfoBoxColorInput=input.color(color.gray,"",inline="21",group=GRP2)
colorinfoBoxTxtColorInput=input.color(color.white,"T",inline="21",group=GRP2)
stringGRP3='═════════ DeviationBands ═════════'
floatstdevMult1=input.float(0.0,"BandsMultiplier1",group=GRP3,inline="31",minval=0.0,step=0.5,tooltip=TT_STDEV)
floatstdevMult2=input.float(0.0,"BandsMultiplier2",group=GRP3,inline="32",minval=0.0,step=0.5,tooltip=TT_STDEV)
floatstdevMult3=input.float(0.0,"BandsMultiplier3",group=GRP3,inline="33",minval=0.0,step=0.5,tooltip=TT_STDEV)
colorstdevColor1=input.color(color.green,"",group=GRP3,inline="31")
colorstdevColor2=input.color(color.yellow,"",group=GRP3,inline="32")
colorstdevColor3=input.color(color.red,"",group=GRP3,inline="33")
stringGRP4='════════ MinimumWindowSize ════════'
intminBarsInput=input.int(10,"Bars",group=GRP4,tooltip=TT_MINBARS)
//}
//————————————————————Functions{
//@functionDeterminesatimeperiodfromthechart'stimeframe.
//@returns(int)Avalueoftimeinmillisecondsthatisappropriateforthecurrentcharttimeframe.TobeusedintheRVWAPcalculation.
timeStep()=>
inttfInMs=timeframe.in_seconds()*1000
floatstep=
switch
tfInMs<=MS_IN_MIN=>MS_IN_HOUR
tfInMs<=MS_IN_MIN*5=>MS_IN_HOUR*4
tfInMs<=MS_IN_HOUR=>MS_IN_DAY*1
tfInMs<=MS_IN_HOUR*4=>MS_IN_DAY*3
tfInMs<=MS_IN_HOUR*12=>MS_IN_DAY*7
tfInMs<=MS_IN_DAY=>MS_IN_DAY*30.4375
tfInMs<=MS_IN_DAY*7=>MS_IN_DAY*90
=>MS_IN_DAY*365
intresult=int(step)
//@functionProducesastringcorrespondingtotheinputtimeindays,hours,andminutes.
//@param(seriesint)Atimevalueinmillisecondstobeconvertedtoastringvariable.
//@returns(string)Astringvariablereflectingtheamountoftimefromtheinputtime.
tfString(inttimeInMs)=>
ints=timeInMs/1000
intm=s/60
inth=m/60
inttm=math.floor(m%60)
intth=math.floor(h%24)
intd=math.floor(h/24)
stringresult=
switch
d==30andth==10andtm==30=>"1M"
d==7andth==0andtm==0=>"1W"
=>
stringdStr=d?str.tostring(d)+"D":""
stringhStr=th?str.tostring(th)+"H":""
stringmStr=tm?str.tostring(tm)+"min":""
dStr+hStr+mStr
//}
//————————————————————CalculationsandPlots{
//Stoptheindicatoronchartswithnovolume.
ifbarstate.islastandta.cum(nz(volume))==0
runtime.error("Novolumeisprovidedbythedatavendor.")
//RVWAP+stdevbands
inttimeInMs=fixedTfInput?minsInput+hoursInput+daysInput:timeStep()
floatsumSrcVol=pc.totalForTimeWhen(srcInput*volume,timeInMs,true,minBarsInput)
floatsumVol=pc.totalForTimeWhen(volume,timeInMs,true,minBarsInput)
floatsumSrcSrcVol=pc.totalForTimeWhen(volume*math.pow(srcInput,2),timeInMs,true,minBarsInput)
floatrollingVWAP=sumSrcVol/sumVol
floatvariance=sumSrcSrcVol/sumVol-math.pow(rollingVWAP,2)
variance:=math.max(0,variance)
floatstDev=math.sqrt(variance)
floatupperBand1=rollingVWAP+stDev*stdevMult1
floatlowerBand1=rollingVWAP-stDev*stdevMult1
floatupperBand2=rollingVWAP+stDev*stdevMult2
floatlowerBand2=rollingVWAP-stDev*stdevMult2
floatupperBand3=rollingVWAP+stDev*stdevMult3
floatlowerBand3=rollingVWAP-stDev*stdevMult3
plot(rollingVWAP,"RollingVWAP",color.orange)
p11=plot(stdevMult1!=0?upperBand1:na,"UpperBand1",stdevColor1)
p22=plot(stdevMult1!=0?lowerBand1:na,"LowerBand1",stdevColor1)
p3=plot(stdevMult2!=0?upperBand2:na,"UpperBand2",stdevColor2)
p4=plot(stdevMult2!=0?lowerBand2:na,"LowerBand2",stdevColor2)
p5=plot(stdevMult3!=0?upperBand3:na,"UpperBand3",stdevColor3)
p6=plot(stdevMult3!=0?lowerBand3:na,"LowerBand3",stdevColor3)
fill(p11,p22,color.new(color.green,95),"BandsFill")
fill(p3,p4,color.new(color.green,95),"BandsFill")
fill(p5,p6,color.new(color.green,95),"BandsFill")
//Displayoftimeperiod.
vartabletfDisplay=table.new(infoBoxYPosInput+"_"+infoBoxXPosInput,1,1)
ifshowInfoBoxInputandbarstate.islastconfirmedhistory
table.cell(tfDisplay,0,0,tfString(timeInMs),bgcolor=infoBoxColorInput,text_color=infoBoxTxtColorInput,text_size=infoBoxSizeInput)
//}
//----------InputBannos----------------------------------------------------------------------------------------------------------//
vartriggerlong=0
vartriggershort=0
varup=0
vardown=0
varboollonge=0
varboolshorte=0
varSL=0
varentryvalueup=0.00
varentryvaluedown=0.00
varSLup=0.00
varSLdown=0.00
varlongbuffer=0
varshortbuffer=0
varlastredlow=0.0
varlastgreenhigh=0.0
spikefactor=input.float(1.9,minval=0,title='Spikefactor')
slfactor=input.float(1.5,minval=0,title='Slfactor')
oscfactor=input.float(1.9,minval=0,title='oscfactor')
amafactor=input.float(0.66,minval=0,title='amafactor')
varVWAP=rollingVWAP
lasthigh=ta.highest(close,100)
lastlow=ta.lowest(close,100)
smma6=ta.sma(close,10)
//RSIparameters
overbought=input(77,title="overboughtvalue")
oversold=input(26,title="oversoldvalue")
sellRsi=ta.rsi(close,14)>overbought
buyRsi=ta.rsi(close,14)<oversold
vartampon_overbought=0
vartampon_oversold=0
//conditiontouseRSI
ifsellRsi
tampon_overbought:=1
ifbuyRsi
tampon_oversold:=1

//closeconditionSL
ifentryvalueup>0andlow<SLup
SL:=1

ifentryvaluedown>0andhigh>SLdown
SL:=1
//ChaikinVolatilityStrategyindicatorifVolatility>0thenLongorshort,otherweiseno
Length=input.int(10,'',minval=1)
ROCLength=input.int(12,'',minval=1)
Trigger=input.int(0,'',minval=0)
hline(0)
hline(Trigger)
xPrice1=high
xPrice2=low
xPrice=xPrice1-xPrice2
xROC_EMA=ta.roc(ta.ema(xPrice,Length),ROCLength)
varpos=0
ifxROC_EMA<Trigger
pos:=1
nz(pos[1],0)
ifxROC_EMA>Trigger
pos:=-1
nz(pos[1],0)
//---------------------VolatilityOscillator
lengthh=input(100)
spike=close-open
x=ta.stdev(spike,lengthh)
y=ta.stdev(spike,lengthh)*-1
//plot(spike,color=color.new(color.white,0),linewidth=2,title='SpikeLinel')
//p111=plot(x,'UpperLine')
//p222=plot(y,'LowerLine')
//plot(0,color=color.new(color.gray,0),title='ZeroLine')
//plot(spike,color=color.new(color.blue,80),style=plot.style_area,title='SpikeFill')
osc2=spike
lbR=5
lbL=5
rangeUpper=60
rangeLower=5
plotBull=input(title='PlotBullish',defval=true)
plotHiddenBull=input(title='PlotHiddenBullish',defval=false)
plotBear=input(title='PlotBearish',defval=true)
plotHiddenBear=input(title='PlotHiddenBearish',defval=false)
delay_plot_til_closed=input(title='Delaydiversionplotuntilcandleisclosed(don\'trepaint)',defval=false)
bearColor=color.red
bullColor=color.green
hiddenBullColor=color.new(color.green,80)
hiddenBearColor=color.new(color.red,80)
textColor=color.white
noneColor=color.new(color.white,100)
repaint=notdelay_plot_til_closedorbarstate.ishistoryorbarstate.isconfirmed
plFound=na(ta.pivotlow(osc2,lbL,lbR))?false:true
phFound=na(ta.pivothigh(osc2,lbL,lbR))?false:true
_inRange(cond)=>
bars=ta.barssince(cond==true)
rangeLower<=barsandbars<=rangeUpper
//------------------------------------------------------------------------------
//RegularBullish
//Osc:HigherLow
oscHL=osc2[lbR]>ta.valuewhen(plFound,osc2[lbR],1)and_inRange(plFound[1])
//Price:LowerLow
priceLL=low[lbR]<ta.valuewhen(plFound,low[lbR],1)
bullCond=plotBullandpriceLLandoscHLandplFoundandrepaint
//plotshape(bullCond?osc2[lbR]:na,offset=-lbR,title='RegularBullishLabel',text='R',style=shape.labelup,location=location.absolute,color=color.new(bullColor,0),textcolor=color.new(textColor,0))
//------------------------------------------------------------------------------
//HiddenBullish
//Osc:LowerLow
oscLL=osc2[lbR]<ta.valuewhen(plFound,osc2[lbR],1)and_inRange(plFound[1])
//Price:HigherLow
priceHL=low[lbR]>ta.valuewhen(plFound,low[lbR],1)
hiddenBullCond=plotHiddenBullandpriceHLandoscLLandplFoundandrepaint
//plotshape(hiddenBullCond?osc2[lbR]:na,offset=-lbR,title='HiddenBullishLabel',text='H',style=shape.labelup,location=location.absolute,color=color.new(bullColor,0),textcolor=color.new(textColor,0))
//------------------------------------------------------------------------------
//RegularBearish
//Osc:LowerHigh
oscLH=osc2[lbR]<ta.valuewhen(phFound,osc2[lbR],1)and_inRange(phFound[1])
//Price:HigherHigh
priceHH=high[lbR]>ta.valuewhen(phFound,high[lbR],1)
bearCond=plotBearandpriceHHandoscLHandphFoundandrepaint
//plotshape(bearCond?osc2[lbR]:na,offset=-lbR,title='RegularBearishLabel',text='R',style=shape.labeldown,location=location.absolute,color=color.new(bearColor,0),textcolor=color.new(textColor,0))
//------------------------------------------------------------------------------
//HiddenBearish
//Osc:HigherHigh
oscHH=osc2[lbR]>ta.valuewhen(phFound,osc2[lbR],1)and_inRange(phFound[1])
//Price:LowerHigh
priceLH=high[lbR]<ta.valuewhen(phFound,high[lbR],1)
hiddenBearCond=plotHiddenBearandpriceLHandoscHHandphFoundandrepaint
//plotshape(hiddenBearCond?osc2[lbR]:na,offset=-lbR,title='HiddenBearishLabel',text='H',style=shape.labeldown,location=location.absolute,color=color.new(bearColor,0),textcolor=color.new(textColor,0))
//barcolor(color=spike>0?color.green:color.red)
//-----------------------------------------------------------------------------
//plot(xROC_EMA,title="ChaikinVolatilityStrategy")
//plot(longe?1:0,'longe')
//plot(shorte?1:0,'shorte')
//plot(entryvalueup,'entrryvalueup')
//plot(entryvaluedown,'entrryvaluedown')
//plot(up,'up')
//plot(down,'down')
//plot(ta.rsi(close,11),'RSI')
//plot(tampon_overbought,'tamponOverbought')
//plot(tampon_oversold,'tamponOversold')
//plot(triggerlong,'triggerlong')
//plot(triggershort,'triggershort')
//plot(sellRsi?1:0,'sellRsi')
//closeconditionTP
closelong=(tampon_overbought==1andta.rsi(close,14)<59)orSL==1or(osc*oscfactor<amaandama>0andama>amafactor)
closeshort=(tampon_oversold==1andta.rsi(close,14)>41)orSL==1or(osc*oscfactor>amaandama<0andama<amafactor)
//reinitafterlongClose
ifcloselong
up:=0
longe:=0
tampon_overbought:=0
triggerlong:=0
SL:=0
entryvalueup:=0
SLup:=0

//reinitaftershortClose
ifcloseshort
down:=0
shorte:=0
tampon_oversold:=0
triggershort:=0
SL:=0
entryvaluedown:=0
SLdown:=0


//conditionsoussurMASLOWtostart
ifvarVWAP<ma_medium
triggerlong:=0
triggershort:=1

ifvarVWAP>ma_medium
triggershort:=0
triggerlong:=1
//Updatealarmconditions
iflongoralong
longbuffer:=1
shortbuffer:=0
ifshortorashort
shortbuffer:=1
longbuffer:=0
longe:=triggerlongandlongbufferandxROC_EMA>-9andspike>x*spikefactorand(osc==1orosc[1]==1)andosc[4]<0
shorte:=triggershortandshortbufferandxROC_EMA>-9andspike<y*spikefactorand(osc==-1orosc[1]==-1)andosc[4]>0
////varlonge=long?1:0
////varshorte=short?1:0
iflonge==1andclose>open
up:=1
down:=0
entryvalueup:=close
SLup:=close-slfactor*(high-low)//close-1.4/100*close//0.7*(high-low)
SLdown:=0
longbuffer:=0
ifshorte==1andclose<open
down:=1
up:=0
entryvaluedown:=close
SLdown:=close+slfactor*(high-low)//close+1.4/100*close//0.7*(high-low)
SLup:=0
shortbuffer:=0
strategy.entry('longe',strategy.long,1000.0,when=up)
strategy.entry('shorte',strategy.short,1000.0,when=down)
strategy.close('longe',when=closelong)
strategy.close('shorte',when=closeshort)
plot(entryvalueup,'entreeLong',color.green)
plot(SLup,'SLLong',color.red)
plot(entryvaluedown,'entreeShort',color.green)
plot(SLdown,'SLShort',color.red)
//===/ALERTING===
//===ALARMS===
//
alertcondition(up,title='LongAlert',message='LONG')
alertcondition(down,title='ShortAlert',message='SHORT')
alertcondition(closelong,title='closeLongAlert',message='CloseLONG')
alertcondition(closeshort,title='closeShortAlert',message='CloseSHORT')
//===/ALARMS===
//EOF
Expand (1004 lines)
