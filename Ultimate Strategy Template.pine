Script Name: Ultimate Strategy Template
Author: Daveatt
Description: Hello Traders

As most of you know, I'm a member of the  PineCoders community  and I sometimes take freelance pine coding jobs for TradingView users.

Off the top of my head, users often want to:

- convert an indicator into a strategy, so as to get the backtesting statistics from TradingView
- add alerts to their indicator/strategy
- develop a generic strategy...
PineScript code:

Pine Script™ strategy
Ultimate Strategy Template
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  Daveatt
//  @version=4
//  https://www.tradingview.com/blog/en/use-an-input-from-another-indicator-with-your-strategy-19584/
SystemName  =  "BEST  Strategy  Template"
TradeId  =  "DAVE"
//  These  values  are  used  both  in  the  strategy()  header  and  in  the  script's  relevant  inputs  as  default  values  so  they  match.
//  Unless  these  values  match  in  the  script's  Inputs  and  the  TV  backtesting  Properties,  results  between  them  cannot  be  compared.
InitCapital  =  1000000
InitPosition  =  10.0
InitCommission  =  0.075
InitPyramidMax  =  3
CalcOnorderFills  =  true
strategy(title=SystemName,  shorttitle=SystemName,
  overlay=true,  pyramiding=InitPyramidMax,  initial_capital=InitCapital,  default_qty_type=strategy.percent_of_equity,
  default_qty_value=InitPosition,  commission_type=strategy.commission.percent,  commission_value=InitCommission,  calc_on_order_fills=CalcOnorderFills,
  precision=6,  max_lines_count=500,  max_labels_count=500)
//  —————  You  capture  the  Source  of  your  indicator  here
ext_source_  =  input(close,  type=input.source,  title="Data  source")
//  Custom  close  signal
custom_close  =  input(false,  title="Use  Custom  Close?")
//  —————  Bar  Coloring
clrBars  =  input(true,title="Colour  Candles  to  Trade  Order  state")
CloseSession  =  input(false,  title="Close  positions  at  market  at  the  end  of  each  session  ?")
Session  =  input(title="Trading  Session",  type=input.session,  defval="0000-2345")
OpenDirection    =  input(defval="ALL",  title="Open    Trading  Direction",  options=["ALL",  "LONG",  "SHORT"])
CloseDirection  =  input(defval="ALL",  title="Close  Trading  Direction",  options=["ALL",  "LONG",  "SHORT"])
closeOnOpposite  =  input(true,  title="Close  on  Opposite  Signal")
//  —————  Date  range  filtering
DateFilter  =  input(false,  "═════════════  Date  Range  Filtering")
//  —————  Syntax  coming  from  https://www.tradingview.com/blog/en/new-parameter-for-date-input-added-to-pine-21812/
i_startTime  =  input(defval  =  timestamp("01  Jan  2019  13:30  +0000"),  title  =  "Start  Time",  type  =  input.time)
i_endTime  =  input(defval  =  timestamp("30  Dec  2021  23:30  +0000"),  title  =  "End  Time",  type  =  input.time)
TradeDateIsAllowed()  =>  DateFilter  ?  time  >=  i_startTime  and  time  <=  i_endTime  :  true
//  —————  Set  the  max  losing  streak  length  with  an  input
setmaxLosingStreak  =  input(title="═════════════  Set  Max  number  of  consecutive  loss  trades",  type=input.bool,  defval=false)
maxLosingStreak  =  input(title="Max  of  consecutive  loss  trades",  type=input.integer,  defval=15,  minval=1)
setmaxWinStreak  =  input(title="═════════════  Set  Max  number  of  consecutive  won  trades",  type=input.bool,  defval=false)
maxWinStreak  =  input(title="Max  Winning  Streak  Length",  type=input.integer,  defval=15,  minval=1)
//  —————  Set  the  max  consecutive  days  with  a  loss
setmaxLosingDaysStreak  =  input(title="═════════════  Set  MAX  consecutive  days  with  a  loss  in  a  row",  type=input.bool,  defval=false)
maxLosingDaysStreak  =  input(title="Max  of  consecutive  days  with  a  loss  in  a  row",  type=input.integer,  defval=3,  minval=1)
setMaxDrawdown  =  input(title="═════════════  Set  Max  Total  DrawDown",  type=input.bool,  defval=false)
//  —————  Input  for  the  strategy's  maximum  drawdown  (in  %  of  strategy  equity)
maxPercDd  =  input(title="Max  Drawdown  (%)",  type=input.integer,  defval=10,  minval=1,  maxval=100)
setMaxIntradayLoss  =  input(title="═════════════  Set  Max  Intraday  Loss",  type=input.bool,  defval=false)
//  —————  Input  for  the  strategy's  maximum  intraday  loss  (in  %  of  strategy  equity)
maxIntradayLoss  =  input(title="Max  Intraday  Loss  (%)",  type=input.integer,  defval=3,  minval=1,  maxval=100)
setNumberDailyTrades  =  input(title="═════════════  Limit  the  number  of  trades  per  day",  type=input.bool,  defval=false)
maxDailyTrades  =  input(title="Number  MAX  of  daily  trades",  type=input.integer,  defval=10,  minval=1,  maxval=100)
setNumberWeeklyTrades  =  input(title="═════════════  Limit  the  number  of  trades  per  week",  type=input.bool,  defval=false)
maxWeeklyTrades  =  input(title="Number  MAX  of  weekly  trades",  type=input.integer,  defval=50,  minval=1,  maxval=100)
//  —————  Stop  loss  management
StopType                =  input(title="═════════════  Stop  Type  Selection",  defval="None",  options=["None",  "Percent",  "Trailing",  "ATR"])
//  —————  Percent
LossPerc                =  input(title="Stop  Loss  (%)",  type=input.float,  minval=0.0,  step=0.5,  defval=1)  *  0.01
TrailPerc              =  input(title="Trail  Stop  Loss  (%)",  type=input.float,  minval=0.0,  step=0.5,  defval=3)  *  0.01
//  —————  ATR
atrStopLength      =  input(title="═════════════  ATR  Stop  Length",  type=input.integer,  defval=14)
riskRatioATR        =  input(defval=1,  title="[ATR  ONLY]  Risk  Ratio",      type=input.float,step=0.10)
//  —————  Take  Profit
TakeProfitType  =  input(title="════  Take  Profit  Type  Selection",  defval="None",  options=["None",  "Percent",  "ATR"])
//  —————  Percent
ProfitPerc  =  input(title="Take  Profit  (%)",  type=input.float,  minval=0.0,  step=0.5,  defval=3)  *  0.01
//  —————  ATR
atrTakeProfitLength      =  input(title="══════  ATR  Take  Profit  Length",  type=input.integer,  defval=14)
rewardRatioATR                =  input(defval=2,  title="[ATR  ONLY]  Reward  Ratio",  type=input.float,step=0.10)
//  global  variables  from  PineCoders
//  —————  Colors
MyGreenRaw  =  color.new(color.lime,0),                          MyGreenMedium  =  color.new(#00b300,0),              MyGreenSemiDark  =  color.new(#009900,0),          MyGreenDark  =  color.new(#006600,0),                  MyGreenDarkDark  =  color.new(#003300,0)
MyRedRaw  =  color.new(color.red,0),                                MyRedMedium  =  color.new(#cc0000,0),                  MyRedSemiDark  =  color.new(#990000,0),              MyRedDark  =  color.new(#330000,0),                      MyRedDarkDark  =  color.new(#330000,0)
MyFuchsiaRaw  =  color.new(color.fuchsia,0),                MyFuchsiaMedium  =  color.new(#c000c0,0),          MyFuchsiaDark  =  color.new(#800080,0),              MyFuchsiaDarkDark  =  color.new(#400040,0)
MyYellowRaw    =  color.new(color.yellow,0),                  MyYellowMedium    =  color.new(#c0c000,0),          MyYellowDark    =  color.new(#808000,0),              MyYellowDarkDark    =  color.new(#404000,0)
MyOrangeRaw  =  color.new(#ffa500,0),                              MyOrangeMedium  =  color.new(#cc8400,0),            MyOrangeDark  =  color.new(#996300,0)
MyBlueRaw      =  color.new(#4985E7,0),                              MyBlueMedium      =  color.new(#4985E7,0)
MyGreenBackGround  =  color.new(#00FF00,93),                MyRedBackGround  =  color.new(#FF0000,90)
BIG_NUMBER_COUNT  =  1000

//  variables  initialisation
ext_source  =  nz(ext_source_)
//  1  is  bull  signal
bull  =  (ext_source  ==  1)
//  -1  is  bear  signal
bear  =  (ext_source  ==  -1)
//  2  exit  custom  close  long
exit_bull  =  custom_close  and  (ext_source  ==  2)
//  -2  exit  custom  close  short
exit_bear  =  custom_close  and  (ext_source  ==  -2)
//  Entry  Price
entry_price  =  valuewhen(condition=bear  or  bull,  source=close,  occurrence=0)
//  —————  RISK  MANAGEMENT
condintradayloss  =  (setMaxIntradayLoss)  ?  maxIntradayLoss  :  100
strategy.risk.max_intraday_loss(value=condintradayloss,  type=strategy.percent_of_equity)
condmaxdrawdown  =  (setMaxDrawdown)  ?  maxPercDd  :  100
strategy.risk.max_drawdown(value=condmaxdrawdown,  type=strategy.percent_of_equity)
//  daily  trades  calculation
oktoTradeDaily  =  true
tradesIntradayCount  =  (setNumberDailyTrades)  ?  maxDailyTrades  :  BIG_NUMBER_COUNT
strategy.risk.max_intraday_filled_orders(count=tradesIntradayCount)
//  weekly  trades  calculation
tradesLastWeek  =  0
tradesLastWeek  :=  if  (dayofweek  ==  dayofweek.monday)  and  (dayofweek  !=  dayofweek[1])
        strategy.closedtrades[1]  +  strategy.opentrades[1]
else
        tradesLastWeek[1]
//  Calculate  number  of  trades  this  week
weeklyTrades  =  (strategy.closedtrades  +  strategy.opentrades)  -  tradesLastWeek
okToTradeWeekly  =  (setNumberWeeklyTrades)  ?  (weeklyTrades  <  maxWeeklyTrades)  :  true
//  consecutive  loss  days  in  a  row
countConsLossDays  =  (setmaxLosingDaysStreak)  ?  maxLosingDaysStreak  :  BIG_NUMBER_COUNT
strategy.risk.max_cons_loss_days(countConsLossDays)
//  Calculate  the  total  losing  streaks
//  Check  if  there's  a  new  losing  trade  that  increased  the  streak
newLoss  =  (strategy.losstrades  >  strategy.losstrades[1])  and
          (strategy.wintrades  ==  strategy.wintrades[1])  and
          (strategy.eventrades  ==  strategy.eventrades[1])

//  Determine  current  losing  streak  length
streakLossLen  =  0
streakLossLen  :=  if  (newLoss)
        nz(streakLossLen[1])  +  1
else
        if  (strategy.wintrades  >  strategy.wintrades[1])  or
                  (strategy.eventrades  >  strategy.eventrades[1])
                0
        else
                nz(streakLossLen[1])
//  Check  if  losing  streak  is  under  max  allowed
okToTradeLossStreak  =  (setmaxLosingStreak)  ?  streakLossLen  <  maxLosingStreak  :  true
//  Calculate  the  total  winning  streaks
//  See  if  there's  a  new  winner  that  increased  the  streak
newWin  =  (strategy.wintrades  >  strategy.wintrades[1])  and
          (strategy.losstrades  ==  strategy.losstrades[1])  and
          (strategy.eventrades  ==  strategy.eventrades[1])
//  Figure  out  current  winning  streak  length
streakWinLen  =  0
streakWinLen  :=  if  (newWin)
        nz(streakWinLen[1])  +  1
else
        if  (strategy.losstrades  >  strategy.losstrades[1])  or
                  (strategy.eventrades  >  strategy.eventrades[1])
                0
        else
                nz(streakWinLen[1])
//  Check  if  winning  streakisundermaxallowed
okToTradeWinStreak=(setmaxWinStreak)?streakWinLen<maxWinStreak:true
//Stoplossmanagement
longPercStopPrice=strategy.position_avg_price*(1-LossPerc)
shortPercStopPrice=strategy.position_avg_price*(1+LossPerc)
//trailing
//Determinetrailstoplossprices
longTrailStopPrice=0.0,shortTrailStopPrice=0.0
final_SL_Long=0.0,final_SL_Short=0.0
longTrailStopPrice:=if(strategy.position_size>0)
stopValue=close*(1-TrailPerc)
max(stopValue,longTrailStopPrice[1])
else
0
shortTrailStopPrice:=if(strategy.position_size<0)
stopValue=close*(1+TrailPerc)
min(stopValue,shortTrailStopPrice[1])
else
999999
useSL=StopType!="None"
use_SL_Percent=StopType=="Percent"
use_SL_Trail=StopType=="Trailing"
use_SL_ATR=StopType=="ATR"
//UsethisfunctiontoreturnthecorrectpipvalueforpipsonForexsymbols
pip()=>syminfo.mintick*(syminfo.type=="forex"?10:1)
//ATR
//Functionatr(averagetruerange)returnstheRMAoftruerange.
//Truerangeismax(high-low,abs(high-close[1]),abs(low-close[1]))
atr_stop=atr(atrStopLength)
atr_tp=atr(atrTakeProfitLength)
//ATRusedforRisk:Reward
RR_STOP_ATR=0.0,RR_STOP_ATR:=nz(RR_STOP_ATR[1])
RR_TP_ATR=0.0,RR_TP_ATR:=nz(RR_TP_ATR[1])
//Capturigtheatrvalueatsignaltimeonly
ifbullorbear
RR_STOP_ATR:=atr_stop
RR_TP_ATR:=atr_tp
final_SL_Long:=ifuse_SL_Percent
longPercStopPrice
elseifuse_SL_Trail
longTrailStopPrice
elseifuse_SL_ATR
entry_price-(RR_STOP_ATR*riskRatioATR)
final_SL_Short:=ifuse_SL_Percent
shortPercStopPrice
elseifuse_SL_Trail
shortTrailStopPrice
elseifuse_SL_ATR
entry_price+(RR_STOP_ATR*riskRatioATR)
//Plotstoplossvaluesforconfirmation
plot(series=(strategy.position_size>0anduseSL)?final_SL_Long:na,
color=color.red,style=plot.style_cross,
linewidth=2,title="LongStopLoss")
plot(series=(strategy.position_size<0anduseSL)?final_SL_Short:na,
color=color.red,style=plot.style_cross,
linewidth=2,title="ShortStopLoss")
//UsedfordebugandchecktheATRSLvalue
plot(use_SL_ATRandstrategy.position_size!=0?RR_STOP_ATR*riskRatioATR:na,
color=color.red,transp=100,title="ATRStopValue")
//TakeProfitManangement
useTakeProfit=TakeProfitType!="None"
use_TP_Percent=TakeProfitType=="Percent"
use_TP_ATR=TakeProfitType=="ATR"
TPlongPrice=use_TP_Percent
?strategy.position_avg_price*(1+ProfitPerc)
:strategy.position_avg_price+(RR_TP_ATR*rewardRatioATR)
TPshortPrice=use_TP_Percent?
strategy.position_avg_price*(1-ProfitPerc)
:strategy.position_avg_price-(RR_TP_ATR*rewardRatioATR)
//Plottakeprofitvaluesforconfirmation
plot(series=(strategy.position_size>0anduseTakeProfit)?TPlongPrice:na,
color=color.green,style=plot.style_circles,
linewidth=3,title="LongTakeProfit")
plot(series=(strategy.position_size<0anduseTakeProfit)?TPshortPrice:na,
color=color.red,style=plot.style_circles,
linewidth=3,title="ShortTakeProfit")
//UsedfordebugandchecktheATRTPvalue
plot(use_TP_ATRandstrategy.position_size!=0?RR_TP_ATR*rewardRatioATR:na,
color=color.green,transp=100,title="ATRTPValue")
//Sessioncalculations
//TheBarInSessionfunctionreturnstruewhen
//thecurrentbarisinsidethesessionparameter
BarInSession(sess)=>time(timeframe.period,sess)!=0
in_session=BarInSession(Session)
okToTradeInSession=CloseSession?in_session:true
new_session=in_sessionandnotin_session[1]
bgcolor(color=(CloseSessionandBarInSession(Session)[1])?color.green:na,
title="TradingSession",transp=85)
//consolidationoftheconditions
okToTrade=okToTradeWeeklyandokToTradeLossStreakandokToTradeWinStreak
andTradeDateIsAllowed()andokToTradeInSession//andTradeHourlyIsAllowed()
//Orderspart
longs_opened=strategy.position_size>0
shorts_opened=strategy.position_size<0
trades_opened=strategy.position_size!=0
longs_opened_in_session=CloseSessionandlongs_opened
shorts_opened_in_session=CloseSessionandshorts_opened
//trades_opened_in_session=CloseSessionandtrades_opened
open_all=OpenDirection=="ALL"
open_all_longs=OpenDirection!="SHORT"
open_all_shorts=OpenDirection!="LONG"
//Golong
longCondition=bull
if(longConditionandokToTradeandokToTradeInSessionandopen_all_longs)
strategy.entry("Long",strategy.long,alert_message="{{ticker}}LongSignal-EntryPrice:"+tostring(close)+"Timeframe:{{interval}}")
alert(syminfo.tickerid+"LongSignal-EntryPrice:"+tostring(close)+"Timeframe:"+timeframe.period,alert.freq_once_per_bar_close)

//GoShort
shortCondition=bear
if(shortConditionandokToTradeandokToTradeInSessionandopen_all_shorts)
strategy.entry("Short",strategy.short,alert_message="{{ticker}}ShortSignal-EntryPrice:"+tostring(close)+"Timeframe:{{interval}}")
alert(syminfo.tickerid+"ShortSignal-EntryPrice:"+tostring(close)+"Timeframe:"+timeframe.period,alert.freq_once_per_bar_close)
//ExecuteExits
ifcloseOnOppositeandstrategy.position_size>0andshortCondition//andopen_all_shorts
strategy.close(id="Long",alert_message="{{ticker}}ShortSignal-CloseLongSignal-Timeframe:{{interval}}",comment="ShortSignal\nCloseLong")
ifcloseOnOppositeandstrategy.position_size<0andlongCondition//andopen_all_longs
strategy.close(id="Short",alert_message="{{ticker}}LongSignal-CloseShortSignal-Timeframe:{{interval}}",comment="LongSignal\nCloseShort")
//Customclose
if(strategy.position_size>0andexit_bull)
strategy.close(id="Long",alert_message="{{ticker}}CustomCloseLongSignal-Timeframe:{{interval}}",comment="CustomCloseSignal\nCloseLong")
alert(syminfo.tickerid+"CustomCloseLongSignal-EntryPrice:"+tostring(close)+"Timeframe:"+timeframe.period,alert.freq_once_per_bar_close)
if(strategy.position_size<0andexit_bear)
strategy.close(id="Short",alert_message="{{ticker}}CustomCloseShortSignal-Timeframe:{{interval}}",comment="CustomCloseSignal\nCloseShort")
alert(syminfo.tickerid+"CustomCloseShortSignal-EntryPrice:"+tostring(close)+"Timeframe:"+timeframe.period,alert.freq_once_per_bar_close)
close_all=CloseDirection=="ALL"
close_all_longs=CloseDirection!="SHORT"
close_all_shorts=CloseDirection!="LONG"
if(strategy.position_size>0andclose_all_longs)
strategy.exit(id="ExitLong",from_entry="Long",stop=(useSL)?final_SL_Long:na,limit=(useTakeProfit)?TPlongPrice:na,alert_message="{{ticker}}CloseLongSignal-Timeframe:{{interval}}")
alert(syminfo.tickerid+"ExitLongSignal-ExitPrice:"+tostring(close)+"Timeframe:"+timeframe.period,alert.freq_once_per_bar_close)
if(strategy.position_size<0andclose_all_shorts)
strategy.exit(id="ExitShort",from_entry="Short",stop=(useSL)?final_SL_Short:na,limit=(useTakeProfit)?TPshortPrice:na,alert_message="{{ticker}}CloseShortSignal-Timeframe:{{interval}}")
alert(syminfo.tickerid+"ExitShortSignal-ExitPrice:"+tostring(close)+"Timeframe:"+timeframe.period,alert.freq_once_per_bar_close)
////CloseallLongsonly
//ifnotokToTradeInSessionandclose_all_longsandlongs_opened_in_session
//strategy.close(id="Long")
////CloseallShortsonly
//ifnotokToTradeInSessionandclose_all_shortsandshorts_opened_in_session
//strategy.close(id="Short")
//Closeallpositionsattheendofeachsessionregardelessoftheirprofit/loss
ifnotokToTradeInSessionandclose_allandtrades_opened
strategy.close_all()
//Flattenstrategywhenmaxlosingstreakisreached
close_strat=notokToTradeWeeklyornotokToTradeLossStreakornotokToTradeWinStreakornotTradeDateIsAllowed()
if(close_strat)
//closeallexistingorders
strategy.close_all()
//Colourcodethecandles
bclr=notclrBars?na:strategy.position_size==0?color.gray:
longs_opened?color.lime:
shorts_opened?color.red:color.gray
barcolor(bclr,title="TradeStateBarColouring")
Expand (389 lines)
