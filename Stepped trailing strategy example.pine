Script Name: Stepped trailing strategy example
Author: adolgov
Description: This is a stepped trailing exit example for  educational purpose .

 Short brief.
There are 1 stop loss and 3 profit levels.

 When first tp is reached we move stop loss to break-even.
 When second tp is reached we move stop loss to first tp.
 When third tp is reached we exit by profit.
PineScript code:

Pine Script™ strategy
Stepped trailing strategy example
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  adolgov
//  @description
//-------------------------------------------------
//  activateTrailingOnThirdStep  ==  false  (default)
//    -  when  tp1  is  reached,  sl  is  moved  to  break-even
//    -  when  tp2  is  reached,  sl  is  moved  to  tp1
//    -  when  tp3  is  reached  -  exit
//-------------------------------------------------
//  activateTrailingOnThirdStep  ==  true
//    -  when  tp1  is  reached,  sl  is  moved  to  break-even
//    -  when  tp2  is  reached,  sl  is  moved  to  tp1  and  trailing  stop  is  activated  with  tp2  amount  level  and  tp1  offset  level
//-------------------------------------------------
//@version=4
strategy("Stepped  trailing  strategy  example",  overlay=true)
//  random  entry  condition
if  (crossover(sma(close,  14),  sma(close,  28)))
        strategy.entry("My  Long  Entry  Id",  strategy.long)


//  exit  logic
percent2points(percent)  =>
        strategy.position_avg_price  *  percent  /  100  /  syminfo.mintick
//  sl  &  tp  in  %%
sl  =  percent2points(input(5,  title  =  "stop  loss  %%"))
tp1  =  percent2points(input(5,  title  =  "take  profit  1  %%"))
tp2  =  percent2points(input(10,  title  =  "take  profit  2  %%"))
tp3  =  percent2points(input(15,  title  =  "take  profit  3  %%"))
activateTrailingOnThirdStep  =  input(false,  title  =  "activate  trailing  on  third  stage  (tp3  is  amount,  tp2  is  offset  level)")
curProfitInPts()  =>
        if  strategy.position_size  >  0
                (high  -  strategy.position_avg_price)  /  syminfo.mintick
        else  if  strategy.position_size  <  0
                (strategy.position_avg_price  -  low)  /  syminfo.mintick
        else
                0

calcStopLossPrice(OffsetPts)  =>
        if  strategy.position_size  >  0
                strategy.position_avg_price  -  OffsetPts  *  syminfo.mintick
        else  if  strategy.position_size  <  0
                strategy.position_avg_price  +  OffsetPts  *  syminfo.mintick
        else
                na

calcProfitTrgtPrice(OffsetPts)  =>
        calcStopLossPrice(-OffsetPts)
getCurrentStage()  =>
        var  stage  =  0
        if  strategy.position_size  ==  0
                stage  :=  0
        if  stage  ==  0  and  strategy.position_size  !=  0
                stage  :=  1
        else  if  stage  ==  1  and  curProfitInPts()  >=  tp1
                stage  :=  2
        else  if  stage  ==  2  and  curProfitInPts()  >=  tp2
                stage  :=  3
        stage
calcTrailingAmountLevel(points)  =>
        var  float  level  =  na
        level  :=  calcProfitTrgtPrice(points)
        if  not  na(level)
                if  strategy.position_size  >  0
                        if  not  na(level[1])
                                level  :=  max(level[1],  level)
                        if  not  na(level)
                                level  :=  max(high,  level)
                else  if  strategy.position_size  <  0
                        if  not  na(level[1])
                                level  :=  min(level[1],  level)
                    ifnotna(level)
level:=min(low,level)
calcTrailingOffsetLevel(points,offset)=>
floatresult=na
amountLevel=calcTrailingAmountLevel(points)
ifstrategy.position_size>0
trailActiveDiff=amountLevel-calcProfitTrgtPrice(points)
iftrailActiveDiff>0
result:=trailActiveDiff+calcProfitTrgtPrice(offset)
elseifstrategy.position_size<0
trailActiveDiff=calcProfitTrgtPrice(points)-amountLevel
iftrailActiveDiff>0
result:=calcProfitTrgtPrice(offset)-trailActiveDiff
result
floatstopLevel=na
floattrailOffsetLevel=na
floatprofitLevel=activateTrailingOnThirdStep?calcTrailingAmountLevel(tp3):calcProfitTrgtPrice(tp3)
//note:calcTrailingOffsetLevelusescalcTrailingAmountLevelandlastonehasastate(level).
//thereforweneedscalculateitoneverybarforcorrectresult.
//ifweinlineitthePinecompilergiveuswarning"Thefunction'***'shouldbecalledoneachcalculationforconsistency.Itisrecommendedtoextractthecallfromthisscope."
trailOffsetLevelTmp=calcTrailingOffsetLevel(tp3,tp2)
//basedoncurrentstagesetupexit
//note:weusesameexitids("x")consciously,forMODIFYtheexit'sparameters
curStage=getCurrentStage()
ifcurStage==1
stopLevel:=calcStopLossPrice(sl)
strategy.exit("x",loss=sl,profit=tp3,comment="slortp3")
elseifcurStage==2
stopLevel:=calcStopLossPrice(0)
strategy.exit("x",stop=stopLevel,profit=tp3,comment="breakevenortp3")
elseifcurStage==3
stopLevel:=calcStopLossPrice(-tp1)
ifactivateTrailingOnThirdStep
trailOffsetLevel:=trailOffsetLevelTmp
strategy.exit("x",stop=stopLevel,trail_points=tp3,trail_offset=tp3-tp2,comment="stoptp1ortrailingtp3withoffsettp2")
else
strategy.exit("x",stop=stopLevel,profit=tp3,comment="tp1ortp3")
else
strategy.cancel("x")

//thisisdebugplotsforvisulalizeTP&SLlevels
plot(stopLevel,style=plot.style_linebr,color=color.red)
plot(profitLevel,style=plot.style_linebr,color=color.blue)
plot(trailOffsetLevel,style=plot.style_linebr,color=color.green)
Expand (126 lines)
