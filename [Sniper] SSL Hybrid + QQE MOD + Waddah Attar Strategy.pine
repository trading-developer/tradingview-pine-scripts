Script Name: [Sniper] SSL Hybrid + QQE MOD + Waddah Attar Strategy
Author: DuDu95
Description: Hi. I’m DuDu95.

**********************************************************************************
This is the script for the series called "Sniper".
*** What is "Sniper" Series? ***
"Sniper" series is the project that I’m going to start.
In "Sniper" Series, I’m going to "snipe and shoot" the youtuber’s strategy: to find out whether the youtuber’s video about...
PineScript code:

Pine Script™ strategy
[Sniper] SSL Hybrid + QQE MOD + Waddah Attar Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  fpemehd
//  Thanks  to  myncrypto,  jason5480,  kevinmck100
//  @version=5
strategy(title                    =  '[D]  SSL  Hybrid  +  QQE  MOD  +  Waddah  Attar  Strategy',
            shorttitle                =  '[D]  SQW  Strategy',
            overlay                      =  true,
            pyramiding                =  0,
            currency                    =  currency.USD,
            default_qty_type    =  strategy.percent_of_equity,
default_qty_value=100,
commission_value=0.1,
initial_capital=100000,
max_bars_back=500,
max_lines_count=150,
max_labels_count=300)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Time,Direction,Etc-BasicSettingsInputs
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//1.Time:BasedonUTC+09:00
i_start=input.time(defval=timestamp("20Jan199000:00+0900"),title="StartDate",tooltip="ChooseBacktestStartDate",inline="StartDate",group="Time")
i_end=input.time(defval=timestamp("20Dec203000:00+0900"),title="EndDate",tooltip="ChooseBacktestEndDate",inline="EndDate",group="Time")
inTime=time>=i_startandtime<=i_end
//2.Inputsfordirection:Long?Short?Both?
i_longEnabled=input.bool(defval=true,title="Long?",tooltip="EnableLongPositionTrade?",inline="Long/Short",group="Long/Short")
i_shortEnabled=input.bool(defval=true,title="Short?",tooltip="EnableShortPositionTrade?",inline="Long/Short",group="Long/Short")
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Filter-Inputs,Indicaotrs
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//3.UseFilters?WhatFilters?
////3-1.ATRFilter
i_ATRFilterOn=input.bool(defval=false,title="ATRFilterOn?",tooltip="ATRFilterOn?Orderwillnotbemadeunlessfilterconditionisfulfilled",inline="1",group="Filters")
i_ATRFilterLen=input.int(defval=14,title="LengthforATRFilter",minval=1,maxval=100,step=1,tooltip="",inline="2",group="Filters")
i_ATRSMALen=input.int(defval=40,title="SMALengthforATRSMA",minval=1,maxval=100000,step=1,tooltip="ATRshouldbebiggerthanthis",inline="2",group="Filters")
boolATRFilter=ta.atr(i_ATRFilterLen)>=ta.sma(ta.atr(length=i_ATRFilterLen),i_ATRSMALen)?true:false
////3-2.EMAFilter
i_EMAFilterOn=input.bool(defval=false,title="EMAFilterOn?",tooltip="EMAFilterOn?Orderwillnotbemadeunlessfilterconditionisfulfilled",inline="3",group="Filters")
i_EMALen=input.int(defval=200,title="EMALength",minval=1,maxval=100000,step=1,tooltip="EMALength",inline="4",group="Filters")
boollongEMAFilter=close>=ta.ema(source=close,length=i_EMALen)?true:false
boolshortEMAFilter=close<=ta.ema(source=close,length=i_EMALen)?true:false
plot(i_EMAFilterOn?ta.ema(source=close,length=i_EMALen):na,title="EMAFilter",color=color.new(color=color.orange,transp=0),linewidth=1)
////3-3.ADXFilter
////3-4.DMIFilter(UsessameADXLength)
i_ADXFilterOn=input.bool(defval=false,title="ADXFilterOn?",tooltip="ADXFilterOn?Orderwillnotbemadeunlessfilterconditionisfulfilled",inline="5",group="Filters")
i_DMIFilterOn=input.bool(defval=false,title="DMIFilterOn?",tooltip="DMI(DirectionalMovingIndex)FilterOn?Orderwillnotbemadeunlessfilterconditionisfulfilled",inline="6",group="Filters")
i_ADXLength=input.int(defval=20,title="ADXLength",minval=1,maxval=100000,step=1,tooltip="ADXLength",inline="7",group="Filters")
i_ADXThreshold=input.int(defval=25,title="ADXThreshold",minval=1,maxval=100000,step=1,tooltip="ADXshouldbebiggerthanthreshold",inline="8",group="Filters")
////3-5.SuperTrendFilter
i_superTrendFilterOn=input.bool(defval=false,title="SuperTrendFilterOn?",tooltip="SuperTrendFilterOn?Orderwillnotbemadeunlessfilterconditionisfulfilled",inline="9",group="Filters")
i_superTrendATRLen=input.int(defval=10,title="ATRLength",minval=1,maxval=100000,step=1,tooltip="SuperTrendATRLength",inline="10",group="Filters")
i_superTrendATRFactor=input.float(defval=3,title="Factor",minval=1,maxval=100000,step=0.1,tooltip="SuperTrendATRFactor",inline="11",group="Filters")
//ADXandDIThanksto@BeikabuOyaji
intlen=i_ADXLength
floatth=i_ADXThreshold
TR=math.max(math.max(high-low,math.abs(high-nz(close[1]))),math.abs(low-nz(close[1])))
DMPlus=high-nz(high[1])>nz(low[1])-low?math.max(high-nz(high[1]),0):0
DMMinus=nz(low[1])-low>high-nz(high[1])?math.max(nz(low[1])-low,0):0
SmoothedTR=0.0
SmoothedTR:=nz(SmoothedTR[1])-nz(SmoothedTR[1])/len+TR
SmoothedDMPlus=0.0
SmoothedDMPlus:=nz(SmoothedDMPlus[1])-nz(SmoothedDMPlus[1])/len+DMPlus
SmoothedDMMinus=0.0
SmoothedDMMinus:=nz(SmoothedDMMinus[1])-nz(SmoothedDMMinus[1])/len+DMMinus
DIPlus=SmoothedDMPlus/SmoothedTR*100
DIMinus=SmoothedDMMinus/SmoothedTR*100
DX=math.abs(DIPlus-DIMinus)/(DIPlus+DIMinus)*100
ADX=ta.sma(source=DX,length=len)
//plot(DIPlus,color=color.new(color.green,0),title='DI+')
//plot(DIMinus,color=color.new(color.red,0),title='DI-')
//plot(ADX,color=color.new(color.navy,0),title='ADX')
//hline(th,color=color.white)
boolADXFilter=ADX>th?true:false
boollongDMIFilter=DIPlus>=DIMinus?true:false
boolshortDMIFilter=DIPlus<=DIMinus?true:false
//CalculateSuperTrendforFilter
[supertrend,direction]=ta.supertrend(factor=i_superTrendATRFactor,atrPeriod=i_superTrendATRLen)
bodyMiddle=plot((open+close)/2,display=display.none)
upTrend=plot(i_superTrendFilterOn?direction<0?supertrend:na:na,"UpTrend",color=color.green,style=plot.style_linebr)
downTrend=plot(i_superTrendFilterOn?direction<0?na:supertrend:na,"DownTrend",color=color.red,style=plot.style_linebr)
fill(bodyMiddle,upTrend,color.new(color.green,90),fillgaps=false)
fill(bodyMiddle,downTrend,color.new(color.red,90),fillgaps=false)
boollongSTFilter=direction<=0
boolshortSTFilter=direction>=0
//Filter
boollongFilterFilled=(noti_ATRFilterOnorATRFilter)and(noti_EMAFilterOnorlongEMAFilter)and(noti_ADXFilterOnorADXFilter)and(noti_DMIFilterOnorlongDMIFilter)and(noti_superTrendFilterOnorlongSTFilter)
boolshortFilterFilled=(noti_ATRFilterOnorATRFilter)and(noti_EMAFilterOnorshortEMAFilter)and(noti_ADXFilterOnorADXFilter)and(noti_DMIFilterOnorshortDMIFilter)and(noti_superTrendFilterOnorshortSTFilter)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//StrategyLogic(Entry&ExitCondition)-Inputs,IndicatorsforStrategy
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
////Indicators
//InputsforStrategyIndicators
////1.SSLHybridBaseline
i_useTrueRange=input.bool(defval=true,title="usetruerangeforKeltnerChannel?",tooltip="",inline="1",group="1:SSLHybrid")
i_maType=input.string(defval='EMA',title='BaselineType',options=['SMA','EMA','DEMA','TEMA','LSMA','WMA','VAMA','TMA','HMA','McGinley'],inline="2",group="1:SSLHybrid")
i_len=input.int(defval=30,title='BaselineLength',inline="2",group="1:SSLHybrid")
i_multy=input.float(defval=0.2,title='BaseChannelMultiplier',minval=0,maxval=100,step=0.05,inline="3",group="1:SSLHybrid")
i_volatility_lookback=input.int(defval=10,title='Volatilitylookbacklength(forVAMA)',inline='4',group="1:SSLHybrid")
tema(src,len)=>
ema1=ta.ema(src,len)
ema2=ta.ema(ema1,len)
ema3=ta.ema(ema2,len)
3*ema1-3*ema2+ema3
f_ma(type,src,len)=>
floatresult=0
iftype=='TMA'
result:=ta.sma(ta.sma(src,math.ceil(len/2)),math.floor(len/2)+1)
result
iftype=='LSMA'
result:=ta.linreg(src,len,0)
result
iftype=='SMA'//Simple
result:=ta.sma(src,len)
result
iftype=='EMA'//Exponential
result:=ta.ema(src,len)
result
iftype=='DEMA'//DoubleExponential
e=ta.ema(src,len)
result:=2*e-ta.ema(e,len)
result
iftype=='TEMA'//TripleExponential
e=ta.ema(src,len)
result:=3*(e-ta.ema(e,len))+ta.ema(ta.ema(e,len),len)
result
iftype=='WMA'//Weighted
result:=ta.wma(src,len)
result
iftype=='VAMA'//VolatilityAdjusted
///Copyright©2019topresent,JorisDuyck(JD)
mid=ta.ema(src,len)
dev=src-mid
vol_up=ta.highest(dev,i_volatility_lookback)
vol_down=ta.lowest(dev,i_volatility_lookback)
result:=mid+math.avg(vol_up,vol_down)
result
iftype=='HMA'//Hull
result:=ta.wma(2*ta.wma(src,len/2)-ta.wma(src,len),math.round(math.sqrt(len)))
result
iftype=='McGinley'
mg=0.0
mg:=na(mg[1])?ta.ema(src,len):mg[1]+(src-mg[1])/(len*math.pow(src/mg[1],4))
result:=mg
result
result
////1-1.SSLHybridKeltnerBaselineChannel
BBMC=f_ma(i_maType,close,i_len)//BaseLone
Keltma=f_ma(i_maType,close,i_len)
range_1=i_useTrueRange?ta.tr:high-low
rangema=ta.ema(range_1,i_len)
upperk=Keltma+rangema*i_multy
lowerk=Keltma-rangema*i_multy
////2.QQEMOD,thankstoMihkel100
RSI_Period=input.int(defval=6,title='RSILength',inline="1",group="2:QQEMOD")
SF=input.int(defval=5,title='RSISmoothing',inline="2",group="2:QQEMOD")
QQE=input.float(defval=3,title='FastQQEFactor',inline="3",group="2:QQEMOD")
ThreshHold=input.int(defval=3,title='Thresh-hold',inline="4",group="2:QQEMOD")
src=input(defval=close,title='RSISource')
Wilders_Period=RSI_Period*2-1
Rsi=ta.rsi(src,RSI_Period)
RsiMa=ta.ema(Rsi,SF)
AtrRsi=math.abs(RsiMa[1]-RsiMa)
MaAtrRsi=ta.ema(AtrRsi,Wilders_Period)
dar=ta.ema(MaAtrRsi,Wilders_Period)*QQE
longband=0.0
shortband=0.0
trend=0
DeltaFastAtrRsi=dar
RSIndex=RsiMa
newshortband=RSIndex+DeltaFastAtrRsi
newlongband=RSIndex-DeltaFastAtrRsi
longband:=RSIndex[1]>longband[1]andRSIndex>longband[1]?math.max(longband[1],newlongband):newlongband
shortband:=RSIndex[1]<shortband[1]andRSIndex<shortband[1]?math.min(shortband[1],newshortband):newshortband
cross_1=ta.cross(longband[1],RSIndex)
trend:=ta.cross(RSIndex,shortband[1])?1:cross_1?-1:nz(trend[1],1)
FastAtrRsiTL=trend==1?longband:shortband
////////////////////
length=input.int(defval=50,minval=1,title='BollingerLength',group="2:QQEMOD")
mult=input.float(defval=0.35,minval=0.01,maxval=5,step=0.1,title='BBMultiplier',group="2:QQEMOD")
basis=ta.sma(FastAtrRsiTL-50,length)
dev=mult*ta.stdev(FastAtrRsiTL-50,length)
upper=basis+dev
lower=basis-dev
color_bar=RsiMa-50>upper?#00c3ff:RsiMa-50<lower?#ff0062:color.gray
//
//Zerocross
QQEzlong=0
QQEzlong:=nz(QQEzlong[1])
QQEzshort=0
QQEzshort:=nz(QQEzshort[1])
QQEzlong:=RSIndex>=50?QQEzlong+1:0
QQEzshort:=RSIndex<50?QQEzshort+1:0
//
//Zero=hline(0,color=color.white,linestyle=hline.style_dotted,linewidth=1)
////////////////////////////////////////////////////////////////
RSI_Period2=input.int(defval=6,title='RSI2Length',group="2:QQEMOD")
SF2=input.int(defval=5,title='RSISmoothing',group="2:QQEMOD")
QQE2=input.float(defval=1.61,title='FastQQE2Factor',group="2:QQEMOD")
ThreshHold2=input.int(defval=3,title='Thresh-hold',group="2:QQEMOD")
src2=input(defval=close,title='RSISource',group="2:QQEMOD")
//
//
Wilders_Period2=RSI_Period2*2-1
Rsi2=ta.rsi(src2,RSI_Period2)
RsiMa2=ta.ema(Rsi2,SF2)
AtrRsi2=math.abs(RsiMa2[1]-RsiMa2)
MaAtrRsi2=ta.ema(AtrRsi2,Wilders_Period2)
dar2=ta.ema(MaAtrRsi2,Wilders_Period2)*QQE2
longband2=0.0
shortband2=0.0
trend2=0
DeltaFastAtrRsi2=dar2
RSIndex2=RsiMa2
newshortband2=RSIndex2+DeltaFastAtrRsi2
newlongband2=RSIndex2-DeltaFastAtrRsi2
longband2:=RSIndex2[1]>longband2[1]andRSIndex2>longband2[1]?math.max(longband2[1],newlongband2):newlongband2
shortband2:=RSIndex2[1]<shortband2[1]andRSIndex2<shortband2[1]?math.min(shortband2[1],newshortband2):newshortband2
cross_2=ta.cross(longband2[1],RSIndex2)
trend2:=ta.cross(RSIndex2,shortband2[1])?1:cross_2?-1:nz(trend2[1],1)
FastAtrRsi2TL=trend2==1?longband2:shortband2
//
//Zerocross
QQE2zlong=0
QQE2zlong:=nz(QQE2zlong[1])
QQE2zshort=0
QQE2zshort:=nz(QQE2zshort[1])
QQE2zlong:=RSIndex2>=50?QQE2zlong+1:0
QQE2zshort:=RSIndex2<50?QQE2zshort+1:0
//
hcolor2=RsiMa2-50>ThreshHold2?color.silver:RsiMa2-50<0-ThreshHold2?color.silver:na
Greenbar1=RsiMa2-50>ThreshHold2
Greenbar2=RsiMa-50>upper
Redbar1=RsiMa2-50<0-ThreshHold2
Redbar2=RsiMa-50<lower
////3.WaddahAttarExplosionV2shayankm
sensitivity=input.float(defval=150,title='Sensitivity',inline="1",group="3:WaddahAttarExplosion")
fastLength=input.int(defval=20,title='FastEMALength',inline="2",group="3:WaddahAttarExplosion")
slowLength=input.int(defval=40,title='SlowEMALength',inline="2",group="3:WaddahAttarExplosion")
channelLength=input.int(defval=20,title='BBChannelLength',inline="3",group="3:WaddahAttarExplosion")
w_mult=input.float(defval=2.0,title='BBStdevMultiplier',inline="4",group="3:WaddahAttarExplosion")
//DEAD_ZONE=nz(ta.rma(ta.tr(true),100))*3.7
calc_macd(source,fastLength,slowLength)=>
fastMA=ta.ema(source,fastLength)
slowMA=ta.ema(source,slowLength)
fastMA-slowMA
calc_BBUpper(source,length,mult)=>
basis=ta.sma(source,length)
dev=mult*ta.stdev(source,length)
basis+dev
calc_BBLower(source,length,mult)=>
basis=ta.sma(source,length)
dev=mult*ta.stdev(source,length)
basis-dev
t1=(calc_macd(close,fastLength,slowLength)-calc_macd(close[1],fastLength,slowLength))*sensitivity
e1=calc_BBUpper(close,channelLength,w_mult)-calc_BBLower(close,channelLength,w_mult)
trendUp=t1>=0?t1:0
trendDown=t1<0?-1*t1:0
//Plot:Indicators
////1.SSLHybrid
varbullSSLColor=#00c3ff
varbearSSLColor=#ff0062
//color_bar=color.new(color=close>upperk?bullSSLColor:close<lowerk?bearSSLColor:color.gray,transp=0)
//i_show_color_bar=input.bool(defval=true,title="ColorBars")
//barcolor(i_show_color_bar?color_bar:na)
plot(series=BBMC,title='MABaseline',color=color_bar,linewidth=1,style=plot.style_line)
up_channel=plot(upperk,color=color_bar,title='BaselineUpperChannel')
low_channel=plot(lowerk,color=color_bar,title='BasilineLowerChannel')
fill(up_channel,low_channel,color.new(color=color_bar,transp=90))
////2.QQEMOD:NoPlottingbecauseofoverlayoption
//plot(FastAtrRsi2TL-50,title='QQELine',color=color.new(color.white,0),linewidth=2)
//plot(RsiMa2-50,color=hcolor2,title='Histo2',style=plot.style_columns,transp=50)
//plot(Greenbar1andGreenbar2==1?RsiMa2-50:na,title='QQEUp',style=plot.style_columns,color=color.new(#00c3ff,0))
//plot(Redbar1andRedbar2==1?RsiMa2-50:na,title='QQEDown',style=plot.style_columns,color=color.new(#ff0062,0))
////3.WaddahAttarExplosionV2shayankm
//plot(trendUp,style=plot.style_columns,linewidth=1,color=trendUp<trendUp[1]?color.lime:color.green,title='UpTrend',transp=45)
//plot(trendDown,style=plot.style_columns,linewidth=1,color=trendDown<trendDown[1]?color.orange:color.red,title='DownTrend',transp=45)
//plot(e1,style=plot.style_line,linewidth=2,color=color.new(color.white,0),title='ExplosionLine')
//plot(DEAD_ZONE,color=color.new(color.blue,0),linewidth=1,style=plot.style_cross,title='DeadZoneLine')
//////Entry,Exit
//Long,ShortLogicwithIndicator
boollongSSLCond=close>BBMC
boolshortSSLCond=close<BBMC
boollongQQECond=(Greenbar1[1]==falseorGreenbar2[1]==false)and(Greenbar1andGreenbar2)==1
boolshortQQECond=(Redbar1[1]==falseorRedbar2[1]==false)and(Redbar1andRedbar2)==1
boollongWAECond=trendUp>0andtrendDown==0
boolshortWAECond=trendDown>0andtrendUp==0
//BasicCond+Long,ShortEntryCondition
boollongCond=(i_longEnabledandinTime)and(longSSLCondandlongQQECondandlongWAECond)
boolshortCond=(i_shortEnabledandinTime)and(shortSSLCondandshortQQECondandshortWAECond)
//BasicCond+Long,ShortExitCondition
boolcloseLong=(i_longEnabled)and((Redbar1[1]==falseorRedbar2[1]==false)and(Redbar1andRedbar2)==1)
boolcloseShort=(i_shortEnabled)and((Greenbar1[1]==falseorGreenbar2[1]==false)and(Greenbar1andGreenbar2)==1)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//PositionControl
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Long,ShortEntryCondition+NotenteredPositionYet
boolopenLong=longCondandnot(strategy.opentrades.size(strategy.opentrades-1)>0)andlongFilterFilled
boolopenShort=shortCondandnot(strategy.opentrades.size(strategy.opentrades-1)<0)andshortFilterFilled
boolenteringTrade=openLongoropenShort
floatentryBarIndex=bar_index
//Long,ShortEntryFulfilledorAlreadyEntered
boolinLong=openLongorstrategy.opentrades.size(strategy.opentrades-1)>0andnotcloseLong
boolinShort=openShortorstrategy.opentrades.size(strategy.opentrades-1)<0andnotcloseShort
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//StopLoss-Inputs,Indicaotrs
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
////UseSL?TSL?
i_useSLTP=input.bool(defval=true,title="EnableSL&TP?",tooltip="",inline="1",group="StopLoss")
i_tslEnabled=input.bool(defval=false,title="EnableTrailingSL?",tooltip="EnableStopLoss&TakeProfit?\n\EnableTrailingSL?",inline="1",group="StopLoss")
//i_breakEvenAfterTP=input.bool(defval=false,title='EnableBreakEvenAfterTP?',tooltip='WhenTakeProfitpricetargetishit,movetheStopLosstotheentryprice(ortoamorestrictpricedefinedbytheStopLoss%/ATRMultiplier).',inline='2',group='StopLoss/TakeProfit')
////SlOptions
i_slType=input.string(defval="ATR",title="StopLossType",options=["Percent","ATR","PreviousLL/HH"],tooltip="StopLossbasedon%?ATR?",inline="3",group="StopLoss")
i_slATRLen=input.int(defval=14,title="ATRLength",minval=1,maxval=200,step=1,inline="4",group="StopLoss")
i_slATRMult=input.float(defval=3,title="ATRMultiplier",minval=1,maxval=200,step=0.1,tooltip="",inline="4",group="StopLoss")
i_slPercent=input.float(defval=3,title="Percent",tooltip="",inline="5",group="StopLoss")
i_slLookBack=input.int(defval=30,title="LowestPriceBeforeEntry",group="StopLoss",inline="6",minval=1,step=1,tooltip="LookbacktofindtheLowestPrice.\nStopLossisdeterminedbytheLowestpriceofthelookbackperiod.TakeProfitisderivedfromthisalsobymultiplyingtheStopLossvaluebytheRisk:Rewardmultiplier.")
//FunctionsforStopLoss
floatopenAtr=ta.valuewhen(condition=enteringTrade,source=ta.atr(i_slATRLen),occurrence=0)
floatopenLowest=ta.valuewhen(condition=openLong,source=ta.lowest(low,i_slLookBack),occurrence=0)
floatopenHighest=ta.valuewhen(condition=openShort,source=ta.highest(high,i_slLookBack),occurrence=0)
f_getLongSLPrice(source)=>
switchi_slType
"Percent"=>source*(1-(i_slPercent/100))
"ATR"=>source-(i_slATRMult*openAtr)
"PreviousLL/HH"=>openLowest
=>na
f_getShortSLPrice(source)=>
switchi_slType
"Percent"=>source*(1+(i_slPercent/100))
"ATR"=>source+(i_slATRMult*openAtr)
"PreviousLL/HH"=>openHighest
=>na
//CalculateStopLoss
varfloatlongSLPrice=na
varfloatshortSLPrice=na
boollongTPExecuted=false
boolshortTPExecuted=false
longSLPrice:=if(inLongandi_useSLTP)
if(openLong)
f_getLongSLPrice(close)
else
//1.TrailingStopLoss
ifi_tslEnabled
stopLossPrice=f_getLongSLPrice(high)
math.max(stopLossPrice,nz(longSLPrice[1]))
//2.NormalStopLoss
else
nz(source=longSLPrice[1],replacement=0)
else
na
shortSLPrice:=if(inShortandi_useSLTP)
if(openShort)
f_getShortSLPrice(close)
else
//1.TrailingStopLoss
ifi_tslEnabled
stopLossPrice=f_getShortSLPrice(low)
math.min(stopLossPrice,nz(shortSLPrice[1]))
//2.NormalStopLoss
else
nz(source=shortSLPrice[1],replacement=999999.9)
else
na
//Plot:StopLossofLong,ShortEntry
varlongSLPriceColor=color.new(color.maroon,0)
plot(series=longSLPrice,title='LongStopLoss',color=longSLPriceColor,linewidth=1,style=plot.style_linebr,offset=1)
varshortSLPriceColor=color.new(color.maroon,0)
plot(series=shortSLPrice,title='ShortStopLoss',color=shortSLPriceColor,linewidth=1,style=plot.style_linebr,offset=1)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//TakeProfit-Inputs,Indicaotrs
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_useTPExit=input.bool(defval=true,title="UseTakeProfit?",tooltip="",inline="1",group="TakeProfit")
i_RRratio=input.float(defval=1.5,title="R:RRatio",minval=0.1,maxval=200,step=0.1,tooltip="R:RRatio>RiskRewardRatio?ItwillautomaticallysetTakeProfit%basedonStopLoss",inline="2",group="TakeProfit")
i_tpQuantityPerc=input.float(defval=50,title='TakeProfitQuantity%',minval=0.0,maxval=100,step=1.0,tooltip='%ofpositionclosedwhentptargetismet.',inline="34",group='TakeProfit')
varfloatlongTPPrice=na
varfloatshortTPPrice=na
f_getLongTPPrice()=>
close+i_RRratio*math.abs(close-f_getLongSLPrice(close))
f_getShortTPPrice()=>
close-i_RRratio*math.abs(close-f_getShortSLPrice(close))
longTPPrice:=if(inLongandi_useSLTP)
if(openLong)
f_getLongTPPrice()
else
nz(source=longTPPrice[1],replacement=f_getLongTPPrice())
else
na
shortTPPrice:=if(inShortandi_useSLTP)
if(openShort)
f_getShortTPPrice()
else
nz(source=shortTPPrice[1],replacement=f_getShortTPPrice())
else
na
//Plot:TakeProfitofLong,ShortEntry
varlongTPPriceColor=color.new(color.teal,0)
plot(series=longTPPrice,title='LongTakeProfit',color=longTPPriceColor,linewidth=1,style=plot.style_linebr,offset=1)
varshortTPPriceColor=color.new(color.teal,0)
plot(series=shortTPPrice,title='ShortTakeProfit',color=shortTPPriceColor,linewidth=1,style=plot.style_linebr,offset=1)
//Plot:EntryPrice
varposColor=color.new(color.white,0)
plot(series=strategy.opentrades.entry_price(strategy.opentrades-1),title='PositionEntryPrice',color=posColor,linewidth=1,style=plot.style_linebr)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Quantity-Inputs
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_useRiskManangement=input.bool(defval=true,title="UseRiskManangement?",tooltip="",inline="1",group="Quantity")
i_riskPerTrade=input.float(defval=3,title="RiskPerTrade(%)",minval=0,maxval=100,step=0.1,tooltip="UseRiskManangementbyQuantityControl?",inline="2",group="Quantity")
//i_leverage=input.float(defval=2,title="Leverage",minval=0,maxval=100,step=0.1,tooltip="Leverage",inline="3",group="Quantity")
floatqtyPercent=na
floatentryQuantity=na
f_calQtyPerc()=>
if(i_useRiskManangement)
riskPerTrade=(i_riskPerTrade)/100//1번거래시3%손실
stopLossPrice=openLong?f_getLongSLPrice(close):openShort?f_getShortSLPrice(close):na
riskExpected=math.abs((close-stopLossPrice)/close)//손절가랑6%차이
riskPerTrade/riskExpected//0~1
else
1
f_calQty(qtyPerc)=>
math.min(math.max(0.000001,strategy.equity/close*qtyPerc),1000000000)

//TPExecution
longTPExecuted:=strategy.opentrades.size(strategy.opentrades-1)>0and(longTPExecuted[1]orstrategy.opentrades.size(strategy.opentrades-1)<strategy.opentrades.size(strategy.opentrades-1)[1]orstrategy.opentrades.size(strategy.opentrades-1)[1]==0andhigh>=longTPPrice)
shortTPExecuted:=strategy.opentrades.size(strategy.opentrades-1)<0and(shortTPExecuted[1]orstrategy.opentrades.size(strategy.opentrades-1)>strategy.opentrades.size(strategy.opentrades-1)[1]orstrategy.opentrades.size(strategy.opentrades-1)[1]==0andlow<=shortTPPrice)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//PlotLabel,Boxes,Results,Etc
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_showSimpleLabel=input.bool(false,"ShowSimpleLabelforEntry?",group="Strategy:Drawings",inline="1",tooltip="")
i_showLabels=input.bool(true,"ShowTradeExitLabels",group="Strategy:Drawings",inline="1",tooltip="UsefullabelstoidentifyProfit/Lossandcumulativeportfoliocapitalaftereachtradecloses.\n\nAlsonotethatTradingViewlimitsthemaxnumberof'boxes'thatcanbedisplayedonachart(max500).ThismeanswhenyoulookbackfarenoughonthechartyouwillnotseetheTP/SLboxes.Howeveryoucancheckthisoptiontoidentifywheretradesexited.")
i_showDashboard=input.bool(true,"ShowDashboard",group="Strategy:Drawings",inline="2",tooltip="ShowBacktestResults.BacktestDates,Win/LoseRates,Etc.")
//Plot:LabelforLong,ShortEntry
varopenLongColor=color.new(#2962FF,0)
varopenShortColor=color.new(#FF1744,0)
varentryTextColor=color.new(color.white,0)
if(openLongandi_showSimpleLabel)
label.new(x=bar_index,y=na,text='Open',yloc=yloc.belowbar,color=openLongColor,style=label.style_label_up,textcolor=entryTextColor)
entryBarIndex:=bar_index
if(openShortandi_showSimpleLabel)
label.new(x=bar_index,y=na,text='Close',yloc=yloc.abovebar,color=openShortColor,style=label.style_label_down,textcolor=entryTextColor)
entryBarIndex:=bar_index
floatprevEntryPrice=strategy.closedtrades.entry_price(strategy.closedtrades-1)
floatpnl=strategy.closedtrades.profit(strategy.closedtrades-1)
floatprevExitPrice=strategy.closedtrades.exit_price(strategy.closedtrades-1)
f_enteringTradeLabel(x,y,qty,entryPrice,slPrice,tpPrice,rrRatio,direction)=>
ifi_showLabels
labelStr=("TradeStart"
+"\nDirection:"+direction
+"\nRiskPerTrade:"+str.tostring(i_useRiskManangement?i_riskPerTrade:100,"#.##")+"%"
+"\nExpectedRisk:"+str.tostring(math.abs((close-slPrice)/close)*100,"#.##")+"%"
+"\nEntryPositionQty:"+str.tostring(math.abs(qty*100),"#.##")+"%"
+"\nEntryPrice:"+str.tostring(entryPrice,"#.##"))
+"\nStopLossPrice:"+str.tostring(slPrice,"#.##")
+"\nTakeProfitPrice:"+str.tostring(tpPrice,"#.##")
+"\nRisk-RewardRatio:"+str.tostring(rrRatio,"#.##")
label.new(x=x,y=y,text=labelStr,color=color.new(color.blue,60),textcolor=color.white,style=label.style_label_up)
f_exitingTradeLabel(x,y,entryPrice,exitPrice,direction)=>
ifi_showLabels
labelStr=("TradeResult"
+"\nDirection:"+direction
+"\nEntryPrice:"+str.tostring(entryPrice,"#.##")
+"\nExitPrice:"+str.tostring(exitPrice,"#.##")
+"\nGain%:"+str.tostring(direction=='Long'?-(entryPrice-exitPrice)/entryPrice*100:(entryPrice-exitPrice)/entryPrice*100,"#.##")+"%")
label.new(x=x,y=y,text=labelStr,color=pnl>0?color.new(color.green,60):color.new(color.red,60),textcolor=color.white,style=label.style_label_down)
f_fillCell(_table,_column,_row,_title,_value,_bgcolor,_txtcolor)=>
_cellText=_title+""+_value
table.cell(_table,_column,_row,_cellText,bgcolor=_bgcolor,text_color=_txtcolor,text_size=size.auto)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Orders
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
if(inTime)
if(openLong)
qtyPercent:=f_calQtyPerc()>1?1:f_calQtyPerc()
entryQuantity:=f_calQty(qtyPercent)
strategy.entry(id="Long",direction=strategy.long,qty=entryQuantity,comment='Long('+syminfo.ticker+'):Started',alert_message='Long('+syminfo.ticker+'):Started')
f_enteringTradeLabel(x=bar_index+1,y=close-3*ta.tr,entryPrice=close,qty=qtyPercent,slPrice=longSLPrice,tpPrice=longTPPrice,rrRatio=i_RRratio,direction="Long")
if(openShort)
qtyPercent:=f_calQtyPerc()>1?1:f_calQtyPerc()
entryQuantity:=f_calQty(qtyPercent)
strategy.entry(id="Short",direction=strategy.short,qty=entryQuantity,comment='Short('+syminfo.ticker+'):Started',alert_message='Short('+syminfo.ticker+'):Started')
f_enteringTradeLabel(x=bar_index+1,y=close-3*ta.tr,entryPrice=close,qty=qtyPercent,slPrice=shortSLPrice,tpPrice=shortTPPrice,rrRatio=i_RRratio,direction="Short")
if(closeLong)
strategy.close(id='Long',comment='CloseLong',alert_message='Long:Closedatmarketprice')
strategy.position_size>0?f_exitingTradeLabel(x=bar_index,y=close+3*ta.tr,entryPrice=prevEntryPrice,exitPrice=prevExitPrice,direction='Long'):na
if(closeShort)
strategy.close(id='Short',comment='CloseShort',alert_message='Short:Closedatmarketprice')
strategy.position_size<0?f_exitingTradeLabel(x=bar_index,y=close+3*ta.tr,entryPrice=prevEntryPrice,exitPrice=prevExitPrice,direction='Short'):na
if(inLong)
strategy.exit(id='LongTP/SL',from_entry='Long',qty_percent=i_tpQuantityPerc,limit=longTPPrice,stop=longSLPrice,alert_message='Long('+syminfo.ticker+'):TakeProfitorStopLossexecuted')
strategy.exit(id='LongSL',from_entry='Long',stop=longSLPrice,alert_message='Long('+syminfo.ticker+'):StopLossexecuted')
if(inShort)
strategy.exit(id='ShortTP/SL',from_entry='Short',qty_percent=i_tpQuantityPerc,limit=shortTPPrice,stop=shortSLPrice,alert_message='Short('+syminfo.ticker+'):TakeProfitorStopLossexecuted')
strategy.exit(id='ShortSL',from_entry='Short',stop=shortSLPrice,alert_message='Short('+syminfo.ticker+'):StopLossexecuted')

ifstrategy.position_size[1]>0andstrategy.position_size==0
f_exitingTradeLabel(x=bar_index,y=close+3*ta.tr,entryPrice=prevEntryPrice,exitPrice=prevExitPrice,direction='Long')

ifstrategy.position_size[1]<0andstrategy.position_size==0
f_exitingTradeLabel(x=bar_index,y=close+3*ta.tr,entryPrice=prevEntryPrice,exitPrice=prevExitPrice,direction='Short')
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//BacktestResultDashboard
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
ifi_showDashboard
varbgcolor=color.new(color=color.black,transp=100)
vargreenColor=color.new(color=#02732A,transp=0)
varredColor=color.new(color=#D92332,transp=0)
varyellowColor=color.new(color=#F2E313,transp=0)
//KeeptrackofWins/Lossesstreaks
newWin=(strategy.wintrades>strategy.wintrades[1])and(strategy.losstrades==strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
newLoss=(strategy.wintrades==strategy.wintrades[1])and(strategy.losstrades>strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
varipintwinRow=0
varipintlossRow=0
varipintmaxWinRow=0
varipintmaxLossRow=0
ifnewWin
lossRow:=0
winRow:=winRow+1
ifwinRow>maxWinRow
maxWinRow:=winRow

ifnewLoss
winRow:=0
lossRow:=lossRow+1
iflossRow>maxLossRow
maxLossRow:=lossRow
//Preparestatstable
vartabledashTable=table.new(position.top_right,1,15,border_width=1)


ifbarstate.islastconfirmedhistory
dollarReturn=strategy.netprofit
f_fillCell(dashTable,0,0,"Start:",str.format("{0,date,long}",strategy.closedtrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.closedtrades.entry_time(0))
f_fillCell(dashTable,0,1,"End:",str.format("{0,date,long}",strategy.opentrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.opentrades.entry_time(0))
_profit=(strategy.netprofit/strategy.initial_capital)*100
f_fillCell(dashTable,0,2,"NetProfit:",str.tostring(_profit,'##.##')+"%",_profit>0?greenColor:redColor,color.white)
_numOfDaysInStrategy=(strategy.opentrades.entry_time(0)-strategy.closedtrades.entry_time(0))/(1000*3600*24)
_winRate=(strategy.wintrades/strategy.closedtrades)*100
f_fillCell(dashTable,0,4,"PercentProfitable:",str.tostring(_winRate,'##.##')+"%",_winRate<50?redColor:_winRate<75?greenColor:yellowColor,color.white)
f_fillCell(dashTable,0,5,"ProfitFactor:",str.tostring(strategy.grossprofit/strategy.grossloss,'##.###'),strategy.grossprofit>strategy.grossloss?greenColor:redColor,color.white)
f_fillCell(dashTable,0,6,"TotalTrades:",str.tostring(strategy.closedtrades),bgcolor,color.white)
f_fillCell(dashTable,0,8,"MaxWinsInARow:",str.tostring(maxWinRow,'######'),bgcolor,color.white)
f_fillCell(dashTable,0,9,"MaxLossesInARow:",str.tostring(maxLossRow,'######'),bgcolor,color.white)
Expand (644 lines)
