Script Name: ABCD Strategy
Author: kerok3g
Description: One from many harmonic pattern that consists of two equivalent price legs. The ABCD pattern that helps traders predict when the price is about to change direction.

 Tracing And Calculation

This code using pivot high and pivot low built-in method and calculate with Fibonacci Retracement.

 Limitation

To find ABCD pattern is very difficult, just coming up a few...
PineScript code:

Pine Script™ strategy
ABCD Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  kerok3g
//@version=5
strategy("ABCD  Strategy",  shorttitle="ABCDS",  overlay=true,  commission_value=0.04)
calcdev(fprice,  lprice,  fbars,  lbars)  =>
        rise  =  lprice  -  fprice
        run  =  lbars  -  fbars
        avg  =  rise/run
        ((bar_index  -  lbars)  *  avg)  +  lprice
len  =  input(5)
ph  =  ta.pivothigh(len,  len)
pl  =  ta.pivotlow(len,  len)
var  bool  ishigh  =  false
ishigh  :=  ishigh[1]
var  float  currph  =  0.0
var  int  currphb  =  0
currph  :=  nz(currph)
currphb  :=  nz(currphb)
var  float  oldph  =  0.0
var  int  oldphb  =  0
oldph  :=  nz(oldph)
oldphb  :=  nz(oldphb)
var  float  currpl  =  0.0
var  int  currplb  =  0
currpl  :=  nz(currpl)
currplb  :=  nz(currplb)
var  float  oldpl  =  0.0
var  int  oldplb  =  0
oldpl  :=  nz(oldpl)
oldplb  :=  nz(oldplb)
if  (not  na(ph))
        ishigh  :=  true
        oldph  :=  currph
        oldphb  :=  currphb
        currph  :=  ph
    currphb:=bar_index[len]
else
if(notna(pl))
ishigh:=false
oldpl:=currpl
oldplb:=currplb
currpl:=pl
currplb:=bar_index[len]
endHighPoint=calcdev(oldph,currph,oldphb,currphb)
endLowPoint=calcdev(oldpl,currpl,oldplb,currplb)
plotshape(ph,style=shape.triangledown,color=color.red,location=location.abovebar,offset=-len)
plotshape(pl,style=shape.triangleup,color=color.green,location=location.belowbar,offset=-len)
varlinelnhigher=na
varlinelnlower=na
lnhigher:=line.new(oldphb,oldph,bar_index,endHighPoint)
lnlower:=line.new(oldplb,oldpl,bar_index,endLowPoint)
line.delete(lnhigher[1])
line.delete(lnlower[1])
formlong=oldphb<oldplbandoldplb<currphbandcurrphb<currplb
longratio1=(currph-oldpl)/(oldph-oldpl)
longratio2=(currph-currpl)/(currph-oldpl)
formshort=oldplb<oldphbandoldphb<currplbandcurrplb<currphb
shortratio1=(oldph-currpl)/(oldph-oldpl)
shortratio2=(currph-currpl)/(oldph-currpl)
//preventmultipleentryforonepattern
varintsignalid=0
signalid:=nz(signalid[1])
longCond=formlongand
longratio1<0.786and
longratio1>0.5and
longratio2>1and
longratio2<1.414and
close<oldphand
close>currpland
signalid!=oldplb
if(longCond)
signalid:=oldplb
longsl=currpl-ta.tr
longtp=((close-longsl)*1.5)+close
strategy.entry("Long",strategy.long)
strategy.exit("ExitLong","Long",limit=math.min(longtp,oldph),stop=longsl)
shortCond=formshortand
shortratio1<0.786and
shortratio1>0.5and
shortratio2>1.1and
shortratio2<1.414and
close>oldpland
close<currphand
signalid!=oldphb
if(shortCond)
signalid:=oldphb
shortsl=currph+ta.tr
shorttp=close-((shortsl-close)*1.5)
strategy.entry("Short",strategy.short)
strategy.exit("ExitShort","Short",limit=math.max(shorttp,oldpl),stop=shortsl)
Expand (109 lines)
