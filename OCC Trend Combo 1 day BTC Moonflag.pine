Script Name: OCC Trend Combo 1 day BTC Moonflag
Author: MoonFlag
Description: Runs on BTC 1 DAY (NOTE USE THIS NOT THE PREVIOUS VERSION - DEFAULTS TUNED TO 1 day BTC HERE)

USE DEFAULT SETTINGS

The strategy is to maximise the profit for OCC longs (ALMA algo)

Longs start when the price action settles around the ALMA OCC, then typically breaks up

Then follow the trend indcator (blue/orange)

Shorts normally happen when the price action...
PineScript code:

Pine Scriptâ„¢ strategy
OCC Trend Combo 1 day BTC Moonflag
//@version=4
//Author  Josef  Tainsh  PhD  6Sept2020
//USE  STUDY  FOR  ALERTS  WITH  AUTO  TRADING  BOT
//study(title  =  "Open  Close  Crossover  for  BOT  Alerts",  shorttitle  =  "OCC  for  BOT  Alerts",overlay  =  true)
//USE  STRATEGY  TO  FIT  THE  MOVING  AVERAGE  AND  THE  TREND  FITS  BY  MINIMISING  LOSS  (OR  MAXIMISING  PROFITS)
//NOT  THAT  STRATEGIES  RARELY  SHOW  A  PROFIT  ALSO  THE  STRATEGIES  USE  THE  CROSS  OVER  ON  THE  MOVING  AVERAGE  TO  ENTER  A  POSITION
strategy(title  =  "OCC  Trend  Combo  1  day  BTC  Moonflag",  overlay  =  true,  initial_capital=1000,  commission_type=strategy.commission.percent,  commission_value=0.2,  default_qty_type  =  strategy.percent_of_equity,  default_qty_value=100,  pyramiding=0,  calc_on_order_fills=false)
//CalcOnTick  =  true
//calc_on_every_tick  =  false
//  Function  for  coders  who  want  to  offer  their  users  a  repainting/no-repainting  version  of  the  HTF  data.
//  It  has  the  advantage  of  using  only  one  `security()`  call  for  both.
f_security(_symbol,  _res,  _src,  _repaint)  =>  security(_symbol,  _res,  _src[_repaint  ?  0  :  barstate.isrealtime  ?  1  :  0])[_repaint  ?  0  :  barstate.isrealtime  ?  0  :  1]
/////////////////////////////////////////////////////////////////////////////
//  ===  BASE  FUNCTIONS  ===
/////////////////////////////////////////////////////////////////////////////
//This  function  returns  true  if  execution  is  at  the  start  of  a  new  bar  (so  the  last  bar  is  previous  close  where  alerts  are  determined)
is_newBar(stratRes)  =>
        t  =  time(stratRes)
        not  na(t)  and  (na(t[1])  or  t  >  t[1])
///////////////////////////////////////////////////////////////////////////////////////////////////
//  Returns  MA  input  selection  variant,  default  to  SMA  if  blank  or  typo.
variant(type,  src,  len,  offSig,  offALMA)  =>
        v1  =  sma(src,  len)                                                                                                    //  Simple
        v2  =  ema(src,  len)                                                                                                    //  Exponential
        v3  =  2  *  v2  -  ema(v2,  len)                                                                                    //  Double  Exponential
        v4  =  3  *  (v2  -  ema(v2,  len))  +  ema(ema(v2,  len),  len)                              //  Triple  Exponential
        v5  =  wma(src,  len)                                                                                                    //  Weighted
        v6  =  vwma(src,  len)                                                                                                  //  Volume  Weighted
        v7  =  na(v5[1])  ?  sma(src,  len)  :  (v5[1]  *  (len  -  1)  +  src)  /  len        //  Smoothed
        v8  =  wma(2  *  wma(src,  len  /  2)  -  wma(src,  len),  round(sqrt(len)))      //  Hull
        v9  =  linreg(src,  len,  offSig)                                                                              //  Least  Squares
        v10  =  alma(src,  len,  offALMA,  offSig)                                                              //  Arnaud  Legoux
        type=="EMA"?v2  :  type=="DEMA"?v3  :  type=="TEMA"?v4  :  type=="WMA"?v5  :  type=="VWMA"?v6  :  type=="SMMA"?v7  :  type=="HullMA"?v8  :  type=="LSMA"?v9  :  type=="ALMA"?v10  :  v1
/////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////
//SAMPLE  SETTINGS  FOR  THE  TREND  INDICATOR  FUNCTION
//1MIN      31,  0.2  (+-12%)
//timeResForTrend_1min  =  1,  [bLongs_1min,  oscLongs_1min]  =  functionTrend(timeResForTrend_1min,31,  0.2)
//plot(bLongs1_1min,"Trend  Indicator",  color=oscLongs_1min  ==  1  ?  color.blue  :#e65100,linewidth=3,transp=0)
//OTHER    20,  0.2    5min(LONG  -5%,  SHORT  -4%),  10min(LONG  -17%,  SHORT  -6%),  60min(long  +16%,  SHORT  )
//timeResForTrend_Not1min  =  XXXX,  [bLongs_Not1Min,  oscLongs_Not1Min]  =  functionTrend(timeResForTrend_Not1min,20,  0.2)
//plot(bLongs5_Not1Min,"Trend  Indicator",  color=oscLongs_Not1Min  ==  1  ?  color.blue  :#e65100,linewidth=3,transp=0)
/////////////////////////////////////////////
functionTrend(trendRes_Function,length_Function,sc_Function)=>
        b_Function  =0.
        ls_Function  =  0.
        src_Function  =  sc_Function*security(syminfo.tickerid,  trendRes_Function,  close)+(1-sc_Function)*nz(ls_Function[1],security(syminfo.tickerid,  trendRes_Function,  close))
        if  (is_newBar(trendRes_Function)==false)
                src_Function  :=  src_Function[1]
        er_Function  =  1  -  abs(change(src_Function,length_Function))/sum(abs(change(src_Function)),length_Function)
        n_Function  =  cum(1)-1
        a_Function  =  cum(abs(src_Function  -  nz(b_Function[1],src_Function)))/n_Function*(1+er_Function)
        b_Function  :=  src_Function  >  nz(b_Function[1],src_Function)  +  a_Function  ?  src_Function  :  src_Function  <  nz(b_Function[1],src_Function)  -  a_Function  ?  src_Function  :  nz(b_Function[1],src_Function)
        alpha_Function  =  fixnan(correlation(src_Function,b_Function,length_Function)  *  (stdev(src_Function,length_Function)/stdev(b_Function,length_Function)))
        beta_Function  =  sma(src_Function,length_Function)  -  alpha_Function*sma(b_Function,length_Function)
        ls_Function  :=  alpha_Function*b_Function+beta_Function
        osc_Function  =  0
        osc_Function  :=  b_Function  >  b_Function[1]  ?  1  :  b_Function  <  b_Function[1]  ?  0  :  osc_Function[1]
        if  (is_newBar(trendRes_Function)==false)
                er_Function  :=  er_Function[1]
                n_Function  :=  n_Function[1]
                a_Function  :=  a_Function[1]
      b_Function:=b_Function[1]
alpha_Function:=alpha_Function[1]
beta_Function:=beta_Function[1]
ls_Function:=ls_Function[1]
osc_Function:=osc_Function[1]
[b_Function,osc_Function]
/////////////////////////////////////////////////////////////////
pine_atr(length,stratRes_atr)=>
trueRange=max(max(security(syminfo.tickerid,stratRes_atr,high)-security(syminfo.tickerid,stratRes_atr,low),abs(security(syminfo.tickerid,stratRes_atr,high)-security(syminfo.tickerid,stratRes_atr,close[1]))),abs(security(syminfo.tickerid,stratRes_atr,low)-security(syminfo.tickerid,stratRes_atr,close[1])))
sum=0.0
sum:=(trueRange+(length-1)*nz(sum[1]))/length
sum
//////////////////////////////////////////////////////////////////////////////////////////////
//STOPLOSSANDTAKEPROFIT
//ALSONEEDSTOBEACTIVATEDINTHESTRATEGY
//long_tp_inp=input(1000,title='LongTakeProfit%',step=0.1)/100///LongTakeProfit
//long_sl_inp=input(5,title='LongStopLoss%',step=0.1)/100///LongStopLoss
//short_tp_inp=input(75,title='ShortTakeProfit%',step=0.1)/100///ShortTakeProfit
//short_sl_inp=input(5,title='ShortStopLoss%',step=0.1)/100///ShortStopLoss
//long_take_level=strategy.position_avg_price*(1+long_tp_inp)
//long_stop_level=strategy.position_avg_price*(1-long_sl_inp)
//short_take_level=strategy.position_avg_price*(1-short_tp_inp)
//short_stop_level=strategy.position_avg_price*(1+short_sl_inp)
//plot(long_take_level,color=color.green)
//plot(long_stop_level,color=color.red)
//plot(short_take_level,color=color.green)
//plot(short_stop_level,color=color.red)
//////////////////////////////////////////
//oneMinChartTrend=input(title="OneMinChart,TrendRes[ATR(15),Corr(18)]",defval=false)
//fourHourChartTrendLongsOnly=input(title="FourHourChart,Longs,ChoppyTrendRes[ATR(5),Corr{60)]",defval=false)
//oneHourChartTrendShortsOnly=input(title="OneHourChartTrend,Shorts,TrendRes[ATR(15),Corr(10)]",defval=false)
//oneMDayChartTrend=input(title="OneDayChartLongsbest,Shortspoor,TrendRes[ATR(25),Corr(60)]",defval=false)
trendRes_ATR=input(title="ATRTrendResolution:(mins)",defval="60",options=["1","2","3","5","7","9","10","11","12","15","20","25","30","45","60","90","120","180","240","1D","3D"],type=input.resolution)
Length=input(title="ATRTrendLength",defval=15,minval=1)
Multiplier=input(title="ATRTrendMultiplier",defval=6,minval=1)//avgTR=wma(atr(1),Length)
trendRes=input(title="CorrelationTrendResolution:(mins)",defval="120",options=["1","2","3","5","7","9","10","11","12","15","20","25","30","45","60","90","120","180","240","1D","3D"],type=input.resolution)
lengthTrend=input(24,"CorrelationTrendLength(eg28for1hour)")
scTrend=input(.2,"CorrelationTrendTuner(0to1)",step=0.1)
trendCombination=input(.2,"TrendCombinationTuner(0to1):0=allATR,1=allCorr",step=0.1)
//withsl
//1daylongsonly(worksalsowithshorts)
//20,10,20,10___25,15,6,60,24,0.2,0.4
//1minchart,longandshort-70%butvisibletrend
//1.5,1.5,1.5,1.5____15,7,2,10,12,0.5,0.4
//if(oneMinChartTrend)
//trendRes_ATR:="15"
//trendRes:="10"
//Length:=7
//Multiplier:=2
//lengthTrend:=12
//scTrend:=0.5
//trendCombination:=0.4
//choppyregionwithcharton4hour
//withsllongonly-shortsat-2%couldnotgetapositiveresultwithshorts,onlywhenmacrossesthroughafterarunup
//longson4h8%
//2.7,2,2,1,___5,15,6,60,21,0.2,0.4
//if(fourHourChartTrendLongsOnly)
//trendRes_ATR:="5"
//trendRes:="60"
//Length:=15
//Multiplier:=6
//lengthTrend:=21
//scTrend:=0.2
//trendCombination:=0.4
//shortson1h-30%butonlyshortstocatcharewhentheMAafteralongrunwithlotsofgreenturnsredwhenpopsoutofbackofpriceactionwithalongdrop
//inthiscaseusethetrendindicatortostoptherunafteralongwhile
//notsureaboutslandtpbut
//3.7,2,3.7,2,_15,11,5,10,17,0.8,0.3
//if(oneHourChartTrendShortsOnly)
//trendRes_ATR:="15"
//trendRes:="10"
//Length:=11
//Multiplier:=5
//lengthTrend:=17
//scTrend:=0.8
//trendCombination:=0.3
//1daylongsonly
//20,10,20,10_25,15,6,60,24,0.2,0.4
//if(oneMDayChartTrend)
//trendRes_ATR:="25"
//trendRes:="60"
//Length:=15
//Multiplier:=6
//lengthTrend:=24
//scTrend:=0.2
//trendCombination:=0.4
//Thisshows111%sincestartof2020,and323%sincethestartof2020
//1daylongsonly
//100,3,?,?_25,15,6,60,24,0.2,0.5(longsonly)(300%backto2019)
//?,?,60,0.3_25,15,6,60,24,0.2,0.5(shortsonly)(50%backto2019)
//Atakeprofitwiththeshortsworked,butthelonghad>100%insomeruns
//Thestoplossonthelongdidnotreallyhaveanyeffecthowever,withtheshortsastoplossof0.3%heloed
//However,thealgoonthechartwasthedailycloseandnotsureifthisworksinthesamewaywhencalculatingallthetimeonnewticks
//if(oneMDayChartTrend)
//trendRes_ATR:="25"
//trendRes:="60"
//Length:=15
//Multiplier:=6
//lengthTrend:=24
//scTrend:=0.2
//trendCombination:=0.4
//Thisshows37%sincethestartof2019,afewbigwinswithlotsofsmalllosses,muchmoretradesthanjustwithlongs(46comparedto2)
//[retA,posA]=trendATR(trendRes_ATR)
//plot(retA,color=color.blue,title="SecondTrendIdentifier")
//plot(retA,color=color.white,title="ATRTrend")
////////////////////////////////////////////////////////////////////////////////////////////
//THETRENDTRADEROVERLAYWHICHCOLOURSTHEBARS
avgTR=wma(pine_atr(1,trendRes_ATR),Length)
highestC=highest(Length)
lowestC=lowest(Length)
hiLimit=highestC[1]-(avgTR[1]*Multiplier)
loLimit=lowestC[1]+(avgTR[1]*Multiplier)
closeA=security(syminfo.tickerid,trendRes_ATR,close)
ret=0.
ret:=iff(closeA>hiLimitandcloseA>loLimit,hiLimit,iff(closeA<loLimitandcloseA<hiLimit,loLimit,nz(ret[1],0)))
pos=0.
pos:=iff(closeA>ret,1,iff(closeA<ret,-1,nz(pos[1],0)))
//barcolor(pos==-1?color.red:pos==1?color.green:color.blue)
//plot(ret,color=color.white,title="ATRTrend")
////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
//===ENDBASEFUNCTIONS===
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
//SETTHERESOLUTIONANDINPUTCHARAGERISTICSFORTHETRENDINDICATOR
/////////////////////////////////////////////////////////////////////////
[bTrend,oscTrend]=functionTrend(trendRes,lengthTrend,scTrend)
cssTrend=oscTrend==1?color.blue:#e65100
//plot(bTrend,"TrendIndicator",color=cssTrend[1],linewidth=3,transp=0)//bgcolor(oscLongs<0?color.green:color.red,transp=82)
//plot(bLongs,"TrendIndicator",color=cssLongs,linewidth=3,transp=0)//bgcolor(oscLongs<0?color.green:color.red,transp=82)
//alertcondition(change(oscTrend)>0,title="NewUpTrend",message="NewUpTrend")
//alertcondition(change(oscTrend)<0,title="NewDownTrend",message="NewDownTrend")
////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////
//TRENDCOMBINATION
///////////////////////////////////////////////////////////////////////////////////////////////
trendCombinationVal=(ret-bTrend)*trendCombination+bTrend//ret:=iff(closeA>hiLimitandcloseA>loLimit,hiLimit,iff(closeA<loLimitandcloseA<hiLimit,loLimit,nz(ret[1],0)))
posTrendCombination=0.
posTrendCombination:=iff(closeA>=trendCombinationVal,1,iff(closeA<trendCombinationVal,-1,nz(posTrendCombination[1],0)))
//barcolor(posTrendCombination[1]==-1?color.red:posTrendCombination[1]==1?color.green:color.blue)
posTrendCombinationColor=posTrendCombination==1?color.blue:#e65100
plot(trendCombinationVal,color=posTrendCombinationColor[2],linewidth=3,title="TrendCombo")
barcolor(posTrendCombinationColor[1])
//////////////////////////////////////////////////////////////////////////////////////////////
//===INPUTS===
//DEFAULTSETTINGSBELOWAREFOR15MINCHARTTIMEFRAME,FORTHEDAYILYTIMEFRAMEONCHARTANDALGOUSESMA29PERIOD
//MARESOLUTIONISSETTOPREDEFINEDVALUESTHEREAREALOTMISSINGWHICHMIGHTBEVERYIMPORTANTCONSIDERHAVINGANINTEGERFORTHEMINUTES
stratRes=input(defval="1D",title="SetMAResolution(noterunalertson1minchart)",type=input.resolution)
basisType=input(title="MAType:",defval="ALMA",options=["SMA","EMA","DEMA","TEMA","WMA","VWMA","SMMA","HullMA","LSMA","ALMA"],type=input.string)
basisLen=input(defval=18,title="MAPeriod",minval=1)
offsetSigma=input(defval=1,title="OffsetforLSMA/SigmaforALMA(6islarge)",minval=0)
offsetALMA=input(defval=0.88,title="AlmaOffset(between0and1,0.99=resposive,0.01=smooth)",minval=0,step=0.01)
//ignoreSmallCrossOvers=input(defval=0,title="IgnoreSmallCrossOverif$USDLessThan",minval=0)
so=security(syminfo.tickerid,stratRes,open,lookahead=barmerge.lookahead_on)
sh=security(syminfo.tickerid,stratRes,high,lookahead=barmerge.lookahead_on)
sl1=security(syminfo.tickerid,stratRes,low,lookahead=barmerge.lookahead_on)
sc=security(syminfo.tickerid,stratRes,close,lookahead=barmerge.lookahead_on)
br=so!=so[1]andsc!=sc[1]andsh!=sh[1]andsl1!=sl1[1]
col=so>sc?color.red:color.green
a1=na(br)?so:na
a2=na(br)?sh:na
a3=na(br)?sl1:na
a4=na(br)?sc:na
p1=plot(a1,"MTFOpen",color.white,style=plot.style_linebr,transp=100,editable=false)
p2=plot(a2,"MTFHigh",color.black,style=plot.style_linebr,transp=100,editable=false)
p3=plot(a3,"MTFLow",color.black,style=plot.style_linebr,transp=100,editable=false)
p4=plot(a4,"MTFClose",col,style=plot.style_linebr,transp=100,editable=false)
fill(p1,p4,col,transp=100,editable=false)
fill(p2,p3,color.silver,transp=100,editable=false)
reso(exp,res)=>security(syminfo.tickerid,res,exp,lookahead=barmerge.lookahead_on)
closeSeries=reso(variant(basisType,close,basisLen,offsetSigma,offsetALMA),stratRes)
openSeries=reso(variant(basisType,open,basisLen,offsetSigma,offsetALMA),stratRes)
//6HOURCHART1DAYTIMEFRAMEBACKTO2019
//SMA(19),360%300%LONGS60%SHORTS
//alma(38,,0.86)560%(400%LONGS,28%SHORTS)20TRADES
//Ifthereareanycrossoversinabar,howmanyarethere
//Justonecrossovermightsignifyachangeintrendforthegiventimeframe
//Lotsofcrossoversmightsignifyasidewardstrendwhichthisalgodoesnotworkwellwith
crossOverInBar=crossover(closeSeries,openSeries)
crossUnderInBar=crossunder(closeSeries,openSeries)
crossedOverOrUnderInBar=crossOverInBarorcrossUnderInBar
trendState=false
trendState:=closeSeries>openSeries?true:closeSeries<openSeries?false:trendState[1]
//closePlot=plot(closeSeries,title="CloseLine",color=#009900,linewidth=2,style=plot.style_line,transp=100,editable=false)
//openPlot=plot(openSeries,title="OpenLine",color=#CC0000,linewidth=2,style=plot.style_line,transp=100,editable=false)
closePlot=plot(closeSeries,title="CloseLine",color=#009900,linewidth=2,style=plot.style_line)
openPlot=plot(openSeries,title="OpenLine",color=#CC0000,linewidth=2,style=plot.style_line)
closePlotU=plot(trendState?closeSeries:na,transp=100,editable=false)
openPlotU=plot(trendState?openSeries:na,transp=100,editable=false)
closePlotD=plot(trendState?na:closeSeries,transp=100,editable=false)
openPlotD=plot(trendState?na:openSeries,transp=100,editable=false)
fill(openPlotU,closePlotU,title="MAUpTrend",color=#009900,transp=0)
fill(openPlotD,closePlotD,title="MADownTrend",color=#CC0000,transp=0)
//===/PLOTTING===
coLor=closeSeries>openSeries?color.green:color.red
hclose=plot(closeSeries,title="CloseSeries",color=coLor,linewidth=1,transp=100,editable=false)
hopen=plot(openSeries,title="OpenSeries",color=coLor,linewidth=1,transp=100,editable=false)
//longCond=crossover(closeSeries,openSeries)
//shortCond=crossunder(closeSeries,openSeries)
openLongCond=false
openShortCond=false
closeLongCond=false
closeShortCond=false
longCondLastBarClose=false
longCondLastBarClose:=nz(longCondLastBarClose[1],false)
longCondThisBarClose=false
crossOver=false
if(is_newBar(stratRes))
longCondThisBarClose:=closeSeries[1]>=openSeries[1]//+ignoreSmallCrossOvers
if(longCondLastBarClose!=longCondThisBarClose)
crossOver:=true
longCondLastBarClose:=longCondThisBarClose
longCondCrossOver=false
shortCondCrossOver=false
if(crossOver)
longCondCrossOver:=longCondThisBarClose
shortCondCrossOver:=notlongCondThisBarClose
openLongCond:=longCondCrossOver
openShortCond:=shortCondCrossOver
closeLongCond:=shortCondCrossOver
closeShortCond:=longCondCrossOver
//ACTIVATETHISTOSTRATEGYTESTTHECORRELATIONCOMBINATION
//CORRELATIONTREND
//longCondTrend=change(oscTrend)>0
//shortCondTrend=change(oscTrend)<0
//openLongCond:=longCondTrend
//openShortCond:=shortCondTrend
//closeLongCond:=shortCondTrend
//closeShortCond:=longCondTrend
////ACTIVATETHISTOSTRATEGYTESTTHEATRTREND
//longCondATRTrend=pos==1
//shortCondATRTrend=pos==-1
//openLongCond:=longCondATRTrend
//openShortCond:=shortCondATRTrend
//closeLongCond:=shortCondATRTrend
//closeShortCond:=longCondATRTrend
//ACTIVATETHISTOSTRATEGYTESTTHETRENDCOMBINATION
//TRENDCOMBINATION
//longCondTrendCombination=posTrendCombination==1
//shortCondTrendCombination=posTrendCombination==-1
//openLongCond:=longCondTrendCombination
//openShortCond:=shortCondTrendCombination
//closeLongCond:=shortCondTrendCombination
//closeShortCond:=longCondTrendCombination
//posTrendCombinationColor=posTrendCombination==1?color.blue:#e65100
//Onlygetintoatradewhenbothconditionsaresatisfied
//Getoutofatradewheneitherconiditionissatisfied
/////////////////LONG//////////////////
isEntry_Long=false
isEntry_Long:=nz(isEntry_Long[1],false)
isExit_Long=false
isExit_Long:=nz(isExit_Long[1],false)
entry_long=notisEntry_Long[1]andopenLongCond
exit_long=notisExit_LongandcloseLongCond
if(entry_long)
isEntry_Long:=true
isExit_Long:=false
if(exit_long)
isEntry_Long:=false
isExit_Long:=true
entry_long:=entry_long
exit_long:=exit_long
/////////////SHORT///////////////////////////
isEntry_Short=false
isEntry_Short:=nz(isEntry_Short[1],false)
isExit_Short=false
isExit_Short:=nz(isExit_Short[1],false)
entry_short=notisEntry_Short[1]andopenShortCond
exit_short=notisExit_ShortandcloseShortCond
if(entry_short)
isEntry_Short:=true
isExit_Short:=false
if(exit_short)
isEntry_Short:=false
isExit_Short:=true
entry_short:=entry_short
exit_short:=exit_short
//////////////////////////////////////////////////
//plotshape(series=entry_long,text="OpenLong",style=shape.triangleup,location=location.belowbar,color=color.white,size=size.small)
//plotshape(series=exit_long,text="ExitLong",style=shape.triangledown,location=location.belowbar,color=color.white,size=size.small)
//plotshape(series=entry_short,text="OpenShort",style=shape.triangledown,location=location.abovebar,color=color.white,size=size.small)
//plotshape(series=exit_short,text="ExitShort",style=shape.triangleup,location=location.abovebar,color=color.white,size=size.small)
//Alertsareforthestudymode
alertcondition(entry_long,title="EnterLong")
alertcondition(entry_short,title="EnterShort")
alertcondition(exit_long,title="ExitLong")
alertcondition(exit_short,title="ExitShort")
/////////////////////////////////////////////////////////////
//TOTESTTHESTRATEGY
///////////////////////////////////////////////////////////
///PERIOD-Thisisforthestrategymode///
testStartYear=input(2019,"BacktestStartYear")
testStartMonth=input(1,"BacktestStartMonth")
testStartDay=input(1,"BacktestStartDay")
testPeriodStart=timestamp(testStartYear,testStartMonth,testStartDay,0,0)
testStopYear=input(2020,"BacktestStopYear")
testStopMonth=input(12,"BacktestStopMonth")
testStopDay=input(31,"BacktestStopDay")
testPeriodStop=timestamp(testStopYear,testStopMonth,testStopDay,0,0)
testPeriod()=>
time>=testPeriodStartandtime<=testPeriodStop?true:false
includeLongTrades=input(title="IncludeLongTrades",defval=true,type=input.bool)
includeShortTrades=input(title="IncludeShortTrades",defval=false,type=input.bool)
entry_long:=entry_longandincludeLongTrades
exit_long:=exit_longandincludeLongTrades
entry_short:=entry_shortandincludeShortTrades
exit_short:=exit_shortandincludeShortTrades
//iftestPeriod()
//if(entry_long)
//strategy.close("ENTRY_SHORT",comment="closeshort")
//strategy.entry("ENTRY_LONG",strategy.long,oca_name="oca1",oca_type=strategy.oca.cancel,comment="openlong")
//if(exit_long)
//strategy.close("ENTRY_LONG",comment="closelong")
//if(entry_short)
//strategy.close("ENTRY_LONG",comment="closelong")
//strategy.entry("ENTRY_SHORT",strategy.short,oca_name="oca1",oca_type=strategy.oca.cancel,comment="openshort")
//if(exit_short)
//strategy.close("ENTRY_SHORT",comment="closeshort")
iftestPeriod()
if(entry_long)
strategy.close("ENTRY_SHORT",comment="closeshort")
strategy.entry("ENTRY_LONG",strategy.long,oca_name="oca1",oca_type=strategy.oca.cancel,comment="openlong")
if(exit_long)
strategy.close("ENTRY_LONG",comment="closelong")
if(entry_short)
strategy.close("ENTRY_LONG",comment="closelong")
strategy.entry("ENTRY_SHORT",strategy.short,oca_name="oca1",oca_type=strategy.oca.cancel,comment="openshort")
if(exit_short)
strategy.close("ENTRY_SHORT",comment="closeshort")
//STOPLOSSANDTAKEPROFIT
//if(close<long_stop_levelorclose>long_take_level)
//strategy.close("ENTRY_LONG",comment="closelongSL/TP")
//if(close>short_stop_levelorclose<short_take_level)
//strategy.close("ENTRY_SHORT",comment="closeshortSL/TP")
//closeNowA=0.
//closeNow=security(syminfo.tickerid,"1",close)
//closeNowA:=closeNow
//if(is_newBar("1")==false)
//closeNowA:=closeNowA[1]
//plot(closeNowA)
////if(openLongCond)
//if(closeNowA<long_stop_levelorcloseNowA>long_take_level)
//strategy.close("ENTRY_LONG",comment="closelongSL/TP")
////if(openShortCond)
//if(closeNowA>short_stop_levelorcloseNowA<short_take_level)
//strategy.close("ENTRY_SHORT",comment="closeshortSL/TP")
//if(strategy.position_avg_price)
//strategy.entry(id="Long",long=true,when=entry_long)
//strategy.exit("TakeProfit/StopLoss","Long",stop=long_stop_level,limit=long_take_level)
//strategy.close(id="Long",when=exit_long,comment="ExitLongTP/SL")
//strategy.entry(id="Short",short=true,when=entry_short)
//strategy.exit("TakeProfit/StopLoss","Long",stop=short_stop_level,limit=short_take_level)
//strategy.close(id="Short",when=exit_short,comment="ExitShortTP/SL")
//iftestPeriod()
//if(entry_long)
//strategy.close("ENTRY_SHORT",comment="josef.tainsh@gmail.com_EXIT-SHORT_BINANCE-FUTURES_BTC/USDT_josef.tainsh@gmail.com-BOT-NAME_3M")
//strategy.entry("ENTRY_LONG",strategy.long,oca_name="oca1",oca_type=strategy.oca.cancel,comment="josef.tainsh@gmail.com_ENTER-LONG_BINANCE-FUTURES_BTC/USDT_josef.tainsh@gmail.com-BOT-NAME_3M")
//if(exit_long)
//strategy.close("ENTRY_LONG",comment="josef.tainsh@gmail.com_EXIT-LONG_BINANCE-FUTURES_BTC/USDT_josef.tainsh@gmail.com-BOT-NAME_3M")
//if(entry_short)
//strategy.close("ENTRY_LONG",comment="josef.tainsh@gmail.com_EXIT-LONG_BINANCE-FUTURES_BTC/USDT_josef.tainsh@gmail.com-BOT-NAME_3M")
//strategy.entry("ENTRY_SHORT",strategy.short,oca_name="oca1",oca_type=strategy.oca.cancel,comment="josef.tainsh@gmail.com_ENTER-SHORT_BINANCE-FUTURES_BTC/USDT_josef.tainsh@gmail.com-BOT-NAME_3M")
//if(exit_short)
//strategy.close("ENTRY_SHORT",comment="josef.tainsh@gmail.com_EXIT-SHORT_BINANCE-FUTURES_BTC/USDT_josef.tainsh@gmail.com-BOT-NAME_3M")
//if(close<long_stop_levelorclose>long_take_level)
//strategy.close("ENTRY_LONG",comment="josef.tainsh@gmail.com_EXIT-LONG_BINANCE-FUTURES_BTC/USDT_josef.tainsh@gmail.com-BOT-NAME_3M")
//if(close>short_stop_levelorclose<short_take_level)
//strategy.close("ENTRY_SHORT",comment="josef.tainsh@gmail.com_EXIT-SHORT_BINANCE-FUTURES_BTC/USDT_josef.tainsh@gmail.com-BOT-NAME_3M")
//strategy.cancel(id="ENTRY_LONG")
Expand (511 lines)
