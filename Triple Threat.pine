Script Name: Triple Threat
Author: alexjnelson
Description: This indicator provides buy and sell signals for Bitcoin based on confluence from well-known momentum, volatility, and trend indicators. It has successfully captured the major directional trends on Bitcoin's daily chart since 2018, and the settings are currently optimized for this chart in particular. This indicator implements RSI to gauge momentum, BBWP to gauge...
PineScript code:

Pine Script™ strategy
Triple Threat
//////////////////////////////////////////////////////////////////////////////
//  The  following  is  code  by  The_Caretaker  used  to  create  the  BBWP  indicator.
//  Shoutout  to  The_Caretaker  as  well  as  the  rest  of  the  Krown  Crypto  team.
//  Past  this  section  is  original  code.
//
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  @version  =  4
//  @author    =  The_Caretaker
//  ©  The_Caretaker
//
//  Much  respect  to  John  A  Bollinger  the  creator  of  Bollinger  Bands®  and  Bollinger  Band  Width  indicators.
//
//  Feel  free  to  reuse  or  develop  this  script  further,  please  drop  me  a  note  below  if  you  find  it  useful.
//
strategy("Triple  Threat",  overlay=false,  precision=2,  default_qty_type=strategy.percent_of_equity,  default_qty_value=100,  initial_capital=100000,  pyramiding=0)
i_priceSrc            =  input  (  close,                        "Price  Source",  input.source,              group  =  "General  Properties"  )
show_rsi  =  input(true,  'Show  RSI?',  type=input.bool,  group="General  Properties")
show_bbwp  =  input(true,  'Show  BBWP?',  type=input.bool,  group="General  Properties")
show_signals  =  input(true,  'Show  Signals?',  type=input.bool,  group="General  Properties")
show_unconfirmed  =  input(true,  'Show  Unconfirmed  Signals?',  type=input.bool,  group="General  Properties")
///////////////////////////////////////////////////////////////////////////////
//  inputs

i_basisType          =  input  (  "SMA",                        "Basis  Type",      input.string,    options  =  [  "SMA",  "EMA",  "VWMA"  ],                                                    group  =  "BBWP  Properties"  )
i_bbwpLen              =  input  (  21,                              "Length",              input.integer,  minval    =  1,                                                                                                  group  =  "BBWP  Properties"  )
i_bbwpLkbk            =  input  (  255,                            "Lookback",          input.integer,  minval    =  1,                                                                                                  group  =  "BBWP  Properties"  )
i_c_bbwpTyped      =  input  (  "Spectrum",              "Color  Type",      input.string,    options  =  [  "Spectrum",  "Solid"  ],                      inline  =  "1",      group  =  "BBWP  Plot  Settings"  )
i_c_spctrmType    =  input  (  "Blue  Green  Red",  "Spectrum",          input.string,    options  =  [  "Blue  Red",  "Blue  Green  Red"],      inline  =  "1",      group  =  "BBWP  Plot  Settings"  )
i_c_bbwpsolid      =  input  (  #FFFF00,                    "Solid",                input.color,                                                                                                inline  =  "1",      group  =  "BBWP  Plot  Settings"  )
i_bbwpWidth          =  input  (  2,                                "Line  Width",      input.integer,  minval    =  1,  maxval  =  4,                                          inline  =  "2",      group  =  "BBWP  Plot  Settings"  )
i_ma1On                  =  input  (  true,                          "",                          input.bool,                                                                                                  inline  =  "1",      group  =  "Moving  Average  Settings"  )
i_ma1Type              =  input  (  "SMA",                        "MA  1  Type",        input.string,    options  =  [  "SMA",  "EMA",  "VWMA"  ],                    inline  =  "1",      group  =  "Moving  Average  Settings"  )
i_c_ma1                  =  input  (  #FFFFFF,                    "",                          input.color,                                                                                                inline  =  "1",      group  =  "Moving  Average  Settings"  )
i_ma1Len                =  input  (  8,                                "Length",              input.integer,  minval    =  1,                                                                  inline  =  "1",      group  =  "Moving  Average  Settings"  )
///////////////////////////////////////////////////////////////////////////////
//  variable  declarations
var  c_prcntSpctrm1  =  array.new_color  (  na  )
if  barstate.isfirst
        array.push  (  c_prcntSpctrm1,  #0000FF  ),
        array.push  (  c_prcntSpctrm1,  #000AFF  ),  array.push  (  c_prcntSpctrm1,  #0014FF  ),  array.push  (  c_prcntSpctrm1,  #001FFF  ),  array.push  (  c_prcntSpctrm1,  #0029FF  ),  array.push  (  c_prcntSpctrm1,  #0033FF  ),
        array.push  (  c_prcntSpctrm1,  #003DFF  ),  array.push  (  c_prcntSpctrm1,  #0047FF  ),  array.push  (  c_prcntSpctrm1,  #0052FF  ),  array.push  (  c_prcntSpctrm1,  #005CFF  ),  array.push  (  c_prcntSpctrm1,  #0066FF  ),
        array.push  (  c_prcntSpctrm1,  #0070FF  ),  array.push  (  c_prcntSpctrm1,  #007AFF  ),  array.push  (  c_prcntSpctrm1,  #0085FF  ),  array.push  (  c_prcntSpctrm1,  #008FFF  ),  array.push  (  c_prcntSpctrm1,  #0099FF  ),
        array.push  (  c_prcntSpctrm1,  #00A3FF  ),  array.push  (  c_prcntSpctrm1,  #00ADFF  ),  array.push  (  c_prcntSpctrm1,  #00B8FF  ),  array.push  (  c_prcntSpctrm1,  #00C2FF  ),  array.push  (  c_prcntSpctrm1,  #00CCFF  ),
        array.push  (  c_prcntSpctrm1,  #00D6FF  ),  array.push  (  c_prcntSpctrm1,  #00E0FF  ),  array.push  (  c_prcntSpctrm1,  #00EBFF  ),  array.push  (  c_prcntSpctrm1,  #00F5FF  ),  array.push  (  c_prcntSpctrm1,  #00FFFF  ),
        array.push  (  c_prcntSpctrm1,  #00FFF5  ),  array.push  (  c_prcntSpctrm1,  #00FFEB  ),  array.push  (  c_prcntSpctrm1,  #00FFE0  ),  array.push  (  c_prcntSpctrm1,  #00FFD6  ),  array.push  (  c_prcntSpctrm1,  #00FFCC  ),
        array.push  (  c_prcntSpctrm1,  #00FFC2  ),  array.push  (  c_prcntSpctrm1,  #00FFB8  ),  array.push  (  c_prcntSpctrm1,  #00FFAD  ),  array.push  (  c_prcntSpctrm1,  #00FFA3  ),  array.push  (  c_prcntSpctrm1,  #00FF99  ),
        array.push  (  c_prcntSpctrm1,  #00FF8F  ),  array.push  (  c_prcntSpctrm1,  #00FF85  ),  array.push  (  c_prcntSpctrm1,  #00FF7A  ),  array.push  (  c_prcntSpctrm1,  #00FF70  ),  array.push  (  c_prcntSpctrm1,  #00FF66  ),
        array.push  (  c_prcntSpctrm1,  #00FF5C),array.push(c_prcntSpctrm1,#00FF52),array.push(c_prcntSpctrm1,#00FF47),array.push(c_prcntSpctrm1,#00FF3D),array.push(c_prcntSpctrm1,#00FF33),
array.push(c_prcntSpctrm1,#00FF29),array.push(c_prcntSpctrm1,#00FF1F),array.push(c_prcntSpctrm1,#00FF14),array.push(c_prcntSpctrm1,#00FF0A),array.push(c_prcntSpctrm1,#00FF00),
array.push(c_prcntSpctrm1,#0AFF00),array.push(c_prcntSpctrm1,#14FF00),array.push(c_prcntSpctrm1,#1FFF00),array.push(c_prcntSpctrm1,#29FF00),array.push(c_prcntSpctrm1,#33FF00),
array.push(c_prcntSpctrm1,#3DFF00),array.push(c_prcntSpctrm1,#47FF00),array.push(c_prcntSpctrm1,#52FF00),array.push(c_prcntSpctrm1,#5CFF00),array.push(c_prcntSpctrm1,#66FF00),
array.push(c_prcntSpctrm1,#70FF00),array.push(c_prcntSpctrm1,#7AFF00),array.push(c_prcntSpctrm1,#85FF00),array.push(c_prcntSpctrm1,#8FFF00),array.push(c_prcntSpctrm1,#99FF00),
array.push(c_prcntSpctrm1,#A3FF00),array.push(c_prcntSpctrm1,#ADFF00),array.push(c_prcntSpctrm1,#B8FF00),array.push(c_prcntSpctrm1,#C2FF00),array.push(c_prcntSpctrm1,#CCFF00),
array.push(c_prcntSpctrm1,#D6FF00),array.push(c_prcntSpctrm1,#E0FF00),array.push(c_prcntSpctrm1,#EBFF00),array.push(c_prcntSpctrm1,#F5FF00),array.push(c_prcntSpctrm1,#FFFF00),
array.push(c_prcntSpctrm1,#FFF500),array.push(c_prcntSpctrm1,#FFEB00),array.push(c_prcntSpctrm1,#FFE000),array.push(c_prcntSpctrm1,#FFD600),array.push(c_prcntSpctrm1,#FFCC00),
array.push(c_prcntSpctrm1,#FFC200),array.push(c_prcntSpctrm1,#FFB800),array.push(c_prcntSpctrm1,#FFAD00),array.push(c_prcntSpctrm1,#FFA300),array.push(c_prcntSpctrm1,#FF9900),
array.push(c_prcntSpctrm1,#FF8F00),array.push(c_prcntSpctrm1,#FF8500),array.push(c_prcntSpctrm1,#FF7A00),array.push(c_prcntSpctrm1,#FF7000),array.push(c_prcntSpctrm1,#FF6600),
array.push(c_prcntSpctrm1,#FF5C00),array.push(c_prcntSpctrm1,#FF5200),array.push(c_prcntSpctrm1,#FF4700),array.push(c_prcntSpctrm1,#FF3D00),array.push(c_prcntSpctrm1,#FF3300),
array.push(c_prcntSpctrm1,#FF2900),array.push(c_prcntSpctrm1,#FF1F00),array.push(c_prcntSpctrm1,#FF1400),array.push(c_prcntSpctrm1,#FF0000),array.push(c_prcntSpctrm1,#FF0000)
varc_prcntSpctrm2=array.new_color(na)
ifbarstate.isfirst
array.push(c_prcntSpctrm2,#0000FF),
array.push(c_prcntSpctrm2,#0200FC),array.push(c_prcntSpctrm2,#0500F9),array.push(c_prcntSpctrm2,#0700F7),array.push(c_prcntSpctrm2,#0A00F4),array.push(c_prcntSpctrm2,#0C00F2),
array.push(c_prcntSpctrm2,#0F00EF),array.push(c_prcntSpctrm2,#1100ED),array.push(c_prcntSpctrm2,#1400EA),array.push(c_prcntSpctrm2,#1600E8),array.push(c_prcntSpctrm2,#1900E5),
array.push(c_prcntSpctrm2,#1C00E2),array.push(c_prcntSpctrm2,#1E00E0),array.push(c_prcntSpctrm2,#2100DD),array.push(c_prcntSpctrm2,#2300DB),array.push(c_prcntSpctrm2,#2600D8),
array.push(c_prcntSpctrm2,#2800D6),array.push(c_prcntSpctrm2,#2B00D3),array.push(c_prcntSpctrm2,#2D00D1),array.push(c_prcntSpctrm2,#3000CE),array.push(c_prcntSpctrm2,#3300CC),
array.push(c_prcntSpctrm2,#3500C9),array.push(c_prcntSpctrm2,#3800C6),array.push(c_prcntSpctrm2,#3A00C4),array.push(c_prcntSpctrm2,#3D00C1),array.push(c_prcntSpctrm2,#3F00BF),
array.push(c_prcntSpctrm2,#4200BC),array.push(c_prcntSpctrm2,#4400BA),array.push(c_prcntSpctrm2,#4700B7),array.push(c_prcntSpctrm2,#4900B5),array.push(c_prcntSpctrm2,#4C00B2),
array.push(c_prcntSpctrm2,#4F00AF),array.push(c_prcntSpctrm2,#5100AD),array.push(c_prcntSpctrm2,#5400AA),array.push(c_prcntSpctrm2,#5600A8),array.push(c_prcntSpctrm2,#5900A5),
array.push(c_prcntSpctrm2,#5B00A3),array.push(c_prcntSpctrm2,#5E00A0),array.push(c_prcntSpctrm2,#60009E),array.push(c_prcntSpctrm2,#63009B),array.push(c_prcntSpctrm2,#660099),
array.push(c_prcntSpctrm2,#680096),array.push(c_prcntSpctrm2,#6B0093),array.push(c_prcntSpctrm2,#6D0091),array.push(c_prcntSpctrm2,#70008E),array.push(c_prcntSpctrm2,#72008C),
array.push(c_prcntSpctrm2,#750089),array.push(c_prcntSpctrm2,#770087),array.push(c_prcntSpctrm2,#7A0084),array.push(c_prcntSpctrm2,#7C0082),array.push(c_prcntSpctrm2,#7F007F),
array.push(c_prcntSpctrm2,#82007C),array.push(c_prcntSpctrm2,#84007A),array.push(c_prcntSpctrm2,#870077),array.push(c_prcntSpctrm2,#890075),array.push(c_prcntSpctrm2,#8C0072),
array.push(c_prcntSpctrm2,#8E0070),array.push(c_prcntSpctrm2,#91006D),array.push(c_prcntSpctrm2,#93006B),array.push(c_prcntSpctrm2,#960068),array.push(c_prcntSpctrm2,#990066),
array.push(c_prcntSpctrm2,#9B0063),array.push(c_prcntSpctrm2,#9E0060),array.push(c_prcntSpctrm2,#A0005E),array.push(c_prcntSpctrm2,#A3005B),array.push(c_prcntSpctrm2,#A50059),
array.push(c_prcntSpctrm2,#A80056),array.push(c_prcntSpctrm2,#AA0054),array.push(c_prcntSpctrm2,#AD0051),array.push(c_prcntSpctrm2,#AF004F),array.push(c_prcntSpctrm2,#B2004C),
array.push(c_prcntSpctrm2,#B50049),array.push(c_prcntSpctrm2,#B70047),array.push(c_prcntSpctrm2,#BA0044),array.push(c_prcntSpctrm2,#BC0042),array.push(c_prcntSpctrm2,#BF003F),
array.push(c_prcntSpctrm2,#C1003D),array.push(c_prcntSpctrm2,#C4003A),array.push(c_prcntSpctrm2,#C60038),array.push(c_prcntSpctrm2,#C90035),array.push(c_prcntSpctrm2,#CC0033),
array.push(c_prcntSpctrm2,#CE0030),array.push(c_prcntSpctrm2,#D1002D),array.push(c_prcntSpctrm2,#D3002B),array.push(c_prcntSpctrm2,#D60028),array.push(c_prcntSpctrm2,#D80026),
array.push(c_prcntSpctrm2,#DB0023),array.push(c_prcntSpctrm2,#DD0021),array.push(c_prcntSpctrm2,#E0001E),array.push(c_prcntSpctrm2,#E2001C),array.push(c_prcntSpctrm2,#E50019),
array.push(c_prcntSpctrm2,#E80016),array.push(c_prcntSpctrm2,#EA0014),array.push(c_prcntSpctrm2,#ED0011),array.push(c_prcntSpctrm2,#EF000F),array.push(c_prcntSpctrm2,#F2000C),
array.push(c_prcntSpctrm2,#F4000A),array.push(c_prcntSpctrm2,#F70007),array.push(c_prcntSpctrm2,#F90005),array.push(c_prcntSpctrm2,#FC0002),array.push(c_prcntSpctrm2,#FF0000)
///////////////////////////////////////////////////////////////////////////////
//functiondeclarations
f_maType(price,len,type)=>type=="SMA"?sma(price,len):type=="EMA"?ema(price,len):vwma(price,len)

f_bbwp(price,bbwLen,bbwpLen,type)=>
floatbasis=f_maType(price,bbwLen,type)
floatdev=stdev(price,bbwLen)
_bbw=((basis+dev)-(basis-dev))/basis
_bbwSum=0
fori=1tobbwpLen
_bbwSum:=_bbwSum+(_bbw[i]>_bbw?0:1)
return=(_bbwSum/i_bbwpLkbk)*100
f_clrSlct(percent,select,type,solid,array1,array2)=>select=="Solid"?solid:array.get(type=="BlueGreenRed"?array1:array2,round(percent))
///////////////////////////////////////////////////////////////////////////////
//calculations
bbwp=f_bbwp(i_priceSrc,i_bbwpLen,i_bbwpLkbk,i_basisType)
c_bbwp=f_clrSlct(bbwp,i_c_bbwpTyped,i_c_spctrmType,i_c_bbwpsolid,c_prcntSpctrm1,c_prcntSpctrm2)
bbwpMA1=i_ma1On?f_maType(bbwp,i_ma1Len,i_ma1Type):na
/////////////////////////////
//endofcodecreatedbyThe_Caretaker
//////////////////////////////////////////////////////////////////////////////
rsi_length=input(14,'RSILength',group='RSISettings')
rsi_ma_length=input(7,'RSIMALength',group='RSISettings')
crossover_threshold=input(5,'CrossoverThreshold',type=input.float,group='RSIStrategySettings')
retest_threshold=input(3,'RetestThreshold',type=input.float,group='RSIStrategySettings')
instant_threshold=input(12,'InstantSignalThreshold',type=input.float,group='RSIStrategySettings')
confirmation_ma_basisType=input("EMA","MovingAverageType",input.string,options=["SMA","EMA","VWMA"],group="ConfirmationMovingAverageProperties")
confirmation_ma_length=input(50,"MovingAverageLength",input.integer,group="ConfirmationMovingAverageProperties")
oversold_level=input(35,'OversoldLevel',type=input.float,group='RSIStrategySettings')
overbought_level=input(65,'OverboughtLevel',type=input.float,group='RSIStrategySettings')
bbwp_threshold=input(4,'BBWPConfirmationThreshold',type=input.float,group='RSIStrategySettings')
enable_stoploss=input(false,'EnableStoploss?',type=input.bool,group="OtherStrategySettings")
stoploss=input(0.07,'StopLoss%',type=input.float,group="OtherStrategySettings")
enable_takeprofit=input(false,'EnableTakeprofit?',type=input.bool,group="OtherStrategySettings")
takeprofit=input(0.55,'TakeProfit%',type=input.float,group="OtherStrategySettings")
enable_long=input(true,'EnableLongPositions?',type=input.bool,group="OtherStrategySettings")
enable_short=input(true,'EnableShortPositions?',type=input.bool,group="OtherStrategySettings")
//allowstartandenddates
startDate=input(title="StartDate(setanystarttimeto0forfurthestdate)",type=input.integer,defval=1,minval=0,maxval=31,group="Timeframe")
startMonth=input(title="StartMonth(setanystarttimeto0forfurthestdate)",type=input.integer,defval=1,minval=0,maxval=12,group="Timeframe")
startYear=input(title="StartYear(setanystarttimeto0forfurthestdate)",type=input.integer,defval=2019,minval=0,maxval=2100,group="Timeframe")
endDate=input(title="EndDate(setanyendtimeto0fortoday'sdate)",type=input.integer,defval=0,minval=0,maxval=31,group="Timeframe")
endMonth=input(title="EndMonth(setanyendtimeto0fortoday'sdate)",type=input.integer,defval=0,minval=0,maxval=12,group="Timeframe")
endYear=input(title="EndYear(setanyendtimeto0fortoday'sdate)",type=input.integer,defval=0,minval=0,maxval=2100,group="Timeframe")
inDateRange=false
if(endDate==0orendMonth==0orendYear==0)and(startDate==0orstartMonth==0orstartYear==0)
inDateRange:=true
elseifendDate==0orendMonth==0orendYear==0
inDateRange:=time>=timestamp(syminfo.timezone,startYear,startMonth,startDate,0,0)
elseifstartDate==0orstartMonth==0orstartYear==0
inDateRange:=time<=timestamp(syminfo.timezone,endYear,endMonth,endDate,0,0)
else
inDateRange:=(time>=timestamp(syminfo.timezone,startYear,startMonth,startDate,0,0))and(time<timestamp(syminfo.timezone,endYear,endMonth,endDate,0,0))
rsi=rsi(i_priceSrc,rsi_length)
rsi_ma=sma(rsi,rsi_ma_length)
rsi_crossed_up=false
rsi_retested_up=false
//startcheckingforupwardsretestswhentheRSIhascrossedabovetheMAbyatleast3pts(orthecrossover_threshold)andhasnotfallento2ptsbelowtheMA(ortheretest_threshold)
rsi_crossed_up:=(rsi_crossed_up[1]andnot(rsi_ma-rsi>retest_threshold))or(rsi-rsi_ma>crossover_threshold)
//keepoftrackofwhenaretestoccured(rsiexceedsMAbylessthantheretestthreshold),untiltheRSIfallsbelowtheMAbythethreshold
//rsi_crossed_upmustbetrue,becausethisalreadychecksifthersihasfallenbelowtheMAbythethresholdtocancelthesignal
rsi_retested_up:=rsi_crossed_upand(rsi_retested_up[1]or(rsi-rsi_ma<retest_threshold))
//iftherehasbeenaretestandthersiexceedstheMAbythecrossoverthresholdagain,triggerabuysignal
//alsotriggerabuysignaliftheRSIexceedstheMAbythe"instantsignalthreshold"
rsi_retest_buy=(rsi_retested_upand(rsi-rsi_ma>crossover_threshold))or(rsi-rsi_ma>instant_threshold)
//dothesamethingtothedownside
rsi_crossed_down=false
rsi_retested_down=false
rsi_crossed_down:=(rsi_crossed_down[1]andnot(rsi-rsi_ma>retest_threshold))or(rsi_ma-rsi>crossover_threshold)
rsi_retested_down:=rsi_crossed_downand(rsi_retested_down[1]or(rsi_ma-rsi<retest_threshold))
rsi_retest_sell=(rsi_retested_downand(rsi_ma-rsi>crossover_threshold))or(rsi_ma-rsi>instant_threshold)
rsi_buy_zone=false
rsi_buy_zone:=(rsi_retest_buyorrsi_buy_zone[1])andnotrsi_retest_sell
rsi_sell_zone=false
rsi_sell_zone:=(rsi_retest_sellorrsi_sell_zone[1])andnotrsi_retest_buy
//whenthesellzoneswitchestoabuyzoneorviceversa
rsi_buy_signal=rsi_buy_zoneandrsi_sell_zone[1]
rsi_sell_signal=rsi_sell_zoneandrsi_buy_zone[1]
//ifRSIisoversoldinaBuyzone,confirmthemostrecentBuysignal.ifRSIisoversoldinaSellzone,confirmthenextBuysignal.
forward_buy_confirmation=false
//carryoverthepreviousconfirmationunlessenteringasellzoneforthefirsttime
forward_buy_confirmation:=(forward_buy_confirmation[1]andnotrsi_sell_signal)orrsi<=oversold_level
//ifRSIisoverboughtinaSellzone,confirmthemostrecentSellsignal.ifRSIisoverboughtinaBuyzone,confirmthenextSellsignal.
forward_sell_confirmation=false
//carryoverthepreviousconfirmationunlessenteringabuyzoneforthefirsttime
forward_sell_confirmation:=(forward_sell_confirmation[1]andnotrsi_buy_signal)orrsi>=overbought_level
//alongpositionmayonlybeenterediftheRSIMAisnolongerbelowtheoversoldlevel,andRSIisnowabovetheMA
allow_buy=rsi>rsi_maandrsi_ma>oversold_level
//ashortpositionmayonlybeenterediftheRSIMAisnolongerabovetheoverboughtlevel,andRSIisnowbelowtheMA
allow_sell=rsi<rsi_maandrsi_ma<overbought_level
//confirmanysignalifBBWP>theBBWPconfirmationthreshold
bbwp_confirmation=bbwp-bbwpMA1>bbwp_threshold
//tradeonconfirmedsignals
full_buy_signal=rsi_buy_zoneand(forward_buy_confirmationorbbwp_confirmation)andallow_buy
full_sell_signal=rsi_sell_zoneand(forward_sell_confirmationorbbwp_confirmation)andallow_sell
confirmed_buy_zone=false
confirmed_sell_zone=false
//onlyenterabuyorsellzoneiftherewasconfirmationwitheithertheRSIorBBWP,andapositionisallowedbasedontherelativeplacementoftheRSIanditsMA(allow_buyorallow_sell)
confirmed_buy_zone:=(confirmed_buy_zone[1]orfull_buy_signal)andnotfull_sell_signal
confirmed_sell_zone:=(confirmed_sell_zone[1]orfull_sell_signal)andnotfull_buy_signal
confirmed_buy_signal=confirmed_buy_zoneandconfirmed_sell_zone[1]
confirmed_sell_signal=confirmed_sell_zoneandconfirmed_buy_zone[1]
//EMAsandEMAsignals
confirmation_ma=f_maType(i_priceSrc,confirmation_ma_length,confirmation_ma_basisType)
ma_buy_zone=confirmed_buy_zoneand(i_priceSrc>confirmation_ma)
ma_sell_zone=confirmed_sell_zoneand(i_priceSrc<confirmation_ma)
ma_buy_confirmation=ma_buy_zoneandnotma_buy_zone[1]
ma_sell_confirmation=ma_sell_zoneandnotma_sell_zone[1]
ma_full_buy_zone=false
ma_full_sell_zone=false
ma_full_buy_zone:=(ma_full_buy_zone[1]orma_buy_confirmation)andnotma_sell_confirmation
ma_full_sell_zone:=(ma_full_sell_zone[1]orma_sell_confirmation)andnotma_buy_confirmation
ma_buy_signal=ma_full_buy_zoneandnotma_full_buy_zone[1]
ma_sell_signal=ma_full_sell_zoneandnotma_full_sell_zone[1]
//plots
p_oversold=hline(show_rsi?oversold_level:na,"Oversold",#990000,hline.style_dashed,1)
p_overbought=hline(show_rsi?overbought_level:na,"Overbought",#009900,hline.style_dashed,1)
p_rsi_buy=plot(show_signalsandshow_unconfirmedandrsi_buy_signal?25:na,"RSIBuySignal",#009900,1,plot.style_columns,editable=false,histbase=0)
p_rsi_sell=plot(show_signalsandshow_unconfirmedandrsi_sell_signal?25:na,"RSISellSignal",#990000,1,plot.style_columns,editable=false,histbase=0)
p_rsi_confirmed_buy=plot(show_signalsandshow_unconfirmedandconfirmed_buy_signal?50:na,"RSIConfirmedBuySignal",#009900,1,plot.style_columns,editable=false,histbase=0)
p_rsi_confirmed_sell=plot(show_signalsandshow_unconfirmedandconfirmed_sell_signal?50:na,"RSIConfirmedSellSignal",#990000,1,plot.style_columns,editable=false,histbase=0)
p_confirmed_buy=plot(show_signalsandma_buy_signal?100:na,"FullyConfirmedBuySignal",#00ff00,1,plot.style_columns,editable=false,histbase=0)
p_confirmed_sell=plot(show_signalsandma_sell_signal?100:na,"FullyConfirmedSellSignal",#ff0000,1,plot.style_columns,editable=false,histbase=0)
p_bbwp=plot(show_bbwp?bbwp:na,"BBWP",c_bbwp,1,plot.style_line,editable=false)
p_ma1=plot(show_bbwp?bbwpMA1:na,"MA1",i_c_ma1,1,plot.style_circles,0)
p_rsi=plot(show_rsi?rsi:na,"RSI",color.purple,2)
p_rsi_ma=plot(show_rsi?rsi_ma:na,"RSIMA",color.orange,1)
//positionentriesandexits
ifinDateRangeandstrategy.equity>0
ifenable_long
strategy.entry('Long',strategy.long,when=ma_buy_signal,alert_message="BUYsignalonBTCUSD")
else
strategy.close('Short',when=ma_buy_signal,alert_message="BUYsignalonBTCUSD")
ifenable_short
strategy.entry('Short',strategy.short,when=ma_sell_signal,alert_message="SELLsignalonBTCUSD")
else
strategy.close('Long',when=ma_sell_signal,alert_message="SELLsignalonBTCUSD")

ifenable_stoplossandenable_takeprofit
strategy.exit('SL/TPLong','Long',stop=strategy.position_avg_price*(1-stoploss),limit=strategy.position_avg_price*(1+takeprofit),when=strategy.position_size>0,alert_message="SL/TPreachedonBTCUSD")
strategy.exit('SL/TPShort','Short',stop=strategy.position_avg_price*(1+stoploss),limit=strategy.position_avg_price*(1-takeprofit),when=strategy.position_size<0,alert_message="SL/TPreachedonBTCUSD")
elseifenable_stoploss
strategy.exit('SLLong','Long',stop=strategy.position_avg_price*(1-stoploss),when=strategy.position_size>0,alert_message="SL/TPreachedonBTCUSD")
strategy.exit('SLShort','Short',stop=strategy.position_avg_price*(1+stoploss),when=strategy.position_size<0,alert_message="SL/TPreachedonBTCUSD")
elseifenable_takeprofit
strategy.exit('TPLong','Long',limit=strategy.position_avg_price*(1+takeprofit),when=strategy.position_size>0,alert_message="SL/TPreachedonBTCUSD")
strategy.exit('TPShort','Short',limit=strategy.position_avg_price*(1-takeprofit),when=strategy.position_size<0,alert_message="SL/TPreachedonBTCUSD")
Expand (297 lines)
