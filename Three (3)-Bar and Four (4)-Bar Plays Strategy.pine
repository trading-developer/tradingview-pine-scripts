Script Name: Three (3)-Bar and Four (4)-Bar Plays Strategy
Author: tormunddookie
Description: This strategy analyzes the three and four-bar play which is when price action has a wide igniting bar that has a full body, then one or two narrow bars which have a relatively equal high for long plays and relatively equal low for short plays, then a continuation bar. You should not take plays that will encounter resistance. The stop loss is placed for long plays...
PineScript code:

Pine Scriptâ„¢ strategy
Three (3)-Bar and Four (4)-Bar Plays Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//Adopted  from  JRL_6  --  https://www.tradingview.com/script/2IhYFRpf-3-Bar-and-4-Bar-Plays/
//@version=4
strategy(title="Three  (3)-Bar  and  Four  (4)-Bar  Plays  Strategy",  shorttitle="Three  (3)-Bar  and  Four  (4)-Bar  Plays  Strategy",  overlay=true,  calc_on_every_tick=true,  currency=currency.USD,  default_qty_value=1.0,initial_capital=30000.00,default_qty_type=strategy.percent_of_equity)
frommonth  =  input(defval  =  1,  minval  =  01,  maxval  =  12,  title  =  "From  Month")
fromday  =  input(defval  =  1,  minval  =  01,  maxval  =  31,  title  =  "From  day")
fromyear  =  input(defval  =  2021,  minval  =  1900,  maxval  =  2100,  title  =  "From  Year")
tomonth  =  input(defval  =  12,  minval  =  01,  maxval  =  12,  title  =  "To  Month")
today  =  input(defval  =  31,  minval  =  01,  maxval  =  31,  title  =  "To  day")
toyear  =  input(defval  =  2100,  minval  =  1900,  maxval  =  2100,  title  =  "To  Year")
garBarSetting1  =  input(defval  =  1.5,  minval  =  0.0,  maxval  =  100.0,  title  =  "Gap  Bar  Size",  type  =  input.float)
garBarSetting2  =  input(defval  =  0.70,  minval  =  0.0,  maxval  =  100.0,  title  =  "Gap  Bar  Body  Size",  type  =  input.float)
TopSetting  =  input(defval  =  0.10,  minval  =  0.0,  maxval  =  100.0,  title  =  "Bull  Top  Bar  Size",  type  =  input.float)
profitMultiplier  =  input(defval  =  2.0,  minval  =  1.0,  maxval  =  100.0,  title  =  "Profit  Multiplier",  type  =  input.float)
//  Plot  Donchian  Channel
showDonchian  =  input(title="Show  Donchian  Channel?",  type=input.bool,  defval=true)
lookbackLen  =  input(30,  minval=1,  title="No.  of  Bars  to  look  back  for  breakout")
donchianOffset  =  input(1,  minval=1,  title="Offset  of  Donchian  Channel")    //  offsetting  by  at  least  1  bar  allows  the  price  to  break  the  channel
highestHighs  =  highest(high,  lookbackLen)[donchianOffset]
lowestLows  =  lowest(low,  lookbackLen)[donchianOffset]
plotHigh  =  if  showDonchian
        highestHighs
else
        na
plotLow  =  if  showDonchian
        lowestLows
else
        na
plot(plotHigh,  title="Resistance",  color=color.yellow,  linewidth=1,  transp=0)
plot(plotLow,  title="Support",  color=color.orange,  linewidth=1,  transp=0)
//  ==========  3-Bar  and  4-Bar  Play  Setup  ==========
barSize  =  abs(high  -  low)
bodySize  =  abs(open  -  close)
gapBar  =  (barSize  >  (atr(1000)  *  garBarSetting1))  and  (bodySize  >=  (barSize  *  garBarSetting2))    //  find  a  wide  ranging  bar  that  is  more  than  2.5x  the  size  of  the  average  bar  size  and  body  is  at  least  65%  of  bar  size
breakoutAbove  =  close  >  highestHighs    //  look  for  breakout  above  Resistance
breakoutBelow  =  close  <  lowestLows    //  look  for  breakout  below  Support
bullTop  =  close  >  close[1]  +  barSize[1]  *  TopSetting  ?  false  :  true    //  check  if  top  of  bar  is  relatively  equal  to  top  of  the  gap  bar  (first  collecting  bull  bar)
bullTop2  =  close  >  close[2]  +  barSize[2]  *  TopSetting  ?  false  :  true    //  check  if  top  of  bar  is  relatively  equal  to  top  of  the  gap  bar  (second  collecting  bull  bar)
bearTop  =  close  <  close[1]  -  barSize[1]  *  TopSetting  ?  false  :  true    //  check  if  top  of  bar  is  relatively  equal  to  top  of  the  gap  bar  (second  collecting  bear  bar)
bearTop2  =  close  <  close[2]  -  barSize[2]  *  TopSetting  ?  false  :  true    //  check  if  top  of  bar  is  relatively  equal  to  top  of  the  gap  bar  (second  collecting  bear  bar)
collectingBarBull  =  barSize  <  barSize[1]  /  2  and  low  >  close[1]  -  barSize[1]  /  2  and  bullTop    //  find  a  collecting  bull  bar
collectingBarBear  =  barSize  <  barSize[1]  /  2  and  high  <  close[1]  +  barSize[1]  /  2  and  bearTop    //  find  a  collecting  bear  bar
collectingBarBull2  =  barSize  <  barSize[2]  /  2  and  low  >  close[2]  -  barSize[2]  /  2  and  bullTop2    //  find  a  second  collecting  bull  bar
collectingBarBear2  =  barSize  <  barSize[2]  /  2  and  high  <  close[2]  +  barSize[2]  /  2  and  bearTop2    //  find  a  second  collecting  bear  bar
triggerThreeBarBull  =  close  >  close[1]  and  close  >  close[2]  and  high  >  high[1]  and  high  >  high[2]    //  find  a  bull  trigger  bar  in  a  3  bar  play
triggerThreeBarBear  =  close  <  close[1]  and  close  <  close[2]  and  high  <  high[1]  and  high  <  high[2]    //  find  a  bear  trigger  bar  in  a  3  bar  play
triggerFourBarBull  =  close  >  close[1]  and  close  >  close[2]  and  close  >  close[3]  and  high  >  high[1]  and  high  >  high[2]  and  high  >  high[3]    //  find  a  bull  trigger  bar  in  a  4  bar  play
triggerFourBarBear  =  close  <  close[1]  and  close  <  close[2]  and  close  <  close[3]  and  high  <  high[1]  and  high  <  high[2]  and  high  <  high[3]    //  find  a  bear  trigger  bar  in  a  4  bar  play
threeBarSetupBull  =  gapBar[2]  and  breakoutAbove[2]  and  collectingBarBull[1]  and  triggerThreeBarBull    //  find  3-bar  Bull  Setup
threeBarSetupBear  =  gapBar[2]  and  breakoutBelow[2]  and  collectingBarBear[1]  and  triggerThreeBarBear    //  find  3-bar  Bear  Setup
fourBarSetupBull  =  gapBar[3]  and  breakoutAbove[3]  and  collectingBarBull[2]  and  collectingBarBull2[1]  and  triggerFourBarBull    //  find  4-bar  Bull  Setup
fourBarSetupBear  =  gapBar[3]  and  breakoutBelow[3]  and  collectingBarBear[2]  and  collectingBarBear2[1]  and  triggerFourBarBear    //  find  4-bar  Bear  Setup
labels  =  input(title="Show  Buy/Sell  Labels?",  type=input.bool,  defval=true)
plotshape(threeBarSetupBull  and  labels,  title="3-Bar  Bull",  text="3-Bar  Play",  location=location.abovebar,  style=shape.labeldown,  size=size.tiny,  color=color.green,  textcolor=color.white,  transp=0)
plotshape(threeBarSetupBear  and  labels,  text="3-Bar  Bear",  title="3-Bar  Play",  location=location.belowbar,  style=shape.labelup,  size=size.tiny,  color=color.red,  textcolor=color.white,  transp=0)
plotshape(fourBarSetupBull  and  labels,  title="4-Bar  Bull",  text="4-Bar  Play",  location=location.abovebar,  style=shape.labeldown,  size=size.tiny,  color=color.green,  textcolor=color.white,  transp=0)
plotshape(fourBarSetupBear  and  labels,  text="4-Bar  Bear",  title="4-Bar  Play",  location=location.belowbar,  style=shape.labelup,  size=size.tiny,color=color.red,textcolor=color.white,transp=0)
alertcondition(threeBarSetupBullorthreeBarSetupBearorfourBarSetupBullorfourBarSetupBear,title="Potential3-baror4-barPlay",message="Potential3-baror4-barPlay")
floatsl=na
floattp=na
sl:=nz(sl[1],0.0)
tp:=nz(tp[1],0.0)
plot(sl==0.0?na:sl,title='SL',color=color.red)
plot(tp==0.0?na:tp,title='TP',color=color.green)
if(time>timestamp(fromyear,frommonth,fromday,00,00)andtime<timestamp(toyear,tomonth,today,00,00))
ifthreeBarSetupBullandstrategy.position_size<=0
strategy.entry("3BarLong",strategy.long,when=threeBarSetupBull)
sl:=low[1]
ifthreeBarSetupBearandstrategy.position_size>=0
strategy.entry("3BarShort",strategy.short,when=threeBarSetupBull)
sl:=high[1]
iffourBarSetupBullandstrategy.position_size<=0
strategy.entry("4BarLong",strategy.long,when=fourBarSetupBull)
sl:=min(low[1],low[2])
iffourBarSetupBearandstrategy.position_size>=0
strategy.entry("4BarShort",strategy.short,when=fourBarSetupBear)
sl:=max(high[1],high[2])
ifsl!=0.0
ifstrategy.position_size>0
tp:=strategy.position_avg_price+((strategy.position_avg_price-sl)*profitMultiplier)
strategy.exit(id="Exit",limit=tp,stop=sl)
ifstrategy.position_size<0
tp:=strategy.position_avg_price-((sl-strategy.position_avg_price)*profitMultiplier)
strategy.exit(id="Exit",limit=tp,stop=sl)
Expand (106 lines)
