Script Name: Selected Dates Filter by @zeusbottrading
Author: zeusbottrading
Description: We are presenting you feature for strategies in Pine Script.

This function/pine script is about NOT opening trades on selected days. Real usage is for bank holidays or volatile days (PPI, CPI, Interest Rates etc.) in United States and United Kingdom from 2020 to 2030 (10 years of dates of bank holidays in mentioned countries above). Strategy is simple - SMA...
PineScript code:

Pine Scriptâ„¢ strategy
Selected Dates Filter by @zeusbottrading
//Made  by  @zeusbottrading  with  <3
//@version=5
strategy("Selected  Dates  Filter  by  @zeusbottrading",  overlay=true)
//USA  Holidays
_0_1UdateNYdayO  =  timestamp(2020,1,1)
_0_2UdateMartinLuther  =  timestamp(2020,1,20)
_0_3UdateWashington  =  timestamp(2020,2,17)
_0_4UdateMemorial  =  timestamp(2020,5,25)
_0_5UdateJuneteenthIndependencedayO  =  timestamp(2020,6,19)
_0_6UdateIndependencedayO  =  timestamp(2020,7,3)
_0_7UdateLabor  =  timestamp(2020,9,7)
_0_8UdateColombus  =  timestamp(2020,10,12)
_0_9UdateVeteransO  =  timestamp(2020,11,11)
_0_10UdateThanksgiving  =  timestamp(2020,11,26)
_0_11UdateChristmasO  =  timestamp(2020,12,25)
_1_1UdateNYdayO=  timestamp(2021,1,1)
_1_2UdateMartinLuther  =  timestamp(2021,1,18)
_1_3UdateWashington  =  timestamp(2021,2,15)
_1_4UdateMemorial  =  timestamp(2021,5,31)
_1_5UdateJuneteenthIndependencedayO  =  timestamp(2021,6,19)
_1_6UdateIndependencedayO  =  timestamp(2021,7,4)
_1_7UdateLabor  =  timestamp(2021,9,6)
_1_8UdateColombus  =  timestamp(2021,10,11)
_1_9UdateVeteransO  =  timestamp(2021,11,11)
_1_10UdateThanksgiving  =  timestamp(2021,11,25)
_1_11UdateChristmasO  =  timestamp(2021,12,25)
_2_1UdateNYdayO=  timestamp(2022,1,1)
_2_2UdateMartinLuther  =  timestamp(2022,1,17)
_2_3UdateWashington  =  timestamp(2022,2,21)
_2_4UdateMemorial  =  timestamp(2022,5,30)
_2_5UdateJuneteenthIndependencedayO  =  timestamp(2022,6,19)
_2_6UdateIndependencedayO  =  timestamp(2022,7,4)
_2_7UdateLabor  =  timestamp(2022,9,5)
_2_8UdateColombus  =  timestamp(2022,10,10)
_2_9UdateVeteransO  =  timestamp(2022,11,11)
_2_10UIdateThanksgiving  =  timestamp(2022,11,25)
_2_11UdateChristmasO  =  timestamp(2022,12,25)
_3_1UdateNYdayO=  timestamp(2023,1,1)
_3_2UdateMartinLuther  =  timestamp(2023,1,16)
_3_3UdateWashington  =  timestamp(2023,2,20)
_3_4UdateMemorial  =  timestamp(2023,5,29)
_3_5UdateJuneteenthIndependencedayO  =  timestamp(2023,6,19)
_3_6UdateIndependencedayO  =  timestamp(2023,7,4)
_3_7UdateLabor  =  timestamp(2023,9,4)
_3_8UdateColombus  =  timestamp(2023,10,9)
_3_9UdateVeteransO  =  timestamp(2023,11,11)
_3_10UdateThanksgiving  =  timestamp(2023,11,23)
_3_11UdateChristmasO  =  timestamp(2023,12,25)
_4_1UdateNYdayO=  timestamp(2024,1,1)
_4_2UdateMartinLuther  =  timestamp(2024,1,15)
_4_3UdateWashington  =  timestamp(2024,2,19)
_4_4UdateMemorial  =  timestamp(2024,5,27)
_4_5UdateJuneteenthIndependencedayO  =  timestamp(2024,6,19)
_4_6UdateIndependencedayO  =  timestamp(2024,7,4)
_4_7UdateLabor  =  timestamp(2024,9,2)
_4_8UdateColombus  =  timestamp(2024,10,14)
_4_9UdateVeteransO  =  timestamp(2024,11,11)
_4_10UdateThanksgiving  =  timestamp(2024,11,28)
_4_11UdateChristmasO  =  timestamp(2024,12,25)
_5_1UdateNYdayO=  timestamp(2025,1,1)
_5_2UdateMartinLuther  =  timestamp(2025,1,20)
_5_3UdateWashington  =  timestamp(2025,2,17)
_5_4UdateMemorial  =  timestamp(2025,5,26)
_5_5UdateJuneteenthIndependencedayO  =  timestamp(2025,6,19)
_5_6UdateIndependencedayO  =  timestamp(2025,7,4)
_5_7UdateLabor  =  timestamp(2025,9,1)
_5_8UdateColombus  =  timestamp(2025,10,13)
_5_9UdateVeteransO  =  timestamp(2025,11,11)
_5_10UdateThanksgiving  =  timestamp(2025,11,27)
_5_11UdateChristmasO  =  timestamp(2025,12,25)
_6_1UdateNYdayO=  timestamp(2026,1,1)
_6_2UdateMartinLuther  =  timestamp(2026,1,19)
_6_3UdateWashington  =  timestamp(2026,2,16)
_6_4UdateMemorial  =  timestamp(2026,5,25)
_6_5UdateJuneteenthIndependencedayO  =  timestamp(2026,6,19)
_6_6UdateIndependencedayO  =  timestamp(2026,7,4)
_6_7UdateLabor  =  timestamp(2026,9,7)
_6_8UdateColombus  =  timestamp(2026,10,12)
_6_9UdateVeteransO  =  timestamp(2026,11,11)
_6_10UdateThanksgiving  =  timestamp(2026,11,26)
_6_11UdateChristmasO  =  timestamp(2026,12,25)
_7_1UdateNYdayO  =  timestamp(2027,  1,  1)
_7_2UdateMartinLuther  =  timestamp(2027,  1,  18)
_7_3UdateWashington  =  timestamp(2027,  2,  15)
_7_4UdateMemorial  =  timestamp(2027,  5,  31)
_7_5UdateJuneteenthIndependencedayO  =  timestamp(2027,6,18)
_7_6UdateIndependencedayO  =  timestamp(2027,  7,  5)
_7_7UdateLabor  =  timestamp(2027,  9,  6)
_7_8UdateColombus  =  timestamp(2027,  10,  11)
_7_9UdateVeteransO  =  timestamp(2027,  11,  11)
_7_10UdateThanksgiving  =  timestamp(2027,  11,  25)
_7_11UdateChristmasO  =  timestamp(2027,  12,  24)
_8_1UdateNYdayO  =  timestamp(2027,  12,  31)
_8_2UdateMartinLuther  =  timestamp(2028,  1,  17)
_8_3UdateWashington  =  timestamp(2028,  2,  21)
_8_4UdateMemorial  =  timestamp(2028,  5,  29)
_8_5UdateJuneteenthIndependencedayO  =  timestamp(2028,6,19)
_8_6UdateIndependencedayO  =  timestamp(2028,  7,  4)
_8_7UdateLabor  =  timestamp(2028,  9,  4)
_8_8UdateColombus  =  timestamp(2028,  10,  9)
_8_9UdateVeteransO  =  timestamp(2028,  11,  10)
_8_10UdateThanksgiving  =  timestamp(2028,  11,  23)
_8_11UdateChristmasO  =  timestamp(2028,  12,  25)
_9_1UdateNYdayO  =  timestamp(2029,  1,  1)
_9_2UdateMartinLuther  =  timestamp(2029,  1,  15)
_9_3UdateWashington  =  timestamp(2029,  2,  19)
_9_4UdateMemorial  =  timestamp(2029,  5,  28)
_9_5UdateJuneteenthIndependencedayO  =  timestamp(2029,6,19)
_9_6UdateIndependencedayO  =  timestamp(2029,  7,  4)
_9_7UdateLabor  =  timestamp(2029,  9,  3)
_9_8UdateColombus  =  timestamp(2029,  10,  8)
_9_9UdateVeteransO  =  timestamp(2029,  11,  12)
_9_10UdateThanksgiving  =  timestamp(2029,  11,  22)
_9_11UdateChristmasO  =  timestamp(2029,  12,  25)
_30_1UdateNYdayO  =  timestamp(2030,1,1)
_30_2UdateMartinLuther  =  timestamp(2030,1,21)
_30_3UdateWashington  =  timestamp(2030,2,18)
_30_4UdateMemorial  =  timestamp(2030,5,27)
_30_5UdateJuneteenthIndependencedayO  =  timestamp(2030,6,19)
_30_6UdateIndependencedayO  =  timestamp(2030,7,4)
_30_7UdateLabor  =  timestamp(2030,9,2)
_30_8UdateColombus  =  timestamp(2030,10,14)
_30_9UdateVeteransO  =  timestamp(2030,11,11)
_30_10UdateThanksgiving  =  timestamp(2030,11,28)
_30_11UdateChristmasO  =  timestamp(2030,12,25)
//GB  Bank  Holidays
_0_1GdateNYday  =  timestamp(2020,1,1)
_0_2GdateGoodFriday  =  timestamp(2020,4,10)
_0_3GdateEasterMonday  =  timestamp(2020,4,13)
_0_4GdateEarlyMay  =  timestamp(2020,5,8)
_0_5GdateSpring  =  timestamp(2020,5,25)
_0_6GdateSummer  =  timestamp(2020,8,31)
_0_7GdateBoxingsubs  =  timestamp(2020,12,28)
_0_8GdateChristmas  =  timestamp(2020,12,25)
_1_1GdateNYday  =  timestamp(2021,1,1)
_1_2GdateGoodFriday  =  timestamp(2021,4,2)
_1_3GdateEasterMonday  =  timestamp(2021,4,5)
_1_4GdateEarlyMay  =  timestamp(2021,5,3)
_1_5GdateSpring  =  timestamp(2021,5,31)
_1_6GdateSummer  =  timestamp(2021,8,30)
_1_7GdateBoxingsubs  =  timestamp(2021,12,27)
_1_8GdateChristmassubs  =  timestamp(2021,12,28)
_2_1GdateNYdaysubs  =  timestamp(2022,1,3)
_2_2GdateGoodFriday  =  timestamp(2022,4,15)
_2_3GdateEasterMonday  =  timestamp(2022,4,18)
_2_4GdateEarlyMay  =  timestamp(2022,5,2)
_2_5GdateSpring  =  timestamp(2022,6,2)
_2_6GdatePlatinum  =  timestamp(2022,6,3)
_2_7GdateSummer  =  timestamp(2022,8,29)
_2_8GdateElizabeth  =  timestamp(2022,9,19)
_2_9GdateChristmas  =  timestamp(2022,12,25)
_2_10GdateBoxing  =  timestamp(2022,12,26)
_2_11GdateChristmassubs  =  timestamp(2022,12,27)
_3_1GdateNYdaysubs  =  timestamp(2023,1,2)
_3_2GdateGoodFriday  =  timestamp(2023,4,7)
_3_3GdateEasterMonday  =  timestamp(2023,4,10)
_3_4GdateEarlyMay  =  timestamp(2023,5,1)
_3_5GdateKingCharles  =  timestamp(2023,5,8)
_3_6GdateSpring  =  timestamp(2023,5,29)
_3_7GdateSummer  =  timestamp(2023,8,28)
_3_8GdateChristmas  =  timestamp(2023,12,25)
_3_9GdateBoxing  =  timestamp(2023,12,26)
_4_1GdateNYdaysubs  =  timestamp(2024,1,1)
_4_2GdateGoodFriday  =  timestamp(2024,3,29)
_4_3GdateEasterMonday  =  timestamp(2024,4,1)
_4_4GdateEarlyMay  =  timestamp(2024,5,6)
_4_5GdateSpring  =  timestamp(2024,5,27)
_4_6GdateSummer  =  timestamp(2024,8,26)
_4_7GdateChristmas  =  timestamp(2022,12,25)
_4_8GdateBoxing  =  timestamp(2024,12,26)
_5_1GdateNYdaysubs  =  timestamp(2025,1,1)
_5_2GdateGoodFriday  =  timestamp(2025,4,18)
_5_3GdateEasterMonday  =  timestamp(2025,4,21)
_5_4GdateEarlyMay  =  timestamp(2025,5,5)
_5_5GdateSpring  =  timestamp(2025,5,26)
_5_6GdateSummer  =  timestamp(2025,8,25)
_5_7GdateChritsmas  =  timestamp(2025,12,25)
_5_8GdateBoxing  =  timestamp(2025,12,26)
_6_1GdateNYdaysubs  =  timestamp(2026,1,1)
_6_2GdateGoodFriday  =  timestamp(2026,  4,3)
_6_3GdateEasterMonday  =  timestamp(2026,  4,6)
_6_4GdateEarlyMay  =  timestamp(2026,  5,  4)
_6_5GdateSpring  =  timestamp(2026,  5,  25)
_6_6GdateSummer  =  timestamp(2026,  8,  31)
_6_7GdateChritsmas  =  timestamp(2026,  12,  25)
_6_8GdateBoxing  =  timestamp(2026,  12,  28)
_7_1GdateNYdaysubs  =  timestamp(2027,  1,  1)
_7_2GdateGoodFriday  =  timestamp(2027,  3,  27)
_7_3GdateEasterMonday  =  timestamp(2027,  3,  29)
_7_4GdateEarlyMay  =  timestamp(2027,  5,  3)
_7_5GdateSpring  =  timestamp(2027,  5,  31)
_7_6GdateSummer  =  timestamp(2027,  8,  30)
_7_7GdateChritsmas  =  timestamp(2027,  12,  27)
_7_8GdateBoxing  =  timestamp(2027,  12,  28)
_8_1GdateNYdaysubs  =  timestamp(2028,  1,  3)
_8_2GdateGoodFriday  =  timestamp(2028,  4,  14)
_8_3GdateEasterMonday  =  timestamp(2028,  4,  17)
_8_4GdateEarlyMay  =  timestamp(2028,  5,  1)
_8_5GdateSpring  =  timestamp(2028,  5,  29)
_8_6GdateSummer  =  timestamp(2028,  8,  28)
_8_7GdateChritsmas  =  timestamp(2028,  12,  25)
_8_8GdateBoxing  =  timestamp(2028,  12,  26)
_9_1GdateNYdaysubs  =  timestamp(2029,  1,  1)
_9_2GdateGoodFriday  =  timestamp(2029,  4,  30)
_9_3GdateEasterMonday  =  timestamp(2029,  4,  2)
_9_4GdateEarlyMay  =  timestamp(2029,  5,  7)
_9_5GdateSpring  =  timestamp(2029,  5,  28)
_9_6GdateSummer  =  timestamp(2029,  8,  27)
_9_7GdateChritsmas  =  timestamp(2029,  12,  25)
_9_8GdateBoxing  =  timestamp(2029,  12,  26)
_30_1GdateNYdaysubs  =  timestamp(2030,  1,  1)
_30_2GdateGoodFriday  =  timestamp(2030,  4,  19)
_30_3GdateEasterMonday  =  timestamp(2030,  4,  22)
_30_4GdateEarlyMay  =  timestamp(2030,  5,  6)
_30_5GdateSpring  =  timestamp(2030,  5,  27)
_30_6GdateSummer  =  timestamp(2030,  8,  26)
_30_7GdateChritsmas  =  timestamp(2030,  12,  25)
_30_8GdateBoxing  =  timestamp(2030,  12,  26)
//YourChoosedDate  =  timestamp(YEAR,MONTH,DAY)
//LongCondition  =  timestamp  =!  YourChoosedDate
                //That's  how  you  add  Another  date  to  your  long  condition
//here  we  wrote  every
logicdates  =  time_tradingday  !=  _0_1UdateNYdayO  and  time_tradingday  !=  _0_2UdateMartinLuther  and  time_tradingday  !=  _0_3UdateWashington  and  time_tradingday  !=  _0_4UdateMemorial  and  time_tradingday  !=  _0_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _0_6UdateIndependencedayO  and  time_tradingday  !=  _0_7UdateLabor  and  time_tradingday  !=  _0_8UdateColombus  and  time_tradingday  !=  _0_9UdateVeteransO  and  time_tradingday  !=  _0_10UdateThanksgiving  and  time_tradingday  !=  _0_11UdateChristmasO  and  time_tradingday  !=  _1_1UdateNYdayO  and  time_tradingday  !=  _1_2UdateMartinLuther  and  time_tradingday  !=  _1_3UdateWashington  and  time_tradingday  !=  _1_4UdateMemorial  and  time_tradingday  !=  _1_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _1_6UdateIndependencedayO  and  time_tradingday  !=  _1_7UdateLabor  and  time_tradingday  !=  _1_8UdateColombus  and  time_tradingday  !=  _1_9UdateVeteransO  and  time_tradingday  !=  _1_10UdateThanksgiving  and  time_tradingday  !=  _1_11UdateChristmasO  and  time_tradingday  !=  _2_1UdateNYdayO  and  time_tradingday  !=  _2_2UdateMartinLuther  and  time_tradingday  !=  _2_3UdateWashington  and  time_tradingday  !=  _2_4UdateMemorial  and  time_tradingday  !=  _2_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _2_6UdateIndependencedayO  and  time_tradingday  !=  _2_7UdateLabor  and  time_tradingday  !=  _2_8UdateColombus  and  time_tradingday  !=  _2_9UdateVeteransO  and  time_tradingday  !=  _2_10UIdateThanksgiving  and  time_tradingday  !=  _2_11UdateChristmasO  and  time_tradingday  !=  _3_1UdateNYdayO  and  time_tradingday  !=  _3_2UdateMartinLuther  and  time_tradingday  !=  _3_3UdateWashington  and  time_tradingday  !=  _3_4UdateMemorial  and  time_tradingday  !=  _3_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _3_6UdateIndependencedayO  and  time_tradingday  !=  _3_7UdateLabor  and  time_tradingday  !=  _3_8UdateColombus  and  time_tradingday  !=  _3_9UdateVeteransO  and  time_tradingday  !=  _3_10UdateThanksgiving  and  time_tradingday  !=  _3_11UdateChristmasO  and  time_tradingday  !=  _4_1UdateNYdayO  and  time_tradingday  !=  _4_2UdateMartinLuther  and  time_tradingday  !=  _4_3UdateWashington  and  time_tradingday  !=  _4_4UdateMemorial  and  time_tradingday  !=  _4_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _4_6UdateIndependencedayO  and  time_tradingday  !=  _4_7UdateLabor  and  time_tradingday  !=  _4_8UdateColombus  and  time_tradingday  !=  _4_9UdateVeteransO  and    _4_10UdateThanksgiving  and  time_tradingday  !=  _4_11UdateChristmasO  and  time_tradingday  !=  _5_1UdateNYdayO  and  time_tradingday  !=  _5_2UdateMartinLuther  and  time_tradingday  !=  _5_3UdateWashington  and  time_tradingday  !=  _5_4UdateMemorial  and  time_tradingday  !=  _5_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _5_6UdateIndependencedayO  and  time_tradingday  !=  _5_7UdateLabor  and  time_tradingday  !=  _5_8UdateColombus  and  time_tradingday  !=  _5_9UdateVeteransO  and  time_tradingday  !=  _5_10UdateThanksgiving  and  time_tradingday  !=  _5_11UdateChristmasO  and  time_tradingday  !=  _6_1UdateNYdayO  and  time_tradingday  !=  _6_2UdateMartinLuther  and  time_tradingday  !=  _6_3UdateWashington  and  time_tradingday  !=  _6_4UdateMemorial  and  time_tradingday  !=  _6_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _6_6UdateIndependencedayO  and  time_tradingday  !=  _6_7UdateLabor  and  time_tradingday  !=  _6_8UdateColombus  and  time_tradingday  !=  _6_9UdateVeteransO  and  time_tradingday  !=  _6_10UdateThanksgiving  and  time_tradingday  !=  _6_11UdateChristmasO  and  time_tradingday  !=  _7_1UdateNYdayO  and  time_tradingday  !=  _7_2UdateMartinLuther  and  time_tradingday  !=  _7_3UdateWashington  and  time_tradingday  !=  _7_4UdateMemorial  and  time_tradingday  !=  _7_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _7_6UdateIndependencedayO  and  time_tradingday  !=  _7_7UdateLabor  and  time_tradingday  !=  _7_8UdateColombus  and  time_tradingday  !=  _7_9UdateVeteransO  and  time_tradingday  !=  _7_10UdateThanksgiving  and  time_tradingday  !=  _7_11UdateChristmasO  and  time_tradingday  !=  _8_1UdateNYdayO  and  time_tradingday  !=  _8_2UdateMartinLuther  and  time_tradingday  !=  _8_3UdateWashington  and  time_tradingday  !=  _8_4UdateMemorial  and  time_tradingday  !=  _8_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _8_6UdateIndependencedayO  and  time_tradingday  !=  _8_7UdateLabor  and  time_tradingday  !=  _8_8UdateColombus  and  time_tradingday  !=  _8_9UdateVeteransO  and  time_tradingday  !=  _8_10UdateThanksgiving  and  time_tradingday  !=  _8_11UdateChristmasO  and  time_tradingday  !=  _9_1UdateNYdayO  and  time_tradingday  !=  _9_2UdateMartinLuther  and  time_tradingday  !=  _9_3UdateWashington  and  time_tradingday  !=  _9_4UdateMemorial  and  time_tradingday  !=  _9_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _9_6UdateIndependencedayO  and  time_tradingday  !=  _9_7UdateLabor  and  time_tradingday  !=  _9_8UdateColombus  and  time_tradingday  !=  _9_9UdateVeteransO  and  time_tradingday  !=  _9_10UdateThanksgiving  and  time_tradingday  !=  _9_11UdateChristmasO  and  time_tradingday  !=  _30_1UdateNYdayO  and  time_tradingday  !=  _30_2UdateMartinLuther  and  time_tradingday  !=  _30_3UdateWashington  and  time_tradingday  !=  _30_4UdateMemorial  and  time_tradingday  !=  _30_5UdateJuneteenthIndependencedayO  and  time_tradingday  !=  _30_6UdateIndependencedayO  and  time_tradingday  !=  _30_7UdateLabor  and  time_tradingday  !=  _30_8UdateColombus  and  time_tradingday  !=  _30_9UdateVeteransO  and  time_tradingday  !=  _30_10UdateThanksgiving  and  time_tradingday  !=  _30_11UdateChristmasO  and  time_tradingday  !=  _0_1GdateNYday  and  time_tradingday  !=  _0_2GdateGoodFriday  and  time_tradingday  !=  _0_3GdateEasterMonday  and  time_tradingday  !=  _0_4GdateEarlyMay  and  time_tradingday  !=  _0_5GdateSpring  and  time_tradingday  !=  _0_6GdateSummer  and  time_tradingday  !=  _0_7GdateBoxingsubs  and  time_tradingday  !=  _0_8GdateChristmas  and  time_tradingday  !=  _1_1GdateNYday  and  time_tradingday  !=  _1_2GdateGoodFriday  and  time_tradingday  !=  _1_3GdateEasterMonday  and  time_tradingday  !=  _1_4GdateEarlyMay  and  time_tradingday  !=  _1_5GdateSpring  and  time_tradingday  !=  _1_6GdateSummer  and  time_tradingday  !=  _1_7GdateBoxingsubs  and  time_tradingday  !=  _1_8GdateChristmassubs  and  time_tradingday  !=  _2_1GdateNYdaysubs  and  time_tradingday  !=  _2_2GdateGoodFriday  and  time_tradingday  !=  _2_3GdateEasterMonday  and  time_tradingday  !=  _2_4GdateEarlyMay  and  time_tradingday  !=  _2_5GdateSpring  and  time_tradingday  !=  _2_6GdatePlatinum  and  time_tradingday  !=  _0_7GdateBoxingsubs  and  time_tradingday  !=  _2_8GdateElizabeth  and  time_tradingday  !=_2_9GdateChristmasandtime_tradingday!=_2_10GdateBoxingandtime_tradingday!=_2_11GdateChristmassubsandtime_tradingday!=_3_1GdateNYdaysubsandtime_tradingday!=_3_2GdateGoodFridayandtime_tradingday!=_3_3GdateEasterMondayandtime_tradingday!=_3_4GdateEarlyMayandtime_tradingday!=_3_5GdateKingCharlesandtime_tradingday!=_3_6GdateSpringandtime_tradingday!=_3_7GdateSummerandtime_tradingday!=_3_8GdateChristmasandtime_tradingday!=_3_9GdateBoxingandtime_tradingday!=_4_1GdateNYdaysubsandtime_tradingday!=_4_2GdateGoodFridayandtime_tradingday!=_4_3GdateEasterMondayandtime_tradingday!=_4_4GdateEarlyMayandtime_tradingday!=_4_5GdateSpringandtime_tradingday!=_4_6GdateSummerandtime_tradingday!=_4_7GdateChristmasandtime_tradingday!=_4_8GdateBoxingandtime_tradingday!=_5_1GdateNYdaysubsandtime_tradingday!=_5_2GdateGoodFridayandtime_tradingday!=_5_3GdateEasterMondayandtime_tradingday!=_5_4GdateEarlyMayandtime_tradingday!=_5_5GdateSpringandtime_tradingday!=_5_6GdateSummerandtime_tradingday!=_5_7GdateChritsmasandtime_tradingday!=_5_8GdateBoxingandtime_tradingday!=_6_1GdateNYdaysubsandtime_tradingday!=_6_2GdateGoodFridayandtime_tradingday!=_6_3GdateEasterMondayandtime_tradingday!=_6_4GdateEarlyMayandtime_tradingday!=_6_5GdateSpringandtime_tradingday!=_6_6GdateSummerandtime_tradingday!=_6_7GdateChritsmasandtime_tradingday!=_6_8GdateBoxingandtime_tradingday!=_7_1GdateNYdaysubsandtime_tradingday!=_7_2GdateGoodFridayandtime_tradingday!=_7_3GdateEasterMondayandtime_tradingday!=_7_4GdateEarlyMayandtime_tradingday!=_7_5GdateSpringandtime_tradingday!=_7_6GdateSummerandtime_tradingday!=_7_7GdateChritsmasandtime_tradingday!=_7_8GdateBoxingandtime_tradingday!=_8_1GdateNYdaysubsandtime_tradingday!=_8_2GdateGoodFridayandtime_tradingday!=_8_3GdateEasterMondayandtime_tradingday!=_8_4GdateEarlyMayandtime_tradingday!=_8_5GdateSpringandtime_tradingday!=_8_6GdateSummerandtime_tradingday!=_8_7GdateChritsmasandtime_tradingday!=_8_8GdateBoxingandtime_tradingday!=_9_1GdateNYdaysubsandtime_tradingday!=_9_2GdateGoodFridayandtime_tradingday!=_9_3GdateEasterMondayandtime_tradingday!=_9_4GdateEarlyMayandtime_tradingday!=_9_5GdateSpringandtime_tradingday!=_9_6GdateSummerandtime_tradingday!=_9_7GdateChritsmasandtime_tradingday!=_9_8GdateBoxingandtime_tradingday!=_30_1GdateNYdaysubsandtime_tradingday!=_30_2GdateGoodFridayandtime_tradingday!=_30_3GdateEasterMondayandtime_tradingday!=_30_4GdateEarlyMayandtime_tradingday!=_30_5GdateSpringandtime_tradingday!=_30_6GdateSummerandtime_tradingday!=_30_7GdateChritsmasandtime_tradingday!=_30_8GdateBoxing
//exampleonbasicstrategyofsmacrossover
longCondition=ta.crossover(ta.sma(close,14),ta.sma(close,28))
if(longConditionandlogicdates)//weaddedtheruleoflogicdates
strategy.entry("MyLongEntryId",strategy.long)
shortCondition=ta.crossunder(ta.sma(close,14),ta.sma(close,28))
if(shortConditionandlogicdates)//weaddedtheruleoflogicdates
strategy.entry("MyShortEntryId",strategy.short)
//plotbackground
//asyoucanseeourideaworksitisredonbackgroundonselecteddaysasonpicture
bgcolor(logicdates?na:color.rgb(255,82,82,53))
Expand (267 lines)
