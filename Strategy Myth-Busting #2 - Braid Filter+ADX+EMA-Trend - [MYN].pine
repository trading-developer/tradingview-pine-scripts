Script Name: Strategy Myth-Busting #2 - Braid Filter+ADX+EMA-Trend - [MYN]
Author: myncrypto
Description: This is part of a new series we are calling "Strategy Myth-Busting" where we take open public manual trading strategies and automate them. The goal is to not only validate the authenticity of the claims but to provide an automated version for traders who wish to trade autonomously.

Our second one we are automating  is the " Braid Filter: The Indicator That Will...
PineScript code:

Pine Script™ strategy
Strategy Myth-Busting #2 - Braid Filter+ADX+EMA-Trend - [MYN]
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  myn
//@version=5
strategy('Strategy  Myth-Busting  #2  -  Braid  Filter+ADX+EMA-Trend  -  [MYN]',  max_bars_back=5000,  overlay=true,  pyramiding=0,  initial_capital=20000,  currency='USD',  default_qty_type=strategy.percent_of_equity,  default_qty_value=100.0,  commission_value=0.075,  use_bar_magnifier  =  true)
//  Trading  Rules
//  15  min  /  BTCUSD
//  1)  Buy  Price  action  above  moving  average.  (bars  are  green)
//  2)  Braid  filter  must  issue  a  new  green    bar
//  3)  ADX  must  be  above  the  20  level  and  be  pointed  up,  If  flat  or  downwards,  don't  enter  trade
//  4)  Stop  loss  at  the  moving  average  or  recent  swing  low.
//  Target  1.5x  the  risk
//  Indicator  changes  per  strategy  recommendation
//  Keep  Braid  Filter  default
//  CMA  EMA  TrendBars  Change  Uptrend  to  100
//  ADX  and  DI  for  V4  (uncheck  DI+  and  DI-  in  style)  and  make  ADX  line  thicker
/////////////////////////////////////
//*  Put  your  strategy  logic  below  *//
/////////////////////////////////////
//  3a1mQJ26TOE
//  Braid  Filter  by  Robert  Hill
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//  Copyright  ©  Robert  Hill,  2006
//@version=5
//indicator('Braid  Filter')
//--  Inputs
maType  =  input.string('EMA',  'MA  Type',  options=['EMA',  'DEMA',  'TEMA',  'WMA',  'VWMA',  'SMA',  'SMMA',  'HMA',  'LSMA',  'Kijun',  'McGinley',  'RMA'],  group="Braid  Filter")
Period1  =  input(3,  'Period  1')
Period2  =  input(7,  'Period  2')
Period3  =  input(14,  'Period  3')
PipsMinSepPercent  =  input(40)
//--  Moving  Average
ma(type,  src,  len)  =>
        float  result  =  0
        if  type  ==  'SMA'    //  Simple
                result  :=  ta.sma(src,  len)
                result
        if  type  ==  'EMA'    //  Exponential
                result  :=  ta.ema(src,  len)
                result
        if  type  ==  'DEMA'    //  Double  Exponential
                e  =  ta.ema(src,  len)
                result  :=  2  *  e  -  ta.ema(e,  len)
                result
        if  type  ==  'TEMA'    //  Triple  Exponential
                e  =  ta.ema(src,  len)
                result  :=  3  *  (e  -  ta.ema(e,  len))  +  ta.ema(ta.ema(e,  len),  len)
                result
        if  type  ==  'WMA'    //  Weighted
                result  :=  ta.wma(src,  len)
                result
        if  type  ==  'VWMA'    //  Volume  Weighted
                result  :=  ta.vwma(src,  len)
                result
        if  type  ==  'SMMA'    //  Smoothed
                w  =  ta.wma(src,  len)
                result  :=  na(w[1])  ?  ta.sma(src,  len)  :  (w[1]  *  (len  -  1)  +  src)  /  len
                result
        if  type  ==  'RMA'
                result  :=  ta.rma(src,  len)
                result
        if  type  ==  'HMA'    //  Hull
                result  :=  ta.wma(2  *  ta.wma(src,  len  /  2)  -  ta.wma(src,  len),  math.round(math.sqrt(len)))
                result
        if  type  ==  'LSMA'    //  Least  Squares
                result  :=  ta.linreg(src,  len,  0)
                result
        if  type  ==  'Kijun'    //Kijun-sen
                kijun  =  math.avg(ta.lowest(len),  ta.highest(len))
                result  :=  kijun
                result
        if  type  ==  'McGinley'
                mg  =  0.0
                mg  :=  na(mg[1])  ?  ta.ema(src,  len)  :  mg[1]  +  (src  -  mg[1])  /  (len  *  math.pow(src  /  mg[1],  4))
                result  :=  mg
                result
        result
//--  Braid  Filter
ma01  =  ma(maType,  close,  Period1)
ma02  =  ma(maType,  open,  Period2)
ma03  =  ma(maType,  close,  Period3)
max  =  math.max(math.max(ma01,  ma02),  ma03)
min  =  math.min(math.min(ma01,  ma02),  ma03)
dif  =  max  -  min
filter  =  ta.atr(14)  *  PipsMinSepPercent  /  100
//--  Plots
BraidColor  =  ma01  >  ma02  and  dif  >  filter  ?  color.green  :ma02>ma01anddif>filter?color.red:color.gray
//plot(dif,'Braid',BraidColor,5,plot.style_columns)
//plot(filter,'Filter',color.new(color.blue,0),2,plot.style_line)
//bgcolor(BraidColor,transp=90)
//2)Braidfiltermustissueanewgreen/redbar
entryBbraidFilterGreenBar=BraidColor==color.green
entryBraidFilterRedBar=BraidColor==color.red
//CM_EMATrendBarsbyChrisMoody
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//@version=5
//CreatedbyChrisMoodyon11/1/2014
//BarColorBasedonAbove/BelowEMA...
//indicator(title='CM_EMATrendBars',shorttitle='CM_EMATrendBars',overlay=true)
ema1=input.int(100,minval=1,maxval=300,title='EMAUpTrend',group="EMATrendBars")
shema=input(true,title='ShowEMATrendisBasedOn?')
usedEma=ta.ema(close,ema1)
emaUpColor()=>
hlc3>=usedEma
emaDownColor()=>
hlc3<usedEma
col=hlc3>=usedEma?color.lime:hlc3<usedEma?color.red:color.white
emaDownColor_1=emaDownColor()
barcolor(emaUpColor()?color.lime:emaDownColor_1?color.red:na)
plot(shemaandusedEma?usedEma:na,title='EMA',style=plot.style_line,linewidth=3,color=col)
//1)BuyPriceactionabovemovingaverage.(barsaregreen)
entryPriceActionAboveEMATrend=emaUpColor()
entryPriceActionBelowEMATrend=emaDownColor()
//ADXandDIforV4byTrendBarsbyBeikabuOyaji
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//ThissourcecodeissubjecttothetermsoftheMozillaPublicLicense2.0athttps://mozilla.org/MPL/2.0/
//©BeikabuOyaji
//@version=5
//indicator('ADXandDIforv4')
len=input(14)
th=input(20)
TrueRange=math.max(math.max(high-low,math.abs(high-nz(close[1]))),math.abs(low-nz(close[1])))
DirectionalMovementPlus=high-nz(high[1])>nz(low[1])-low?math.max(high-nz(high[1]),0):0
DirectionalMovementMinus=nz(low[1])-low>high-nz(high[1])?math.max(nz(low[1])-low,0):0
SmoothedTrueRange=0.0
SmoothedTrueRange:=nz(SmoothedTrueRange[1])-nz(SmoothedTrueRange[1])/len+TrueRange
SmoothedDirectionalMovementPlus=0.0
SmoothedDirectionalMovementPlus:=nz(SmoothedDirectionalMovementPlus[1])-nz(SmoothedDirectionalMovementPlus[1])/len+DirectionalMovementPlus
SmoothedDirectionalMovementMinus=0.0
SmoothedDirectionalMovementMinus:=nz(SmoothedDirectionalMovementMinus[1])-nz(SmoothedDirectionalMovementMinus[1])/len+DirectionalMovementMinus
DIPlus=SmoothedDirectionalMovementPlus/SmoothedTrueRange*100
DIMinus=SmoothedDirectionalMovementMinus/SmoothedTrueRange*100
DX=math.abs(DIPlus-DIMinus)/(DIPlus+DIMinus)*100
ADX=ta.sma(DX,len)
//plot(DIPlus,color=color.new(color.green,0),title='DI+')
//plot(DIMinus,color=color.new(color.red,0),title='DI-')
//plot(ADX,color=color.new(color.navy,0),title='ADX')
//hline(th,color=color.black)
//3)ADXmustbeabovethe20levelandbepointedup.Ifflatordownwards,don'tentertrade
iADXSlope=input.float(3.5,minval=0,maxval=300,title='ADXSlope',step=.5,group="ADXandDI")
entryADXAboveThreshold=ADX>thand(ADX[2]+iADXSlope<ADX[1])and(ADX[1]+iADXSlope<ADX)
//entryADXAboveThreshold=ADX>thand(ADX[2]<ADX[1])and(ADX[1]<ADX)
//////////////////////////////////////
//*Putyourstrategyrulesbelow*//
/////////////////////////////////////
longCondition=entryPriceActionAboveEMATrendandentryBbraidFilterGreenBarandentryADXAboveThreshold
shortCondition=entryPriceActionBelowEMATrendandentryBraidFilterRedBarandentryADXAboveThreshold
//defineas0ifdonotwanttouse
closeLongCondition=0
closeShortCondition=0
//BacktestingTimePeriod(Input.timenotworkingasexpectedasof03/30/2021.Givingoddstart/enddates
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
useStartPeriodTime=input.bool(true,'Start',group='DateRange',inline='StartPeriod')
startPeriodTime=input.time(timestamp('1Jan2019'),'',group='DateRange',inline='StartPeriod')
useEndPeriodTime=input.bool(true,'End',group='DateRange',inline='EndPeriod')
endPeriodTime=input.time(timestamp('31Dec2030'),'',group='DateRange',inline='EndPeriod')
start=useStartPeriodTime?startPeriodTime>=time:false
end=useEndPeriodTime?endPeriodTime<=time:false
calcPeriod=notstartandnotend
//TradeDirection
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tradeDirection=input.string('LongandShort',title='TradeDirection',options=['LongandShort','LongOnly','ShortOnly'],group='TradeDirection')
//PercentasPoints
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
per(pcnt)=>
strategy.position_size!=0?math.round(pcnt/100*strategy.position_avg_price/syminfo.mintick):float(na)
//Takeprofit1
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp1=input.float(title='TakeProfit1-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit1')
q1=input.int(title='%OfPosition',defval=3,minval=0,group='TakeProfit',inline='TakeProfit1')
//Takeprofit2
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp2=input.float(title='TakeProfit2-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit2')
q2=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit2')
//Takeprofit3
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp3=input.float(title='TakeProfit3-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit3')
q3=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit3')
//Takeprofit4
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
tp4=input.float(title='TakeProfit4-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit')
///StopLoss
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
stoplossPercent=input.float(title='StopLoss(%)',defval=12,minval=0.01,group='StopLoss')*0.01
slLongClose=close<strategy.position_avg_price*(1-stoplossPercent)
slShortClose=close>strategy.position_avg_price*(1+stoplossPercent)
///Leverage
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
leverage=input.float(1,'Leverage',step=.5,group='Leverage')
contracts=math.min(math.max(.000001,strategy.equity/close*leverage),1000000000)
///TradeStateManagement
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
isInLongPosition=strategy.position_size>0
isInShortPosition=strategy.position_size<0
///ProfitViewAlertSyntaxStringGeneration
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
alertSyntaxPrefix=input.string(defval='CRYPTANEX_99FTX_Strategy-Name-Here',title='AlertSyntaxPrefix',group='ProfitViewAlertSyntax')
alertSyntaxBase=alertSyntaxPrefix+'\n#'+str.tostring(open)+','+str.tostring(high)+','+str.tostring(low)+','+str.tostring(close)+','+str.tostring(volume)+','
///TradeExecution
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
ifcalcPeriod
iflongConditionandtradeDirection!='ShortOnly'andisInLongPosition==false
strategy.entry('Long',strategy.long,qty=contracts)
alert(message=alertSyntaxBase+'side:long',freq=alert.freq_once_per_bar_close)
ifshortConditionandtradeDirection!='LongOnly'andisInShortPosition==false
strategy.entry('Short',strategy.short,qty=contracts)
alert(message=alertSyntaxBase+'side:short',freq=alert.freq_once_per_bar_close)

//InspiredfromMultiple%%profitexitsexamplebyadolgohttps://www.tradingview.com/script/kHhCik9f-Multiple-profit-exits-example/
strategy.exit('TP1',qty_percent=q1,profit=per(tp1))
strategy.exit('TP2',qty_percent=q2,profit=per(tp2))
strategy.exit('TP3',qty_percent=q3,profit=per(tp3))
strategy.exit('TP4',profit=per(tp4))
strategy.close('Long',qty_percent=100,comment='SLLong',when=slLongClose)
strategy.close('Short',qty_percent=100,comment='SLShort',when=slShortClose)
strategy.close_all(when=closeLongConditionorcloseShortCondition,comment='ClosePostion')
///Dashboard
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Inspiredbyhttps://www.tradingview.com/script/uWqKX6A2/-ThanksVertMT
showDashboard=input.bool(group="Dashboard",title="ShowDashboard",defval=true)
f_fillCell(_table,_column,_row,_title,_value,_bgcolor,_txtcolor)=>
_cellText=_title+"\n"+_value
table.cell(_table,_column,_row,_cellText,bgcolor=_bgcolor,text_color=_txtcolor,text_size=size.auto)
//Drawdashboardtable
ifshowDashboard
varbgcolor=color.new(color.black,0)

//KeeptrackofWins/Lossesstreaks
newWin=(strategy.wintrades>strategy.wintrades[1])and(strategy.losstrades==strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
newLoss=(strategy.wintrades==strategy.wintrades[1])and(strategy.losstrades>strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
varipintwinRow=0
varipintlossRow=0
varipintmaxWinRow=0
varipintmaxLossRow=0
ifnewWin
lossRow:=0
winRow:=winRow+1
ifwinRow>maxWinRow
maxWinRow:=winRow

ifnewLoss
winRow:=0
lossRow:=lossRow+1
iflossRow>maxLossRow
maxLossRow:=lossRow
//Preparestatstable
vartabledashTable=table.new(position.bottom_right,1,15,border_width=1)


ifbarstate.islastconfirmedhistory
//Updatetable
dollarReturn=strategy.netprofit
f_fillCell(dashTable,0,0,"Start:",str.format("{0,date,long}",strategy.closedtrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.closedtrades.entry_time(0))
f_fillCell(dashTable,0,1,"End:",str.format("{0,date,long}",strategy.opentrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.opentrades.entry_time(0))
_profit=(strategy.netprofit/strategy.initial_capital)*100
f_fillCell(dashTable,0,2,"NetProfit:",str.tostring(_profit,'##.##')+"%",_profit>0?color.green:color.red,color.white)
_numOfDaysInStrategy=(strategy.opentrades.entry_time(0)-strategy.closedtrades.entry_time(0))/(1000*3600*24)
f_fillCell(dashTable,0,3,"PercentPerDay",str.tostring(_profit/_numOfDaysInStrategy,'#########################.#####')+"%",_profit>0?color.green:color.red,color.white)
_winRate=(strategy.wintrades/strategy.closedtrades)*100
f_fillCell(dashTable,0,4,"PercentProfitable:",str.tostring(_winRate,'##.##')+"%",_winRate<50?color.red:_winRate<75?#999900:color.green,color.white)
f_fillCell(dashTable,0,5,"ProfitFactor:",str.tostring(strategy.grossprofit/strategy.grossloss,'##.###'),strategy.grossprofit>strategy.grossloss?color.green:color.red,color.white)
f_fillCell(dashTable,0,6,"TotalTrades:",str.tostring(strategy.closedtrades),bgcolor,color.white)
f_fillCell(dashTable,0,8,"MaxWinsInARow:",str.tostring(maxWinRow,'######'),bgcolor,color.white)
f_fillCell(dashTable,0,9,"MaxLossesInARow:",str.tostring(maxLossRow,'######'),bgcolor,color.white)
Expand (343 lines)
