Script Name: CCI-RSI MR
Author: monikabhay
Description: Indicators:
Bollinger Bands (20 period, 2σ)
RSI (14 period) and Simple moving average of RSI (5 period)
CCI (20 period)
SMA (5 period)

Entry Conditions:

Buy when:
Swing low (5)  should be lower than the highest of lower BB (3 periods)
Both RSI crossover RSI_5 and CCI crossover -100 should have happened within last 3 candles (including the current candle)
Once...
PineScript code:

Pine Script™ strategy
CCI-RSI MR
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  sg1999
//@version=4
//  >>>>>strategy  name
strategy(title  =  "CCI-RSI  MR",  shorttitle  =  "CCI-RSI  MR",  overlay  =  true)
//  >>>>input  variables
//  1.  risk  per  trade  as  %  of  initial  capital
risk_limit  =  input(title="Risk  Limit  (%)",  type=input.float,  minval=0.1,  defval=2.0,  step=0.1)
//  2.  drawdown
Draw_down  =  input(title="Max  Drawdown  (x  ATR)",  type=input.float,  minval=0.5,  maxval=10,  defval=2.0,  step=0.1)
//  3.  type  of  stop  loss  to  be  used
original_sl_type    =  input(title="SL  Based  on",  defval="Close  Price",  options=["Close  Price","Last  Traded  Price"])
//  4.  entry  signal  validity  for  bollinger  strategies
dist_from_signal=  input(title="Entry  distance  from  signal",  type=input.integer,  minval=1,  maxval=20,  defval=3,  step=1)
cross_val  =  input(title="Cross(over/under)  validity",  type=input.integer,  minval=1,  maxval=5,  defval=3,  step=1)  //  cross(under/over)  of  either  RSI  or  CCI  is  valid  for  'n'  no.of  days
//  5.  multiple  exit  points
exit_1_pft_pct                    =  input(title="1st  exit  when  reward  is",  type=input.float,  minval=0.5,  maxval=100,  defval=1.0,  step=0.1)
exit_1_qty_pct                    =  input(title="1st  exit  quantity  %",  type=input.float,  minval=1,  maxval=100,  defval=100,  step=5)
exit_2_pft_pct                    =  input(title="2nd  exit  when  reward  is",  type=input.float,  minval=0.5,  maxval=100,  defval=1.5,  step=0.1)
sl_trail_pct                        =  input(title="Trailing  SL  compared  to  original  SL",  type=input.float,  minval=0.5,  maxval=100,  defval=0.5,  step=0.5)
//show  signal  bool
plotBB  =  input(title="Show  BB",  type=input.bool,  defval=true)
plotSignals    =  input(title="Show  Signals",  type=input.bool,  defval=true)
//  6.  date  range  to  be  used  for  backtesting
fromMonth  =  input(defval  =  1,        title  =  "From  Month",            type  =  input.integer,  minval  =  1,  maxval  =  12)
fromDay      =  input(defval  =  1,        title  =  "From  Day",                type  =  input.integer,  minval  =  1,  maxval  =  31)
fromYear    =  input(defval  =  1990,  title  =  "From  Year",              type  =  input.integer,  minval  =  1970)
thruMonth  =  input(defval  =  1,        title  =  "Thru  Month",            type  =  input.integer,  minval  =  1,  maxval  =  12)
thruDay      =  input(defval  =  1,        title  =  "Thru  Day",                type  =  input.integer,  minval  =  1,  maxval  =  31)
thruYear    =  input(defval  =  2022,  title  =  "Thru  Year",              type  =  input.integer,  minval  =  1970)
start          =  timestamp(fromYear,  fromMonth,  fromDay,  00,  00)                //  backtest  start  window
finish        =  timestamp(thruYear,  thruMonth,  thruDay,  23,  59)                //  backtest  finish  window
window()    =>  time  >=  start  and  time  <=  finish  ?  true  :  false
//  >>>>>strategy  variables
//input  variables
current_high  =  highest(high,  5)          //  swing  high  (5  period)
current_low  =  lowest(low,  5)                //  swing  low  (5  period)
current_ma  =  sma(close,  5)                    //  Simple  Moving  average  (5  period)
atr_length  =  atr(20)                                //  ATR  (20  period)
CCI  =  cci(close,20)                                  //  CCI  (20  period)
RSI  =  rsi(close,14)                                  //  RSI  (14  period)
RSI_5  =  sma  (RSI,  5)                                //  Simple  moving  average  of  RSI  (5  period)
//  1.  for  current  candle
long_entry                            =  false
short_entry                          =  false
risk_reward_ok                    =  false
sl_hit_flag                          =  false
tsl_hit_flag                        =  false
sl_cross                                =  false
//  2.  across  candles
var  RSI_short                      =  false          //short  signal  boolean
var  RSI_long                        =  false          //long  signal  boolean
var  cci_sell                        =  false          //sellsignal  crossunder  boolean
var  cci_buy                          =  false          //buy  signal  crossover  boolean
var  bar_count_long            =  0                  //  Number  of  bars  after  a  long  signal
var  bar_count_short          =  0                  //  Number  of  bars  after  a  short  signal
var  candles_on_trade        =  0
var  entry_price                  =  0.00
var  sl_price                        =  0.00
var  qty                                  =  0
var  exit_1_qty                    =  0
var  exit_2_qty                    =  0
var  exit_1_price                =  0.0
var  exit_2_price                =  0.0
var  hold_high                      =  0.0              //  variable  used  to  calculate  Trailing  sl
var  hold_low                        =  0.0              //  variable  used  to  calculate  Trailing  sl
var  tsl_size                        =  0.0              //  Trailing  Stop  loss  size(xR)
var  sl_size                          =  0.0              //  Stop  loss  size  (R)
var  tsl_price                      =  0.0              //Trailing  stoploss  price
//  >>>>>strategy  conditions.
//  Bollinger  bands  (2  std)
[mBB0,uBB0,lBB0]  =  bb(close,20,2)
uBB0_low=  lowest(uBB0,3)  //  lowest  among  upper  BB  of  past  3  periods
lBB0_high=  highest(lBB0,3)  //highest  among  upper  BB  of  past  3  periods
//RSI  and  CCI  may  not  necessarily  crossunder  on  the  same  candle.
t_sell_RSI  =  sum(  crossunder(RSI,RSI_5)?  1  :  0,  cross_val)  ==  1  //  checks  if  crossunder  has  happened  in  the  last  3  candles  (including  the  current  candle)
t_sell_CCI  =  sum(  crossunder(CCI,100)?  1  :  0,  cross_val)  ==  1
t_buy_RSI    =  sum(  crossover(RSI,RSI_5)?  1  :  0,  cross_val)  ==  1    //checks  if  crossover  has  happened  in  the  last  3  candles  (including  the  current  candle)
t_buy_CCI    =  sum(  crossover(CCI,-100)  ?  1  :  0,  cross_val)  ==  1
//  CONDITIONS  FOR  A  SELL  signal
if  t_sell_RSI  and  t_sell_CCI  and  (current_high  >=  uBB0_low)
        cci_sell  :=  true
        bar_count_short  :=  0

if    cci_sell  and  strategy.position_size  ==0
        bar_count_short  :=  bar_count_short  +  1

if    cci_sell  and  bar_count_short<=  dist_from_signal  and  close  <=  current_ma    and  strategy.position_size  ==0
        RSI_short  :=  true
//conditions  for  a  BUY  signal
if  t_buy_RSI  and  t_buy_CCI  and  (current_low  <=  lBB0_high)  //  or  current_low_close  <=  lBB01_high)
        cci_buy  :=  true
        bar_count_long  :=  0
if    cci_buy  and  strategy.position_size  ==0
        bar_count_long  :=  bar_count_long  +  1

if    cci_buy  and    bar_count_long<=  dist_from_signal  and  close  >=  current_ma  and  strategy.position_size  ==0
        RSI_long  :=  true
if  RSI_long  and  RSI_short
        RSI_long  :=  false
        RSI_short  :=  false
//  >>>>>entry  and  target  specifications
if  strategy.position_size  ==  0  and  RSI_short
        short_entry                  :=  true
        entry_price                  :=  close
        sl_price                        :=  current_high  +  syminfo.mintick  //  (swing  high  +  one  tick)  is  the  stop  loss
        sl_size                          :=  abs(entry_price  -  sl_price)
        candles_on_trade        :=  0
        tsl_size                        :=  abs(entry_price  -  sl_price)*sl_trail_pct  //  Here  sl_trail_pct  is  the  multiple  of  R  which  is  used  to  calculate  TSL  size
if  strategy.position_size  ==  0  and  RSI_long
        long_entry                    :=  true
        entry_price                  :=  close
        sl_price                        :=  current_low  -    syminfo.mintick  //(swing  low  -  one  tick)  is  the  stop  loss
        candles_on_trade        :=  0
        sl_size                          :=  abs(entry_price  -  sl_price)
        tsl_size                        :=  abs(entry_price  -  sl_price)*sl_trail_pct  //  Here  sl_trail_pct  is  the  multiple  of  R  which  is  used  to  calculate  TSL  size

if  long_entry  and  short_entry
        long_entry                    :=  false
        short_entry                  :=  false


//  >>>>risk  evaluation  criteria

//>>>>>  quantity  determination  and  exit  point  specifications.

if  (long_entry  or  short_entry)  and  strategy.position_size  ==  0  //  Based  on  our  risk  (R),  no.of  lots  is  calculated  by  considering  a  risk  per  trade  limit  formula
        qty                                  :=  round((strategy.equity)  *  (risk_limit/100)/(abs(entry_price  -  sl_price)*syminfo.pointvalue))
        exit_1_qty                    :=  round(qty  *  (exit_1_qty_pct/100))
        exit_2_qty                    :=  qty  -  (exit_1_qty)
        if  long_entry
                exit_1_price        :=  entry_price  +  (sl_size  *  exit_1_pft_pct)
                exit_2_price        :=  entry_price  +  (sl_size  *  exit_2_pft_pct)
        if  short_entry
                exit_1_price        :=  entry_price  -  (sl_size  *  exit_1_pft_pct)
                exit_2_price        :=  entry_price  -  (sl_size  *  exit_2_pft_pct)


//  trail  SL  after  1st  target  is  hit
if  abs(strategy.position_size)  ==  0
        hold_high      :=  0
        hold_low        :=  0
if  strategy.position_size  >  0  and  high  >  exit_1_price
        if  high  >  hold_high  or  hold_high  ==  0
                hold_high        :=  high
        tsl_price                :=  hold_high  -  tsl_size

if  strategy.position_size  <  0  and  low  <  exit_1_price
        if  low    <  hold_low  or  hold_low  ==  0
                hold_low          :=  low
        tsl_price                :=  hold_low  +  tsl_size

//>>>>  entry  conditons
if  long_entry  and  strategy.position_size  ==  0
        strategy.cancel("BUY",  window())//addanotherwindowconditionwhichconsidersdaytime(workinghours)
strategy.order("BUY",strategy.long,qty,comment="BUY@"+tostring(entry_price),when=window())
ifshort_entryandstrategy.position_size==0
strategy.cancel("SELL",window())//addanotherwindowconditionwhichconsidersdaytime(workinghours)
strategy.order("SELL",strategy.short,qty,comment="SELL@"+tostring(entry_price),when=window())
//>>>>exitconditons
tsl_hit_flag:=false
//exitattsl
ifstrategy.position_size>0andclose<tsl_priceandabs(strategy.position_size)!=qty
strategy.order("EXITatTSL",strategy.short,abs(strategy.position_size),comment="EXITTSL@"+tostring(close))
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
tsl_hit_flag:=true
cci_sell:=false
cci_buy:=false
strategy.cancel("EXIT1",true)
strategy.cancel("EXIT2",true)
strategy.cancel("ExitDrawd",true)
strategy.cancel("EXITatSL",true)
ifstrategy.position_size<0andclose>tsl_priceandabs(strategy.position_size)!=qty
strategy.order("EXITatTSL",strategy.long,abs(strategy.position_size),comment="EXITTSL@"+tostring(close))
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
tsl_hit_flag:=true
cci_sell:=false
cci_buy:=false
strategy.cancel("EXIT1",true)
strategy.cancel("EXIT2",true)
strategy.cancel("ExitDrawd",true)
strategy.cancel("EXITatSL",true)
//>>>>exitatsl

ifstrategy.position_size>0andoriginal_sl_type=="ClosePrice"andclose<sl_priceandabs(strategy.position_size)==qty
strategy.cancel("EXITatSL",true)
strategy.order("EXITatSL",strategy.short,abs(strategy.position_size),stop=sl_price,comment="EXITSL@"+tostring(close))
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
cci_buy:=false
cci_sell:=false
sl_hit_flag:=true
strategy.cancel("EXIT1",true)
strategy.cancel("EXIT2",true)
strategy.cancel("ExitDrawd",true)
strategy.cancel("EXITatTSL",true)

ifstrategy.position_size<0andoriginal_sl_type=="ClosePrice"andclose>sl_priceandabs(strategy.position_size)==qty
strategy.cancel("EXITatSL",true)
strategy.order("EXITatSL",strategy.long,abs(strategy.position_size),stop=sl_price,comment="EXITSL@"+tostring(close))
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
cci_buy:=false
cci_sell:=false
sl_hit_flag:=true
strategy.cancel("EXIT1",true)
strategy.cancel("EXIT2",true)
strategy.cancel("ExitDrawd",true)
strategy.cancel("EXITatTSL",true)


//>>>>>forltpslsetting
ifstrategy.position_size>0andoriginal_sl_type=="LastTradedPrice"andabs(strategy.position_size)==qty
strategy.order("EXITatSL",strategy.short,abs(strategy.position_size),stop=sl_price,comment="EXITSL@"+tostring(close))
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
cci_buy:=false
cci_sell:=false
strategy.cancel("EXIT1",true)
strategy.cancel("EXIT2",true)
strategy.cancel("ExitDrawd",true)
strategy.cancel("EXITatTSL",true)

ifstrategy.position_size<0andoriginal_sl_type=="LastTradedPrice"andabs(strategy.position_size)==qty
strategy.order("EXITatSL",strategy.long,abs(strategy.position_size),stop=sl_price,comment="EXITSL@"+tostring(close))
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
cci_buy:=false
cci_sell:=false
strategy.cancel("EXIT1",true)
strategy.cancel("EXIT2",true)
strategy.cancel("ExitDrawd",true)
strategy.cancel("EXITatTSL",true)
//>>>>>exitattarget
ifstrategy.position_size>0andabs(strategy.position_size)==qtyandnottsl_hit_flag
strategy.order("EXIT1",strategy.short,exit_1_qty,limit=exit_1_price,comment="EXITTG1@"+tostring(exit_1_price))
strategy.cancel("ExitDrawd",true)
cci_sell:=false
cci_buy:=false
ifstrategy.position_size>0andabs(strategy.position_size)<qtyandabs(strategy.position_size)!=qtyandnottsl_hit_flag
strategy.order("EXIT2",strategy.short,exit_2_qty,limit=exit_2_price,comment="EXITTG2@"+tostring(exit_2_price))
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
cci_buy:=false
cci_sell:=false
strategy.cancel("ExitDrawd",true)
strategy.cancel("EXITatSL",true)
ifstrategy.position_size<0andabs(strategy.position_size)==qtyandnottsl_hit_flag
strategy.order("EXIT1",strategy.long,exit_1_qty,limit=exit_1_price,comment="EXITTG1@"+tostring(exit_1_price))
strategy.cancel("ExitDrawd",true)
cci_buy:=false
cci_sell:=false
ifstrategy.position_size<0andabs(strategy.position_size)<qtyandabs(strategy.position_size)!=qty
strategy.order("EXIT2",strategy.long,exit_2_qty,limit=exit_2_price,comment="EXITTG2@"+tostring(exit_2_price))
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
cci_buy:=false
cci_sell:=false
strategy.cancel("ExitDrawd",true)
strategy.cancel("EXITatSL",true)

//>>>>>>drawdownexecution
ifstrategy.position_size<0andoriginal_sl_type=="ClosePrice"andnottsl_hit_flag
strategy.cancel("ExitDrawd",true)
strategy.order("ExitDrawd",strategy.long,abs(strategy.position_size),stop=(entry_price+Draw_down*atr_length),comment="DrawdownexitS")
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
cci_buy:=false
cci_sell:=false


ifstrategy.position_size>0andoriginal_sl_type=="ClosePrice"andnottsl_hit_flagandnotsl_hit_flag
strategy.cancel("ExitDrawd",true)
strategy.order("ExitDrawd",strategy.short,abs(strategy.position_size),stop=(entry_price-Draw_down*atr_length),comment="DrawdownexitB")
RSI_short:=false
RSI_long:=false
bar_count_long:=0
bar_count_short:=0
cci_buy:=false
cci_sell:=false

//>>>>toaddslhitsign
ifstrategy.position_size!=0andsl_hit_flag//Forsymbolsonchart
sl_cross:=true
//>>>>>cancelallpendingordersifthetradeisbooked
strategy.cancel_all(strategy.position_size==0andnot(long_entryorshort_entry))
//>>>>plotindicators
p_mBB=plot(plotBB?mBB0:na,color=color.teal)
p_uBB=plot(plotBB?uBB0:na,color=color.teal,style=plot.style_stepline)
p_lBB=plot(plotBB?lBB0:na,color=color.teal,style=plot.style_stepline)
plot(sma(close,5),color=color.blue,title="MA")
//>>>>plotsignals
plotshape(plotSignalsandRSI_short,style=shape.triangledown,location=location.abovebar,color=color.red)
plotshape(plotSignalsandRSI_long,style=shape.triangleup,location=location.belowbar,color=color.green)
plotshape(sl_cross,text="StoplossHit",size=size.normal,style=shape.xcross,location=location.belowbar,color=color.red)
//>>>>plotsignalhighlow
ifstrategy.position_size!=0
candles_on_trade:=candles_on_trade+1
ifstrategy.position_size!=0andcandles_on_trade==1
line.new(x1=bar_index[1],y1=high[1],x2=bar_index[0],y2=high[1],color=color.black,width=2)
line.new(x1=bar_index[1],y1=low[1],x2=bar_index[0],y2=low[1],color=color.black,width=2)
//>>>>endofprogram
Expand (394 lines)
