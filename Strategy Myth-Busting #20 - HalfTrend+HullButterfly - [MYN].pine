Script Name: Strategy Myth-Busting #20 - HalfTrend+HullButterfly - [MYN]
Author: myncrypto
Description: #20 on the Myth-Busting bench, we are automating the " I Found Super Easy 1 Minute Scalping System And Backtest It 100 Times " strategy from " Jessy Trading " who claims 30.58% net profit over 100 trades in a couple of weeks with a 51% win rate and profit factor of 1.56 on EURUSD .

This one surprised us quite a bit. Despite the title of this strategy indicating...
PineScript code:

Pine Script™ strategy
Strategy Myth-Busting #20 - HalfTrend+HullButterfly - [MYN]
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  myn
//@version=5
strategy('Strategy  Myth-Busting  #20  -  HalfTrend+HullButterfly  -  [MYN]',  max_bars_back=5000,  overlay=true,  pyramiding=0,  initial_capital=10000,  currency='NONE',  default_qty_type=strategy.percent_of_equity,  default_qty_value=1.0,  commission_value=0.075,  use_bar_magnifier  =  false)
/////////////////////////////////////
//*  Put  your  strategy  logic  below  *//
/////////////////////////////////////
//  Hull  Butterfly  gives  us  green  column,    Wait  for  HalfTrend  to  present  an  up  arrow  and  enter  trade.
//  Hull  Butterfly  gives  us  a  red  column  ,  Wait  for  HalfTrend  present  a  down  arrow  and  enter  trade.
//  SL  at  swing  high/low  with  TP  1.5  risk
//  Hull  Butterfly  Oscillator  [LuxAlgo]
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//-----------------------------------------------------------------------------}
//Settings
//----------------------------------------------------a-------------------------{
length  =  input(11,  group="Hull  Butterfly  Oscillator")
mult  =  input(2.,  'Levels  Multiplier')
src  =  input(close)
//Style
bull_css_0  =  input.color(color.new(#0cb51a,  50),  'Bullish  Gradient'
    ,  inline  =  'inline0'
    ,  group  =  'Style')
bull_css_1  =  input.color(#0cb51a,  ''
    ,  inline  =  'inline0'
    ,  group  =  'Style')
bear_css_0  =  input.color(color.new(#ff1100,  50),  'Bearish  Gradient'
    ,  inline  =  'inline1'
    ,  group  =  'Style')
bear_css_1  =  input.color(#ff1100,  ''
    ,  inline  =  'inline1'
    ,  group  =  'Style')
//-----------------------------------------------------------------------------}
//Normalization  variables
//-----------------------------------------------------------------------------{
var  short_len  =  int(length  /  2)
var  hull_len  =  int(math.sqrt(length))
var  den1  =  short_len  *  (short_len+1)/2
varden2=length*(length+1)/2
varden3=hull_len*(hull_len+1)/2
//-----------------------------------------------------------------------------}
//Hullcoefficients
//-----------------------------------------------------------------------------{
varlcwa_coeffs=array.new_float(hull_len,0)
varhull_coeffs=array.new_float(0)
ifbarstate.isfirst
//LinearlycombinedWMAcoeffs
fori=0tolength-1
sum1=math.max(short_len-i,0)
sum2=length-i

array.unshift(lcwa_coeffs,2*(sum1/den1)-(sum2/den2))

//ZeropaddingoflinearlycombinedWMAcoeffs
fori=0tohull_len-2
array.unshift(lcwa_coeffs,0)

//WMAconvolutionoflinearlycombinedWMAcoeffs
fori=hull_lentoarray.size(lcwa_coeffs)-1
sum3=0.
forj=i-hull_lentoi-1
sum3+=array.get(lcwa_coeffs,j)*(i-j)

array.unshift(hull_coeffs,sum3/den3)
//-----------------------------------------------------------------------------}
//Hullsqueezeoscillator
//-----------------------------------------------------------------------------{
varos=0
varlen=array.size(hull_coeffs)-1
hma=0.
inv_hma=0.
fori=0tolen
hma+=src[i]*array.get(hull_coeffs,i)
inv_hma+=src[len-i]*array.get(hull_coeffs,i)

hso=hma-inv_hma
cmean=ta.cum(math.abs(hso))/bar_index*mult
os:=ta.cross(hso,cmean)orta.cross(hso,-cmean)?0
:hso<hso[1]andhso>cmean?-1
:hso>hso[1]andhso<-cmean?1
:os
//-----------------------------------------------------------------------------}
//Plot
//-----------------------------------------------------------------------------{
//Colors
css0=color.from_gradient(hso,0,cmean,bull_css_0,bull_css_1)
css1=color.from_gradient(hso,-cmean,0,bear_css_1,bear_css_0)
css=hso>0?css0:css1
plotshape(os>os[1]andos==1,title='ArrowUp',style=shape.circle,location=location.belowbar,size=size.tiny,color=color.new(color.green,0))
plotshape(os<os[1]andos==-1,title='ArrowDown',style=shape.circle,location=location.abovebar,size=size.tiny,color=color.new(color.red,0))
hullLongEntry=os>os[1]andos==1
hullShortEntry=os<os[1]andos==-1
//HalfTrend-Everget
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Copyright(c)2021-present,AlexOrekhov(everget)
amplitude=input(title='Amplitude',defval=2,group="HalfTrend")
channelDeviation=input(title='ChannelDeviation',defval=2)
showArrows=input(title='ShowArrows',defval=true)
showChannels=input(title='ShowChannels',defval=false)
varinttrend=0
varintnextTrend=0
varfloatmaxLowPrice=nz(low[1],low)
varfloatminHighPrice=nz(high[1],high)
varfloatup=0.0
varfloatdown=0.0
floatatrHigh=0.0
floatatrLow=0.0
floatarrowUp=na
floatarrowDown=na
atr2=ta.atr(100)/2
dev=channelDeviation*atr2
highPrice=high[math.abs(ta.highestbars(amplitude))]
lowPrice=low[math.abs(ta.lowestbars(amplitude))]
highma=ta.sma(high,amplitude)
lowma=ta.sma(low,amplitude)
ifnextTrend==1
maxLowPrice:=math.max(lowPrice,maxLowPrice)
ifhighma<maxLowPriceandclose<nz(low[1],low)
trend:=1
nextTrend:=0
minHighPrice:=highPrice
minHighPrice
else
minHighPrice:=math.min(highPrice,minHighPrice)
iflowma>minHighPriceandclose>nz(high[1],high)
trend:=0
nextTrend:=1
maxLowPrice:=lowPrice
maxLowPrice
iftrend==0
ifnotna(trend[1])andtrend[1]!=0
up:=na(down[1])?down:down[1]
arrowUp:=up-atr2
arrowUp
else
up:=na(up[1])?maxLowPrice:math.max(maxLowPrice,up[1])
up
atrHigh:=up+dev
atrLow:=up-dev
atrLow
else
ifnotna(trend[1])andtrend[1]!=1
down:=na(up[1])?up:up[1]
arrowDown:=down+atr2
arrowDown
else
down:=na(down[1])?minHighPrice:math.min(minHighPrice,down[1])
down
atrHigh:=down+dev
atrLow:=down-dev
atrLow
ht=trend==0?up:down
varcolorbuyColor=color.blue
varcolorsellColor=color.red
htColor=trend==0?buyColor:sellColor
htPlot=plot(ht,title='HalfTrend',linewidth=2,color=htColor)
atrHighPlot=plot(showChannels?atrHigh:na,title='ATRHigh',style=plot.style_circles,color=color.new(sellColor,0))
atrLowPlot=plot(showChannels?atrLow:na,title='ATRLow',style=plot.style_circles,color=color.new(buyColor,0))
fill(htPlot,atrHighPlot,title='ATRHighRibbon',color=color.new(sellColor,90))
fill(htPlot,atrLowPlot,title='ATRLowRibbon',color=color.new(buyColor,90))
buySignal=notna(arrowUp)andtrend==0andtrend[1]==1
sellSignal=notna(arrowDown)andtrend==1andtrend[1]==0
plotshape(showArrowsandbuySignal?atrLow:na,title='ArrowUp',style=shape.triangleup,location=location.absolute,size=size.tiny,color=color.new(buyColor,0))
plotshape(showArrowsandsellSignal?atrHigh:na,title='ArrowDown',style=shape.triangledown,location=location.absolute,size=size.tiny,color=color.new(sellColor,0))
alertcondition(buySignal,title='Alert:HalfTrendBuy',message='HalfTrendBuy')
alertcondition(sellSignal,title='Alert:HalfTrendSell',message='HalfTrendSell')
halfTrendLongEntry=buySignal
halfTrendShortEntry=sellSignal
//////////////////////////////////////
//*Putyourstrategyrulesbelow*//
/////////////////////////////////////
i_numLookbackBarsHull=input(3,title="MaxNumberOfBarsBetweenHullandHalfTrendTrigger",group="Global")
longCondition=halfTrendLongEntryandta.barssince(hullLongEntry)<=i_numLookbackBarsHull
shortCondition=halfTrendShortEntryandta.barssince(hullShortEntry)<=i_numLookbackBarsHull
//defineas0ifdonotwanttouse
closeLongCondition=0
closeShortCondition=0
//EMAFilter
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_emaFilterEnabled=input.bool(defval=false,title="EnableEMAFilter",tooltip="EnableifyouwouldliketoconditionallyhaveentriesincorporateEMAasafilterwheresourceisabove/belowtheEMAline",group="EMAFilter")
i_emaLength=input.int(200,title="EMALength",minval=1,group="EMAFilter")
i_emaSource=input.source(close,"EMASource",group="EMAFilter")
emaValue=i_emaFilterEnabled?ta.ema(i_emaSource,i_emaLength):na
boolisEMAFilterEnabledAndCloseAboveMA=i_emaFilterEnabled?i_emaSource>emaValue:true
boolisEMAFilterEnabledAndCloseBelowMA=i_emaFilterEnabled?i_emaSource<emaValue:true
//ADXFilter
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_adxFilterEnabled=input.bool(defval=false,title="EnableADXFilter",tooltip="EnableifyouwouldliketoconditionallyhaveentriesincorporateADXasafilter",group="ADXFilter")
i_adxVariant=input.string('ORIGINAL',title='ADXVariant',options=['ORIGINAL','MASANAKAMURA'],group="ADXFilter")
i_adxSmoothing=input.int(14,title="ADXSmoothing",group="ADXFilter")
i_adxDILength=input.int(14,title="DILength",group="ADXFilter")
i_adxLowerThreshold=input.float(25,title="ADXThreshold",step=.5,group="ADXFilter")
calcADX_Masanakamura(int_len)=>
_smoothedTrueRange=0.0
_smoothedDirectionalMovementPlus=0.0
_smoothed_directionalMovementMinus=0.0
_trueRange=math.max(math.max(high-low,math.abs(high-nz(close[1]))),math.abs(low-nz(close[1])))
_directionalMovementPlus=high-nz(high[1])>nz(low[1])-low?math.max(high-nz(high[1]),0):0
_directionalMovementMinus=nz(low[1])-low>high-nz(high[1])?math.max(nz(low[1])-low,0):0
_smoothedTrueRange:=nz(_smoothedTrueRange[1])-nz(_smoothedTrueRange[1])/_len+_trueRange
_smoothedDirectionalMovementPlus:=nz(_smoothedDirectionalMovementPlus[1])-nz(_smoothedDirectionalMovementPlus[1])/_len+_directionalMovementPlus
_smoothed_directionalMovementMinus:=nz(_smoothed_directionalMovementMinus[1])-nz(_smoothed_directionalMovementMinus[1])/_len+_directionalMovementMinus
DIP=_smoothedDirectionalMovementPlus/_smoothedTrueRange*100
DIM=_smoothed_directionalMovementMinus/_smoothedTrueRange*100
_DX=math.abs(DIP-DIM)/(DIP+DIM)*100
adx=ta.sma(_DX,_len)
[DIP,DIM,adx]
[DIPlusO,DIMinusO,ADXO]=ta.dmi(i_adxDILength,i_adxSmoothing)
[DIPlusM,DIMinusM,ADXM]=calcADX_Masanakamura(i_adxDILength)
adx=i_adxFilterEnabledandi_adxVariant=="ORIGINAL"?ADXO:ADXM
boolisADXFilterEnabledAndAboveThreshold=i_adxFilterEnabled?adx>i_adxLowerThreshold:true
///Start/EndTimePeriods
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_startPeriodEnabled=input.bool(true,'Start',group='DateRange',inline='StartPeriod')
i_startPeriodTime=input.time(timestamp('1Jan2019'),'',group='DateRange',inline='StartPeriod')
i_endPeriodEnabled=input.bool(true,'End',group='DateRange',inline='EndPeriod')
i_endPeriodTime=input.time(timestamp('31Dec2030'),'',group='DateRange',inline='EndPeriod')
isStartPeriodEnabledAndInRange=i_startPeriodEnabled?i_startPeriodTime<=time:true
isEndPeriodEnabledAndInRange=i_endPeriodEnabled?i_endPeriodTime>=time:true
//Time-Of-DayWindow
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Inspiredfromhttps://www.tradingview.com/script/3BmID7aW-Highlight-Trading-Window-Simple-Hours-Time-of-Day-Filter/
i_timeFilterEnabled=input.bool(defval=false,title="EnableTime-Of-DayWindow",tooltip="Limitthetimeofdayfortradeexecution",group="TimeWindow")
i_timeZone=input.string(title="SelectLocalTimeZone",defval="GMT-5",options=["GMT-8","GMT-7","GMT-6","GMT-5","GMT-4","GMT-3","GMT-2","GMT-1","GMT","GMT+1","GMT+2","GMT+3","GMT+4","GMT+5","GMT+6","GMT+7","GMT+8","GMT+9","GMT+10","GMT+11","GMT+12","GMT+13"],group="TimeWindow")
i_betweenTime=input.session('0700-0900',title="TimeFilter",group="TimeWindow")//'0000-0000'isanytimetoenter
isWithinWindowOfTime(_position)=>
currentTimeIsWithinWindowOfTime=notna(time(timeframe.period,_position+':1234567',i_timeZone))
boolisTimeFilterEnabledAndInRange=i_timeFilterEnabled?isWithinWindowOfTime(i_betweenTime):true
isStartEndPeriodsAndTimeInRange=isStartPeriodEnabledAndInRangeandisEndPeriodEnabledAndInRangeandisTimeFilterEnabledAndInRange
//TradeDirection
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_tradeDirection=input.string('LongandShort',title='TradeDirection',options=['LongandShort','LongOnly','ShortOnly'],group='TradeDirection')
//PercentasPoints
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
per(pcnt)=>
strategy.position_size!=0?math.round(pcnt/100*strategy.position_avg_price/syminfo.mintick):float(na)
//Takeprofit1
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_takeProfitTargetPercent1=input.float(title='TakeProfit1-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit1')
i_takeProfitQuantityPercent1=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit1')
//Takeprofit2
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_takeProfitTargetPercent2=input.float(title='TakeProfit2-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit2')
i_takeProfitQuantityPercent2=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit2')
//Takeprofit3
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_takeProfitTargetPercent3=input.float(title='TakeProfit3-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit',inline='TakeProfit3')
i_takeProfitQuantityPercent3=input.int(title='%OfPosition',defval=100,minval=0,group='TakeProfit',inline='TakeProfit3')
//Takeprofit4
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_takeProfitTargetPercent4=input.float(title='TakeProfit4-Target%',defval=100,minval=0.0,step=0.5,group='TakeProfit')
///StopLoss
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_stopLossPercent=input.float(title='StopLoss(%)',defval=999,minval=0.01,step=0.5,group='StopLoss')*0.01
slLongClose=close<strategy.position_avg_price*(1-i_stopLossPercent)
slShortClose=close>strategy.position_avg_price*(1+i_stopLossPercent)
///Leverage
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_leverage=input.float(1,'Leverage',step=.5,group='Leverage')
contracts=math.min(math.max(.000001,strategy.equity/close*i_leverage),1000000000)
///TradeStateManagement
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
isInLongPosition=strategy.position_size>0
isInShortPosition=strategy.position_size<0
///ProfitViewAlertSyntaxStringGeneration
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_alertSyntaxPrefix=input.string(defval='CRYPTANEX_99FTX_Strategy-Name-Here',title='AlertSyntaxPrefix',group='ProfitViewAlertSyntax')
alertSyntaxBase=i_alertSyntaxPrefix+'\n#'+str.tostring(open)+','+str.tostring(high)+','+str.tostring(low)+','+str.tostring(close)+','+str.tostring(volume)+','
///TradeExecution
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
longConditionCalc=(longConditionandisADXFilterEnabledAndAboveThresholdandisEMAFilterEnabledAndCloseAboveMA)
shortConditionCalc=(shortConditionandisADXFilterEnabledAndAboveThresholdandisEMAFilterEnabledAndCloseBelowMA)
ifisStartEndPeriodsAndTimeInRange
iflongConditionCalcandi_tradeDirection!='ShortOnly'andisInLongPosition==false
strategy.entry('Long',strategy.long,qty=contracts)
alert(message=alertSyntaxBase+'side:long',freq=alert.freq_once_per_bar_close)
ifshortConditionCalcandi_tradeDirection!='LongOnly'andisInShortPosition==false
strategy.entry('Short',strategy.short,qty=contracts)
alert(message=alertSyntaxBase+'side:short',freq=alert.freq_once_per_bar_close)

//InspiredfromMultiple%%profitexitsexamplebyadolgohttps://www.tradingview.com/script/kHhCik9f-Multiple-profit-exits-example/
strategy.exit('TP1',qty_percent=i_takeProfitQuantityPercent1,profit=per(i_takeProfitTargetPercent1))
strategy.exit('TP2',qty_percent=i_takeProfitQuantityPercent2,profit=per(i_takeProfitTargetPercent2))
strategy.exit('TP3',qty_percent=i_takeProfitQuantityPercent3,profit=per(i_takeProfitTargetPercent3))
strategy.exit('i_takeProfitTargetPercent4',profit=per(i_takeProfitTargetPercent4))
//StopLoss
strategy.close('Long',qty_percent=100,comment='SLLong',when=slLongClose)
strategy.close('Short',qty_percent=100,comment='SLShort',when=slShortClose)
//ConditionalCloses
strategy.close('Long',qty_percent=100,comment='CloseLong',when=closeLongCondition)
strategy.close('Short',qty_percent=100,comment='CloseShort',when=closeShortCondition)
///Dashboard
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Inspiredbyhttps://www.tradingview.com/script/uWqKX6A2/-ThanksVertMT
showDashboard=input.bool(group="Dashboard",title="ShowDashboard",defval=true)
f_fillCell(_table,_column,_row,_title,_value,_bgcolor,_txtcolor)=>
_cellText=_title+"\n"+_value
table.cell(_table,_column,_row,_cellText,bgcolor=_bgcolor,text_color=_txtcolor,text_size=size.auto)
//Drawdashboardtable
ifshowDashboard
varbgcolor=color.new(color.black,0)

//KeeptrackofWins/Lossesstreaks
newWin=(strategy.wintrades>strategy.wintrades[1])and(strategy.losstrades==strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
newLoss=(strategy.wintrades==strategy.wintrades[1])and(strategy.losstrades>strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
varipintwinRow=0
varipintlossRow=0
varipintmaxWinRow=0
varipintmaxLossRow=0
ifnewWin
lossRow:=0
winRow:=winRow+1
ifwinRow>maxWinRow
maxWinRow:=winRow

ifnewLoss
winRow:=0
lossRow:=lossRow+1
iflossRow>maxLossRow
maxLossRow:=lossRow
//Preparestatstable
vartabledashTable=table.new(position.bottom_right,1,15,border_width=1)


ifbarstate.islastconfirmedhistory
//Updatetable
dollarReturn=strategy.netprofit
f_fillCell(dashTable,0,0,"Start:",str.format("{0,date,long}",strategy.closedtrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.closedtrades.entry_time(0))
f_fillCell(dashTable,0,1,"End:",str.format("{0,date,long}",strategy.opentrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.opentrades.entry_time(0))
_profit=(strategy.netprofit/strategy.initial_capital)*100
f_fillCell(dashTable,0,2,"NetProfit:",str.tostring(_profit,'##.##')+"%",_profit>0?color.green:color.red,color.white)
_numOfDaysInStrategy=(strategy.opentrades.entry_time(0)-strategy.closedtrades.entry_time(0))/(1000*3600*24)
f_fillCell(dashTable,0,3,"PercentPerDay",str.tostring(_profit/_numOfDaysInStrategy,'#########################.#####')+"%",_profit>0?color.green:color.red,color.white)
_winRate=(strategy.wintrades/strategy.closedtrades)*100
f_fillCell(dashTable,0,4,"PercentProfitable:",str.tostring(_winRate,'##.##')+"%",_winRate<50?color.red:_winRate<75?#999900:color.green,color.white)
f_fillCell(dashTable,0,5,"ProfitFactor:",str.tostring(strategy.grossprofit/strategy.grossloss,'##.###'),strategy.grossprofit>strategy.grossloss?color.green:color.red,color.white)
f_fillCell(dashTable,0,6,"TotalTrades:",str.tostring(strategy.closedtrades),bgcolor,color.white)
f_fillCell(dashTable,0,8,"MaxWinsInARow:",str.tostring(maxWinRow,'######'),bgcolor,color.white)
f_fillCell(dashTable,0,9,"MaxLossesInARow:",str.tostring(maxLossRow,'######'),bgcolor,color.white)
Expand (428 lines)
