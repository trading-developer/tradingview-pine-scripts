Script Name: Up & Down Trend Trading Strategy - BNB-USDT 15min
Author: pcooma
Description: This strategy will focus on up trend trading and down trend trading based on several indicators such as;
for up trend
1. SAR indicator
2. Super trend indicator
3. Simple moving average for the period of 100

down trend
1. RSI Indicator
2. Money flow index
3. Relative volatility index
4. Balance of powder
PineScript code:

Pine Scriptâ„¢ strategy
Up & Down Trend Trading Strategy - BNB/USDT 15min
//@  pcooma
//  you  are  wellcome  to  tweek  settings  and  get  yield  as  you  wish
//  This  startergy  optimized  to  BNB  15  min  standerd  candlestic  chart  and  buy  &  sell  signals  were  based  on  technical  analysis.
//@version=5
strategy("OPV6  -  Up  &  Down  Trend  Trading  Strategy  -  BNB/USDT  15min",  shorttitle="OPV6  U&D  -  BNB  15min",  overlay=true,  calc_on_order_fills=false,  close_entries_rule  =  "FIFO",  calc_on_every_tick=false,  initial_capital  =  1000,pyramiding  =  999,precision  =  4,  process_orders_on_close=false,  currency  =  currency.USD,  default_qty_type  =  strategy.cash,  default_qty_value  =  33,  commission_type  =  strategy.commission.percent,  max_lines_count  =  500,  commission_value  =  0.1)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////INPUTS///////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Backtest  dates
fromDay                                            =  input.int(defval          =  01,            title        =  "From  (DD/MM/YYYY)  -  ",          minval  =  1,  maxval  =  31,                group  =  'Time  Period  Values',  inline  =  'From')
fromMonth                                        =  input.int(defval          =  08,            title        =  "/",                                                minval  =  1,  maxval  =  12,                group  =  'Time  Period  Values',  inline  =  'From')
fromYear                                          =  input.int(defval          =  2021,        title        =  "/",                                                minval  =  1970,                                    group  =  'Time  Period  Values',  inline  =  'From')
thruDay                                            =  input.int(defval          =  1,              title        =  "Thru  (DD/MM/YYYY)  -  ",          minval  =  1,  maxval  =  31,                group  =  'Time  Period  Values',  inline  =  'Thru')
thruMonth                                        =  input.int(defval          =  1,              title        =  "/",                                                minval  =  1,  maxval  =  12,                group  =  'Time  Period  Values',  inline  =  'Thru')
thruYear                                          =  input.int(defval          =  2112,        title        =  "/",                                                minval  =  1970,                                    group  =  'Time  Period  Values',  inline  =  'Thru')
start                                                =  timestamp(fromYear,  fromMonth,  fromDay,  00,  00)                  //  backtest  start  window
finish                                              =  timestamp(thruYear,  thruMonth,  thruDay,  23,  59)                  //  backtest  finish  window
window()    =>
        time  >=  start  and  time  <=  finish  ?  true  :  false                                  //  create  function  "within  window  of  time"
//Fund  Management
var          trading_option            =  input.string(                                          title      =  "Select  Trading  option",                                                                        options=['Uptrend  trading',  'Up  and  Down  Trend  trading',  'Grid  Trading'],  defval='Uptrend  trading',  group  =  "Fund  Management")
var          int_cap                          =  input.float(defval        =  5000,          title      =  "Cumilative  Value  of  Investment",                                                      group  =  "Fund  Management")
var          int_val_prc                  =  input.float(defval        =  20,              title      =  "Value  of  first  purchase  will  be",                                                    group  =  "Fund  Management",            inline  =  "Investment",    tooltip    =  "Minimum  value  of  initial  purchase  will  be  15USDT"  )
var          int_val_allocation    =  input.string(title        =  "",              options  =  ['%  of  cumilative  investment',  'USDT'],                                          group  =  "Fund  Management",            inline  =  "Investment",    defval      =  'USDT')
var          profit_cal                    =  input.float(defval        =  4,              title="Expectedprofit%is",minval=0.2,step=0.1,group="profitCalculation")
boolenable_stoploss=input.bool(defval=false,title="Enablestoploss",group="profitCalculation",inline='stoploss')
varstop_loss_cal=input.float(defval=10,title="&stoploss%is",group="profitCalculation",inline='stoploss')
boolenable_int_profit=input.bool(defval=false,title="Profittake",group="profitCalculation",inline='take')
varsell_qty_prc=input.float(defval=11.0,title="&quantityis",group="profitCalculation",inline='take')
varprc_or_usdt=input.string(title="",options=['%ofstrategysize','USDT'],defval='USDT',group="profitCalculation",inline='take')
vargrid_float=input.float(defval=5.0,title="Gridspacing%is",group="GridTrading",inline='Grid',tooltip="Thissectionapplyifonlygridtradingisenable")
varnum_grid=input.int(defval=8,title="&numbersofgridsis",group="GridTrading",inline='Grid',step=1,minval=1,maxval=49)
//UpandDownTrendtrading
varpiramiding_DT=input.int(defval=15,title="Numbersofpararalentries",group="ForUptrendorUpandDownTrendtradingtradingoptions")
//CalculationofRvalue
varr=input.float(defval=100,title="rstartingvalue(hypothithicalvalue)",group="CalculationofRvalue",tooltip="SupportstocalculateRvalueinbackground")
varr_change_nf=input.float(defval=1,title="rstepupvalue(hypothithicalvalue)",group="CalculationofRvalue",tooltip="SupportstocalculateRvalueinbackground&use0.001tofinetune",step=1,minval=0.001)
boolr_change_final=input.bool(defval=false,title="User=0.001tofinetunervalue",group="CalculationofRvalue")
varinceiment_1=input.float(defval=31.472,title="InsertCalculatedRvaluefromDataWindow",group="CalculationofRvalue")

//PrimaryInputs
//Uptrendinputs
src=input(defval=ohlc4,title='Sourceofsupertrendis',group='SuperTrendvaluesforuptrendtrading')
Periods=input(defval=02,title='ATRPeriod',group='SuperTrendvaluesforuptrendtrading',inline='ART')
Multiplier=input.float(defval=3.4,title='&Multiplieris',step=0.1,group='SuperTrendvaluesforuptrendtrading',inline='ART')
changeATR=input(defval=true,title='ChangeATRCalculationMethod?',group='SuperTrendvaluesforuptrendtrading')
showsignals=input(defval=false,title='ShowBuy/SellSignals?',group='SuperTrendvaluesforuptrendtrading')
highlighting=input(defval=false,title='HighlighterOn/Off?',group='SuperTrendvaluesforuptrendtrading')
use_cb_to_average=input.bool(defval=true,title="Usemarketbottomstoaverage",group='SuperTrendvaluesforuptrendtrading')
//InputsofSARIndicator
sar1=input.float(defval=0.09,title='Start',step=0.0001,group='SARValuesforupanddowntrendtrading',inline='Start')
sar2=input.float(defval=0.0091,title='Incriment',step=0.0001,group='SARValuesforupanddowntrendtrading',inline='Start')
sar3=input.float(defval=0.02,title='MaxValue',step=0.1,group='SARValuesforupanddowntrendtrading',inline='Start')
boolsar_visible=input(defval=false,title="ShowSAR",group='SARValuesforupanddowntrendtrading')
//InputsofSupertrendindicator
ST_T=input.int(defval=19,title='Trend',step=1,group='SuperTrendforupanddowntrendtrading',inline='Trend')
ST_D=input.int(defval=12,title='Direction',step=1,group='SuperTrendforupanddowntrendtrading',inline='Trend')
ST_SMA=input.int(defval=3,title='SMA',step=1,group='SuperTrendforupanddowntrendtrading',inline='Trend')
boolST_visible=input(defval=false,title="ShowSuperTrend",group='SuperTrendforupanddowntrendtrading')
//InputsofSMA500indicator
src_sma500=input(defval=hlcc4,title='SourceofSMA500is',group='SMA500forupanddowntrendtrading',inline='Source')
lb_sma500=input.int(defval=80,title='&Lookbackperiodis',step=10,group='SMA500forupanddowntrendtrading',inline='Source')
boolsma500_visible=input(defval=false,title="ShowSMA500",group='SMA500forupanddowntrendtrading')
varbooldt_grid_trading=false
iftrading_option=='GridTrading'
dt_grid_trading:=true
else
dt_grid_trading:=false

varfloatr_change=0
ifr_change_final==false
r_change:=r_change_nf
elseifr_change_final==true
r_change:=0.001
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////UPTREND/////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
atr2=ta.sma(ta.tr,Periods)
atr=changeATR?ta.atr(Periods):atr2
up=src-Multiplier*atr
up1=nz(up[1],up)
up:=close[1]>up1?math.max(up,up1):up
dn=src+Multiplier*atr
dn1=nz(dn[1],dn)
dn:=close[1]<dn1?math.min(dn,dn1):dn
trend=1
trend:=nz(trend[1],trend)
trend:=trend==-1andclose>dn1?1:trend==1andclose<up1?-1:trend
varboolbuySignal=false
varboolsellSignal=false
iftrend==1andtrend[1]==-1
buySignal:=true
else
buySignal:=false
iftrend==-1andtrend[1]==1
sellSignal:=true
else
sellSignal:=false
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////UPTRENDANDDOWNTREND//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Calculations
//SMA500Indicator
SMA500=ta.sma(src_sma500,lb_sma500)
SMA700=ta.sma(close,700)
SMA_Open=ta.sma(open,9)
//SMA9Indicator
SMA9=ta.sma((high+low)/2,5)
risingSMA9=ta.rising(SMA9,1)
fallingSMA9=ta.falling(SMA9,1)
colorplotcolor1=color.black
ifrisingSMA9
plotcolor1:=color.green
//SARIndicator
sar=ta.sar(sar1,sar2,sar3)
//Supertrend
[supertrend,direction]=ta.supertrend(ST_T,ST_D)
up_trend=ta.sma(direction<0?supertrend:na,ST_SMA)
down_trend=ta.sma(direction<0?na:supertrend,ST_SMA)
//Colorchange
colorplotcolor2=color.green
ifopen>down_trendorclose>down_trend
plotcolor2:=color.lime
ifopen<down_trendorclose<down_trend
plotcolor2:=color.red

colorplotcolor3=color.green
ifopen>up_trendorclose>up_trend
plotcolor3:=color.yellow
ifopen<up_trendorclose<up_trend
plotcolor3:=color.red
colorplotcolor4=color.black
if(open>sarorclose>sar)
plotcolor4:=color.white
if(open<sarorclose<sar)
plotcolor4:=color.red

colorplotcolor5=color.black
if(open>SMA500orclose>SMA500)
plotcolor5:=color.green
if(open<SMA500orclose<SMA500)
plotcolor5:=color.red
colorplotcolor6=color.green
rising_taalma=ta.rising(ta.alma(open,10,.99,1),1)
falling_taalma=ta.falling(ta.alma(open,10,.99,1),1)
ifrising_taalma
plotcolor6:=color.green
iffalling_taalma
plotcolor6:=color.red

//buyandsellconditionsforuptrend
longCondition1=(open>=down_trendorhigh>=down_trendorta.crossover(open,down_trend)orta.crossover(high,down_trend))
longCondition2=(open>=up_trendorhigh>=up_trendorta.crossover(open,up_trend)orta.crossover(high,up_trend))
longCondition3=(open>=SMA500orhigh>=SMA500orta.crossover(open,SMA500)orta.crossover(high,SMA500))
longCondition4=(open>=sarorhigh>=sarorta.crossover(open,sar)orta.crossover(high,sar))
longCondition5=rising_taalma
shortCondition1=(close<down_trendorlow<down_trendorta.crossunder(close,down_trend)orta.crossunder(low,down_trend))
shortCondition2=(close<up_trendorlow<up_trendorta.crossunder(close,up_trend)orta.crossunder(low,up_trend))
shortCondition3=(close<SMA500orlow<SMA500orta.crossunder(close,SMA500)orta.crossunder(low,SMA500))
shortCondition4=(close<sarorlow<sarorta.crossunder(close,sar)orta.crossunder(low,sar))
shortCondition5=falling_taalma
comp_buy1=longCondition1andlongCondition2andlongCondition3andlongCondition4andlongCondition5
op_buy1=shortCondition3andlongCondition1andlongCondition2andlongCondition4
op_buy2=shortCondition1andshortCondition2andlongCondition3andlongCondition4andlongCondition5
comp_sell1=shortCondition1andshortCondition2andshortCondition3andshortCondition4andshortCondition5
op_sell1=shortCondition3andshortCondition4andlongCondition1andlongCondition2
op_sell2=shortCondition4andlongCondition1andlongCondition2andlongCondition3
op_sell3=longCondition2andshortCondition1andshortCondition4andshortCondition3
op_sell4=longCondition2andshortCondition1andshortCondition4
varb1=0
varb2=0
varb3=0
ifcomp_buy1==trueandcomp_buy1[1]==false
b1:=1
else
b1:=0

ifop_buy1==trueandop_buy1[1]==false
b2:=1
else
b2:=0
ifop_buy2==trueandop_buy2[1]==false
b3:=1
else
b3:=0
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////DOWNTREND///////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//DCAmethodbasedonindicators
//RSIIndicator
src_rsi_10=input(close,title="SourceofRSI-10is",group="RSIIndicatorforup&downtrendtrading",inline='RSI-10')
len_rsi_10=input.int(10,title="&Lookbackperiodis",group="RSIIndicatorforup&downtrendtrading",minval=1,maxval=10,step=1,inline='RSI-10')
up_rsi_10=ta.rma(math.max(ta.change(src_rsi_10),0),len_rsi_10)
down_rsi_10=ta.rma(-math.min(ta.change(src_rsi_10),0),len_rsi_10)
rsi_10=down_rsi_10==0?100:up_rsi_10==0?0:100-(100/(1+up_rsi_10/down_rsi_10))
varp_rsi=0
ifrsi_10>=0andrsi_10<10
p_rsi:=0
elseifrsi_10>=10andrsi_10<20
p_rsi:=10
elseifrsi_10>=20andrsi_10<30
p_rsi:=20
elseifrsi_10>=30andrsi_10<40
p_rsi:=30
elseifrsi_10>=40andrsi_10<50
p_rsi:=40
elseifrsi_10>=50andrsi_10<60
p_rsi:=50
elseifrsi_10>=60andrsi_10<70
p_rsi:=60
elseifrsi_10>=70andrsi_10<80
p_rsi:=70
elseifrsi_10>=80andrsi_10<90
p_rsi:=80
elseifrsi_10>=90andrsi_10<100
p_rsi:=90
src_rsi_50=input(hlcc4,title="SourceofRSI-50is",group="RSIIndicatorforup&downtrendtrading",inline='RSI-50')
len_rsi_50=input.int(50,title="&Lookbackperiodis",group="RSIIndicatorforup&downtrendtrading",minval=11,maxval=50,step=1,inline='RSI-50')
up_rsi_50=ta.rma(math.max(ta.change(src_rsi_50),0),len_rsi_50)
down_rsi_50=ta.rma(-math.min(ta.change(src_rsi_50),0),len_rsi_50)
rsi_50=down_rsi_50==0?100:up_rsi_50==0?0:100-(100/(1+up_rsi_50/down_rsi_50))
varp_rsi_50=0
ifrsi_50>=0andrsi_50<10
p_rsi_50:=0
elseifrsi_50>=10andrsi_50<20
p_rsi_50:=10
elseifrsi_50>=20andrsi_50<30
p_rsi_50:=20
elseifrsi_50>=30andrsi_50<40
p_rsi_50:=30
elseifrsi_50>=40andrsi_50<50
p_rsi_50:=40
elseifrsi_50>=50andrsi_50<60
p_rsi_50:=50
elseifrsi_50>=60andrsi_50<70
p_rsi_50:=60
elseifrsi_50>=70andrsi_50<80
p_rsi_50:=70
elseifrsi_50>=80andrsi_50<90
p_rsi_50:=80
elseifrsi_50>=90andrsi_50<100
p_rsi_50:=90
src_rsi_100=input(hlcc4,title="SourceofRSI-100is",group="RSIIndicatorforup&downtrendtrading",inline='RSI-100')
len_rsi_100=input.int(100,title="&Lookbackperiodis",group="RSIIndicatorforup&downtrendtrading",minval=51,maxval=200,step=10,inline='RSI-100')
up_rsi_100=ta.rma(math.max(ta.change(src_rsi_100),0),len_rsi_100)
down_rsi_100=ta.rma(-math.min(ta.change(src_rsi_100),0),len_rsi_100)
rsi_100=down_rsi_100==0?100:up_rsi_100==0?0:100-(100/(1+up_rsi_100/down_rsi_100))
varp_rsi_100=0
ifrsi_100>=0andrsi_100<10
p_rsi_100:=0
elseifrsi_100>=10andrsi_100<20
p_rsi_100:=10
elseifrsi_100>=20andrsi_100<30
p_rsi_100:=20
elseifrsi_100>=30andrsi_100<40
p_rsi_100:=30
elseifrsi_100>=40andrsi_100<50
p_rsi_100:=40
elseifrsi_100>=50andrsi_100<60
p_rsi_100:=50
elseifrsi_100>=60andrsi_100<70
p_rsi_100:=60
elseifrsi_100>=70andrsi_100<80
p_rsi_100:=70
elseifrsi_100>=80andrsi_100<90
p_rsi_100:=80
elseifrsi_100>=90andrsi_100<100
p_rsi_100:=90
//RelativeVolatilityIndicator
src_rvi_10=input(hlc3,title="SourceofRVI-10is",group="RVIIndicatorforup&downtrendtrading",inline='RVI-10')
length_rvi_10=input.int(defval=10,minval=1,maxval=10,step=1,title="LookbackperiodofRVI-10is",group="RVIIndicatorforup&downtrendtrading",inline='LookbackperiodofRVI-10')
len_rvi_10=input.int(defval=10,minval=1,maxval=10,step=1,title="&EMAis",group="RVIIndicatorforup&downtrendtrading",inline='LookbackperiodofRVI-10')
stddev_rvi_10=ta.stdev(src_rvi_10,length_rvi_10)
upper_rvi_10=ta.ema(ta.change(src_rvi_10)<=0?0:stddev_rvi_10,len_rvi_10)
lower_rvi_10=ta.ema(ta.change(src_rvi_10)>0?0:stddev_rvi_10,len_rvi_10)
rvi_10=upper_rvi_10/(upper_rvi_10+lower_rvi_10)*100
varp_rvi_10=0
ifrvi_10>=0andrvi_10<10
p_rvi_10:=0
elseifrvi_10>=10andrvi_10<20
p_rvi_10:=10
elseifrvi_10>=20andrvi_10<30
p_rvi_10:=20
elseifrvi_10>=30andrvi_10<40
p_rvi_10:=30
elseifrvi_10>=40andrvi_10<50
p_rvi_10:=40
elseifrvi_10>=50andrvi_10<60
p_rvi_10:=50
elseifrvi_10>=60andrvi_10<70
p_rvi_10:=60
elseifrvi_10>=70andrvi_10<80
p_rvi_10:=70
elseifrvi_10>=80andrvi_10<90
p_rvi_10:=80
elseifrvi_10>=90andrvi_10<100
p_rvi_10:=90
src_rvi_50=input(hlc3,title="SourceofRVI-50is",group="RVIIndicatorforup&downtrendtrading",inline='RVI-50')
length_rvi_50=input.int(defval=50,minval=11,maxval=50,step=1,title="LookbackperiodofRVI-50is",group="RVIIndicatorforup&downtrendtrading",inline='LookbackperiodofRVI-50')
len_rvi_50=input.int(defval=50,minval=11,maxval=50,step=1,title="&EMAis",group="RVIIndicatorforup&downtrendtrading",inline='LookbackperiodofRVI-50')
stddev_rvi_50=ta.stdev(src_rvi_50,length_rvi_50)
upper_rvi_50=ta.ema(ta.change(src_rvi_50)<=0?0:stddev_rvi_50,len_rvi_50)
lower_rvi_50=ta.ema(ta.change(src_rvi_50)>0?0:stddev_rvi_50,len_rvi_50)
rvi_50=upper_rvi_50/(upper_rvi_50+lower_rvi_50)*100
varp_rvi_50=0
ifrvi_50>=0andrvi_50<10
p_rvi_50:=0
elseifrvi_50>=10andrvi_50<20
p_rvi_50:=10
elseifrvi_50>=20andrvi_50<30
p_rvi_50:=20
elseifrvi_50>=30andrvi_50<40
p_rvi_50:=30
elseifrvi_50>=40andrvi_50<50
p_rvi_50:=40
elseifrvi_50>=50andrvi_50<60
p_rvi_50:=50
elseifrvi_50>=60andrvi_50<70
p_rvi_50:=60
elseifrvi_50>=70andrvi_50<80
p_rvi_50:=70
elseifrvi_50>=80andrvi_50<90
p_rvi_50:=80
elseifrvi_50>=90andrvi_50<100
p_rvi_50:=90
src_rvi_100=input(hlcc4,title="SourceofRVI-100is",group="RVIIndicatorforup&downtrendtrading",inline='RVI-100')
length_rvi_100=input.int(defval=100,minval=51,maxval=200,step=10,title="LookbackperiodofRVI-100is",group="RVIIndicatorforup&downtrendtrading",inline='LookbackperiodofRVI-100')
len_rvi_100=input.int(defval=100,minval=51,maxval=200,step=10,title="&EMAis",group="RVIIndicatorforup&downtrendtrading",inline='LookbackperiodofRVI-100')
stddev_rvi_100=ta.stdev(src_rvi_100,length_rvi_100)
upper_rvi_100=ta.ema(ta.change(src_rvi_100)<=0?0:stddev_rvi_100,len_rvi_100)
lower_rvi_100=ta.ema(ta.change(src_rvi_100)>0?0:stddev_rvi_100,len_rvi_100)
rvi_100=upper_rvi_100/(upper_rvi_100+lower_rvi_100)*100
varp_rvi_100=0
ifrvi_100>=0andrvi_100<10
p_rvi_100:=0
elseifrvi_100>=10andrvi_100<20
p_rvi_100:=10
elseifrvi_100>=20andrvi_100<30
p_rvi_100:=20
elseifrvi_100>=30andrvi_100<40
p_rvi_100:=30
elseifrvi_100>=40andrvi_100<50
p_rvi_100:=40
elseifrvi_100>=50andrvi_100<60
p_rvi_100:=50
elseifrvi_100>=60andrvi_100<70
p_rvi_100:=60
elseifrvi_100>=70andrvi_100<80
p_rvi_100:=70
elseifrvi_100>=80andrvi_100<90
p_rvi_100:=80
elseifrvi_100>=90andrvi_100<100
p_rvi_100:=90
//Moneyflowindex
src_mfi_10=input(open,title="SourceofMFI-10is",group="MFIIndicatorforup&downtrendtrading",inline='SourceofMFI-10')
len_mfi_10=input.int(defval=10,minval=1,maxval=10,step=1,title="&Lookbackperiodis",group="MFIIndicatorforup&downtrendtrading",inline='SourceofMFI-10')
mf_10=ta.mfi(src_mfi_10,len_mfi_10)
varp_mfi_10=0
ifmf_10>=0andmf_10<10
p_mfi_10:=0
elseifmf_10>=10andmf_10<20
p_mfi_10:=10
elseifmf_10>=20andmf_10<30
p_mfi_10:=20
elseifmf_10>=30andmf_10<40
p_mfi_10:=30
elseifmf_10>=40andmf_10<50
p_mfi_10:=40
elseifmf_10>=50andmf_10<60
p_mfi_10:=50
elseifmf_10>=60andmf_10<70
p_mfi_10:=60
elseifmf_10>=70andmf_10<80
p_mfi_10:=70
elseifmf_10>=80andmf_10<90
p_mfi_10:=80
elseifmf_10>=90andmf_10<100
p_mfi_10:=90
src_mfi_50=input(high,title="SourceofMFI-50is",group="MFIIndicatorforup&downtrendtrading",inline='SourceofMFI-50')
len_mfi_50=input.int(defval=50,minval=11,maxval=50,step=1,title="&Lookbackperiodis",group="MFIIndicatorforup&downtrendtrading",inline='SourceofMFI-50')
mf_50=ta.mfi(src_mfi_50,len_mfi_50)
varp_mfi_50=0
ifmf_50>=0andmf_50<10
p_mfi_50:=0
elseifmf_50>=10andmf_50<20
p_mfi_50:=10
elseifmf_50>=20andmf_50<30
p_mfi_50:=20
elseifmf_50>=30andmf_50<40
p_mfi_50:=30
elseifmf_50>=40andmf_50<50
p_mfi_50:=40
elseifmf_50>=50andmf_50<60
p_mfi_50:=50
elseifmf_50>=60andmf_50<70
p_mfi_50:=60
elseifmf_50>=70andmf_50<80
p_mfi_50:=70
elseifmf_50>=80andmf_50<90
p_mfi_50:=80
elseifmf_50>=90andmf_50<100
p_mfi_50:=90
src_mfi_100=input(low,title="SourceofMFI-100is",group="MFIIndicatorforup&downtrendtrading",inline='SourceofMFI-100')
len_mfi_100=input.int(defval=100,minval=51,maxval=200,step=10,title="&Lookbackperiodis",group="MFIIndicatorforup&downtrendtrading",inline='SourceofMFI-100')
mf_100=ta.mfi(src_mfi_100,len_mfi_100)
varp_mfi_100=0
ifmf_100>=0andmf_100<10
p_mfi_100:=0
elseifmf_100>=10andmf_100<20
p_mfi_100:=10
elseifmf_100>=20andmf_100<30
p_mfi_100:=20
elseifmf_100>=30andmf_100<40
p_mfi_100:=30
elseifmf_100>=40andmf_100<50
p_mfi_100:=40
elseifmf_100>=50andmf_100<60
p_mfi_100:=50
elseifmf_100>=60andmf_100<70
p_mfi_100:=60
elseifmf_100>=70andmf_100<80
p_mfi_100:=70
elseifmf_100>=80andmf_100<90
p_mfi_100:=80
elseifmf_100>=90andmf_100<100
p_mfi_100:=90
//Balanceofpowerindicator
bop=((((close-open)/(high-low))*100)+50)
bop_sma_100=ta.sma(bop,50)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////HH&LLin100daysperiod///////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
lookback=input.int(defval=50,title="LookbackperiodforLowerlowsandHigherhighes",group="LowerlowsandHigherhighesforup&downtrendtrading")
show_LL_HH=input.bool(defval=false,title="ShowLowerlowsandHigherhigheschart",group="LowerlowsandHigherhighesforup&downtrendtrading")
lowest=ta.lowest(low,lookback)
varfloatb=lowest
iflowest[1]<lowest
b:=b
elseiflowest[1]>lowest
b:=lowest
highest=ta.highest(high,lookback)
varfloatc=highest
ifhighest[1]<highest
c:=highest
elseifhighest[1]>highest
c:=c

varfloatd=c
ifc[1]<c
d:=c
elseifc[1]>c
d:=d

varfloate=d
ifd[1]<=d
e:=d
elseifd[1]>=d
e:=e
gap_p=math.abs((b-c)*100/c)
varfloatsaf=0
ifgap_p>=10
saf:=1+gap_p/100
elseifgap_p<10andgap_p>2
saf:=(1+gap_p/100)
elseifgap_p<=2
saf:=na
boolbuy=ta.cross(b,low)andb[1]>b//andb[2]>b[1]
boolsell=ta.cross(high,e)orta.cross(e,close)orta.cross(open,e)orta.cross(low,e)
varfloatsignal=0
ifbuy==true
signal:=1
elseifsignal==1and((open>close)or(open[2]>close))
signal:=2
elseifsignal==2and(open<close)
signal:=3
elseifsignal==3and((open<close)or(open>close))
signal:=0
else
signal:=0
sma=ta.sma(close,9)
middle=ta.sma(close,500)
l1_cross=ta.cross(sma,strategy.position_avg_price*0.98)
l2_cross=ta.cross(sma,strategy.position_avg_price*0.9)
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////DownTrandGridTrading//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
varfloatentry_price=0
varfloatlevel1=0
varfloatlevel2=0
varfloatlevel3=0
varfloatlevel4=0
varfloatlevel5=0
varfloatlevel6=0
varfloatlevel7=0
varfloatlevel8=0
varfloatlevel9=0
varfloatlevel10=0
varfloatlevel11=0
varfloatlevel12=0
varfloatlevel13=0
varfloatlevel14=0
varfloatlevel15=0
varfloatlevel16=0
varfloatlevel17=0
varfloatlevel18=0
varfloatlevel19=0
varfloatlevel20=0
varfloatlevel21=0
varfloatlevel22=0
varfloatlevel23=0
varfloatlevel24=0
varfloatlevel25=0
varfloatlevel26=0
varfloatlevel27=0
varfloatlevel28=0
varfloatlevel29=0
varfloatlevel30=0
varfloatlevel31=0
varfloatlevel32=0
varfloatlevel33=0
varfloatlevel34=0
varfloatlevel35=0
varfloatlevel36=0
varfloatlevel37=0
varfloatlevel38=0
varfloatlevel39=0
varfloatlevel40=0
varfloatlevel41=0
varfloatlevel42=0
varfloatlevel43=0
varfloatlevel44=0
varfloatlevel45=0
varfloatlevel46=0
varfloatlevel47=0
varfloatlevel48=0
varfloatlevel49=0
ifstrategy.opentrades==1
entry_price:=strategy.position_avg_price
elseifstrategy.opentrades==0
entry_price:=na
//Grapharrangement
ifnum_grid<=10
level1:=entry_price*(1-grid_float/100)
ifnum_grid>1
level2:=entry_price*(1-2*grid_float/100)
else
level2:=na
ifnum_grid>2
level3:=entry_price*(1-3*grid_float/100)
else
level3:=na
ifnum_grid>3
level4:=entry_price*(1-4*grid_float/100)
else
level4:=na

ifnum_grid>4
level5:=entry_price*(1-5*grid_float/100)
else
level5:=na

ifnum_grid>5
level6:=entry_price*(1-6*grid_float/100)
else
level6:=na

ifnum_grid>6
level7:=entry_price*(1-7*grid_float/100)
else
level7:=na

ifnum_grid>7
level8:=entry_price*(1-8*grid_float/100)
else
level8:=na

ifnum_grid>8
level9:=entry_price*(1-9*grid_float/100)
else
level9:=na
ifnum_grid>9
level10:=entry_price*(1-10*grid_float/100)
else
level10:=na

ifnum_grid>10
level11:=entry_price*(1-11*grid_float/100)
else
level11:=na

ifnum_grid>11
level12:=entry_price*(1-12*grid_float/100)
else
level12:=na
ifnum_grid>12
level13:=entry_price*(1-13*grid_float/100)
else
level13:=na
ifnum_grid>13
level14:=entry_price*(1-14*grid_float/100)
else
level14:=na
ifnum_grid>14
level15:=entry_price*(1-15*grid_float/100)
else
level15:=na
ifnum_grid>15
level16:=entry_price*(1-16*grid_float/100)
else
level16:=na
ifnum_grid>16
level17:=entry_price*(1-17*grid_float/100)
else
level17:=na
ifnum_grid>17
level18:=entry_price*(1-18*grid_float/100)
else
level18:=na
ifnum_grid>18
level19:=entry_price*(1-19*grid_float/100)
else
level19:=na
ifnum_grid>19
level20:=entry_price*(1-20*grid_float/100)
else
level20:=na
ifnum_grid>20
level21:=entry_price*(1-21*grid_float/100)
else
level21:=na
ifnum_grid>21
level22:=entry_price*(1-22*grid_float/100)
else
level22:=na
ifnum_grid>22
level23:=entry_price*(1-23*grid_float/100)
else
level23:=na
ifnum_grid>23
level24:=entry_price*(1-24*grid_float/100)
else
level24:=na
ifnum_grid>24
level25:=entry_price*(1-25*grid_float/100)
else
level25:=na
ifnum_grid>25
level26:=entry_price*(1-26*grid_float/100)
else
level26:=na
ifnum_grid>26
level27:=entry_price*(1-27*grid_float/100)
else
level27:=na
ifnum_grid>27
level28:=entry_price*(1-28*grid_float/100)
else
level28:=na
ifnum_grid>28
level29:=entry_price*(1-29*grid_float/100)
else
level29:=na
ifnum_grid>29
level30:=entry_price*(1-30*grid_float/100)
else
level30:=na
ifnum_grid>30
level31:=entry_price*(1-31*grid_float/100)
else
level31:=na

ifnum_grid>31
level32:=entry_price*(1-32*grid_float/100)
else
level32:=na
ifnum_grid>32
level33:=entry_price*(1-33*grid_float/100)
else
level33:=na
ifnum_grid>33
level34:=entry_price*(1-34*grid_float/100)
else
level34:=na
ifnum_grid>34
level35:=entry_price*(1-35*grid_float/100)
else
level35:=na
ifnum_grid>35
level36:=entry_price*(1-36*grid_float/100)
else
level36:=na
ifnum_grid>36
level37:=entry_price*(1-37*grid_float/100)
else
level37:=na
ifnum_grid>37
level38:=entry_price*(1-38*grid_float/100)
else
level38:=na
ifnum_grid>38
level39:=entry_price*(1-39*grid_float/100)
else
level39:=na
ifnum_grid>39
level40:=entry_price*(1-40*grid_float/100)
else
level40:=na

ifnum_grid>40
level41:=entry_price*(1-41*grid_float/100)
else
level41:=na
ifnum_grid>41
level42:=entry_price*(1-42*grid_float/100)
else
level42:=na
ifnum_grid>42
level43:=entry_price*(1-43*grid_float/100)
else
level43:=na
ifnum_grid>43
level44:=entry_price*(1-44*grid_float/100)
else
level44:=na
ifnum_grid>44
level45:=entry_price*(1-45*grid_float/100)
else
level45:=na
ifnum_grid>45
level46:=entry_price*(1-46*grid_float/100)
else
level46:=na
ifnum_grid>46
level47:=entry_price*(1-47*grid_float/100)
else
level47:=na
ifnum_grid>47
level48:=entry_price*(1-48*grid_float/100)
else
level48:=na
ifnum_grid>48
level49:=entry_price*(1-49*grid_float/100)
else
level49:=na
//setingupbuypossitions
varboolbuy_possition_1=false
varboolbuy_possition_2=false
varboolbuy_possition_3=false
varboolbuy_possition_4=false
varboolbuy_possition_5=false
varboolbuy_possition_6=false
varboolbuy_possition_7=false
varboolbuy_possition_8=false
varboolbuy_possition_9=false
varboolbuy_possition_10=false
varboolbuy_possition_11=false
varboolbuy_possition_12=false
varboolbuy_possition_13=false
varboolbuy_possition_14=false
varboolbuy_possition_15=false
varboolbuy_possition_16=false
varboolbuy_possition_17=false
varboolbuy_possition_18=false
varboolbuy_possition_19=false
varboolbuy_possition_20=false
varboolbuy_possition_21=false
varboolbuy_possition_22=false
varboolbuy_possition_23=false
varboolbuy_possition_24=false
varboolbuy_possition_25=false
varboolbuy_possition_26=false
varboolbuy_possition_27=false
varboolbuy_possition_28=false
varboolbuy_possition_29=false
varboolbuy_possition_30=false
varboolbuy_possition_31=false
varboolbuy_possition_32=false
varboolbuy_possition_33=false
varboolbuy_possition_34=false
varboolbuy_possition_35=false
varboolbuy_possition_36=false
varboolbuy_possition_37=false
varboolbuy_possition_38=false
varboolbuy_possition_39=false
varboolbuy_possition_40=false
varboolbuy_possition_41=false
varboolbuy_possition_42=false
varboolbuy_possition_43=false
varboolbuy_possition_44=false
varboolbuy_possition_45=false
varboolbuy_possition_46=false
varboolbuy_possition_47=false
varboolbuy_possition_48=false
varboolbuy_possition_49=false
ifstrategy.opentrades<2andclose[1]<level1andsignal==2
buy_possition_1:=true
else
buy_possition_1:=false

ifstrategy.opentrades<3andclose[1]<level2andsignal==2
buy_possition_2:=true
else
buy_possition_2:=false
ifstrategy.opentrades<4andclose[1]<level3andsignal==2
buy_possition_3:=true
else
buy_possition_3:=false

ifstrategy.opentrades<5andclose[1]<level4andsignal==2
buy_possition_4:=true
else
buy_possition_4:=false

ifstrategy.opentrades<6andclose[1]<level5andsignal==2
buy_possition_5:=true
else
buy_possition_5:=false
ifstrategy.opentrades<7andclose[1]<level6andsignal==2
buy_possition_6:=true
else
buy_possition_6:=false

ifstrategy.opentrades<8andclose[1]<level7andsignal==2
buy_possition_7:=true
else
buy_possition_7:=false

ifstrategy.opentrades<9andclose[1]<level8andsignal==2
buy_possition_8:=true
else
buy_possition_8:=false

ifstrategy.opentrades<10andclose[1]<level9andsignal==2
buy_possition_9:=true
else
buy_possition_9:=false
ifstrategy.opentrades<11andclose[1]<level10andsignal==2
buy_possition_10:=true
else
buy_possition_10:=false
ifstrategy.opentrades<12andclose[1]<level11andsignal==2
buy_possition_11:=true
else
buy_possition_11:=false
ifstrategy.opentrades<13andclose[1]<level12andsignal==2
buy_possition_12:=true
else
buy_possition_12:=false
ifstrategy.opentrades<14andclose[1]<level13andsignal==2
buy_possition_13:=true
else
buy_possition_13:=false
ifstrategy.opentrades<15andclose[1]<level14andsignal==2
buy_possition_14:=true
else
buy_possition_14:=false
ifstrategy.opentrades<16andclose[1]<level15andsignal==2
buy_possition_15:=true
else
buy_possition_15:=false
ifstrategy.opentrades<17andclose[1]<level16andsignal==2
buy_possition_16:=true
else
buy_possition_16:=false
ifstrategy.opentrades<18andclose[1]<level17andsignal==2
buy_possition_17:=true
else
buy_possition_17:=false
ifstrategy.opentrades<19andclose[1]<level18andsignal==2
buy_possition_18:=true
else
buy_possition_18:=false
ifstrategy.opentrades<20andclose[1]<level19andsignal==2
buy_possition_19:=true
else
buy_possition_19:=false
ifstrategy.opentrades<21andclose[1]<level20andsignal==2
buy_possition_20:=true
else
buy_possition_20:=false
ifstrategy.opentrades<22andclose[1]<level21andsignal==2
buy_possition_21:=true
else
buy_possition_21:=false
ifstrategy.opentrades<23andclose[1]<level22andsignal==2
buy_possition_22:=true
else
buy_possition_22:=false
ifstrategy.opentrades<24andclose[1]<level23andsignal==2
buy_possition_23:=true
else
buy_possition_23:=false
ifstrategy.opentrades<25andclose[1]<level24andsignal==2
buy_possition_24:=true
else
buy_possition_24:=false
ifstrategy.opentrades<26andclose[1]<level25andsignal==2
buy_possition_25:=true
else
buy_possition_25:=false
ifstrategy.opentrades<27andclose[1]<level26andsignal==2
buy_possition_26:=true
else
buy_possition_26:=false
ifstrategy.opentrades<28andclose[1]<level27andsignal==2
buy_possition_27:=true
else
buy_possition_27:=false
ifstrategy.opentrades<29andclose[1]<level28andsignal==2
buy_possition_28:=true
else
buy_possition_28:=false
ifstrategy.opentrades<30andclose[1]<level29andsignal==2
buy_possition_29:=true
else
buy_possition_29:=false
ifstrategy.opentrades<31andclose[1]<level30andsignal==2
buy_possition_30:=true
else
buy_possition_30:=false
ifstrategy.opentrades<32andclose[1]<level31andsignal==2
buy_possition_31:=true
else
buy_possition_31:=false
ifstrategy.opentrades<33andclose[1]<level32andsignal==2
buy_possition_32:=true
else
buy_possition_32:=false
ifstrategy.opentrades<34andclose[1]<level33andsignal==2
buy_possition_33:=true
else
buy_possition_33:=false
ifstrategy.opentrades<35andclose[1]<level34andsignal==2
buy_possition_34:=true
else
buy_possition_34:=false

ifstrategy.opentrades<36andclose[1]<level35andsignal==2
buy_possition_35:=true
else
buy_possition_35:=false
ifstrategy.opentrades<36andclose[1]<level35andsignal==2
buy_possition_35:=true
else
buy_possition_35:=false
ifstrategy.opentrades<37andclose[1]<level36andsignal==2
buy_possition_36:=true
else
buy_possition_36:=false
ifstrategy.opentrades<38andclose[1]<level37andsignal==2
buy_possition_37:=true
else
buy_possition_37:=false
ifstrategy.opentrades<39andclose[1]<level38andsignal==2
buy_possition_38:=true
else
buy_possition_38:=false
ifstrategy.opentrades<40andclose[1]<level39andsignal==2
buy_possition_39:=true
else
buy_possition_39:=false
ifstrategy.opentrades<41andclose[1]<level40andsignal==2
buy_possition_40:=true
else
buy_possition_40:=false
ifstrategy.opentrades<42andclose[1]<level41andsignal==2
buy_possition_41:=true
else
buy_possition_41:=false
ifstrategy.opentrades<43andclose[1]<level42andsignal==2
buy_possition_42:=true
else
buy_possition_42:=false
ifstrategy.opentrades<44andclose[1]<level43andsignal==2
buy_possition_43:=true
else
buy_possition_43:=false
ifstrategy.opentrades<45andclose[1]<level44andsignal==2
buy_possition_44:=true
else
buy_possition_44:=false
ifstrategy.opentrades<46andclose[1]<level45andsignal==2
buy_possition_45:=true
else
buy_possition_45:=false
ifstrategy.opentrades<47andclose[1]<level46andsignal==2
buy_possition_46:=true
else
buy_possition_46:=false
ifstrategy.opentrades<48andclose[1]<level47andsignal==2
buy_possition_47:=true
else
buy_possition_47:=false
ifstrategy.opentrades<49andclose[1]<level48andsignal==2
buy_possition_48:=true
else
buy_possition_48:=false
ifstrategy.opentrades<50andclose[1]<level49andsignal==2
buy_possition_49:=true
else
buy_possition_49:=false
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////TRADINGARRANGEMENT//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Fundmanagement
varfloatint_val_3=0
varfloatinstallment_2=0
varfloatinstallment_3=0
varfloatinstallment_4=0
varfloatr_f=0
varfloatint_val=0
ifint_cap*int_val_prc/100<=20andint_val_allocation!="USDT"
int_val:=20
ifint_val_prc<=20andint_val_allocation=="USDT"
int_val:=20
ifint_cap*int_val_prc/100>20andint_val_allocation!="USDT"
int_val:=int_cap*int_val_prc/100
ifint_val_prc>20andint_val_allocation=="USDT"
int_val:=int_val_prc
varfloatpiramiding=0
ifdt_grid_trading==false
piramiding:=piramiding_DT
elseifdt_grid_trading==true
piramiding:=num_grid
fori=0topiramiding+2by1
ifi==0
int_val_3:=int_val
ifi<=piramiding
installment_2:=int_val_3*math.pow((1+r/100),i)
ifi>=0andi<piramiding+1
installment_3:=installment_3+installment_2
ifi==piramiding+1
installment_4:=installment_3-installment_3[1]
ifinstallment_4<int_cap
r:=r+r_change
elseifinstallment_4>int_cap
r:=r-r_change
else
r:=r

ifr[1]<r
r_f:=r[1]
plot(r_f,title="CalculatedRvalue")
//BuyandSelllavelsbasedonIndicators
gh_val_rsi=input.int(defval=50,title="HighervalueofRSI",maxval=100,minval=0,step=10,group='IndicatorHigherValues')
gh_val_rvi=input.int(defval=50,title="HighervalueofRVI",maxval=100,minval=0,step=10,group='IndicatorHigherValues')
gh_val_mfi=input.int(defval=50,title="HighervalueofMFI",maxval=100,minval=0,step=10,group='IndicatorHigherValues')
gh_val_bop=input.int(defval=50,title="HighervalueofBOP",maxval=100,minval=0,step=10,group='IndicatorHigherValues')
l_val_rsi=input.int(defval=50,title="LowervalueofRSI",maxval=100,minval=0,step=10,group='IndicatorLowerValues')
l_val_rvi=input.int(defval=50,title="LowervalueofRVI",maxval=100,minval=0,step=10,group='IndicatorLowerValues')
l_val_mfi=input.int(defval=50,title="LowervalueofMFI",maxval=100,minval=0,step=10,group='IndicatorLowerValues')
l_val_bop=input.int(defval=50,title="LowervalueofBOP",maxval=100,minval=0,step=10,group='IndicatorLowerValues')
//Identifygeneralmarketbottoms
buy_rsi=p_rsi_100<=l_val_rsiandp_rsi_50<p_rsi_100andp_rsi<=p_rsi_50
buy_rvi=p_rvi_100<=l_val_rviandp_rvi_50<=p_rvi_100andp_rvi_10<=p_rvi_50
buy_mfi=p_mfi_100<=l_val_mfiandp_mfi_50<=p_mfi_100andp_mfi_10<=p_mfi_50
buy_bop=bop_sma_100<=l_val_bop
buy_compound=buy_rsiandbuy_rviandbuy_mfiandbuy_bop?100:0
//Identifycriticalbottoms
cb_rsi=p_rsi_100<=30andp_rsi_50<p_rsi_100andp_rsi<=p_rsi_50
cb_rvi=p_rvi_100<=30andp_rvi_50<=p_rvi_100andp_rvi_10<=p_rvi_50
cb_mfi=p_mfi_100<=30andp_mfi_50<=p_mfi_100andp_mfi_10<=p_mfi_50
cb_bop=bop_sma_100<=50
cb_compound=cb_rsiandcb_rviandcb_mfiandcb_bop?100:0
//Identifycriticalmarketups
hh_rsi=p_rsi_100>=60andp_rsi_50>p_rsi_100andp_rsi>=p_rsi_50
hh_rvi=p_rvi_100>=60andp_rvi_50>=p_rvi_100andp_rvi_10>=p_rvi_50
hh_mfi=p_mfi_100>=60andp_mfi_50>=p_mfi_100andp_mfi_10>=p_mfi_50
hh_bop=bop_sma_100>=60
hh_compund=hh_rsiandhh_rviandhh_mfiandhh_bop?100:0
//Identifygeneralmarketups
gh_rsi=p_rsi_100>=gh_val_rsiandp_rsi_50>p_rsi_100andp_rsi>=p_rsi_50
gh_rvi=p_rvi_100>=gh_val_rviandp_rvi_50>=p_rvi_100andp_rvi_10>=p_rvi_50
gh_mfi=p_mfi_100>=gh_val_mfiandp_mfi_50>=p_mfi_100andp_mfi_10>=p_mfi_50
gh_bop=bop_sma_100>=gh_val_bop
gh_compund=gh_rsiandgh_rviandgh_mfiandgh_bop?100:0
varfloatbuy_compound_f=na
if(buy_compound[1]==100andbuy_compound==0)//andopen>close
buy_compound_f:=1
else
buy_compound_f:=na
ma_9=ta.sma(low,1)
ma_10=ta.sma(close,9)
ma_10_f=ta.falling(ma_10,4)
ma_10_r=ta.rising(ma_10,5)
co_l1=strategy.position_avg_price*0.95
co_l2=strategy.position_avg_price*0.90
co_l3=strategy.position_avg_price*0.85
co_l4=strategy.position_avg_price*0.80
sell_l1=strategy.position_avg_price*1.15
sell_l2=strategy.position_avg_price*1.20
sell_l3=strategy.position_avg_price*1.25
sell_l4=strategy.position_avg_price*1.30
crosover_f=ta.crossunder(low,co_l1)orta.crossunder(low,co_l2)orta.crossunder(low,co_l3)orta.crossunder(low,co_l4)
change_close=((close-close[1])/close)*100
sell_l1_f=ta.crossover(ma_9,sell_l1)
sell_l2_f=ta.crossover(ma_9,sell_l2)
sell_l3_f=ta.crossover(ma_9,sell_l3)
sell_l4_f=ta.crossover(ma_9,sell_l4)
//Uptrend&Downtrendfilters
upt_f=close>ta.sma(close,500)
dt_f=close<ta.sma(close,2000)
//PurchasingQuantity
varfloatassert=int_cap
varfloatquantity=0
varfloatincome=0
//varfloatexpence=0
varfloatcash_in_hand=0
//CalculationofCumilativeProfitandAssert
t_profit=0.
expence=0.
cost=0.0
fori=0tostrategy.closedtrades-1
entryP=strategy.closedtrades.entry_price(i)
exitP=strategy.closedtrades.exit_price(i)
commission=strategy.closedtrades.commission(i)
t_profit+=((exitP-entryP)*strategy.closedtrades.size(i))-commission
expence+=((entryP+commission)*strategy.closedtrades.size(i))
varfloatentryP_2=0
ifstrategy.position_size>0
fori=0to0
entryP_2:=strategy.closedtrades.exit_price(i)
cost+=strategy.closedtrades.entry_price(i)*strategy.closedtrades.size(i)
profit_f2=strategy.closedtrades>=0?t_profit:na
varfloataddition=0
ifprofit_f2[1]<profit_f2
addition:=(profit_f2-profit_f2[1])
else
addition:=0

varfloatrealised_profit=0
if(profit_f2[1]<profit_f2)or(profit_f2[1]>profit_f2)
realised_profit:=(profit_f2-profit_f2[1])
ifstrategy.position_size[1]>0andstrategy.position_size==0
assert:=assert+addition

//TakeprofitinMarketupsandbottoms
profit_f=1.0+(profit_cal/100)
stop_loss=1.0-(stop_loss_cal/100)
//intermediatesellprofitajusment
varfloatprc_change=0
if(strategy.position_size[1]<strategy.position_size)andstrategy.position_size[1]==0
prc_change:=strategy.position_avg_price*profit_f
if(strategy.position_size[1]<strategy.position_size)andstrategy.position_size>0
prc_change:=strategy.position_avg_price*profit_f
if(strategy.position_size[1]>strategy.position_size)andstrategy.position_size>0
prc_change:=prc_change
ifstrategy.position_size==0
prc_change:=na
sell_crossunder=ta.crossunder(low,strategy.position_avg_price*profit_f)
force_sell=ta.crossunder(low,strategy.position_avg_price*stop_loss)

//CalculationofQuantitiestopurchase
varintfactor=0
if(strategy.position_size[1]==0andstrategy.position_size>0)or(strategy.position_size[1]<strategy.position_size)
factor:=factor+1
elseifstrategy.position_size[1]>0andstrategy.position_size==0
factor:=0
varfloatassert_prc=0
ifint_val_allocation=="USDT"
assert_prc:=int_val_prc/int_cap
ifint_val_allocation=="%ofcumilativeinvestment"
assert_prc:=int_val_prc/1000

varfloatassert_f=0
varfloatin_cap=0
ifstrategy.position_size==0
assert_f:=assert
in_cap:=assert_prc*assert_f
else
assert_f:=assert_f
inceiment=inceiment_1/100
//formula=(1+r)^n,r=inceiment
varfloatvalue=0
if(strategy.opentrades==0)
value:=in_cap
elseif(strategy.opentrades[1]<strategy.opentrades)or((strategy.opentrades[1]>strategy.opentrades)andstrategy.position_size>0)
value:=in_cap*math.pow((1+inceiment),factor)
elseif(strategy.position_size[1]>0andstrategy.position_size==0)
value:=value
//Calculatetotalvalueofcurrentinvesment
varfloatcash_invest=0
ifstrategy.position_size[1]<strategy.position_sizeorstrategy.position_size[1]>strategy.position_size
cash_invest:=cash_invest+strategy.position_avg_price*(strategy.position_size-strategy.position_size[1])
elseifstrategy.position_size==0
cash_invest:=0

//cooldowntime
varboolcd=false
ifstrategy.position_size[10]>0orstrategy.position_size[9]>0orstrategy.position_size[8]>0orstrategy.position_size[7]>0orstrategy.position_size[6]>0orstrategy.position_size[5]>0orstrategy.position_size[4]>0orstrategy.position_size[3]>0orstrategy.position_size[2]>0orstrategy.position_size[1]>0
cd:=true
else
cd:=false

if(piramiding+1)>strategy.opentradesand(cash_invest+value)<=assert
quantity:=(value)/low[1]
elseif(piramiding+1)>strategy.opentradesand(cash_invest+value)>assert
quantity:=(assert-cash_invest)/open
else
quantity:=0
//Calculatesellquantity
//defaltsellingarrangementis10times,firstshortpositionis5%ofst.positionsizeandincrementis11.4%
varintsell_fac=0
varfloath_qty=0
if(strategy.position_size[1]>strategy.position_size)
sell_fac:=sell_fac+2
h_qty:=h_qty
elseif(strategy.position_size[1]<strategy.position_size)
sell_fac:=0
h_qty:=strategy.position_size[1]+(strategy.position_size-strategy.position_size[1])
elseifstrategy.position_size==0
h_qty:=strategy.position_size

val=close[1]
varfloatsell_qty=0.0
if(val*h_qty*(sell_qty_prc/100)*math.pow(1.114,sell_fac))>10
sell_qty:=h_qty*(sell_qty_prc/100)*math.pow(1.114,sell_fac)
elseifval*h_qty*(sell_qty_prc/100)*math.pow(1.114,sell_fac)<10
sell_qty:=strategy.position_size
//orsecondoptiontopurchaseqty
min_qty=sell_qty_prc/close[1]
varfloatqty_f=0
ifprc_or_usdt=="USDT"
qty_f:=min_qty
else
qty_f:=sell_qty
//Trading
varfloatlimit=strategy.position_avg_price*profit_f
//EnterCoustomcomandtoperformbuyandsellactionslinkwithwebhook
stringbuy_comment="BUY"
stringsell_comment="SELL"
//Uptrendtrading
if((buySignal==true))andwindow()andcd==falseandstrategy.position_size==0andtrading_option=='Uptrendtrading'
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)
elseif((signal==2)andma_9<strategy.position_avg_price*.99andwindow()andstrategy.position_size>0)andtrading_option=='Uptrendtrading'anduse_cb_to_average==true
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)
elseif(signal==2)andhigh[1]<strategy.position_avg_priceandstrategy.position_size>0andtrading_option=='Uptrendtrading'anduse_cb_to_average==true
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)
elseif((buySignal==true)andma_9<strategy.position_avg_price*.99andwindow()andstrategy.position_size>0)andtrading_option=='Uptrendtrading'anduse_cb_to_average==false
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)
elseif(buySignal==true)andhigh[1]<strategy.position_avg_priceandstrategy.position_size>0andtrading_option=='Uptrendtrading'anduse_cb_to_average==false
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)
//Downtrendgeneralpurchase
if((signal==2orbuy_compound_f==1))andwindow()andcd==falseandstrategy.position_size==0andtrading_option=='UpandDownTrendtrading'
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)
elseif((buy_compound_f==1orcrosover_for(b1==1orb2==1orb3==1))andma_9<strategy.position_avg_price*.99andwindow()andstrategy.position_size>0andma_10_f)andtrading_option=='UpandDownTrendtrading'
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)
elseifsignal==2andhigh[1]<strategy.position_avg_priceandstrategy.position_size>=1andtrading_option=='UpandDownTrendtrading'
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)

//DowntrendGridTrading
if((signal==2orbuy_compound_f==1))andwindow()andcd==falseandstrategy.position_size==0andtrading_option=='GridTrading'
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)
elseiftrading_option=='GridTrading'and(buy_possition_1==trueorbuy_possition_2==trueorbuy_possition_3==trueorbuy_possition_4==trueorbuy_possition_5==trueorbuy_possition_6==trueorbuy_possition_7==trueorbuy_possition_8==trueorbuy_possition_9==trueorbuy_possition_10==trueorbuy_possition_11==trueorbuy_possition_12==trueorbuy_possition_13==trueorbuy_possition_14==trueorbuy_possition_15==trueorbuy_possition_16==trueorbuy_possition_17==trueorbuy_possition_18==trueorbuy_possition_19==trueorbuy_possition_20==trueorbuy_possition_21==trueorbuy_possition_22==trueorbuy_possition_23==trueorbuy_possition_24==trueorbuy_possition_25==trueorbuy_possition_26==trueorbuy_possition_27==trueorbuy_possition_28==trueorbuy_possition_29==trueorbuy_possition_30==trueorbuy_possition_31==trueorbuy_possition_32==trueorbuy_possition_33==trueorbuy_possition_34==trueorbuy_possition_35==trueorbuy_possition_36==trueorbuy_possition_37==trueorbuy_possition_38==trueorbuy_possition_39==trueorbuy_possition_40==trueorbuy_possition_41==trueorbuy_possition_42==trueorbuy_possition_43==trueorbuy_possition_44==trueorbuy_possition_45==trueorbuy_possition_46==trueorbuy_possition_47==trueorbuy_possition_48==trueorbuy_possition_49==true)
strategy.entry("long",strategy.long,comment=buy_comment,qty=quantity)
//generalsellingarrangement
if(comp_sell1orop_sell1orop_sell2orop_sell3orop_sell4orsell_crossunder)andwindow()andprc_change<ma_9andstrategy.opentrades>=8and(trading_option=='GridTrading'ortrading_option=='UpandDownTrendtrading')
strategy.close("long",comment=sell_comment)
elseif(gh_compund==100)andwindow()andprc_change<ma_9andstrategy.opentrades<8and(trading_option=='GridTrading'ortrading_option=='UpandDownTrendtrading')
strategy.close("long",comment=sell_comment)
elseifforce_sellandstrategy.opentrades>=piramiding*0.9andenable_stoploss==trueand(trading_option=='GridTrading'ortrading_option=='UpandDownTrendtrading')
strategy.close("long",comment=sell_comment)

//Uptrendsellingarrangement
if(sellSignal==trueorcomp_sell1orop_sell1orop_sell2orop_sell3orop_sell4orsell_crossunder)andwindow()andprc_change<=ma_9andtrading_option=='Uptrendtrading'
strategy.close("long",comment=sell_comment)
//Intermidiateselling
elseif((close>strategy.position_avg_price)orgh_compund==100)andcd==falseandenable_int_profit==true
strategy.exit("EXIT","long",profit=prc_change,qty=qty_f,comment=sell_comment)
//Graphs
boolPM_visible=input(true,"ShowExpectedProfit,StopLossandAverageCost",group='SaftyMargins')
boolSM_visible=input(false,"ShowSaftyGrids",group='SaftyMargins')
boolgmb_visible=input(true,"ShowGeneralMarketUpsandBottoms",group='Indicators')
boolcmb_visible=input(true,"ShowCriticalMarketUpsandBottoms",group='Indicators')
boolprofit_f2_visible=input(false,"ShowCumilativeProfit(USDT)Graph",group='Graphs')
boolcash_invest_visible=input(false,"ShowTotalValueofCurrentInvesment(USDT)Graph",group='Graphs')
boolrealised_profit_visible=input(false,"ShowLastrealisedprofit(USDTGraph",group='Graphs')
boolassert_visible=input(false,"ShowCumilativeAssert(USDT)Graph",group='Graphs')
boolgrid_plot_visible=input(false,"ShowGridsofGridTrading",group='Graphs')
color_1=color.blue
color_2=color.blue
color_3=color.blue
color_4=color.blue
ifprofit_f2_visible==true
color_1:=color.new(#e6d32a,0)
else
color_1:=color.new(color.blue,100)

ifrealised_profit_visible==true
color_2:=color.new(color.blue,0)
else
color_2:=color.new(color.blue,100)
ifcash_invest_visible==true
color_3:=color.new(color.maroon,0)
else
color_3:=color.new(color.blue,100)

ifassert_visible==true
color_4:=color.new(color.blue,0)
else
color_4:=color.new(color.blue,100)

varmax_open_trades=0
ifstrategy.opentrades>max_open_trades
max_open_trades:=strategy.opentrades
else
max_open_trades:=max_open_trades

varcolor_average_cost=color.green
ifdt_grid_trading==true
color_average_cost:=color.white
else
color_average_cost:=color.green

varfloatup_f=0
varfloatdn_f=0
iftrading_option=='Uptrendtrading'
up_f:=up
dn_f:=dn
else
up_f:=na
dn_f:=na
varfloatshowsignals_f_buy=0
varfloatshowsignals_f_sell=0
ifshowsignals==trueandclose<strategy.position_avg_priceandbuySignal
showsignals_f_buy:=1
ifshowsignals==trueandprc_change<=ma_9andsellSignal==true
showsignals_f_sell:=1
else
showsignals_f_buy:=0
showsignals_f_sell:=0

plot(PM_visible?strategy.position_avg_price:na,color=color_average_cost,title="AverageCost",style=plot.style_circles)
plot(PM_visible?prc_change:na,color=color.olive,title="ExpectedProfitLevel",style=plot.style_circles)
plot(PM_visibleandstrategy.opentrades>=piramiding*0.9?strategy.position_avg_price*stop_loss:na,color=color.red,title="StopLoss%",style=plot.style_circles)
plot(profit_f2,color=color_1,linewidth=4,style=plot.style_stepline_diamond,title="CumilativeProfit(USDT)")
plot(realised_profit,color=color_2,title="Lastrealisedprofit(USDT)")
plot(cash_invest,color=color_3,linewidth=4,style=plot.style_stepline_diamond,title="TotalValueofCurrentInvesment(USDT)")
plot(assert,color=color_4,title="CumilativeAssert(USDT)")
plot(value,color=color.new(color.white,100),title="ValueofnextPurchase(USDT)")
plot(strategy.position_size,color=color.new(color.white,100),title="StrategyPositionSize")
plot(quantity,color=color.new(color.white,100),title="QuantitytobePurchase")
plot(strategy.opentrades,color=color.new(color.white,100),title="CountofOpenTrades")
plot(max_open_trades,color=color.new(color.green,100),title="MaximumCountofOpenTrades")
//Graphs&shapesforuptrendtrading
plot(trend==1andtrading_option=='Uptrendtrading'?up_f:na,title='UpTrendforUptrendtrading',color=color.new(color.green,0),style=plot.style_linebr)
plot(trend==1andtrading_option=='Uptrendtrading'?na:dn_f,title='DownTrendforUptrendtrading',color=color.new(color.red,0),style=plot.style_linebr)
plotshape(buySignal==trueandtrading_option=="Uptrendtrading"?up_f:na,title='UpTrendBeginsforUptrendtrading',location=location.absolute,style=shape.circle,size=size.tiny,color=color.new(color.green,50))
plotshape(sellSignal==trueandtrading_option=="Uptrendtrading"?dn_f:na,title='DownTrendBeginsforUptrendtrading',location=location.absolute,style=shape.circle,size=size.tiny,color=color.new(color.red,50))
plotshape(buySignal==trueandshowsignals_f_buy==1?up_f:na,title='BuyforUptrendtrading',text='Buy',location=location.absolute,style=shape.labelup,size=size.tiny,color=color.new(color.green,0),textcolor=color.new(color.white,0))
plotshape(showsignals_f_sell==1?dn_f:na,title='SellforUptrendtrading',text='Sell',location=location.absolute,style=shape.labeldown,size=size.tiny,color=color.new(color.red,0),textcolor=color.new(color.white,0))
//Graphs&shapesforup&Downtrendtrading
plot(ST_visible?down_trend:na,color=plotcolor2,title="DownTrendforUp&Downtrendtrading",linewidth=1)
plot(ST_visible?up_trend:na,color=plotcolor3,title="UpTrendforUp&Downtrendtrading",linewidth=1)
plot(sar_visible?sar:na,color=plotcolor4,title='SARforUp&Downtrendtrading',linewidth=1)
plot(sma500_visible?SMA500:na,color=plotcolor5,title='SMA500forUp&Downtrendtrading',linewidth=2)
plot(show_LL_HH==true?b:na,color=color.orange,title="LowerlowsforUp&Downtrendtrading")
plot(show_LL_HH==true?e:na,color=color.white,title="HigherhighesforUp&Downtrendtrading")
plotshape((buy_compound_f==1andma_9<strategy.position_avg_priceandgmb_visible==true),style=shape.arrowdown,color=color.new(color.yellow,50),size=size.large,text="GB",title="GBLabel")
plotshape((gh_compund==100andma_9>strategy.position_avg_price*profit_fandgmb_visible==true),style=shape.arrowdown,color=color.new(color.green,50),size=size.large,text="GU",title="GULabel")
plotshape((cb_compound==100andma_9<strategy.position_avg_priceandcmb_visible==true),style=shape.labeldown,color=color.new(color.green,90),size=size.normal,text="DN",textcolor=color.white,title="DNLabel")
plotshape((hh_compund==100andcmb_visible==true),style=shape.labeldown,color=color.new(color.red,90),size=size.normal,text="UP",textcolor=color.white,title="UPLabel")
//GraphsforGridTrading
plot(dt_grid_trading==trueandgrid_plot_visible==true?level1:na,title="Droplevel-1",color=color.new(color.green,10),style=plot.style_circles)
plot(dt_grid_trading==trueandgrid_plot_visible==true?level2:na,title="Droplevel-2",color=color.new(color.green,20),style=plot.style_circles)
plot(dt_grid_trading==trueandgrid_plot_visible==true?level3:na,title="Droplevel-3",color=color.new(color.green,30),style=plot.style_circles)
plot(dt_grid_trading==trueandgrid_plot_visible==true?level4:na,title="Droplevel-4",color=color.new(color.green,40),style=plot.style_circles)
plot(dt_grid_trading==trueandgrid_plot_visible==true?level5:na,title="Droplevel-5",color=color.new(color.green,50),style=plot.style_circles)
plot(dt_grid_trading==trueandgrid_plot_visible==true?level6:na,title="Droplevel-6",color=color.new(color.green,55),style=plot.style_circles)
plot(dt_grid_trading==trueandgrid_plot_visible==true?level7:na,title="Droplevel-7",color=color.new(color.green,60),style=plot.style_circles)
plot(dt_grid_trading==trueandgrid_plot_visible==true?level8:na,title="Droplevel-8",color=color.new(color.green,65),style=plot.style_circles)
plot(dt_grid_trading==trueandgrid_plot_visible==true?level9:na,title="Droplevel-9",color=color.new(color.green,70),style=plot.style_circles)
plot(dt_grid_trading==trueandgrid_plot_visible==true?level10:na,title="Droplevel-10",color=color.new(color.green,80),style=plot.style_circles)
//Table
vartbl=table.new(position.top_right,2,9,frame_color=#151715,frame_width=1,border_width=2,border_color=color.new(color.white,100))
//columnvalues
table.cell(tbl,0,0,text="Cumilativeprofit(USDT)",text_color=color.white,text_halign=text.align_left,text_valign=text.align_center,bgcolor=color.green)
table.cell(tbl,0,1,text="Cumilativeassert(USDT)",text_color=color.red,text_halign=text.align_left,text_valign=text.align_center)
table.cell(tbl,0,2,text="Averagecost(USDT)",text_color=color.red,text_halign=text.align_left,text_valign=text.align_center)
table.cell(tbl,0,3,text="Expectedprofit(USDT)",text_color=color.red,text_halign=text.align_left,text_valign=text.align_center)
table.cell(tbl,0,4,text="Currentinvestment(USDT)",text_color=color.red,text_halign=text.align_left,text_valign=text.align_center)
table.cell(tbl,0,5,text="Nextpurchase(USDT)",text_color=color.red,text_halign=text.align_left,text_valign=text.align_center)
table.cell(tbl,0,6,text="Countofopentrades",text_color=color.red,text_halign=text.align_left,text_valign=text.align_center)
table.cell(tbl,0,7,text="StrategypositionSize",text_color=color.red,text_halign=text.align_left,text_valign=text.align_center)

table.cell(tbl,1,0,str.tostring(profit_f2,format.mintick),text_color=color.white,text_halign=text.align_right,text_valign=text.align_center,bgcolor=color.green)
table.cell(tbl,1,1,str.tostring(assert,format.mintick),text_color=color.red,text_halign=text.align_right,text_valign=text.align_center)
table.cell(tbl,1,2,str.tostring(strategy.position_avg_price,format.mintick),text_color=color.red,text_halign=text.align_right,text_valign=text.align_center)
table.cell(tbl,1,3,str.tostring((strategy.position_avg_price*profit_f),format.mintick),text_color=color.red,text_halign=text.align_right,text_valign=text.align_center)
table.cell(tbl,1,4,str.tostring(cash_invest,format.mintick),text_color=color.red,text_halign=text.align_right,text_valign=text.align_center)
table.cell(tbl,1,5,str.tostring(value,format.mintick),text_color=color.red,text_halign=text.align_right,text_valign=text.align_center)
table.cell(tbl,1,6,str.tostring(strategy.opentrades,format.mintick),text_color=color.red,text_halign=text.align_right,text_valign=text.align_center)
table.cell(tbl,1,7,str.tostring(strategy.position_size,format.mintick),text_color=color.red,text_halign=text.align_right,text_valign=text.align_center)
Expand (1691 lines)
