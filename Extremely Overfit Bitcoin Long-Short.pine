Script Name: Extremely Overfit Bitcoin Long-Short
Author: jsmith_crypto
Description: This is a highly overfit (in my opinion) script to long/short BTC on the 15m time frame. May be usable for other cryptocurrencies or timeframes with some parameter adjustments. I backtested it on a few exchanges with ETH.

The simplest way to increase the number of trades is to decrease the "FastChannelLength" parameter or increase the "SlowChannelLength"...
PineScript code:

Pine Scriptâ„¢ strategy
Extremely Overfit Bitcoin Long/Short
//@version=4
strategy("Extremely  Overfit",  overlay=true,  commission_type=strategy.commission.percent,  commission_value=.16,  default_qty_type=strategy.percent_of_equity,  default_qty_value=100,  pyramiding  =  1)
price  =  close
goLong  =  input(title="go  long?",  type=input.bool,  defval=true)
goShort  =  input(title="go  short?",  type=input.bool,  defval=true)
//trendRestrict  =  input(title="basic  trend  restriction?",  type=input.bool,  defval=false)
dynamicRestrict  =  true  //input(title="dynamic  trend  restriction?",  type=input.bool,  defval=true)
longtrendimpt  =  true  //input(title="additional  weight  on  long-term  trends?",  type=input.bool,  defval=true)
volRestrict  =  true  //input(title="volume  restriction?",  type=input.bool,  defval=true)
conservativeClose  =  false  //input(title="conservative  order  closing?",  type=input.bool,  defval=false)
Restrictiveness  =  input  (  -40,step=10,title  ="Restrictiveness  (higher  =  make  fewer  trades)")
volatilityImportance  =  3.2  //input(  3.2,  step  =  0.1,  minval  =  0)
fastChannelLength  =  input(  6  )
fastChannelMargin  =  input  (  3.2,  step  =  0.1,  minval  =  0)
slowChannelLength  =  input  (  6,  step  =  1,  minval  =  0)
slowChannelMargin  =  input  (  1.5,  step  =  0.1,  minval  =  0)
fastHMAlength  =  input  (4,  step  =  1,  minval  =  0)
stopLoss  =  input(  3,  step  =  0.1,  minval  =  0)
//altClosePeriod  =  input(  27,  step  =  1,  minval  =  1)
//altCloseFactor  =  input(  4.9,  step  =  0.1)
stopLossFlexibility  =  50  //input(50,  step=10,  title="effect  of  volatility  on  SL?")
volumeMAlength  =  14  //input  (  14,  step  =  1,  minval  =  1)
volumeVolatilityCutoff  =  3.8  //  (  3.8,  step  =  1,  minval  =  0)
trendSensitivity  =  3.8  //input  (  3.8,  step  =  0.1)
obvLookback  =  10  //input(10,  step  =  10,  minval  =  10)
obvCorrThreshold  =  0.89  //input(0.89,  step  =  0.01)
ROClength  =  80  //input(  80,  step  =  10)
ROCcutoff  =  5.6  //input(  5.6,  step=0.1)
trendRestrict  =  false
//trendLookback  =  input  (  360,  step  =  10,  minval  =  10)
//longTrendLookback  =  input(720,  step  =  10,  minval  =  10)
//longTrendImportance  =  input(1.5,  step  =  0.05)
trendLookback  =  360
longTrendLookback  =  720
longTrendImportance  =  1.5
//conservativeness  =  input(  2.4,  step  =  0.1)
conservativeness  =  0
//trendPower  =  input(  0,  step=1)
trendPower  =  0
//conservativenessLookback  =  input(  650,  step  =  10,  minval  =  0)
conservativenessLookback  =  10
//consAffectFactor  =  input(  0.85,step=0.01)
consAffectFactor  =  0.85
//volatilityLookback  =  input(50,  step=1,  minval=2)
volatilityLookback  =  int(50)
recentVol  =  stdev(price,volatilityLookback)/sqrt(volatilityLookback)
//price  channel
fastChannel  =  ema(price,  fastChannelLength)
fastChannelUB  =  fastChannel  *  (1  +  (float(fastChannelMargin)  /  1000))  +  (recentVol  *  (float(volatilityImportance)  *  (1  +  (Restrictiveness/100))))
fastChannelLB  =  fastChannel  *  (1  -  (float(fastChannelMargin)  /  1000))  -  (recentVol  *  (float(volatilityImportance)  *  (1  +  (Restrictiveness/100))))
fchU  =  ((fastChannelUB  <  open)  and  (fastChannelUB  <  close))
fchL  =  ((fastChannelLB  >  open)  and  (fastChannelLB  >  close))
//plot(fastChannelUB)
//plot(fastChannelLB)
//slow  channel
//slowChannelLBmargin  =  input  (  2,  step  =  0.1,  minval  =  0  )
slowChannel  =  ema(ema(price,slowChannelLength),slowChannelLength)
slowChannelUB  =  slowChannel  *  (1  +  (float(slowChannelMargin)  /  2000))  +  (recentVol  *  (float(volatilityImportance)  *  (1  +  (Restrictiveness/100))))
slowChannelLB  =  slowChannel  *  (1  -  (float(slowChannelMargin)  /  2000))  -  (recentVol  *  (float(volatilityImportance)  *  (1  +  (Restrictiveness/100))))
schU  =  ((slowChannelUB  <  close))
schL  =  ((slowChannelLB  >  close))
cschU  =  (((slowChannelUB  *  (1  +  conservativeness))  <  close))
cschL  =  (((slowChannelUB  *  (1  -  conservativeness))  >  close))
//plot(slowChannel,color  =  #00FF00)
//plot(slowChannelUB,color  =  #00FF00)
//plot(slowChannelLB,color  =  #00FF00)
fastHMA  =  hma(price,fastHMAlength)
fastAboveUB  =  (fastHMA  >  slowChannelUB)
fastBelowLB  =  (fastHMA  <  slowChannelLB)
//plot(fastHMA,  color  =          #FF0000,  linewidth  =  2)
//consecutive  candles
//consecutiveCandlesReq  =  input(1,  step  =  1,  minval  =  1,  maxval  =  4)
consecutiveCandlesReq  =  1
consecutiveBullReq  =  float(consecutiveCandlesReq)
consecutiveBearReq  =  float(consecutiveCandlesReq)
cbull  =  ((close[0]  >  close[1])  and  (consecutiveBullReq  ==  1))  or  (((close[0]  >  close[1])  and  (close[1]  >  close[2]))  and  consecutiveBullReq  ==  2)  or  (((close[0]  >  close[1])  and  (close[1]  >  close[2])  and  (close[2]  >  close[3]))  and  consecutiveBullReq  ==  3)  or  (((close[0]  >  close[1])  and  (close[1]  >  close[2])  and  (close[2]  >  close[3])  and  (close[3]  >  close[4]))  and  consecutiveBullReq  ==  4)
cbear  =  ((close[0]  <  close[1])  and  (consecutiveBearReq  ==  1))  or  (((close[0]  <  close[1])  and  (close[1]  <  close[2]))  and  consecutiveBearReq  ==  2)  or  (((close[0]  <  close[1])  and  (close[1]  <  close[2])  and  (close[2]  <  close[3]))  and  consecutiveBearReq  ==  3)  or  (((close[0]  <  close[1])  and  (close[1]  <  close[2])  and  (close[2]  <  close[3])  and  (close[3]  <  close[4]))  and  consecutiveBearReq  ==  4)
//trend  detection
//trendCutoff  =  input(0,  step  =  0.1)
trendCutoff  =  0
trendDetectionPct  =  float(trendCutoff/100)
trendVal  =  float((close[0]  -  close[trendLookback])/close[0])
trendUp  =  (trendVal  >  (0  +  trendDetectionPct))
trendDown  =  (trendVal  <  (0  -  trendDetectionPct))
//plot(trendVal+36.5,linewidth=2)
//  peak  indicators
peakHigh  =  ((fastHMA  >  fastChannelUB)  and  (fastChannelLB  >  slowChannelUB))
peakLow  =  ((fastHMA  <  fastChannelLB)  and  (fastChannelUB  <  slowChannelLB))
TpeakHigh  =  (fastHMA  >  fastChannelUB)  and  (fastChannelUB  >  slowChannelUB)
TpeakLow  =  (fastHMA  <  fastChannelUB)  and  (fastChannelLB  <  slowChannelLB)
//TpeakHigh  =  (fastHMA  >  fastChannelUB)  and  (fastChannelLB  >  avg(slowChannelUB,slowChannelLB))
//TpeakLow  =  (fastHMA  <  fastChannelUB)  and  (fastChannelUB  <  avg(slowChannelLB,slowChannelUB))
//TpeakHigh  =  ((crossover(fastHMA,fastChannelUB))  and  (fastChannelLB  >  slowChannelUB))
//TpeakLow  =  ((crossover(fastChannelLB,fastHMA))  and  (fastChannelUB  <  slowChannelLB))
//TpeakHigh  =  (fastHMA  >  (fastChannelUB  *  (1  +  (trendPower/800))))  and  (fastChannelUB  >  (slowChannelUB  *  (1  +  (trendPower/800))))
//TpeakLow  =  (fastHMA  <  (fastChannelUB  *  (1  -  (trendPower/800))))  and  (fastChannelLB  <  (slowChannelLB  *  (1  -  (trendPower/800))))
//TpeakHigh  =  (fastHMA  >  (fastChannelUB  *  (1  +  (trendPower/800))))  and  (avg(fastChannelUB,fastChannelLB)  >  (slowChannelUB  *  (1  +  (trendPower/800))))
//TpeakLow  =  (fastHMA  <  (fastChannelUB  *  (1  -  (trendPower/800))))  and  (avg(fastChannelLB,fastChannelUB)  <  (slowChannelLB  *  (1  -  (trendPower/800))))
//plot(fastChannelUB  *  (1  +  (trendPower/700)),  color=#FF69B4)
//  and  for  closing...
closeLong  =  (crossover(fastHMA,fastChannelUB)  and  (fastChannelLB  >  slowChannelUB))
closeShort  =  (crossover(fastChannelLB,fastHMA)  and  (fastChannelUB  <  slowChannelLB))
//closeLong  =  (crossover(fastHMA,fastChannelUB)  and  (fastChannelLB  >  slowChannelUB))  or  (roc(price,altClosePeriod)  >  altCloseFactor)
//closeShort  =  (crossover(fastChannelLB,fastHMA)  and  (fastChannelUB  <  slowChannelLB))    or  (roc(price,altClosePeriod)  <  (altCloseFactor)  *  -1)
//closeLong  =  (crossover(fastHMA,fastChannelUB)  and  (fastChannelLB  >  slowChannelUB))  or  (((price  -  fastChannelUB)  >  (altCloseFactor  *  abs(((fastChannelUB  -  fastChannelLB)/2)  -  ((slowChannelUB  -  slowChannelLB)/2))))  and  (fastChannelLB  >  slowChannelUB))
//closeShort  =  (crossover(fastChannelLB,fastHMA)  and  (fastChannelUB  <  slowChannelLB))  or  (((fastChannelLB  -  price)  >  (altCloseFactor  *  abs(((fastChannelUB  -  fastChannelLB)/2)  -  ((slowChannelUB  -  slowChannelLB)/2))))  and  (fastChannelUB  <  slowChannelLB))
//closeLong  =  crossover(fastHMA,fastChannelUB)  and  ((fastChannelLB[0]  -  fastChannelLB[1])  <  (slowChannelUB[0]  -  slowChannelUB[1]))
//closeShort  =  crossover(fastChannelLB,fastHMA)  and  ((fastChannelUB[0]  -  fastChannelUB[1])  >  (slowChannelLB[0]  -  slowChannelLB[1]))
//stop-loss
priceDev  =  stdev(price,trendLookback)  *  (1  +  stopLossFlexibility/5)
stopLossMod  =  stopLoss  *  (1  +  (priceDev/price))
//longStopPrice    =  strategy.position_avg_price  *  (1  -  (stopLoss/100))
//shortStopPrice  =  strategy.position_avg_price  *  (1  +  (stopLoss/100))
longStopPrice    =  strategy.position_avg_price  *  (1  -  (stopLossMod/100))
shortStopPrice  =  strategy.position_avg_price  *  (1  +  (stopLossMod/100))
//  volume
volumeMA  =  ema(volume,volumeMAlength)
volumeDecrease  =  ((not  volRestrict  )  or  (volumeMA[0]  <  ema(volumeMA[1]  *  (1  -  (volumeVolatilityCutoff/100)),5)))
volumeCutoff  =  ema(volumeMA[1]  *  (1  -  (volumeVolatilityCutoff/100)),5)
//plot(volumeMA)
//plot(volumeCutoff)
//  detect  volatility
//trendinessLookback  =  input  (  600,  step  =  10,  minval  =  0)
trendinessLookback  =  trendLookback
trendiness  =  (stdev(price,trendinessLookback)/price)  *  (1  -  (Restrictiveness/100))
longtermTrend  =  ((price  -  price[longTrendLookback])/price)
//dynamicTrendDetected  =  (dynamicRestrict  and  (abs(trendiness  *  100)  <  trendSensitivity))
dynamicTrendDetected  =  (longtrendimpt  and  (dynamicRestrict  and  (abs(trendiness  *  100)  <  (trendSensitivity+(longtermTrend  *  longTrendImportance)))))  or  (not  longtrendimpt  and  ((dynamicRestrict  and  (abs(trendiness  *  100)  <  trendSensitivity))))
//  adapt  conservativeness  to  volatility
//consVal  =  sma(((stdev(price,conservativenessLookback))/price)*100,25)
consVal  =  sma(((stdev(price,conservativenessLookback))/price)*100,25)
cVnorm  =  sma(avg(consVal,3),60)
cVal  =  consVal  -  cVnorm
//conservativenessMod  =  conservativeness  *  (cVal  *  consAffectFactor)
conservativenessMod  =  conservativeness  *  (consVal  *  consAffectFactor)
//plot(consVal,linewidth=4)
//plot(cVnorm,color  =  #00FF00)
//plot(cVal,linewidth=2)
//  ROC  cutoff  (for  CLOSING)
//rocCloseLong  =  (ema(roc(price,ROClength),10)  >  ROCcutoff)
//rocCloseShort  =  (ema(roc(price,ROClength),10)  <  (ROCcutoff  *  -1))
ROCval  =roc(price,ROClength)
ROCema=ema(ROCval,30)
ROCabs=abs(ROCema)
ROCallow=ROCabs<ROCcutoff
ROCallowLong=(ROCabs<ROCcutoff)or((ROCabs>=ROCcutoff)and((fastChannelLB<slowChannelLB)and(fastHMA<fastChannelLB)))
ROCallowShort=(ROCabs<ROCcutoff)or((ROCabs>=ROCcutoff)and((fastChannelUB>slowChannelUB)and(fastHMA>fastChannelUB)))
//plot(ROCallow)
//obv
evidence_obv=(correlation(price,obv[0],obvLookback))
obvAllow=evidence_obv>obvCorrThreshold
//if(notna(vrsi))
iftrendRestrictordynamicTrendDetected
//if(strategy.position_size==0)
ifnot(strategy.position_size<0)
iftrendUp
//ifcbearandschLandfchLandtrendUpandgoLong
ifcbearandTpeakLowandvolumeDecreaseandROCallowandgoLongandobvAllow
//ifcbearandpeakLowandrocHighandvolumeDecreaseandgoLong
strategy.entry("Long",strategy.long,comment="Long")
ifnot(strategy.position_size>0)
iftrendDown
//ifcbullandschUandfchUandtrendDownandgoShort
ifcbullandTpeakHighandvolumeDecreaseandROCallowandgoShortandobvAllow
//ifcbullandpeakHighandrocLowandvolumeDecreaseandgoShort
strategy.entry("Short",strategy.short,comment="Short")
else
//if(strategy.position_size==0)
ifnot(strategy.position_size<0)
//ifcbearandpeakLowandgoLong
//ifcbearandpeakLowandvolumeDecreaseandROCallowandgoLong
ifTpeakLowandgoLongandobvAllow
strategy.entry("Long",strategy.long,comment="Long")
ifnot(strategy.position_size>0)
//ifcbullandpeakHighandgoShort
//ifcbullandpeakHighandvolumeDecreaseandROCallowandgoShort
ifTpeakHighandgoShortandobvAllow
strategy.entry("Short",strategy.short,comment="Short")
ifconservativeClose
//pkHigh=((fastHMA>fastChannelUB)and(fastChannelUB>(slowChannelUB*(1+conservativeness/1000))))
//pkLow=((fastHMA<fastChannelLB)and(fastChannelLB<(slowChannelLB*(1-conservativeness/1000))))
//pkHigh=((fastHMA>fastChannelUB)and(fastChannelUB>(slowChannelUB*(1+conservativenessMod/1000))))
//pkLow=((fastHMA<fastChannelLB)and(fastChannelLB<(slowChannelLB*(1-conservativenessMod/1000))))
pkHigh=((fastHMA>fastChannelUB)and(fastChannelUB>(slowChannelUB*(1+((conservativenessMod/1000)*(1-Restrictiveness/100))))))
pkLow=((fastHMA<fastChannelLB)and(fastChannelLB<(slowChannelLB*(1-((conservativenessMod/1000)*(1-Restrictiveness/100))))))

if(strategy.position_size>0)
//iffastAboveUB
//ifpkHighandcloseLong
ifcloseLong
strategy.close("Long",comment="closeLong")
if(strategy.position_size<0)
//iffastBelowLB
//ifpkLowandcloseShort
ifcloseShort
strategy.close("Short",comment="closeShort")
else
if(strategy.position_size>0)
//iffastAboveUB
ifpeakHigh
strategy.close("Long",comment="closeLong")
if(strategy.position_size<0)
//iffastBelowLB
ifpeakLow
strategy.close("Short",comment="closeShort")
if(strategy.position_size>0)
strategy.exit(id="Long",stop=longStopPrice,comment="stopLong")
if(strategy.position_size<0)
strategy.exit(id="Short",stop=shortStopPrice,comment="stopShort")
//plot(strategy.equity,title="equity",color=color.red,linewidth=2,style=plot.style_areabr)
Expand (249 lines)
