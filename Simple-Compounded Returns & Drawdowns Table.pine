Script Name: Simple-Compounded Returns & Drawdowns Table
Author: antondmt
Description: Very excited to bring this script to the public. This is a very useful table that displays the performance of any strategy you give it in a more detailed view. It runs on all timeframes and at any position on the chart with the replay function. It also updates on tick changes. The table consists of three modes: Simple Equity, Compound Equity and Drawdown.

 Simple...
PineScript code:

Pine Script™ strategy
Simple/Compounded Returns & Drawdowns Table
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  antondmt
//@version=5
strategy("Returns  &  Drawdowns  Table",  "R  &  DD",  true,  calc_on_every_tick  =  false,  default_qty_type  =  strategy.percent_of_equity,  default_qty_value  =  100,  process_orders_on_close  =  true)
i_eq_to_dd  =                        input.string("Compound  Equity",  "Mode",  ["Simple  Equity",  "Compound  Equity",  "Drawdown"],  group  =  "R  &  DD  Table")
i_precision  =                      input.int(2,  "Return  Precision",  group  =  "R  &  DD  Table")
i_headers_col  =                  input.color(#D4D4D4,  "Headers  Color",  group  =  "R  &  DD  Table")
i_headers_text_col  =        input.color(color.black,  "Headers  Text  Color",  group  =  "R  &  DD  Table")
i_pos_col  =                          input.color(color.green,  "Positive  Color",  group  =  "R  &  DD  Table")
i_neg_col  =                          input.color(color.red,  "Negative  Color",  group  =  "R  &  DD  Table")
i_zero_col  =                        input.color(#DDDDDD,  "Zero  Color",  group  =  "R  &  DD  Table")
i_cell_text_col  =              input.color(color.white,  "Cell  Text  Color",  group  =  "R  &  DD  Table")
//  TIME  {
var  month_times  =  array.new_int(0)                                                                                                                            //  Array  of  all  month  times
new_month  =  month(time)  !=  month(time[1])
if(new_month  or  barstate.isfirst)
        array.push(month_times,  time)
var  year_times  =  array.new_int(0)
new_year=year(time)!=year(time[1])
if(new_yearorbarstate.isfirst)
array.push(year_times,time)
//}
//SIMPLEEQUITYCALCULATIONS{
//Simpleequityisstrictlycalculatedfromstarttoendofeachmonth/yearequity.Thereisnocompound
varmonthly_simp_pnls=array.new_float(0)//Arrayofallmonthlyprofitsandlosses
varyearly_simp_pnls=array.new_float(0)
if(i_eq_to_dd=="SimpleEquity")
varinitial_monthly_equity=strategy.equity//Startingequityforeachmonth
cur_month_pnl=nz((strategy.equity-initial_monthly_equity)/initial_monthly_equity)//Currentmonth'sequitychange
if(new_monthorbarstate.isfirst)
initial_monthly_equity:=strategy.equity
array.push(monthly_simp_pnls,cur_month_pnl)
else
array.set(monthly_simp_pnls,array.size(monthly_simp_pnls)-1,cur_month_pnl)

varinitial_yearly_equity=strategy.equity
cur_year_pnl=nz((strategy.equity-initial_yearly_equity)/initial_yearly_equity)
if(new_yearorbarstate.isfirst)
initial_yearly_equity:=strategy.equity
array.push(yearly_simp_pnls,cur_year_pnl)
else
array.set(yearly_simp_pnls,array.size(yearly_simp_pnls)-1,cur_year_pnl)
//}
//COMPOUNDEQUITYCALCULATIONS{
//Compoundequityisstrictlycalculatedbasedonequitystatefromthebeginningoftimeuntiltheendofeachmonth/yearequity.Itshowstheexactequitymovementthroughtime
varmonthly_comp_pnls=array.new_float(0)//Arrayofallmonthlyprofitsandlosses
varyearly_comp_pnls=array.new_float(0)
if(i_eq_to_dd=="CompoundEquity")
varinitial_equity=strategy.equity
cur_month_pnl=nz((strategy.equity-initial_equity)/initial_equity)//Currentmonth'sequitychange
if(new_monthorbarstate.isfirst)
array.push(monthly_comp_pnls,cur_month_pnl)
else
array.set(monthly_comp_pnls,array.size(monthly_comp_pnls)-1,cur_month_pnl)

cur_year_pnl=nz((strategy.equity-initial_equity)/initial_equity)
if(new_yearorbarstate.isfirst)
array.push(yearly_comp_pnls,cur_year_pnl)
else
array.set(yearly_comp_pnls,array.size(yearly_comp_pnls)-1,cur_year_pnl)
//}

//DRAWDOWNCALCULATIONS{
//Drawdownsarecalculatedfromhighestequitytolowesttroughforthemonth/year
varmonthly_dds=array.new_float(0)//Arrayofallmonthlydrawdowns
varyearly_dds=array.new_float(0)
if(i_eq_to_dd=="Drawdown")
total_equity=strategy.equity-strategy.openprofit

varcur_month_dd=0.0
varm_ATH=total_equity//MonthlyAll-Time-High(ATH).Itisreseteachmonth
m_ATH:=math.max(total_equity,nz(m_ATH[1]))
m_drawdown=-math.abs(total_equity/m_ATH*100-100)/100//Drawdownatcurrentbar
if(m_drawdown<cur_month_dd)
cur_month_dd:=m_drawdown
if(new_monthorbarstate.isfirst)
cur_month_dd:=0.0
m_ATH:=strategy.equity-strategy.openprofit
array.push(monthly_dds,0)
else
array.set(monthly_dds,array.size(monthly_dds)-1,cur_month_dd)

varcur_year_dd=0.0
vary_ATH=total_equity
y_ATH:=math.max(total_equity,nz(y_ATH[1]))
y_drawdown=-math.abs(total_equity/y_ATH*100-100)/100
if(y_drawdown<cur_year_dd)
cur_year_dd:=y_drawdown
if(new_yearorbarstate.isfirst)
cur_year_dd:=0.0
y_ATH:=strategy.equity-strategy.openprofit
array.push(yearly_dds,0)
else
array.set(yearly_dds,array.size(yearly_dds)-1,cur_year_dd)
//}
//TABLELOGIC{
varmain_table=table(na)
table.clear(main_table,0,0,13,new_year?array.size(year_times)-1:array.size(year_times))
main_table:=table.new(position.bottom_right,columns=14,rows=array.size(year_times)+1,border_width=1)
t_set_headers()=>//Setstimeheadersofthetable
//Setmonthheaders
table.cell(main_table,0,0,"",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,1,0,"Jan",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,2,0,"Feb",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,3,0,"Mar",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,4,0,"Apr",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,5,0,"May",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,6,0,"Jun",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,7,0,"Jul",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,8,0,"Aug",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,9,0,"Sep",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,10,0,"Oct",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,11,0,"Nov",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,12,0,"Dec",text_color=i_headers_text_col,bgcolor=i_headers_col)
table.cell(main_table,13,0,str.tostring(i_eq_to_dd),text_color=i_headers_text_col,bgcolor=i_headers_col)
//Setyearheaders
fori=0toarray.size(year_times)-1
table.cell(main_table,0,i+1,str.tostring(year(array.get(year_times,i))),text_color=i_headers_text_col,bgcolor=i_headers_col)
t_set_months()=>//Setsinnermonthlydataofthetable
display_array=switchi_eq_to_dd
"SimpleEquity"=>monthly_simp_pnls
"CompoundEquity"=>monthly_comp_pnls
=>monthly_dds
fori=0toarray.size(month_times)-1
m_row=year(array.get(month_times,i))-year(array.get(year_times,0))+1
m_col=month(array.get(month_times,i))
m_color=array.get(display_array,i)==0?color.new(i_zero_col,transp=30):array.get(display_array,i)>0?color.new(i_pos_col,transp=30):color.new(i_neg_col,transp=30)
table.cell(main_table,m_col,m_row,str.tostring(math.round(array.get(display_array,i)*100,i_precision)),bgcolor=m_color,text_color=i_cell_text_col)

t_set_years()=>//Setsinneryearlydataofthetable
display_array=switchi_eq_to_dd
"SimpleEquity"=>yearly_simp_pnls
"CompoundEquity"=>yearly_comp_pnls
=>yearly_dds
fori=0toarray.size(year_times)-1
y_color=array.get(display_array,i)==0?color.new(i_zero_col,transp=30):array.get(display_array,i)>0?color.new(i_pos_col,transp=20):color.new(i_neg_col,transp=20)
table.cell(main_table,13,i+1,str.tostring(math.round(array.get(display_array,i)*100,i_precision)),bgcolor=y_color,text_color=i_cell_text_col)
t_set_headers()
t_set_months()
t_set_years()
//}
//PLACEYOURSTRATEGYCODEHERE{
//Thisisasamplecodeofaworkingstrategytoshowthetableinaction
fastLength=input(12)
slowlength=input(26)
MACDLength=input(9)
MACD=ta.ema(close,fastLength)-ta.ema(close,slowlength)
aMACD=ta.ema(MACD,MACDLength)
delta=MACD-aMACD
if(ta.crossover(delta,0))
strategy.entry("MacdLE",strategy.long,comment="MacdLE")
if(ta.crossunder(delta,0))
strategy.entry("MacdSE",strategy.short,comment="MacdSE")
//}
Expand (168 lines)
