Script Name: -Backtesting System
Author: HALDRO
Description: ⚉ ＯＶＥＲＶＩＥＷ ⚉
One of the best Systems for Backtesting your Strategies.
Incredibly flexible, simple, fast and feature-rich system — will solve most of your queries without much effort.
Many systems for setting StopLoss, TakeProfit, Risk Management and advanced Filters.
All you need to do is plug in your indicator and start Backtesting .

I intentionally left the...
PineScript code:

Pine Script™ strategy
*Backtesting System
This document contains many ambiguous unicode characters
Disable Ambiguous Highlight
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
501
502
503
504
505
506
507
508
509
510
511
512
513
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  @HALDRO  Project
//  ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————  \\
//@version=5
strategy('*Backtesting  System',
                  overlay                      =  true,
                  initial_capital      =  10000,
                  commission_value    =  0.04,
                  default_qty_value  =  10,
                  slippage                    =  1,
                  pyramiding                =  0,
                  max_lines_count      =  500,
                  max_labels_count    =  500,
                  currency                    =  currency.USD,
                  default_qty_type    =  strategy.percent_of_equity)
MA(string  _maType,  float  _maSource,  simple  int  _maLength)  =>
        float  ma  =  switch  _maType
                'ALMA'  =>  ta.alma  (_maSource,  _maLength,  0.85,  6)
                'EMA'    =>  ta.ema    (_maSource,  _maLength)
                'HMA'    =>  ta.hma    (_maSource,  _maLength)
                'RMA'    =>  ta.rma    (_maSource,  _maLength)
                'SMA'    =>  ta.sma    (_maSource,  _maLength)
                'VWMA'  =>  ta.vwma  (_maSource,  _maLength)
                'WMA'    =>  ta.wma    (_maSource,  _maLength)
        ma
//  ————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————  \\
//  ——————  ToolTips
TText_source_        =  '𝐄𝐱𝐭𝐞𝐫𝐧𝐚𝐥 𝐒𝐨𝐮𝐫𝐜𝐞 ➖ Here  you  must  select  your  Indicator,  having  previously  connected  the  "Connector"  to  it.\nIf  the  "Close"  option  is  selected  then  you  can  test  the  backtest  on  regular  MA  crosses  EMA  200  and  EMA  50.'
TTreversesignal    =  '𝐖𝐚𝐢𝐭 𝐄𝐧𝐝 𝐃𝐞𝐚𝐥 ➖  Enable/Disable  waiting  for  a  trade  to  close  at  Stop  Loss/Take  Profit.  Until  the  trade  closes  on  the  Stop  Loss  or  Take  Profit,  no  new  trade  will  open.  \n'
                                  +  '𝐑𝐞𝐯𝐞𝐫𝐬𝐞 𝐃𝐞𝐚𝐥𝐬 ➖  If  true  strategy  will  go  in  the  opposite  direction  from  the  signal.'
TTreOpenDeal          =  '𝐑𝐞𝐄𝐧𝐭𝐫𝐲 𝐃𝐞𝐚𝐥 ➖  If  true  trade  was  long  and    SL/TP  was  reached  then  go  long  again  and  vice  versa.  \n'
                                  +  '𝐑𝐞𝐎𝐩𝐞𝐧 𝐃𝐞𝐚𝐥 ➖  If  true  and  Wait  End  Deal  is  false  then  in  case  you  are  in  a  Long  position  and  a  new  signal  to  Long,  you  will  reEnter  a  new  Long  position  and  vice  versa  for  Shorts.'
TTslType                  =  '𝐅𝐈𝐗𝐄𝐃 ％ ➖  Fixed  SL/TP  in  percent.  \n'
                                  +  '𝐅𝐈𝐗𝐄𝐃 ＄ ➖  Fixed  SL/TP  in  cash.  \n'
                                  +  '𝐓𝐑𝐀𝐈𝐋𝐈𝐍𝐆 ➖  Trailing  stop  in  ％  like  on  exchanges.  Regulated  by  the  "𝗧𝗿𝗮𝗶𝗹𝗶𝗻𝗴 ％"  parameter.  \n'
                                  +  '𝐅𝐀𝐒𝐓 𝐓𝐑𝐀𝐈𝐋 ➖  If  in  a  long,  it  immediately  follows  the  price  when  it  rises  otherwise  it  stands  still.  Vice  versa  for  shorts.  Regulated  by  the  "𝗧𝗿𝗮𝗶𝗹𝗶𝗻𝗴 ％"  parameter.  \n'
                                  +  '𝐀𝐓𝐑 ➖  Fixed  TP/SL  depending  on  the  current  ATR.  It  is  regulated  by  the  "𝗔𝗧𝗥 𝗣𝗲𝗿𝗶𝗼𝗱"  |  "𝗠𝘂𝗹𝘁𝗶𝗽𝗹𝗶𝗲𝗿"  parameters.  \n'
                                  +  '𝗔𝗧𝗥 𝐓𝐑𝐀𝐈𝐋 ➖  Trailing  Stop  calculated  on  the  basis  of  the  ATR.  It  is  regulated  by  the  "𝗔𝗧𝗥 𝗣𝗲𝗿𝗶𝗼𝗱"  |  "𝗠𝘂𝗹𝘁𝗶𝗽𝗹𝗶𝗲𝗿"  parameters.  \n'
                                  +  '𝗥:𝗥 ➖  Risk  Reward  sets  the  TP  depending  on  the  size  of  the  SL.  For  example,  if  SL  is  ＄100,  and  R:R  =  2,  then  the  TP  is  ＄200.  \n'
                                  +  '𝐇𝐇 / 𝐋𝐋 ➖  Searches  for  the  last  Extremum  (High/Low)  for  the  specified  number  of  bars  and  sets  a  fixed  Take.  \n'
                                  +  '𝐋𝐎 / 𝐇𝐈 ➖  Sets  the  SL  for  High/Low  candles.  "𝗟𝗢/𝗛𝗜"  =  1  Sets  the  SL  for  the  last  High/Low.  \n'
                                  +  '𝐌𝐀 ➖  Movieng  Average  SL.  A  very  diverse  type  of  SL.'
//  ——————  Main  Inputs
groupset                  =  '➤ ＭＡＩＮ  ＳＥＴＴＩＮＧＳ'
ext_source_            =  input.source  (close,              ' 𝐄𝐱𝐭𝐞𝐫𝐧𝐚𝐥 𝐒𝐨𝐮𝐫𝐜𝐞  ',        group=groupset,  inline='esrc',  tooltip=TText_source_)
bullDeal                  =  input.bool      (true,                ' Long  Deals    ',            group=groupset,  inline='deal')
bearDeal                  =  input.bool      (true,                ' Short  Deals',                  group=groupset,  inline='deal')
waitEndDeal            =  input.bool      (true,                ' Wait  End  Deal ',            group=groupset,  inline='ord1')
reversesignal        =  input.bool      (false,              ' Reverse  Deals',              group=groupset,  inline='ord1',  tooltip=TTreversesignal)
reEntryDeal            =  input.bool      (false,              ' ReEntry  Deal  ',            group=groupset,  inline='ord2')
reOpenDeal              =  input.bool      (false,              ' ReOpen  Deal',                  group=groupset,  inline='ord2',  tooltip=TTreOpenDeal)
tpType                      =  input.string  ('R:R',              ' 𝐓𝐚𝐤𝐞 𝐏𝐫𝐨𝐟𝐢𝐭�',                group=groupset,  inline='type',  options=['None',  'FIXED  ％',  'FIXED  ＄',  'ATR',  'R:R',  'HH  /  LL'])
slType                      =  input.string  ('ATR',              ' 𝐒𝐭𝐨𝐩 𝐋𝐨𝐬𝐬 ',                    group=groupset,  inline='type',  options=['None',  'FIXED  ％',  'FIXED  ＄',  'TRAILING',  'FAST  TRAIL',  'ATR',  'ATR  TRAIL',  'LO  /  HI',  'MA'],  tooltip=TTslType)
grouptakes              =  '                    ➤ Ｔａｋｅ Ｐｒｏｆｉｔ Ｌｅｖｅｌｓ'
ontake1                    =  input.bool      (false,              '🇹🇵¹',                                    group=grouptakes,  inline='take')
qtake1                      =  input.int  (20,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
ontake2=input.bool(false,'🇹🇵²',group=grouptakes,inline='take')
qtake2=input.int(20,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
ontake3=input.bool(false,'🇹🇵³',group=grouptakes,inline='take')
qtake3=input.int(50,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
ontake4=input.bool(false,'🇹🇵⁴',group=grouptakes,inline='take')
qtake4=input.int(25,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
ontake5=input.bool(false,'🇹🇵⁵ ',group=grouptakes,inline='take')
qtake5=input.int(25,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
onstop0=input.bool(false,'🇸🇱⁰ ',group=grouptakes,inline='take')
qstop0=input.int(30,'�',group=grouptakes,inline='take',minval=1,step=5,maxval=100)
//ExampleConnector
//Signal=buy?+1:sell?-1:0
//plot(Signal,"🔌Connector🔌",display=display.none)
//——————VariablesInitialisation
ext_source=nz(ext_source_)
bull=ext_source==+1//+1isbullsignal
bear=ext_source==-1//-1isbearsignal
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
//—————————————————————————————————————————————————DATERANGE———————————————————————————————————————————————————————————\\//Credit@jason5480
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
grouptime='➤ ＴＩＭＥ  ＦＩＬＴＥＲＳ'
src_timezone=input.string('Exchange','TimezonesSrc->Dst',group=grouptime,inline='Timezone',options=['Exchange','UTC','America/Los_Angeles','America/Phoenix','America/Vancouver','America/El_Salvador','America/Bogota','America/Chicago','America/New_York','America/Toronto','America/Argentina/Buenos_Aires','America/Sao_Paulo','Etc/UTC','Europe/London','Europe/Berlin','Europe/Madrid','Europe/Paris','Europe/Warsaw','Europe/Athens','Europe/Moscow','Asia/Tehran','Asia/Dubai','Asia/Ashkhabad','Asia/Kolkata','Asia/Almaty','Asia/Bangkok','Asia/Hong_Kong','Asia/Shanghai','Asia/Singapore','Asia/Taipei','Asia/Seoul','Asia/Tokyo','Australia/ACT','Australia/Adelaide','Australia/Brisbane','Australia/Sydney','Pacific/Auckland','Pacific/Fakaofo','Pacific/Chatham','Pacific/Honolulu'])
dst_timezone=input.string('Exchange','->',group=grouptime,inline='Timezone',options=['Exchange','UTC','America/Los_Angeles','America/Phoenix','America/Vancouver','America/El_Salvador','America/Bogota','America/Chicago','America/New_York','America/Toronto','America/Argentina/Buenos_Aires','America/Sao_Paulo','Etc/UTC','Europe/London','Europe/Berlin','Europe/Madrid','Europe/Paris','Europe/Warsaw','Europe/Athens','Europe/Moscow','Asia/Tehran','Asia/Dubai','Asia/Ashkhabad','Asia/Kolkata','Asia/Almaty','Asia/Bangkok','Asia/Hong_Kong','Asia/Shanghai','Asia/Singapore','Asia/Taipei','Asia/Seoul','Asia/Tokyo','Australia/ACT','Australia/Adelaide','Australia/Brisbane','Australia/Sydney','Pacific/Auckland','Pacific/Fakaofo','Pacific/Chatham','Pacific/Honolulu'],tooltip='TheSrcisthetimezonetobeusedasareferenceforthetimesettings.TheDstisthetimezonetoconvertinto(e.g.thecharslPrice\'timezone)')
usefromDate=input.bool(true,'SrartFrom ',group=grouptime,inline='FromDate')
fromDate=input.time(timestamp('01Jan202000:00'),'',group=grouptime,inline='FromDate')
usetoDate=input.bool(false,'EndTo       ',group=grouptime,inline='ToDate')
toDate=input.time(timestamp('01Jul202500:00'),'',group=grouptime,inline='ToDate')
useSessionDay=input.bool(false,'SessionDays',group=grouptime,inline='SessionDays')
mon=input.bool(true,'Mon',group=grouptime,inline='SessionDays')
tue=input.bool(true,'Tue',group=grouptime,inline='SessionDays')
wed=input.bool(true,'Wed',group=grouptime,inline='SessionDays')
thu=input.bool(true,'Thu',group=grouptime,inline='SessionDays')
fri=input.bool(true,'Fri',group=grouptime,inline='SessionDays')
sat=input.bool(false,'Sat',group=grouptime,inline='SessionDays')
sun=input.bool(false,'Sun',group=grouptime,inline='SessionDays')
useSessionStart=input.bool(false,'SessionStart',group=grouptime,inline='SessionStart')
sessionStartHour=input.int(12,'',group=grouptime,inline='SessionStart',minval=0,maxval=23,step=1)
sessionStartMinute=input.int(00,':',group=grouptime,inline='SessionStart',minval=0,maxval=59,step=1,tooltip='Starttimeofthesession.')
useSessionEnd=input.bool(false,'SessionEnd ',group=grouptime,inline='SessionEnd')
sessionEndHour=input.int(20,'',group=grouptime,inline='SessionEnd',minval=0,maxval=23,step=1)
sessionEndMinute=input.int(00,':',group=grouptime,inline='SessionEnd',minval=0,maxval=59,step=1,tooltip='Endtimeofthesession.')
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
ex_timezone(simplestringtz)=>
switchtz
'Exchange'=>syminfo.timezone
=>tz
if_in_date_range(simpleboolusefromDate,simpleintfromDate,simpleboolusetoDate,simpleinttoDate,simplestringsrc_timezone='Exchange',simplestringdst_timezone='Exchange',intt=time_close)=>
varsrc_tz=ex_timezone(src_timezone)
vardst_tz=ex_timezone(dst_timezone)
varfromDateTz=timestamp(src_tz,year(fromDate,dst_tz),month(fromDate,dst_tz),dayofmonth(fromDate,dst_tz),hour(fromDate,dst_tz),minute(fromDate,dst_tz),second(fromDate,dst_tz))
vartoDateTz=timestamp(src_tz,year(toDate,dst_tz),month(toDate,dst_tz),dayofmonth(toDate,dst_tz),hour(toDate,dst_tz),minute(toDate,dst_tz),second(toDate,dst_tz))
(usefromDate?t>=fromDateTz:true)and(usetoDate?t<toDateTz:true)
if_in_session(simplebooluseSessionStart,simpleintsessionStartHour,simpleintsessionStartMinute,simplebooluseSessionEnd,simpleintsessionEndHour,simpleintsessionEndMinute,simplebooluseSessionDay=false,simpleboolmon=true,simplebooltue=true,simpleboolwed=true,simpleboolthu=true,simpleboolfri=true,simpleboolsat=false,simpleboolsun=false,simplestringsrc_timezone='Exchange',simplestringdst_timezone='Exchange',intt=time_close)=>
varone_day=86400000
varutc_tz='UTC'
varsrc_tz=ex_timezone(src_timezone)
vardst_tz=ex_timezone(dst_timezone)
start_hr=sessionStartHour+(hour(t,dst_tz)-hour(t,src_tz))
start_min=sessionStartMinute+(minute(t,dst_tz)-minute(t,src_tz))
end_hr=sessionEndHour+(hour(t,dst_tz)-hour(t,src_tz))
end_min=sessionEndMinute+(minute(t,dst_tz)-minute(t,src_tz))
time_start_session=timestamp(dst_tz,year(t,src_tz),month(t,src_tz),dayofmonth(t,src_tz),start_hr,start_min,second(t,src_tz))
time_end_session=timestamp(dst_tz,year(t,src_tz),month(t,src_tz),dayofmonth(t,src_tz),end_hr,end_min,second(t,src_tz))
varboolisOvernight=time_start_session>=time_end_session
//inovernightsessionsincreaseendtimebyoneday
if(useSessionStartanduseSessionEndandisOvernight)
time_end_session:=time_end_session+one_day
isSessionDay=switchdayofweek(t,src_tz)
dayofweek.monday=>mon
dayofweek.tuesday=>tue
dayofweek.wednesday=>wed
dayofweek.thursday=>thu
dayofweek.friday=>fri
dayofweek.saturday=>sat
dayofweek.sunday=>sun
=>false
(useSessionDay?isSessionDay:true)and(useSessionStart?t>=time_start_session:true)and(useSessionEnd?t<time_end_session:true)
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
booldateFilterApproval=if_in_date_range(usefromDate,fromDate,usetoDate,toDate,src_timezone,dst_timezone)
boolsessionFilterApproval=if_in_session(useSessionStart,sessionStartHour,sessionStartMinute,useSessionEnd,sessionEndHour,sessionEndMinute,useSessionDay,mon,tue,wed,thu,fri,sat,sun,src_timezone,dst_timezone)
booltimeFilterApproval=dateFilterApprovalandsessionFilterApproval
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
//—————————————————————————————————————————————SignalFilters———————————————————————————————————————————————————————————\\//Credit@pAulseperformance
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
groupsignal='➤ ＳＩＧＮＡＬ  ＦＩＬＴＥＲＳ'
FilterType1=input.bool(false,'1.ADX',group=groupsignal,inline='FT1')
FilterType1Len=input.int(17,'',group=groupsignal,inline='FT1',minval=1)
FilterType1Smt=input.int(14,'',group=groupsignal,inline='FT1',minval=1,maxval=50)
FilterType1Tresh=input.int(20,'',group=groupsignal,inline='FT1',minval=1,maxval=50,tooltip='ADXLenght,Smooth,Level.\nTradeIfADX<Level')
FilterType2=input.bool(false,'2.MACD',group=groupsignal,inline='FT2')
FilterType2Len1=input.int(12,'',group=groupsignal,inline='FT2')
FilterType2Len2=input.int(26,'',group=groupsignal,inline='FT2')
FilterType2Len3=input.int(9,'',group=groupsignal,inline='FT2',tooltip='FastLen,SlowLen,Smooth.\nLongFilter:MACD>0\nShortFilter:MACD<0')
FilterType3=input.bool(false,'3.Bardirection=Tradedirection',group=groupsignal,tooltip='Longfilter:close>open\nShortFilter:close<open')
FilterType4=input.bool(false,'4.RisingVolume',group=groupsignal,tooltip='LongFilter:VolumeIncreasing\nShortFilter:VolumeDecreasing')
FilterType5=input.bool(false,'5.Rising/FallingMA',group=groupsignal,inline='FT5',tooltip='LongFilter:SMAisRising\nShortFilter:SMAFalling\nRising/Falling-ForNBars')
FilterType5Len=input.int(50,'Length',group=groupsignal,inline='FT5',minval=2)
FilterType5Bars=input.int(1,'Bars',group=groupsignal,inline='FT5',minval=1)
FilterType6=input.bool(false,'6.High/LowFilter',group=groupsignal,inline='FT6')
FilterType6Bars=input.int(10,'Lookback',group=groupsignal,inline='FT6',tooltip='Iftruethenthesignalbarmustbethehighest/lovestbaroverXbars')
FilterType7=input.bool(false,'7.Maximumclosechange(％)allowedonentry',group=groupsignal,inline='FT7')
FilterType7IncPct=input.float(10.0,'',group=groupsignal,inline='FT7',minval=0.0,step=0.5)
FilterType8=input.bool(false,'8.Minimumclosechange(％)allowedonentry',group=groupsignal,inline='FT8')
FilterType8IncPct=input.float(1.0,'',group=groupsignal,inline='FT8',minval=0.0,step=0.5)
FilterType9=input.bool(false,'9.RSIOS/OB',group=groupsignal,inline='FT9')
FilterType9Len=input.int(20,'',group=groupsignal,inline='FT9',minval=2)
FilterType9OS=input.int(25,'',group=groupsignal,inline='FT9',minval=0,maxval=100)
FilterType9OB=input.int(75,'',group=groupsignal,inline='FT9',minval=0,maxval=100,tooltip='RSILength,OSLevel,OBLevel\nLong=RSI<OB\nShort=RSI>OS')
FilterType10=input.bool(false,'10.MA',group=groupsignal,inline='FT10')
FilterType10MAType=input.string('SMA','',group=groupsignal,inline='FT10',options=['ALMA','EMA','HMA','RMA','SMA','VWMA','WMA'])
FilterType10Len=input.int(200,'',group=groupsignal,inline='FT10',minval=1,tooltip='MAType,MASource,MALength\nLong=close>MA\nShort=close<MA')
//——————Filter1:ADX
[dip,dim,adx]=ta.dmi(FilterType1Len,FilterType1Smt)
Filter1Long=FilterType1?adx<FilterType1Tresh:true
Filter1Short=Filter1Long
//——————Filter2:MACDHist
_macdLine=FilterType2?nz(MA('EMA',close,FilterType2Len1)-MA('EMA',close,FilterType2Len2)):0.
_macdSignal=FilterType2?nz(MA('EMA',_macdLine,FilterType2Len3)):0.
_macdHist=FilterType2?_macdLine-_macdSignal:0.
Filter2Long=FilterType2?_macdHist>0:true
Filter2Short=FilterType2?_macdHist<0:true
//——————Filter3:Bardirection
Filter3Long=FilterType3?close>open:true
Filter3Short=FilterType3?close<open:true
//——————Filter4:Risingvolume
Filter4Long=FilterType4?ta.rising(volume,1):true
Filter4Short=Filter4Long
//——————Filter5:Rising/FallingMA
Filter5Ma=FilterType5?nz(MA('SMA',close,FilterType5Len)):0
Filter5Long=FilterType5?ta.rising(Filter5Ma,FilterType5Bars):true
Filter5Short=FilterType5?ta.falling(Filter5Ma,FilterType5Bars):true
//——————Filter6:Checkhigh&closefilter
Filter6Long=FilterType6?high>=ta.highest(high,FilterType6Bars):true
Filter6Short=FilterType6?low<=ta.lowest(low,FilterType6Bars):true
//——————Filter7:Maximumdeltawithpreviouscloseallowedatentry
Filter7Long=FilterType7?close<close[1]*(1+FilterType7IncPct/100):true
Filter7Short=FilterType7?close>close[1]*(1-FilterType7IncPct/100):true
//——————Filter8:Minimumdeltawithpreviouscloseallowedatentry
Filter8Long=FilterType8?close>close[1]*(1+FilterType8IncPct/100):true
Filter8Short=FilterType8?close<close[1]*(1-FilterType8IncPct/100):true
//——————Filter9:RSIOS/OB
Rsi=FilterType9?ta.rsi(close,FilterType9Len):0
RsiOB=Rsi>FilterType9OB
RsiOS=Rsi<FilterType9OS
Filter9Long=FilterType9?notRsiOB:true
Filter9Short=FilterType9?notRsiOS:true
//——————Filter10:MovingAverage
Filter10Ma=FilterType10?MA(FilterType10MAType,close,FilterType10Len):0.
Filter10Long=FilterType10?close>Filter10Ma:true
Filter10Short=FilterType10?close<Filter10Ma:true
//——————AssembleFilters
FilterLongOK=Filter1LongandFilter2LongandFilter3LongandFilter4LongandFilter5Long
andFilter6LongandFilter7LongandFilter8LongandFilter9LongandFilter10Long
FilterShortOK=Filter1ShortandFilter2ShortandFilter3ShortandFilter4ShortandFilter5Short
andFilter6ShortandFilter7ShortandFilter8ShortandFilter9ShortandFilter10Short
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
//—————————————————————————————————————————————————RiskManagment———————————————————————————————————————————————————————\\//Credit@Daveatt
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
grouprisk='➤ ＲＩＳＫ  ＭＡＮＡＧＥＭＥＮＴ'
setmaxLosingStreak=input.bool(false,'',group=grouprisk,inline='1')
maxLosingStreak=input.int(15,'LossStreak   ',group=grouprisk,inline='1',minval=1)
setmaxWinStreak=input.bool(false,'',group=grouprisk,inline='1')
maxWinStreak=input.int(15,'WinStreak   ',group=grouprisk,inline='1',minval=1,tooltip='𝐋𝐨𝐬𝐬 𝐒𝐭𝐫𝐞𝐚𝐤 ➖SetMaxnumberofconsecutivelosstrades.\n𝐖𝐢𝐧 𝐒𝐭𝐫𝐞𝐚𝐤 ➖MaxWinningStreakLength.')
setmaxLosingDaysStreak=input.bool(false,'',group=grouprisk,inline='2')
maxLosingDaysStreak=input.int(3,'RowLossInDay',group=grouprisk,inline='2',minval=1)
setMaxDrawdown=input.bool(false,'',group=grouprisk,inline='2')
maxPercDd=input.int(10,'DrawDown％',group=grouprisk,inline='2',minval=1,maxval=100,tooltip='𝐑𝐨𝐰 𝐋𝐨𝐬𝐬 𝐈𝐧𝐃𝐚𝐲 ➖Maxofconsecutivedayswithalossinarow.\n𝐃𝐫𝐚𝐰𝐃𝐨𝐰𝐧％ ➖MaxDrawDown(in%ofstrategyequity).')
setMaxIntradayLoss=input.bool(false,'',group=grouprisk,inline='3')
maxIntradayLoss=input.int(3,'InDayLoss％ ',group=grouprisk,inline='3',minval=1,maxval=100)
setNumberDailyTrades=input.bool(false,'',group=grouprisk,inline='3')
maxDailyTrades=input.int(10,'DailyTrades  ',group=grouprisk,inline='3',minval=1,maxval=100,tooltip='𝐈𝐧𝐃𝐚𝐲 𝐋𝐨𝐬𝐬 ％ ➖SetMaxIntradayLoss.\n𝐃𝐚𝐢𝐥𝐲 𝐓𝐫𝐚𝐝𝐞𝐬 ➖LimitthenumberofMAXtradesperday.')
setNumberWeeklyTrades=input.bool(false,'',group=grouprisk,inline='4')
maxWeeklyTrades=input.int(50,'WeeklyTrades',group=grouprisk,inline='4',minval=1,maxval=100,tooltip='𝐖𝐞𝐞𝐤𝐥𝐲 𝐓𝐫𝐚𝐝𝐞𝐬 ➖LimitthenumberofMAXtradesperweek.')
QTYMethod=input.string('EQUITY','     OrderSize',group=grouprisk,inline='',options=['NONE','EQUITY','SIZE','CONTRACTS'])
useNetProfit=input.bool(true,'UseNetProfit',group=grouprisk,inline='',tooltip='𝐔𝐬𝐞 𝐍𝐞𝐭 𝐏𝐫𝐨𝐟𝐢𝐭 ➖On/Offtheuseofprofitinthefollowingtrades.*OnlyworksifthetypeisEQUITY')
riskPerc=input.int(10,'​🇪​​🇶​​🇺​​🇮​​🇹​​🇾​',group=grouprisk,inline='.',minval=1,maxval=100)
riskSize=input.int(1000,'​🇸​​🇮​​🇿​​🇪',group=grouprisk,inline='.',minval=1)
riskCntr=input.int(1,'​🇨​​🇴​​🇳​​🇹​​🇷​​🇦​​🇨​​🇹​​🇸​',group=grouprisk,inline='.',minval=1,tooltip='𝐎𝐫𝐝𝐞𝐫𝐒𝐢𝐳𝐞:\n𝐍𝐎𝐍𝐄 ➖UsethedefaultpositionsizesettingsinTab"Properties".\n𝐄𝐐𝐔𝐈𝐓𝐘 ➖％pertradefromtheinitialcapital.\n𝐒𝐈𝐙𝐄 ➖Fixedsizeamountoftrade.\n𝐂𝐎𝐍𝐓𝐑𝐀𝐂𝐓𝐒 ➖Thefixedamountofthedealincontracts.\n')
//——————OrderSize
eqty=switchQTYMethod
'NONE'=>na
'EQUITY'=>riskPerc/close
'SIZE'=>riskSize/close
'CONTRACTS'=>riskCntr
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
//——————IntradayLoss％
condintradayloss=setMaxIntradayLoss?maxIntradayLoss:100
strategy.risk.max_intraday_loss(value=condintradayloss,type=strategy.percent_of_equity)
//——————MaxDrawdown％
condmaxdrawdown=setMaxDrawdown?maxPercDd:100
strategy.risk.max_drawdown(value=condmaxdrawdown,type=strategy.percent_of_equity)
//——————Dailytradescalculation
tradesIntradayCount=setNumberDailyTrades?maxDailyTrades:1000
strategy.risk.max_intraday_filled_orders(count=tradesIntradayCount)
//——————Weeklytradescalculation
tradesLastWeek=0
tradesLastWeek:=dayofweek==dayofweek.mondayanddayofweek!=dayofweek[1]?strategy.closedtrades[1]+strategy.opentrades[1]:tradesLastWeek[1]
//——————Calculatenumberoftradesthisweek
weeklyTrades=strategy.closedtrades+strategy.opentrades-tradesLastWeek
okToTradeWeekly=setNumberWeeklyTrades?weeklyTrades<maxWeeklyTrades:true
//——————Consecutivelossdaysinarow
countConsLossDays=setmaxLosingDaysStreak?maxLosingDaysStreak:1000
strategy.risk.max_cons_loss_days(countConsLossDays)
//——————Calculatethetotallosingstreaks
newLoss=strategy.losstrades>strategy.losstrades[1]andstrategy.wintrades==strategy.wintrades[1]andstrategy.eventrades==strategy.eventrades[1]
//——————Determinecurrentlosingstreaklength
streakLossLen=0
streakLossLen:=newLoss?nz(streakLossLen[1])+1:strategy.wintrades>strategy.wintrades[1]orstrategy.eventrades>strategy.eventrades[1]?0:nz(streakLossLen[1])
//——————Checkiflosingstreakisundermaxallowed
okToTradeLossStreak=setmaxLosingStreak?streakLossLen<maxLosingStreak:true
//——————Calculatethetotalwinningstreaks
newWin=strategy.wintrades>strategy.wintrades[1]andstrategy.losstrades==strategy.losstrades[1]andstrategy.eventrades==strategy.eventrades[1]
//——————Figureoutcurrentwinningstreaklength
streakWinLen=0
streakWinLen:=newWin?nz(streakWinLen[1])+1:strategy.losstrades>strategy.losstrades[1]orstrategy.eventrades>strategy.eventrades[1]?0:nz(streakWinLen[1])
//——————Checkifwinningstreakisundermaxallowed
okToTradeWinStreak=setmaxWinStreak?streakWinLen<maxWinStreak:true
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
//—————————————————————————————————————————————————STRATEGY—————————————————————————————————————————————————————————————\\
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
percentTP=input.float(4.5,' Profit％    ',group=groupset,inline='fix',minval=0.1,step=0.1)
percentSL=input.float(1.5,' Stop％  ',group=groupset,inline='fix',minval=0.1,step=0.1)
moneyTP=input.float(333,' Profit＄    ',group=groupset,inline='mon',minval=1,step=5)
moneySL=input.float(100,' Stop＄  ',group=groupset,inline='mon',minval=1,step=5)
ATRLen=input.int(40,' ATRPeriod  ',group=groupset,inline='atr',minval=1,step=1)
ATRMult=input.float(4,' Multiplier',group=groupset,inline='atr',minval=0.1,step=0.1)
trailPerc=input.float(3,' Trailing％  ',group=groupset,inline='trl',minval=0.1,step=0.1)
riskReward=input.float(2,' R:R    1:',group=groupset,inline='trl',minval=0.5,step=0.1)
fixedRR=input.bool(true,'FixedRR',group=groupset,inline='trl',tooltip='𝐅𝐢𝐱𝐞𝐝 𝗥:𝗥 ➖IfthestoplossisDynamic(TrailingorMA)thenR:RcanalsobemadeDynamic')
HHLL=input.int(200,' HH/LL   ',group=groupset,inline='hls',minval=1,step=5)
LoHi=input.int(5,'  LO/HI ',group=groupset,inline='hls',minval=1,step=1)
addPerc=input.bool(false,'Add％',group=groupset,inline='hls',tooltip='𝐀𝐝𝐝 ％ ➖Iftrue,thenwiththe"𝗦𝘁𝗼𝗽 ％"parameteryoucanaddpercentagestoanyofthecurrentSL.\nCanbeespeciallyusefulwhenusingStop-𝗔𝗧𝗥or𝗠𝗔or𝗟𝗢/𝗛𝗜.\nForexamplewith𝗟𝗢/𝗛𝗜toputastopforthelastHigh/Lowandadd0.5%additionalStoploss')
maStopType=input.string('SMA',' MAStop',group=groupset,inline='mas',options=['ALMA','EMA','HMA','RMA','SMA','VWMA','WMA'])
maStopLen=input.int(15,' Len',group=groupset,inline='mas',minval=1,step=2)
maPerc=input.float(1.5,' Step',group=groupset,inline='mas',minval=0,step=0.1,tooltip='𝐌𝐀 𝐒𝐭𝐨𝐩 ➖allowstochoosewhichMAtouse.\n𝐋𝐞𝐧 ➖LengthofchosenMA.\n𝐒𝐭𝐞𝐩 ➖％stepofchangeMA.Step=0willusetheselectedMAwithoutchanges.\nWARNING:When𝐀𝐝𝐝％ison,theMAcalculationchanges..')
bullcolor=input.color(#00bbd49a,'Colors: FG',group=grouptakes,inline='col')
bearcolor=input.color(#c2185c9a,'',group=grouptakes,inline='col')
bullcolorb=input.color(#00bbd426,'BG',group=grouptakes,inline='col')
bearcolorb=input.color(#c2185c27,'',group=grouptakes,inline='col')
TipLvl=input.string('——⤴—⤴—⤴','𝐓𝐈𝐏 𝐅𝐨𝐫 𝐓𝐏',group=grouptakes,inline='col',tooltip='HereyoucansetupintermediateTakesProfit.\nIneachlinenexttotheTP/SLactivation,youspecifywhat%ofthecurrentpositionyouwanttoclose.\nForexample,ifthereisacheckmarknexttoTP3anditsvalue=50,thenatthislevel50％ofthesizeofthecurrentpositionwillbeclosed.')
slNumber=input.int(3,' SL0Position',group=grouptakes,inline='pos',minval=1,maxval=5)
ontpBE=input.bool(false,'',group=grouptakes,inline='pos')
tpBEnumber=input.int(3,'BreakevenonTP',group=grouptakes,inline='pos',minval=1,maxval=5,tooltip='𝐒𝐋 𝟎 𝐏𝐨𝐬𝐢𝐭𝐢𝐨𝐧 ➖ChangesthepositionoftheintermediateStopLoss.\nThevalue=3-themiddle.\n𝐁𝐫𝐞𝐚𝐤𝐞𝐯𝐞𝐧 𝐨𝐧 𝐓𝐏 ➖IftrueSetStopLosstoBreakevenafterthespecifiedTakeProfitisreached.')
barCoolDwn=input.int(0,' CoolDown#Bars',group=grouptakes,inline='',minval=0,tooltip='DoNotopenanewpositionuntil#barshavepassedsincethelasttrade.\nValue=0-disablesthefunction.')
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
//——————Tradevariables
entry=strategy.position_avg_price
sizePos=strategy.position_size
inLong=sizePos>0
inShort=sizePos<0
inTrade=inLongorinShort
inPos=(inLongandnotinShort[1])or(inShortandnotinLong[1])
varID='TradeID'
vartpPrice=float(na)
varslPrice=float(na)
//——————Signal
bull:=ext_source_==close?ta.crossover(ta.ema(close,50),ta.ema(close,200)):bull
bear:=ext_source_==close?ta.crossunder(ta.ema(close,50),ta.ema(close,200)):bear
bull:=reversesignal?bear:bull
bear:=reversesignal?bull:bear
//——————Entrysolutions
direction=0
directionL=bulland(nz(direction[1])==0ornz(direction[1])==-1)
directionS=bearand(nz(direction[1])==0ornz(direction[1])==+1)
direction:=directionL?+1:directionS?-1:(reEntryDeal?direction[1]:direction[0])
checkCoolDwn=barCoolDwn>0?notinTrade[barCoolDwn]:true
OkToTrade=timeFilterApprovalandokToTradeLossStreakandokToTradeWinStreakandcheckCoolDwn
goLong=(waitEndDeal?notinTradeanddirection==+1:direction==+1)andbullDealandOkToTradeandFilterLongOK
goShort=(waitEndDeal?notinTradeanddirection==-1:direction==-1)andbearDealandOkToTradeandFilterShortOK
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
DynamicStops=(slType=='TRAILING'orslType=='FASTTRAIL'orslType=='ATRTRAIL'orslType=='MA')
//——————FixedSL/TP
iftpType=='FIXED％'
tpPrice:=inLongandnotinTrade[1]?entry*(1+percentTP/100):inShortandnotinTrade[1]?entry*(1-percentTP/100):tpPrice
ifslType=='FIXED％'
slPrice:=inLongandnotinTrade[1]?entry*(1-percentSL/100):inShortandnotinTrade[1]?entry*(1+percentSL/100):slPrice
//——————MoneySL/TP
iftpType=='FIXED＄'
tpPrice:=inLongandnotinTrade[1]?entry+(moneyTP/math.abs(sizePos)):inShortandnotinTrade[1]?entry-(moneyTP/math.abs(sizePos)):tpPrice
ifslType=='FIXED＄'
slPrice:=inLongandnotinTrade[1]?entry-(moneySL/math.abs(sizePos)):inShortandnotinTrade[1]?entry+(moneySL/math.abs(sizePos)):slPrice
//——————TrailingStop
ifslType=='TRAILING'
StopL=0.,StopS=0.
StopL:=inLong?math.max(close*(1-trailPerc/100),StopL[1]):0
StopS:=inShort?math.min(close*(1+trailPerc/100),StopS[1]):999999
slPrice:=inLong?StopL:inShort?StopS:slPrice
//——————FastTrailingStop
ifslType=='FASTTRAIL'
varstop=float(na)
stop:=inLongandnotinTrade[1]?entry*(1-trailPerc/100):inShortandnotinTrade[1]?entry*(1+trailPerc/100):stop
stop:=inLongandclose>close[1]?stop+(close-close[1]):inShortandclose<close[1]?stop+(close-close[1]):stop
slPrice:=stop
//——————ATRFixed
StopATR=ta.atr(ATRLen)*ATRMult
iftpType=='ATR'
tpPrice:=inLongandnotinTrade[1]?entry+StopATR:inShortandnotinTrade[1]?entry-StopATR:tpPrice
ifslType=='ATR'
slPrice:=inLongandnotinTrade[1]?entry-StopATR:inShortandnotinTrade[1]?entry+StopATR:slPrice
//——————ATRTrailStop
ifslType=='ATRTRAIL'
StopL=0.,StopS=0.
StopL:=inLong?math.max(close-StopATR,StopL[1]):0
StopS:=inShort?math.min(close+StopATR,StopS[1]):999999
slPrice:=inLong?StopL:inShort?StopS:slPrice
//——————LO/HIStop
ifslType=='LO/HI'
HiStop=ta.highest(high,LoHi)
LoStop=ta.lowest(low,LoHi)
slPrice:=inLongandnotinTrade[1]?LoStop:inShortandnotinTrade[1]?HiStop:slPrice
//——————HH/LLTake
iftpType=='HH/LL'
HiStop=ta.highest(high,HHLL)
LoStop=ta.lowest(low,HHLL)
tpPrice:=inLongandnotinTrade[1]?HiStop:inShortandnotinTrade[1]?LoStop:tpPrice
//——————MA'sStops
ifslType=='MA'
maSType=MA(maStopType,close,maStopLen)
Stop=maSType*(maPerc/100)
slPrice:=inLong?math.max(nz(slPrice[1],0),maSType-Stop):inShort?math.min(nz(slPrice[1],999999),maSType+Stop):na
//——————RiskRewardTake
iftpType=='R:R'
check=fixedRR?notinTrade[1]:true
tpPrice:=inLongandcheck?entry+(entry-slPrice)*riskReward:inShortandcheck?entry-(slPrice-entry)*riskReward:tpPrice
//——————AddPercentstoSL
ifaddPerc
check=DynamicStops?true:notinTrade[1]
slPrice:=inLongandcheck?slPrice*(1-percentSL/100):inShortandcheck?slPrice*(1+percentSL/100):slPrice
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
//——————TPSL's
TypeStop=tpType!='None'orslType=='FIXED％'orslType=='FIXED＄'orslType=='ATR'orslType=='LO/HI'
BuildLeveles(take,nTake)=>//CreatingIntermediateLevelsoftheSL/TP-byshiftingthecurrentTP/SLtotheentrylevel
nTakes=6
varoffset=float(na)
offset:=notinPos[1]?(entry-take):offset
xentry=take+offset
levels=array.new_float()
fori=1tonTakes-1
array.push(levels,xentry+(take-xentry)*i/(nTakes))
result=nTake>=0andnTake<=nTakes?array.get(levels,nTake):na
CheckLevels(lvl,isTake)=>//CheckiftheSL/TPisreached
varfloatlevel=na
ifisTakeand((inLongandhigh>=lvl)or(inShortandlow<=lvl))
level:=entry
ifnotisTakeand((inLongandlow<=lvl)or(inShortandhigh>=lvl))
level:=entry
ifnotinTrade
level:=na
level
//——————GetandCheckLevels
stop0=tpType!='None'?BuildLeveles(slPrice,slNumber-1):slPrice,checkStop0=TypeStop?CheckLevels(stop0,false):CheckLevels(stop0,true)
take1=BuildLeveles(TypeStop?tpPrice:slPrice,0),checkTake1=TypeStop?CheckLevels(take1,true):CheckLevels(take1,false)
take2=BuildLeveles(TypeStop?tpPrice:slPrice,1),checkTake2=TypeStop?CheckLevels(take2,true):CheckLevels(take2,false)
take3=BuildLeveles(TypeStop?tpPrice:slPrice,2),checkTake3=TypeStop?CheckLevels(take3,true):CheckLevels(take3,false)
take4=BuildLeveles(TypeStop?tpPrice:slPrice,3),checkTake4=TypeStop?CheckLevels(take4,true):CheckLevels(take4,false)
take5=BuildLeveles(TypeStop?tpPrice:slPrice,4),checkTake5=TypeStop?CheckLevels(take5,true):CheckLevels(take5,false)
//——————MoveStoptoBreakeven
slbecheck=(tpBEnumber==1andontake1)or(tpBEnumber==2andontake2)or(tpBEnumber==3andontake3)or(tpBEnumber==4andontake4)or(tpBEnumber==5andontake5)
ifontpBEandslbecheckandnotDynamicStops
slbe=TypeStop?CheckLevels(BuildLeveles(tpPrice,tpBEnumber-1),true):CheckLevels(BuildLeveles(slPrice,tpBEnumber-1),false)
slPrice:=slbe>0?slbe:slPrice
stop0:=slPrice==entry?slPrice:stop0
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
//——————Entry's
eqty(qty)=>QTYMethod=='EQUITY'?qty/100*(strategy.initial_capital+(useNetProfit?strategy.netprofit:0)):QTYMethod=='SIZE'?qty/syminfo.pointvalue:qty
ifgoLong
ID:='Long'
ifreOpenDealandinLongandgoLong
strategy.close(ID,comment='reOpen')
strategy.entry(ID,strategy.long,qty=eqty(eqty),comment=ID,alert_message=ID+'Entry')
ifgoShort
ID:='Short'
ifreOpenDealandinShortandgoShort
strategy.close(ID,comment='reOpen')
strategy.entry(ID,strategy.short,qty=eqty(eqty),comment=ID,alert_message=ID+'Entry')
//——————Exit's
qty(perc)=>math.abs(sizePos*perc/100)
ifinTrade
strategy.exit('End_0',onstop0?ID:'na',qty=qty(qstop0),limit=tpPrice,stop=stop0,comment_profit='TP0',comment_loss='SL0',alert_message=ID+'SL/TP0Trigger')
strategy.exit('End_1',ontake1?ID:'na',qty=qty(qtake1),limit=TypeStop?take1:tpPrice,stop=TypeStop?slPrice:take1,comment_profit='TP1',comment_loss='SL1',alert_message=ID+'SL/TP1Trigger')
strategy.exit('End_2',ontake2?ID:'na',qty=qty(qtake2),limit=TypeStop?take2:tpPrice,stop=TypeStop?slPrice:take2,comment_profit='TP2',comment_loss='SL2',alert_message=ID+'SL/TP2Trigger')
strategy.exit('End_3',ontake3?ID:'na',qty=qty(qtake3),limit=TypeStop?take3:tpPrice,stop=TypeStop?slPrice:take3,comment_profit='TP3',comment_loss='SL3',alert_message=ID+'SL/TP3Trigger')
strategy.exit('End_4',ontake4?ID:'na',qty=qty(qtake4),limit=TypeStop?take4:tpPrice,stop=TypeStop?slPrice:take4,comment_profit='TP4',comment_loss='SL4',alert_message=ID+'SL/TP4Trigger')
strategy.exit('End_5',ontake5?ID:'na',qty=qty(qtake5),limit=TypeStop?take5:tpPrice,stop=TypeStop?slPrice:take5,comment_profit='TP5',comment_loss='SL5',alert_message=ID+'SL/TP5Trigger')
strategy.exit('End_6',ID,limit=tpPrice,stop=slPrice,comment_profit='TPX',comment_loss='SLX',alert_message=ID+'SL/TPXTrigger')
//========================================================================================================================
//PlottingandDebugging
//========================================================================================================================
plotColx=inLong?bullcolor:inShort?bearcolor:na
plotColy=inLong?bullcolorb:inShort?bearcolorb:na
tpcolor=tpType!='None'?bullcolor:plotColx
tp=plot(inPos?tpPrice:na,'Take',color=tpType!='None'?bullcolor:plotColx,style=plot.style_linebr,editable=false)
sl=plot(inPos?slPrice:na,'Stop',color=tpType!='None'?bearcolor:plotColx,style=plot.style_linebr,editable=false)
en=plot(TypeStop?(inLongandslPrice>entryorinShortandslPrice<entry?slPrice:entry):inPos?close:na,'Price',color=TypeStop?#787b86:na,style=plot.style_linebr)
fill(tp,en,color=TypeStop?bullcolorb:plotColy,editable=false)
fill(sl,en,color=TypeStop?bearcolorb:plotColy,editable=false)
plotchar(inPosandnotinPos[1]?tpPrice:na,'TakeStart',color=tpType!='None'?bullcolor:plotColx,char='➤',location=location.absolute,size=size.tiny)
plotchar(inPosandnotinPos[1]?slPrice:na,'StopStart',color=tpType!='None'?bearcolor:plotColx,char='◉',location=location.absolute,size=size.tiny)
plot(inPosandontake1andnotcheckTake1[1]?take1:na,'TP1',color=tpcolor,style=plot.style_linebr,editable=false)
plot(inPosandontake2andnotcheckTake2[1]?take2:na,'TP2',color=tpcolor,style=plot.style_linebr,editable=false)
plot(inPosandontake3andnotcheckTake3[1]?take3:na,'TP3',color=tpcolor,style=plot.style_linebr,editable=false)
plot(inPosandontake4andnotcheckTake4[1]?take4:na,'TP4',color=tpcolor,style=plot.style_linebr,editable=false)
plot(inPosandontake5andnotcheckTake5[1]?take5:na,'TP5',color=tpcolor,style=plot.style_linebr,editable=false)
plot(inPosandonstop0andnotcheckStop0[1]?stop0:na,'SL0',color=bearcolor,style=plot.style_linebr,editable=false)
plot(ext_source_==close?ta.ema(close,50):na,'MA1',color=#ffeb3b93,editable=false)
plot(ext_source_==close?ta.ema(close,200):na,'MA2',color=#ffeb3b93,editable=false)
//plotchar(goLongandnotinPos,'goLong',char='✟',size=size.tiny,location=location.belowbar,color=#4caf4f)
//plotchar(goShortandnotinPos,'goShort',char='✟',size=size.tiny,location=location.abovebar,color=#ff5252)
//Panel
//vartablepanel=table.new(position=position.bottom_right,columns=2,rows=1,bgcolor=#363A45,border_width=1)
//table.cell(panel,1,0,text=str.tostring(0),text_color=#ffa726,bgcolor=#363A45)
//————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————\\
Expand (513 lines)
