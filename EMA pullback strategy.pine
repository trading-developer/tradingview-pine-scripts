Script Name: EMA pullback strategy
Author: Space_Jellyfish
Description: A solid EMA pullback strategy for cryptos 15 min chart that uses EMA crossing as signal and pullback as stop loss.
EMA1: shortest period for finding crossing (I find period = 33 profitable for BTCUSD, you can adjust it for other cryptos)
EMA2: 5x period of EMA1, for filtering out some trend reversals
EMA3: 11x period of EMA1, for determining trend...
PineScript code:

Pine Scriptâ„¢ strategy
EMA pullback strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  created  by  Space  Jellyfish
//@version=4
strategy("EMA  pullback  strategy",  overlay  =  true,  initial_capital=10000,  commission_value  =  0.075)
target_stop_ratio  =  input(title="Take  Profit  Stop  Loss  ratio",  type=input.float,  defval=2.06,  minval=0.5,  maxval=100)
riskLimit_low  =    input(title="lowest  risk  per  trade",  type=input.float,  defval=0.008,  minval=0,  maxval=100)
riskLimit_high  =    input(title="highest  risk  per  trade",  type=input.float,  defval=0.025,  minval=0,  maxval=100)
//give  up  the  trade,  if  the  risk  is  smaller  than  limit,  adjust  position  size  if  risk  is  bigger  than  limit
ema_pullbackLevel_period  =  input(title="EMA1  for  pullback  level  Period",  type=input.integer,  defval=33,  minval=1,  maxval=10000)
ema_pullbackLimiit_period  =  input(title="EMA2  for  pullback  limit  Period",  type=input.integer,  defval=165,  minval=1,  maxval=10000)
ema_trend_period  =  input(title="EMA3  for  trend  Period",  type=input.integer,  defval=365,  minval=1,  maxval=10000)
startDate  =  input(title="Start  Date",  type=input.integer,  defval=1,  minval=1,  maxval=31)
startMonth  =  input(title="Start  Month",  type=input.integer,  defval=1,  minval=1,  maxval=12)
startYear  =  input(title="Start  Year",  type=input.integer,  defval=2018,  minval=2008,  maxval=2200)
label_forward_offset  =  input(25,  title  =  "offset  label")
inDateRange  =  (time  >=  timestamp(syminfo.timezone,  startYear,  startMonth,  startDate,  0,  0))
ema_pullbackLevel  =  ema(close,  ema_pullbackLevel_period)
ema_pullbackLimit  =  ema(close,  ema_pullbackLimiit_period)
ema_trendDirection  =  ema(close,  ema_trend_period)
//ema  pullback
float  pricePullAboveEMA_maxClose  =  na
float  pricePullAboveEMA_maxHigh  =  na
float  pricePullBelowEMA_minClose  =  na
float  pricePullBelowMA_minLow  =  na
if(crossover(close,  ema_pullbackLevel))
        pricePullAboveEMA_maxClose  :=  close
        pricePullAboveEMA_maxHigh  :=  high
else
        pricePullAboveEMA_maxClose  :=  pricePullAboveEMA_maxClose[1]
        pricePullAboveEMA_maxHigh  :=  pricePullAboveEMA_maxHigh[1]
if(close  >  pricePullAboveEMA_maxClose)
        pricePullAboveEMA_maxClose  :=  close
if(high  >  pricePullAboveEMA_maxHigh)
        pricePullAboveEMA_maxHigh  :=  high
if(crossunder(close,  ema_pullbackLevel))
        pricePullBelowEMA_minClose  :=  close
        pricePullBelowMA_minLow  :=  low
else
        pricePullBelowEMA_minClose  :=pricePullBelowEMA_minClose[1]
        pricePullBelowMA_minLow:=pricePullBelowMA_minLow[1]

if(close  <  pricePullBelowEMA_minClose)
        pricePullBelowEMA_minClose  :=  close
if(low  <  pricePullBelowMA_minLow)
        pricePullBelowMA_minLow  :=  low
long_strategy  =  crossover(close,  ema_pullbackLevel)  and  pricePullBelowEMA_minClose  <  ema_pullbackLimit  and  ema_pullbackLevel>ema_trendDirection
short_strategy  =  crossunder(close,  ema_pullbackLevel)  and  pricePullAboveEMA_maxClose  >  ema_pullbackLimit  and  ema_pullbackLevel<ema_trendDirection
float  risk_long  =  na
float  risk_short  =  na
float  stopLoss  =  na
float  takeProfit  =  na
float  entry_price  =  na
float  entryContracts  =  0
risk_long  :=  risk_long[1]
risk_short  :=  risk_short[1]

//open  a  position  determine  the  position  size
if  (strategy.position_size  ==  0  and  long_strategy  and  inDateRange)
        risk_long  :=  (close  -  pricePullBelowMA_minLow)  /  close
        if(risk_long  <  riskLimit_high)
                entryContracts  :=  strategy.equity  /  close
        else
                entryContracts  :=  (strategy.equity  *  riskLimit_high  /  risk_long)/close

        if(risk_long  >  riskLimit_low)
                strategy.entry("long",  strategy.long,  qty  =  entryContracts,  when  =  long_strategy)
if  (strategy.position_size  ==  0  and  short_strategy  and  inDateRange)
        risk_short  :=  (pricePullAboveEMA_maxHigh  -  close)  /  close
        if(risk_short  <  riskLimit_high)
                entryContracts  :=  strategy.equity  /  close
        else
                entryContracts  :=  (strategy.equity  *  riskLimit_high  /  risk_short)/close
        if(risk_short  >  riskLimit_low)
                strategy.entry("short",  strategy.short,  qty  =  entryContracts,  when  =  short_strategy)
//take  profit  /  stop  loss
if(strategy.position_size  >  0)
        stopLoss  :=      strategy.position_avg_price*(1  -  risk_long)
        takeProfit  :=    strategy.position_avg_price*(1  +  target_stop_ratio  *  risk_long)
        entry_price  :=  strategy.position_avg_price
        strategy.exit("Long  exit","long",  limit  =  takeProfit  ,  stop  =  stopLoss)

if(strategy.position_size  <  0)
        stopLoss  :=    strategy.position_avg_price*(1  +  risk_short)
        takeProfit  :=    strategy.position_avg_price*(1  -  target_stop_ratio  *  risk_short)
        entry_price  :=  strategy.position_avg_price
        strategy.exit("Short  exit","short",  limit  =  takeProfit,  stop  =  stopLoss)
plot(ema_pullbackLevel,  color=color.aqua,    title="ema  pullback  level")
plot(ema_pullbackLimit,  color=color.purple,    title="ema  pullback  limit")
plot(ema_trendDirection,  color=color.white,    title="ema  trend")
p_ep  =  plot(entry_price,  color  =  color.yellow,  linewidth  =  1,  style  =  plot.style_linebr,  title="entry_price")
p_sl  =  plot(stopLoss,  color  =  color.red,  linewidth  =  1,  style  =  plot.style_linebr,  title="stopLoss")
p_tp  =  plot(takeProfit,  color  =  color.green,  linewidth  =  1,  style  =  plot.style_linebr,  title="takeProfit")
fill(p_tp,  p_ep,  color.new(color.green,  transp  =  90))
fill(p_sl,  p_ep,  color.new(color.red,  transp  =  90))
label_text  =  ""
if(strategy.position_size  ==  0)
        label_text  :=  "No  Open  Position"
else
        label_text  :=  "Open:  "  +  strategy.position_entry_name  +  "  "  +  tostring(strategy.position_size)
label_text  :=  label_text  +  "\n\nNet  Profit:  "  +  tostring(strategy.netprofit/strategy.initial_capital  *  100,  '#.##')  +  "%"
label_text  :=  label_text  +  "\nWin  Rate:  "+  tostring(strategy.wintrades/(strategy.wintrades+strategy.losstrades)  *  100,  '#.##')  +  "%"  +  "\n    wins:  "  +    tostring(strategy.wintrades)  +    "\n    loses:  "  +    tostring(strategy.losstrades)
label_text  :=  label_text  +  "\nMax  Draw  Down:  "  +  tostring(strategy.max_drawdown/strategy.initial_capital  *  100,  '#.##')  +  "%"
lbl  =  label.new(
          x  =  time  +  label_forward_offset  *(time  -  time[1]),
          y  =  close,  text  =  label_text,
          xloc  =  xloc.bar_time,
          yloc  =  yloc.price,
          color  =  color.new(color.silver,  transp  =  90),
          textcolor  =  color.new(color.white,  transp  =  0),
          size  =  size.normal,
          textalign  =  text.align_left
          )
label.delete(lbl[1])
//
Expand (151 lines)
