Script Name: Ichimoku + RSI Crypto trending strategy
Author: exlux99
Description: This is a crypto trending strategy designed for big timeframes such as 3-4h+.

Its components are:
RSI
ICHIMOKU full pack
Heikin Ashi candles for logic calculation inside


Rules for entry.
For long : we have a long cross condition on ichimoku and price is above the ichimoku lines, and at the same time RSI value is > 50.
For long : we have a short cross condition...
PineScript code:

Pine Script™ strategy
Ichimoku + RSI Crypto trending strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  exlux99
//@version=4
strategy(title="Ichimoku  +  RSI  Crypto  trending  strategy",  overlay=true,  initial_capital  =  1000,  default_qty_type=strategy.percent_of_equity,  default_qty_value=100,  commission_type=strategy.commission.percent,  commission_value=0.1,  pyramiding=1    )
UseHAcandles        =  input(true,  title="Use  Heikin  Ashi  Candles  in  Algo  Calculations")
//
//  ===  /INPUTS  ===
//  ===  BASE  FUNCTIONS  ===
haClose  =  UseHAcandles  ?  security(heikinashi(syminfo.tickerid),  timeframe.period,  close)  :  close
haOpen    =  UseHAcandles  ?  security(heikinashi(syminfo.tickerid),  timeframe.period,  open)  :  open
haHigh    =  UseHAcandles  ?  security(heikinashi(syminfo.tickerid),  timeframe.period,  high)  :  high
haLow      =  UseHAcandles  ?  security(heikinashi(syminfo.tickerid),  timeframe.period,  low)  :  low
//Inputs
ts_bars  =  input(20,  minval=1,  title="Tenkan-Sen  Bars")
ks_bars  =  input(50,  minval=1,  title="Kijun-Sen  Bars")
ssb_bars  =  input(120,  minval=1,  title="Senkou-Span  B  Bars")
cs_offset  =  input(30,  minval=1,  title="Chikou-Span  Offset")
ss_offset  =  input(30,  minval=1,  title="Senkou-Span  Offset")
long_entry  =  input(true,  title="Long  Entry")
short_entry  =  input(true,  title="Short  Entry")
//Volatility
//vollength  =  input(defval=1,  title="VolLength")
//voltarget  =  input(defval=0.,  type=input.float,  step=0.1,  title="Volatility  Target")
//Difference  =  abs((haClose  -  haOpen)/((haClose  +  haOpen)/2)  *  100)
//MovingAverage  =  sma(Difference,  vollength)
//highvolatility  =  MovingAverage  >  voltarget
////////////////////////////////////////////////////////////////////////////////
//  BACKTESTING  RANGE

//  From  Date  Inputs
fromDay  =  input(defval  =  1,  title  =  "From  Day",  minval  =  1,  maxval  =  31)
fromMonth  =  input(defval  =  1,  title  =  "From  Month",  minval  =  1,  maxval  =  12)
fromYear  =  input(defval  =  2019,  title  =  "From  Year",  minval  =  1970)

//  To  Date  Inputs
toDay  =  input(defval  =  31,  title  =  "To  Day",  minval  =  1,  maxval  =  31)
toMonth  =  input(defval  =  12,  title  =  "To  Month",  minval  =  1,  maxval  =  12)
toYear  =  input(defval  =  2021,  title  =  "To  Year",  minval  =  1970)

//  Calculate  start/end  date  and  time  condition
startDate  =  timestamp(fromYear,  fromMonth,  fromDay,  00,  00)
finishDate  =  timestamp(toYear,  toMonth,  toDay,  00,  00)
time_cond  =  time  >=  startDate  and  time  <=  finishDate

////////////////////////////////////////////////////////////////////////////////
middle(len)  =>  avg(lowest(len),  highest(len))
//  Ichimoku  Components
tenkan  =  middle(ts_bars)
kijun  =  middle(ks_bars)
senkouA  =  avg(tenkan,  kijun)
senkouB  =  middle(ssb_bars)
//RSI
change  =  change(haClose)
gain  =  change  >=  0  ?  change  :  0.0
loss  =  change  <  0  ?  (-1)  *  change  :  0.0
avgGain  =  rma(gain,  14)
avgLoss  =  rma(loss,  14)
rs  =  avgGain  /  avgLoss
rsi  =  100  -  (100  /  (1  +  rs))
ss_high  =  max(senkouA[ss_offset-1],  senkouB[ss_offset-1])
ss_low  =  min(senkouA[ss_offset-1],  senkouB[ss_offset-1])
//  Entry/Exit  Signals
tk_cross_bull  =  tenkan  >  kijun
tk_cross_bear  =  tenkan  <  kijun
cs_cross_bull  =  mom(haClose,  cs_offset-1)  >  0
cs_cross_bear  =  mom(haClose,  cs_offset-1)  <  0
price_above_kumo  =  haClose  >  ss_high
price_below_kumo  =  haClose  <  ss_low
rsi_bullish  =  rsi  >  50
rsi_bearish  =  rs  <  50
bullish  =  tk_cross_bull  and  cs_cross_bull  and  price_above_kumo  and  rsi_bullish  //and  highvolatility
bearish  =  tk_cross_bear  and  cs_cross_bear  and  price_below_kumo  and  rsi_bearish  //and  highvolatility
strategy.entry("Long",  strategy.long,  when=bullish  and  long_entry  and  time_cond)
strategy.entry("Short",  strategy.short,  when=bearish  and  short_entry  and  time_cond)
strategy.close("Long",  when=bearish  and  not  short_entry  and  time_cond)
strategy.close("Short",  when=bullish  and  not  long_entry  and  time_cond)
Expand (95 lines)
