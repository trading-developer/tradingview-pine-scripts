Script Name: cRSI + Waves Strategy with VWMA overlay + sessions and order qty
Author: jadamcraig
Description: This is a fork of the  cRSI + Waves Strategy with VWMA overlay  strategy by  Dr_Roboto , which adds two additional features, namely:


  the ability to limit trade signals to certain defined periods of time ("Sessions") during the trading day and, optionally, to close any open position at the end of either or both "Sessions"
  the ability to control the maximum...
PineScript code:

Pine Script™ strategy
cRSI + Waves Strategy with VWMA overlay + sessions and order qty
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  Dr_Roboto;  forked  May  7,  2021  by  jadamcraig
//
//@version=4
//
//  This  indicator  uses  the  cyclic  smoothed  Relative  Strength  Index  (cRSI)  instead  of  the  traditional  Relative  Strength  Index  (RSI).  See  below  for  more  info  on  the  benefits  to  the  cRSI.
//
//  [b]My  key  contributions[/b]
//      1)  A  Weighted  Moving  Average  (WMA)  to  track  the  general  trend  of  the  cRSI  signal.  This  is  very  helpful  in  determining  when  the  equity  switches  from  bullish  to  bearish,  which  can  be  used  to  determine  buy/sell  points.
//            This  is  then  is  used  to  color  the  region  between  the  upper  and  lower  cRSI  bands  (green  above,  red  below).
//      2)  An  attempt  to  detect  the  motive  (impulse)  and  corrective  and  waves.  Corrective  waves  are  indicated  A,  B,  C,  D,  E,  F,  G.  F  and  G  waves  are  not  technically  Elliot  Waves,  but  the  way  I  detect  waves  it  is  really  hard
//            to  always  get  it  right.  Once  and  a  while  you  could  actually  see  G  and  F  a  second  time.  Motive  waves  are  identified  as  s  (strong)  and  w  (weak).  Strong  waves  have  a  peak  above  the  cRSI  upper  band  and  weak  waves  have  a  peak  below  the  upper  band.
//      3)  My  own  divergence  indicator  for  bull,  hidden  bull,  bear,  and  hidden  bear.  I  was  not  able  to  replicate  the  TradingView  style  of  drawing  a  line  from  peak  to  peak,  but  for  this  indicator  I  think  in  the  end  it  makes  the  chart  cleaner.
//      4)  I  have  also  added  "alert  conditions"  for  most  of  the  key  events.  Select  the  equity  you  want  (such  as:  SPX)  and  the  desired  timeframe  (such  as:  D).
//            Go  to  the  TradingView  "Alerts"  tab  (click  the  alarm  clock  icon)  -->  Create  Alert  (alarm  clock  with  a  +)  -->  Change  the  first  condition  drop  down  to  "Cyclic  Smoothed  RSI  with  Motive-Corrective  Wave  Indicator"  -->  in  the
//            drop  down  below  that  select  the  alert  that  you  want  (such  as:  Bull  -  cRSI  Above  WMA).  You  will  want  to  give  the  alert  a  good  name  that  includes  the  ticker  name  and  time  frame,  for  example  "SPX  1D:  Bull  -  cRSI  above  WMA"
//
//  There  is  a  latency  issue  with  an  indicator  like  this  that  is  based  on  moving  averages.  That  means  they  tend  to  trigger  right  after  key  events.  Perfect  timing  is  not  possible  strictly  with  these  indicators,  but  they  do  work
//  very  well  "on  average."  However,  my  implementation  has  minimal  latency  as  peaks  (tops/bottoms)  only  require  one  bar  to  detect.
//
//  As  a  bit  of  an  Easter  Egg,  this  code  can  be  tweaked  and  run  as  a  strategy  to  get  buy/sell  signals.  I  use  this  code  for  both  my  indicator  and  for  trading  strategy.  Just  copy  and  past  it  into  a  new  strategy  script  and  just
//  change  it  from  study  to  something  like.
//  strategy("cRSI  +  Waves  Strategy  with  VWMA  overlay",  overlay=overlay)
//  The  buy/sell  code  is  at  the  end  and  just  needs  to  be  uncommented.  I  make  no  promises  or  guarantees  about  how  good  it  is  as  a  strategy,  but  it  gives  you  some  code  and  ideas  to  work  with.
//
//  [b]Tuning[/b]
//  1)  Volume  Weighted  Moving  Average  (VWMA):  This  is  a  “hidden  strategy”  feature  implemented  that  will  display  the  high-low  bands  of  the  VWMA  on  the  price  chart  if  run  the  code  using  “overlay  =  true”.
//      -  [Use  Volume  for  VWMA]  If  the  equity  does  not  have  volume,  then  the  VWMA  will  not  show  up.  Uncheck  this  box  and  it  will  use  the  regular  WMA  (no  volume).
//      -  [VWMA  Length]  defines  how  far  back  the  WMA  averages  price.
//
//  2)  cRSI  (Black  line  in  the  indicator)
//      -  [CRSI  Dominate  Cycle  Length]  Increase  to  length  that  amount  of  time  a  band  (upper/lower)  stays  high/low  after  a  peak.Reducethevaluetoshortenthetime.Justincrementitup/downtoseetheeffect.
//-[CRSIMovingAverageLength]defineshowfarbacktheSMAaveragesthecRSI.Thisaffectsthepurplelineintheindicator.
//-[CRSITop/BottomDetectorLookback]defineshowmanybarsbackthepeakdetectorlookstodetermineifapeakhasoccurred.Forexample,atopisdetectedlikethis:current-bardownrelativetothe1-bar-back,
//1-bar-backuprelativeto2-bars-back(lookback=1),c)2-bars-backuprelativeto3-bars-back(lookback=2),andd)3-bars-backuprelativeto4-bars-back(lookback=3).Ihopethatmakessense.Thereare
//only2optionsforthissetting:2or3bars.2barswillbeabletodetectsmallpeaksbutcreatemore“false”peaksthatmaynotbemeaningful.3barswillbemorerobustbutcanmissshortdurationpeaks.
//
//3)Waves
//-Thecheckboxesareselfexplanatoryforwhichlabelstheyturnonandoffontheplot.
//
//4)DivergenceIndicators
//-Thecheckboxesareselfexplanatoryforwhichlabelstheyturnonandoffontheplot.
//
//[b]Hints[/b]
//-Themostcommonparametertochangeisthe[CRSITop/BottomDetectorLookback].Differentstockswillhavedifferentlevelsofstrengthintheirpeaks.Asettingof2maygeneratetoomanycorrectivewaves.
//-Differenttimesscaleswillgiveyoudifferentwavecounts.Thisistobeexpected.AconunterimpulsewaveinsideacorrectivewavemayactuallygoabovethecRSIWMAonasmallertimeframe.Youmayneedtoincreaseitoneortwolevelstoseelargewaves.
//-Justbecauseyouseedivergence(bearorhiddenbear)doesnotmeanapriceisgoingtogodown.Oftenpricecontinuestorisethroughbears,sotakenoteandthatisnormal.BullsareusuallyprettygoodindicatorsespeciallyifyouseethemonC,E,Gwaves.
//
//
//---------------------------------------
//cyclicsmoothedRSI(cRSI)indicator
//---------------------------------------
//The“core”codeforthecyclicsmoothedRSI(cRSI)indicatorwaswrittenbyLarsvonTheinenandissubjecttothetermsoftheMozillaPublicLicense2.0athttps://mozilla.org/MPL/2.0/.Copyright(C)2017CCBY,
//whentotrade/LarsvonThienen.FormoredetailsonthecRSIIndicator:https://www.tradingview.com/script/TmqiR1jp-RSI-cyclic-smoothed-v2/
//
//ThecyclicsmoothedRSIindicatorisanenhancementoftheclassicRSI,adding
//1)additionalsmoothingaccordingtothemarketvibration,
//2)adaptiveupperandlowerbandsaccordingtothecyclicmemoryand
//3)usingthecurrentdominantcyclelengthasinputfortheindicator.
//ItismuchmoreresponsivetomarketmovesthanthebasicRSI.Theindicatorusesthedominantcycleasinputtooptimizesignal,smoothing,andcyclicmemory.Togetmorein-depthinformationonthecyclic-smoothed
//RSIindicator,pleasereadDecodingTheHiddenMarketRhythm-Part1:DynamicCycles(2017),Chapter4:"Fine-tuningtechnicalindicators."Youneedtoderivethedominantcycleasinputparameterforthecyclelengthasdescribedinchapter4.
//=================================================================================================================================
//=================================================================================================================================
overlay=true//plotsVWMA(needtocloseandre-added)
//overlay=false//plotscRSI(needtocloseandre-added)
strategy("cRSI+WavesStrategywithVWMAoverlay+sessionsandorderqty",overlay=overlay)
//=================================================================================================================================
//=================================================================================================================================
//DisablescRSIandVWMAplottingsodebugdatacanbeplotted
//DEBUG=true
DEBUG=false
maxOrderSize=input(defval=4,title="MaxOrderSize",type=input.integer,
minval=2)
useSessions=input(defval=true,title="LimitSignalstoTradingSessions?")
sess1_startHour=input(defval=3,title="Session1:StartHour",
type=input.integer,minval=0,maxval=23)
sess1_startMinute=input(defval=57,title="Session1:StartMinute",
type=input.integer,minval=0,maxval=59)
sess1_stopHour=input(defval=10,title="Session1:StopHour",
type=input.integer,minval=0,maxval=23)
sess1_stopMinute=input(defval=30,title="Session1:StopMinute",
type=input.integer,minval=0,maxval=59)
sess2_startHour=input(defval=12,title="Session2:StartHour",
type=input.integer,minval=0,maxval=23)
sess2_startMinute=input(defval=57,title="Session2:StartMinute",
type=input.integer,minval=0,maxval=59)
sess2_stopHour=input(defval=14,title="Session2:StopHour",
type=input.integer,minval=0,maxval=23)
sess2_stopMinute=input(defval=57,title="Session2:StopMinute",
type=input.integer,minval=0,maxval=59)
sess1_closeAll=input(defval=false,title="CloseAllatEndofSession1")
sess2_closeAll=input(defval=true,title="CloseAllatEndofSession2")
//=================================================================================================================================
//=================================================================================================================================
//HelperFunctions
//=================================================================================================================================
//=================================================================================================================================
//functiontoconvertbooltoint
b2i(bval)=>
ival=bval?1:0
//functiontolookforapriceinthelookbackthatisrecentlyabovethecurrentprice
recentAbove(in,thresh,lookback)=>
found=false
fori=0tolookback
ifin[i]>=thresh
found:=true
break
iffound
res=true
else
res=false
//isvaluerisingorfallingbasedonhistory
isRisingFalling(in,lookback)=>
cntThresh=round(lookback*0.6)//majority=greaterthan50%
cntUp=0
cntDown=0
rising=false
falling=false
//countupthetimesitisaboveorbelowthecurrentvalue
fori=1tolookback
ifin[0]>in[i]
cntUp:=cntUp+1
elseifin[0]<in[i]
cntDown:=cntDown+1
//rising
ifcntUp>cntThresh
rising:=true
else
rising:=false
//falling
ifcntDown>cntThresh
falling:=true
else
falling:=false
//flat
flat=not(rising)andnot(falling)
//ifflat,thenselectpreivousvalueforrisingandfalling
ifflat
rising:=rising[1]
falling:=falling[1]
//returntuple
[rising,falling,flat]
//Dothelastseveralpricesformatop
isTop(price,lookback)=>
iflookback==3
//3pricesback->3rdcheckhelpsensuretherewasadowntrend,butcanmisssomesmallreversals
//up->up->down
if(price[2]>price[3])and(price[1]>price[2])and(price[0]<price[1])
top=true
else
top=false
else
//2placesback
//up->down
if(price[1]>price[2])and(price[0]<price[1])
top=true
else
top=false

//Dothelastseveralpricesformabottom
isBottom(price,lookback)=>
iflookback==3
//3pricesback->3rdcheckhelpsensuretherewasadowntrend,butcanmisssomesmallreversals
//down->down->up
if(price[2]<price[3])and(price[1]<price[2])and(price[0]>price[1])
bottom=true
else
bottom=false
else
//2pricesback
//down->up
if(price[1]<price[2])and(price[0]>price[1])
bottom=true
else
bottom=false
//functiontofiltermultiplesignalsinarow
filterSignal(signalFlag,lookback)=>
signalFlagFilt=signalFlag
fori=1tolookback
signalFlagFilt:=signalFlagFilt[0]==trueandsignalFlagFilt[i]==true?false:signalFlagFilt
//=================================================================================================================================
//=================================================================================================================================
//PriceMovement
//=================================================================================================================================
//=================================================================================================================================
priceRising=close[0]>=close[1]andclose[1]>=close[2]
priceFalling=close[0]<=close[1]andclose[1]<=close[2]
//plot(priceRising?1.0:0,color=color.green)
//plot(priceFalling?1.0:0,color=color.red)
//=================================================================================================================================
//=================================================================================================================================
//VolumeWeightedMovingAverage(VWMA)
//=================================================================================================================================
//=================================================================================================================================
plotVWMA=overlayandnot(DEBUG)
//checkifvolumeisavailableforthisequity
useVolume=input(title="UseVolumeforVWMA(uncheckifequitydoesnothavevolume)",defval=true)
vwmaLen=input(defval=21,title="VWMALength",type=input.integer,minval=1,maxval=200)
vwma=vwma(close,vwmaLen)
vwma_high=vwma(high,vwmaLen)
vwma_low=vwma(low,vwmaLen)
ifnot(useVolume)
vwma:=wma(close,vwmaLen)
vwma_high:=wma(high,vwmaLen)
vwma_low:=wma(low,vwmaLen)
//+1whenabove,-1whenbelow,0wheninside
vwmaSignal(priceOpen,priceClose,vwmaHigh,vwmaLow)=>
sig=0
color=color.gray
ifpriceClose>vwmaHigh
sig:=1
color:=color.green
elseifpriceClose<vwmaLow
sig:=-1
color:=color.red
else
sig:=0
color:=color.gray
[sig,color]
[vwma_sig,vwma_color]=vwmaSignal(open,close,vwma_high,vwma_low)
priceAboveVWMA=vwma_sig==1?true:false
priceBelowVWMA=vwma_sig==-1?true:false
//plot(priceAboveVWMA?2.0:0,color=color.blue)
//plot(priceBelowVWMA?2.0:0,color=color.maroon)
//bandTrans=input(defval=70,title="VWMABandTransparancy(100invisible)",type=input.integer,minval=0,maxval=100)
//fillTrans=input(defval=70,title="VWMAFillTransparancy(100invisible)",type=input.integer,minval=0,maxval=100)
bandTrans=70
fillTrans=70
//*****PlotVWMA*****
highband=plot(plotVWMA?fixnan(vwma_high):na,title='VWMAHighband',color=vwma_color,linewidth=1,transp=bandTrans)
lowband=plot(plotVWMA?fixnan(vwma_low):na,title='VWMALowband',color=vwma_color,linewidth=1,transp=bandTrans)
fill(lowband,highband,title='VWMABandfill',color=vwma_color,transp=fillTrans)
plot(plotVWMA?vwma:na,title='VWMA',color=vwma_color,linewidth=3,transp=bandTrans)
//=================================================================================================================================
//=================================================================================================================================
//MovingAverageConvergenceDivergence(MACD)
//=================================================================================================================================
//=================================================================================================================================
[macdLine,signalLine,histLine]=macd(close,12,26,9)
//Isthehistogramrisingorfalling
histLineRising=histLine[0]>=histLine[1]andhistLine[1]>=histLine[2]
histLineFalling=histLine[0]<=histLine[1]andhistLine[1]<=histLine[2]
//Didthehistogramcrossoverzero
histLineCrossNeg2Pos=histLine[0]>=0.0andhistLine[1]<0.0
histLineCrossPos2Neg=histLine[0]<=0.0andhistLine[1]>0.0
//plot(histLineRising?1.0:0,color=color.green)
//plot(histLineFalling?1.0:0,color=color.red)
//plot(histLineCrossNeg2Pos?1.0:0,color=color.green)
//plot(histLineCrossPos2Neg?1.0:0,color=color.red)
//=================================================================================================================================
//=================================================================================================================================
//CyclicSmoothedRelativeStrengthIndex(cRSI)
//=================================================================================================================================
//=================================================================================================================================
plotCRSI=not(overlay)andnot(DEBUG)
//src=input(title="cRSISource",defval=close)
src=close
domcycle=input(10,minval=5,title="cRSIDominantCycleLength(persistafterhigh/low)")//12
crsi=0.0
cyclelen=domcycle/2
vibration=10
leveling=10.0
cyclicmemory=domcycle*2
//setmin/maxranges?
torque=2.0/(vibration+1)
phasingLag=(vibration-1)/2.0
up=rma(max(change(src),0),cyclelen)
down=rma(-min(change(src),0),cyclelen)
rsi=down==0?100:up==0?0:100-100/(1+up/down)
crsi:=torque*(2*rsi-rsi[phasingLag])+(1-torque)*nz(crsi[1])
//thereisabugthatcancausethelowerboundtobebiggerthantheupperboundwithavalueof999999.0
//lmax=-999999.0
//lmin=999999.0
lmax=0.0//don'tkonwwhy,butthisfixesthebug
lmin=0.0
fori=0tocyclicmemory-1by1
ifnz(crsi[i],-999999.0)>lmax
lmax:=nz(crsi[i])
lmax
else
ifnz(crsi[i],999999.0)<lmin
lmin:=nz(crsi[i])
lmin
mstep=(lmax-lmin)/100
aperc=leveling/100
crsiLowband=0.0
forsteps=0to100by1
testvalue=lmin+mstep*steps
above=0
below=0
form=0tocyclicmemory-1by1
below:=below+iff(crsi[m]<testvalue,1,0)
below
ratio=below/cyclicmemory
ifratio>=aperc
crsiLowband:=testvalue
break
else
continue
crsiHighband=0.0
forsteps=0to100by1
testvalue=lmax-mstep*steps
above=0
form=0tocyclicmemory-1by1
above:=above+iff(crsi[m]>=testvalue,1,0)
above
ratio=above/cyclicmemory
ifratio>=aperc
crsiHighband:=testvalue
break
else
continue
//=================================================================================================================================
//=================================================================================================================================
//cRSImovingaverage
//=================================================================================================================================
//=================================================================================================================================
crsiMaLen=input(title="cRSIMovingAverageLength",defval=50,minval=0,step=5,type=input.integer)
//crsiSMA=sma(crsi,crsiMaLen)
//crsiEMA=ema(crsi,crsiMaLen)
crsiWMA=wma(crsi,crsiMaLen)
//plot(crsiSMA,"CRSISMA",color.red,linewidth=2)
//plot(crsiEMA,"CRSIEMA",color.green,linewidth=2)
//plot(crsiWMA,"CRSIWMA",color.fuchsia,linewidth=2)
//=================================================================================================================================
//=================================================================================================================================
//cRSIFeatureAnalysis
//=================================================================================================================================
//=================================================================================================================================
//Crossingofupperband
crsiAboveHighband=crsi>=crsiHighband
crsiBelowHighband=not(crsiAboveHighband)
crsiCrossAboveHighband=crsiAboveHighband[0]andcrsiBelowHighband[1]?true:false
crsiCrossBelowHighband=crsiBelowHighband[0]andcrsiAboveHighband[1]?true:false
//plot(crsiAboveHighband?2.0:0,color=color.black)
//plot(crsiBelowHighband?2.25:0,color=color.red)
//plot(crsiCrossAboveHighband?2.5:0,color=color.green)
//plot(crsiCrossBelowHighband?2.75:0,color=color.blue)
//-----------------------------------------------------------------------------
//Crossingoflowerband
crsiAboveLowband=crsi>=crsiLowband
crsiBelowLowband=not(crsiAboveLowband)
crsiCrossAboveLowband=crsiAboveLowband[0]andcrsiBelowLowband[1]?true:false
crsiCrossBelowLowband=crsiBelowLowband[0]andcrsiAboveLowband[1]?true:false
//plot(crsiAboveLowband?1.0:0,color=color.black)
//plot(crsiBelowLowband?1.25:0,color=color.red)
//plot(crsiCrossAboveLowband?1.5:0,color=color.green)
//plot(crsiCrossBelowLowband?1.75:0,color=color.blue)
//-----------------------------------------------------------------------------
//CrossingofWMA
crsiAboveWMA=crsi>=crsiWMA
crsiBelowWMA=not(crsiAboveWMA)
crsiCrossAboveWMA=crsiAboveWMA[0]andcrsiBelowWMA[1]?true:false
crsiCrossBelowWMA=crsiBelowWMA[0]andcrsiAboveWMA[1]?true:false
//plot(crsiAboveWMA?1.0:0,color=color.black)
//plot(crsiBelowWMA?1.25:0,color=color.red)
//plot(crsiCrossAboveWMA?1.5:0,color=color.blue)
//plot(crsiCrossBelowWMA?1.75:0,color=color.maroon)
//-----------------------------------------------------------------------------
//Crossingof50level
crsiAbove50=crsi>=50
crsiBelow50=not(crsiAbove50)
crsiCrossAbove50=crsiAbove50[0]andcrsiBelow50[1]?true:false
crsiCrossBelow50=crsiBelow50[0]andcrsiAbove50[1]?true:false
//-----------------------------------------------------------------------------
//CRSIfallingorrising
crsiRising=crsi[0]>=crsi[1]
crsiFalling=crsi[0]<crsi[1]
//plot(crsiRising?3.0:0,color=color.green)
//plot(crsiFalling?3.0:0,color=color.red)
//-----------------------------------------------------------------------------
//ComparecRSItocrsiWMAtodetermineifequityisbullish(motive)orbearish(corrective)
bull=crsiAboveWMA
bear=not(bull)
bullBearColor=bull?color.green:color.red
bullStart=bull[0]andbear[1]?true:false
bearStart=bear[0]andbull[1]?true:false
alertcondition(bullStart,title='Bull-cRSIaboveWMA',message='Bull-cRSIaboveWMA')
alertcondition(bearStart,title='Bear-cRSIbelowWMA',message='Bear-cRSIbelowWMA')
//=================================================================================================================================
//=================================================================================================================================
//PlotcRSIcoloredbyBullorBear
//=================================================================================================================================
//=================================================================================================================================
//BasicRSI
hline(plotCRSI?50:na,title="MiddleLine",linestyle=hline.style_dashed,linewidth=2)
h2=hline(plotCRSI?70:na,title="Overbought",linestyle=hline.style_dashed,linewidth=2)
h1=hline(plotCRSI?30:na,title="Oversold",linestyle=hline.style_dashed,linewidth=2)
fill(h1,h2,color=color.silver,transp=80)
//cRSI
crsiLB2=plot(plotCRSI?crsiLowband:na,"cRSILowBand",bullBearColor)
crsiHB2=plot(plotCRSI?crsiHighband:na,"cRSIHighBand",bullBearColor)
fill(crsiLB2,crsiHB2,bullBearColor,transp=75)
plot(plotCRSI?crsiWMA:na,"CRSIWMA",color.fuchsia,linewidth=2)
plot(plotCRSI?crsi:na,"CRSI",color.black,linewidth=4)
//=================================================================================================================================
//=================================================================================================================================
//Moitve(impulse)andCorrectiveWaves
//=================================================================================================================================
//=================================================================================================================================
//THISISAMAJORASSUMPTIONTOTHISAPPROACH!!!
motiveWave=bull
correctiveWave=bear
//TOPANDBOTTOMAREDETECTEDONEBARLATE!!!
topBottomLookback=input(title="cRSITop/BottomDetectorLookback(3ismorerobustbutmissessmaller)",defval=2,minval=2,maxval=3,step=1,type=input.integer)
crsiTop=isTop(crsi,topBottomLookback)
crsiBottom=isBottom(crsi,topBottomLookback)
//Topabovehighband
crsiTopAboveHighband=crsiTopandcrsiAboveHighband[1]
waveStrongImpulse=crsiTopAboveHighband
//TopthatdoesnotbreakhighbandbutisaboveWMA
crsiTopBelowHighband=(crsiTopandcrsiBelowHighband[1])and(crsi>crsiWMA)
waveWeakImpulse=crsiTopBelowHighband
//-----------------------------------------------------------------------------
//DeterminetheABC,ABCDE,ABCDEFGsequence
//NotethatABCDEFGisnotatrueElliottcorrectivewavesequence,butforthisapproachisshowsuponceinabluemoon
possibleWaveA=crsiBottomandcrsiBelowLowband[1]
possibleWaveB=(crsiTopandcrsiBelowWMA[1])or(crsiTopandcrsiBelow50[1])//AlsocatchthetopsthatareabovewmabutstayunderRSI50(rare)
possibleWaveC=possibleWaveAor(crsiBottomandcrsiBelowWMA[1])//sometimeswaveCisabovethelowerbandbutbelowtheWMA
//WaveAB
findWaveAB(possibleWaveA,possibleWaveB,correctiveWave)=>
isWaveAB=false
foundMatch=false
//startwithWaveB
ifpossibleWaveB
//searchbackwardsandlookforwaveA
fori=1to50
//Equitymustbeincorrectionelseinvalidated
ifcorrectiveWave[i]
ifpossibleWaveA[i]
foundMatch:=true
break
//else
//keeplooping
else
//motivewaveinvalidatessearch
foundMatch:=false
break
//DidwematchanAandBwave?
iffoundMatch
isWaveAB:=true
else
isWaveAB:=false
else
isWaveAB:=false

waveAB=findWaveAB(possibleWaveA,possibleWaveB,correctiveWave)
//WaveABC
findWaveABC(possibleWaveC,waveAB,correctiveWave)=>
isWaveABC=false
foundMatch=false
ifpossibleWaveC
//searchbackwardsandlookforwaveAB
fori=1to50
//Equitymustbeincorrectionelseinvalidated
ifcorrectiveWave[i]
ifwaveAB[i]
foundMatch:=true
break
//else
//keeplooping
else
//motivewaveinvalidatessearch
foundMatch:=false
break
//DidwematchawaveABwithC?
iffoundMatch
isWaveABC:=true
else
isWaveABC:=false
else
isWaveABC:=false
waveABC=findWaveABC(possibleWaveC,waveAB,correctiveWave)
//WaveABCD
findWaveABCD(possibleWaveB,waveABC,correctiveWave)=>
isWaveABCD=false
foundMatch=false
ifpossibleWaveB
//searchbackwardsandlookforwaveABC
fori=1to50
//Equitymustbeincorrectionelseinvalidated
ifcorrectiveWave[i]
ifwaveABC[i]
foundMatch:=true
break
//else
//keeplooping
else
//motivewaveinvalidatessearch
foundMatch:=false
break
//DidwematchawaveABCwithD?
iffoundMatch
isWaveABCD:=true
else
isWaveABCD:=false
else
isWaveABCD:=false
waveABCD=findWaveABCD(possibleWaveB,waveABC,correctiveWave)
//WaveABCDE
findWaveABCDE(possibleWaveC,waveABCD,correctiveWave)=>
isWaveABCDE=false
foundMatch=false
ifpossibleWaveC
//searchbackwardsandlookforanotherwaveABCinthiscorrection
fori=1to50
//Equitymustbeincorrectionelseinvalidated
ifcorrectiveWave[i]
ifwaveABCD[i]
foundMatch:=true
break
//else
//keeplooping
else
//motivewaveinvalidatessearch
foundMatch:=false
break
//DidwematchawaveABCwithanotherwaveABC?
iffoundMatch
isWaveABCDE:=true
else
isWaveABCDE:=false
else
isWaveABCDE:=false
waveABCDE=findWaveABCDE(possibleWaveC,waveABCD,correctiveWave)
//WaveABCDEF
findWaveABCDEF(possibleWaveB,waveABCDE,correctiveWave)=>
isWaveABCDEF=false
foundMatch=false
ifpossibleWaveB
//searchbackwardsandlookforanotherwaveABCinthiscorrection
fori=1to50
//Equitymustbeincorrectionelseinvalidated
ifcorrectiveWave[i]
ifwaveABCDE[i]
foundMatch:=true
break
//else
//keeplooping
else
//motivewaveinvalidatessearch
foundMatch:=false
break
//DidwematchawaveABCwithanotherwaveABC?
iffoundMatch
isWaveABCDEF:=true
else
isWaveABCDEF:=false
else
isWaveABCDEF:=false
waveABCDEF=findWaveABCDEF(possibleWaveB,waveABCDE,correctiveWave)
//WaveABCDEFG
findWaveABCDEFG(possibleWaveC,waveABCDEF,correctiveWave)=>
isWaveABCDEFG=false
foundMatch=false
ifpossibleWaveC
//searchbackwardsandlookforanotherwaveABCinthiscorrection
fori=1to50
//Equitymustbeincorrectionelseinvalidated
ifcorrectiveWave[i]
ifwaveABCDEF[i]
foundMatch:=true
break
//else
//keeplooping
else
//motivewaveinvalidatessearch
foundMatch:=false
break
//DidwematchawaveABCwithanotherwaveABC?
iffoundMatch
isWaveABCDEFG:=true
else
isWaveABCDEFG:=false
else
isWaveABCDEFG:=false
waveABCDEFG=findWaveABCDEFG(possibleWaveC,waveABCDEF,correctiveWave)
//Determineindividualcorrectivewaves
waveA=possibleWaveAandnot(waveABC)andnot(waveABCDE)
waveB=waveABandnot(waveABCD)
waveC=waveABC
waveD=waveABCD
waveE=waveABCDE
waveF=waveABCDEF
waveG=waveABCDEFG
//-----------------------------------------------------------------------------
//PlotkeycRSIpoints
//plot(crsiCrossBelowHighband?crsi:na,title='cRSIcrossbelowhighband',color=color.red,linewidth=7,style=plot.style_circles)
//plot(crsiCrossAboveLowband?crsi:na,title='cRSIcrossabovelowband',color=color.green,linewidth=7,style=plot.style_circles)
//plot(crsiCrossBelowWMA?crsi:na,title='cRSIcrossbelowWMA',color=color.red,linewidth=5,style=plot.style_cross)
//plot(crsiCrossAboveWMA?crsi:na,title='cRSIcrossaboveWMA',color=color.green,linewidth=5,style=plot.style_cross)
//plot(crsiCrossAbove50?crsi:na,title='cRSIcrossabove50',color=color.black,linewidth=7,style=plot.style_circles)
//plot(crsiCrossBelow50?crsi:na,title='cRSIcrossbelow50',color=color.black,linewidth=7,style=plot.style_circles)
//plot(crsiTop?crsi[1]:na,title='cRSITop',color=color.blue,linewidth=4,style=plot.style_cross,offset=-1)
//plot(crsiBottom?crsi[1]:na,title='cRSITop',color=color.purple,linewidth=4,style=plot.style_cross,offset=-1)
//--------------------
//Impulsewaves
plotStrong=input(title="PlotStrongImpulseWaves(aboveupperband)",defval=true)andplotCRSI
plotWeak=input(title="PlotWeakImpulseWaves(belowupperband)",defval=true)andplotCRSI
impWaveSz=size.tiny
plotshape(plotStrongandwaveStrongImpulse?crsi[1]:na,text="s",title='StrongImpulse',style=shape.labeldown,location=location.absolute,color=color.navy,transp=0,offset=-1,textcolor=color.white,size=impWaveSz)
plotshape(plotWeakandwaveWeakImpulse?crsi[1]:na,text="w",title='WeakImpulse',style=shape.labeldown,location=location.absolute,color=color.purple,transp=0,offset=-1,textcolor=color.white,size=impWaveSz)
//---------------------
//Correctivewaves
//plot(possibleWaveC?crsi[1]:na,title='PossibleWaveC',color=color.green,linewidth=6,style=plot.style_circles,offset=-1)
//plot(possibleWaveB?crsi[1]:na,title='PossibleWaveB',color=color.blue,linewidth=6,style=plot.style_circles,offset=-1)
//plot(possibleWaveA?crsi[1]:na,title='PossibleWaveA',color=color.purple,linewidth=6,style=plot.style_circles,offset=-1)
//plot(waveAB?crsi[1]:na,title='WaveAB',color=color.black,linewidth=5,style=plot.style_cross,offset=-1)
//plot(waveABC?crsi[1]:na,title='WaveABC',color=color.black,linewidth=7,style=plot.style_cross,offset=-1)
//plot(waveABCDE?crsi[1]:na,title='WaveABCDE',color=color.black,linewidth=9,style=plot.style_cross,offset=-1)
//plotshape(waveAB?crsi[1]:na,title='WaveAB',style=shape.triangledown,location=location.absolute,color=color.orange,transp=0,offset=-1,text="AB",textcolor=color.orange,size=size.small)
//plotshape(waveABC?crsi[1]:na,title='WaveABC',style=shape.triangleup,location=location.absolute,color=color.blue,transp=0,offset=-1,text="ABC",textcolor=color.blue,size=size.small)
//plotshape(waveABCD?crsi[1]:na,title='WaveABCD',style=shape.triangledown,location=location.absolute,color=color.red,transp=0,offset=-1,text="ABCD",textcolor=color.red,size=size.small)
//plotshape(waveABCDE?crsi[1]:na,title='WaveABCDE',style=shape.triangleup,location=location.absolute,color=color.green,transp=0,offset=-1,text="ABCDE",textcolor=color.green,size=size.small)
plotWaves=input(title="PlotCorrectiveWaves(ABC,ABCDE)",defval=true)andplotCRSI
corWaveSz=size.small
plotshape(plotWavesandwaveA?crsi[1]:na,text="A",title='WaveA',style=shape.labelup,location=location.absolute,color=color.blue,transp=0,offset=-1,textcolor=color.white,size=corWaveSz)
plotshape(plotWavesandwaveB?crsi[1]:na,text="B",title='WaveB',style=shape.labeldown,location=location.absolute,color=color.red,transp=0,offset=-1,textcolor=color.white,size=corWaveSz)
plotshape(plotWavesandwaveC?crsi[1]:na,text="C",title='WaveC',style=shape.labelup,location=location.absolute,color=color.green,transp=0,offset=-1,textcolor=color.white,size=corWaveSz)
plotshape(plotWavesandwaveD?crsi[1]:na,text="D",title='WaveD',style=shape.labeldown,location=location.absolute,color=color.maroon,transp=0,offset=-1,textcolor=color.white,size=corWaveSz)
plotshape(plotWavesandwaveE?crsi[1]:na,text="E",title='WaveE',style=shape.labelup,location=location.absolute,color=color.lime,transp=0,offset=-1,textcolor=color.white,size=corWaveSz)
plotshape(plotWavesandwaveF?crsi[1]:na,text="F",title='WaveF',style=shape.labeldown,location=location.absolute,color=color.fuchsia,transp=0,offset=-1,textcolor=color.white,size=corWaveSz)
plotshape(plotWavesandwaveG?crsi[1]:na,text="G",title='WaveG',style=shape.labelup,location=location.absolute,color=color.aqua,transp=0,offset=-1,textcolor=color.white,size=corWaveSz)
//---------------------
//PRICECHANGEBETWEENIMPULSEANDWAVEA
//=================================================================================================================================
//=================================================================================================================================
//DivergenceIndicatorUsingcRSI
//=================================================================================================================================
//=================================================================================================================================
plotBull=input(title="PlotBullish(cRSIHigher-Low:PriceLower-Low)",defval=true)andplotCRSI
plotHiddenBull=input(title="PlotHiddenBullish(cRSILower-Low:PriceHigher-Low)",defval=true)andplotCRSI
plotBear=input(title="PlotBearish(cRSILower-High:PriceHigher-High",defval=true)andplotCRSI
plotHiddenBear=input(title="PlotHiddenBearish(cRSIHigher-High:PriceLower-High)",defval=true)andplotCRSI
//------------------------------------------------------------------------------
crsiHighs=waveStrongImpulseorwaveWeakImpulse
crsiLows=possibleWaveAorpossibleWaveC
//------------------------------------------------------------------------------
//RegularBullish-->cRSImakesaHigher-Low,butpricemakesaLower-Low
//HiddenBullish-->cRSImakesaLower-Low,butpricemakesaHigher-Low
bullish(crsiLows,crsi,price)=>
foundLow=false
crsiHigherLow=false
priceHigher=false
regularBullish=false
hiddenBullish=false
ifcrsiLows[0]==true
fori=1to50
ifcrsiLows[i]==true
foundLow:=true
//crsihigherorlower?
ifcrsi[0]>crsi[i]
crsiHigherLow:=true
else
crsiHigherLow:=false
//pricehigherorlower
ifprice[0]>price[i]
priceHigher:=true
else
priceHigher:=false
//foundlow,stoplooking
break
else
continue
iffoundLow
//RegularBullish-->cRSImakesaHigher-Low,butpricemakesaLower-Low
if(crsiHigherLow==true)and(priceHigher==false)
regularBullish:=true
hiddenBullish:=false
//HiddenBullish-->cRSImakesaLower-Low,butpricemakesaHigher-Low
elseif(crsiHigherLow==false)and(priceHigher==true)
regularBullish:=false
hiddenBullish:=true
else
regularBullish:=false
hiddenBullish:=false
else
regularBullish:=false
hiddenBullish:=false
else
//thisisnotalow
regularBullish:=false
hiddenBullish:=false
//returntuple
[regularBullish,hiddenBullish]

[regularBullish,hiddenBullish]=bullish(crsiLows,crsi,close)
plotshape(plotBullandregularBullish?crsi[1]-12:na,text="Bull",title='Bull',style=shape.labelup,location=location.absolute,color=color.green,transp=0,offset=-1,textcolor=color.white,size=corWaveSz)
plotshape(plotHiddenBullandhiddenBullish?crsi[1]-12:na,text="HBull",title='HiddenBull',style=shape.labelup,location=location.absolute,color=color.green,transp=20,offset=-1,textcolor=color.white,size=corWaveSz)
//------------------------------------------------------------------------------
//RegularBearish-->cRSImakesaLower-High,butpricemakesaHigher-High
//HiddenBearish-->cRSImakesaHigher-High,butpricemakesaLower-High
bearish(crsiHighs,crsi,price)=>
foundHigh=false
crsiHigherHigh=false
priceHigher=false
regularBearish=false
hiddenBearish=false
ifcrsiHighs[0]==true
fori=1to50
ifcrsiHighs[i]==true
foundHigh:=true
//crsihigherorlower?
ifcrsi[0]>crsi[i]
crsiHigherHigh:=true
else
crsiHigherHigh:=false
//pricehigherorlower
ifprice[0]>price[i]
priceHigher:=true
else
priceHigher:=false
//foundhigh,stoplooking
break
else
continue
iffoundHigh
//RegularBearish-->cRSImakesaLower-High,butpricemakesaHigher-High
if(crsiHigherHigh==false)and(priceHigher==true)
regularBearish:=true
hiddenBearish:=false
//HiddenBearish-->cRSImakesaHigher-High,butpricemakesaLower-High
elseif(crsiHigherHigh==true)and(priceHigher==false)
regularBearish:=false
hiddenBearish:=true
else
regularBearish:=false
hiddenBearish:=false
else
regularBearish:=false
hiddenBearish:=false
else
//thisisnotalow
regularBearish:=false
hiddenBearish:=false
//returntuple
[regularBearish,hiddenBearish]

[regularBearish,hiddenBearish]=bearish(crsiHighs,crsi,close)
plotshape(plotBearandregularBearish?crsi[1]+10:na,text="Bear",title='Bear',style=shape.labeldown,location=location.absolute,color=color.red,transp=0,offset=-1,textcolor=color.white,size=corWaveSz)
plotshape(plotHiddenBearandhiddenBearish?crsi[1]+10:na,text="HBear",title='HiddenBear',style=shape.labeldown,location=location.absolute,color=color.red,transp=20,offset=-1,textcolor=color.white,size=corWaveSz)
//==================================================================================================================================================================================================================================================================
//==================================================================================================================================================================================================================================================================
//==================================================================================================================================================================================================================================================================
//Buy/SellStrategy
//==================================================================================================================================================================================================================================================================
//==================================================================================================================================================================================================================================================================
//==================================================================================================================================================================================================================================================================
//Removeduplicatebuy/sellsifonewasalreadyexecutedrecently
filterLookback=5
//normalizeavalueinarangebetweenminandmax
normalize(val,valMin,valMax)=>
valNorm=val
valNorm:=valNorm<valMin?valMin:valNorm
valNorm:=valNorm>valMax?valMax:valNorm
valNorm:=(valNorm-valMin)/(valMax-valMin)
recentWave(wave,lookback)=>
ret=false
found=false
fori=0tolookback
ifwave[i]==true
found:=true
break
iffound
ret:=true
else
ret:=false
//-----------------------------------------------------------------------------
//Levelsforupperband-High
crsiHighband_extremeHighLevel=90
crsiHighband_highLevel=70
crsiHighband_highWeight=normalize(crsiHighband,crsiHighband_highLevel,crsiHighband_extremeHighLevel)
//Levelsforupperband-Low
crsiHighband_extremeLowLevel=45
crsiHighband_lowLevel=55
crsiHighband_lowWeight=1.0-normalize(crsiHighband,crsiHighband_extremeLowLevel,crsiHighband_lowLevel)
//plot(crsiHighband_highWeight,color=color.blue)
//plot(crsiHighband_lowWeight,color=color.red)
//-----------------------------------------------------------------------------
////Levelsforlowerband-High
crsiLowband_extremeHighLevel=80
crsiLowband_highLevel=60
crsiLowband_higheight=normalize(crsiLowband,crsiLowband_highLevel,crsiLowband_extremeHighLevel)
//Levelsforlowerband-Low
crsiLowband_extremeLowLevel=20
crsiLowband_lowLevel=45
crsiLowband_lowWeight=1.0-normalize(crsiLowband,crsiLowband_extremeLowLevel,crsiLowband_lowLevel)
//plot(crsiLowband_highWeight,color=color.blue)
//plot(crsiLowband_lowWeight,color=color.red)
//--------------------------------------------------------------------------------------------
//DETERMINEIFNEWTRADESAREPERMITTED
//--------------------------------------------------------------------------------------------
newTrades=false
if(useSessions)
if(hour==sess1_startHourandminute>=sess1_startMinute)
newTrades:=true
elseif(hour>sess1_startHourandhour<sess1_stopHour)
newTrades:=true
elseif(hour==sess1_stopHourandminute<sess1_stopMinute)
newTrades:=true
elseif(hour==sess2_startHourandminute>=sess2_startMinute)
newTrades:=true
elseif(hour>sess2_startHourandhour<sess2_stopHour)
newTrades:=true
elseif(hour==sess2_stopHourandminute<sess2_stopMinute)
newTrades:=true
else
newTrades:=false
else
newTrades:=true
//--------------------------------------------------------------------------------------------
//SELL
//--------------------------------------------------------------------------------------------
maxSellOrderSize=maxOrderSize
crsiHighband_above_crsiHighband_highLevel=crsiHighband>crsiHighband_highLevel?true:false
Sell1=waveStrongImpulse
Sell2=crsiAboveHighbandandcrsiFalling?true:false//Abovehighbandandnowfalling
Sell3=crsiAboveHighband[1]andcrsiFalling?true:false//1xpreviouswasabovehighbandandnowfalling(sometimesitcanbeoffbyabar)
Sell4=crsiAboveHighband[2]andcrsiFalling?true:false//2xpreviouswasabovehighbandandnowfalling(sometimesitcanbeoffbyabar)
//Sell=Sell1//andcrsiHighband_above_crsiHighband_highLevel
//Sell=Sell1//andcrsiHighband_above_crsiHighband_highLevel
//Sell=(Sell1orSell2)//andcrsiHighband_above_crsiHighband_highLevel
//Sell=(Sell1orSell2orSell3)//andcrsiHighband_above_crsiHighband_highLevel
Sell=(Sell1orSell2orSell3orSell4)andcrsiHighband_above_crsiHighband_highLevel
Sell:=filterSignal(Sell,filterLookback)
//BasesellsizeonhowhightheHighbandis
sellSize=crsiHighband_highWeight*maxSellOrderSize//Whenindoubt,DON'TSELL!Stonksonlygoup;)
//extremecRSI
sellSize:=crsi>crsiHighband_extremeHighLevel?1.5*maxSellOrderSize:sellSize
//ifthesellsizeissmall,justmakeminsell
sellSize:=sellSize<maxSellOrderSize/3?0:sellSize
sellSize:=round(sellSize)
if(SellandnewTrades)
strategy.order("Sell",false,sellSize)
//--------------------------------------------------------------------------------------------
//BUY-PricecancontinuetofallevenwhencRSIisrising!!!
//--------------------------------------------------------------------------------------------
maxBuyOrderSize=maxOrderSize
//WaituntilitcrossesbackaboveWMAsoitisclearthatmotivewaveisclear.
//BuyingatthebottomisreallyhardbecauseRSIcanstarttoriseyetpricewillcontinuetofall
Buy1=bullStart
//Usingwavescanhelpdoabetterjobtimingthebottom,butbigcorrectionscangomuchdeeperthanjustWaveC(ZigZag)
Buy2=waveAandregularBullish
Buy3=waveCandregularBullish
Buy4=waveEand(topBottomLookback==3)//usullaymaxisawaveEwithtopBottomLookback==3
Buy5=waveGand(topBottomLookback==2)//canseeaGwavewhentopBottomLookback==2
Buy=Buy1orBuy2orBuy3orBuy4orBuy5
Buy:=filterSignal(Buy,filterLookback)
//BasebuysizeonhowlowtheLowbandis
buySize=crsiLowband_lowWeight*maxBuyOrderSize
//buySize:=buySize<1?1:buySize//Whenindoubt,BUY!Stonksonlygoup;)
//Lookforrecentwaveendingsthatcanincreaseourguessofbuyingatalow
recentWaveC=recentWave(waveC,10)
recentWaveE=recentWave(waveE,10)
recentWaveG=recentWave(waveG,10)
//buySize:=recentWaveE?1.5*maxBuyOrderSize:buySize
//buySize:=recentWaveG?1.5*maxBuyOrderSize:buySize
buySize:=recentWaveE?maxBuyOrderSize:buySize
buySize:=recentWaveG?maxBuyOrderSize:buySize
//ifthebuysizeissmall,justmakeminbuy
buySize:=buySize<maxSellOrderSize/3?0:buySize
buySize:=round(buySize)
if(BuyandnewTrades)
strategy.order("Buy",true,buySize)
//CloseopenpositionatendofSession1,ifenabled
if(sess1_closeAllandhour==sess1_stopHourandminute>=sess1_stopMinute)
strategy.close_all()

//CloseopenpositionatendofSession2,ifenabled
if(sess2_closeAllandhour==sess2_stopHourandminute>=sess2_stopMinute)
strategy.close_all()
Expand (1042 lines)
