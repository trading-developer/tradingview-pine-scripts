Script Name: Je Buurmans Simple Manual Entries
Author: Je_Buurman
Description: If ever in need for a quick way to swiftly check some random trades
or brag to your 'friends'/buddies/pals/haters/followers/the_crowd with fabricated winnings ..

This Script is for you.

Either set the entry and exit dates for a maximum of up to 10 trades (either Long or Short) via Menu
or simply drag the 'handler' to the desired time/date.
Next fill in how many...
PineScript code:

Pine Script™ strategy
Je Buurmans Simple Manual Entries
//  This  source  code  is  subject  to  the  terms  of  Je  Buurman
//  ©  Je_Buurman
//@version=5
strategy("Je  Buurmans  Simple  Manual  Entries",  overlay=true)
direction              =  input.string("Long",  options=["Long",  "Short"],  title="Long  or  Short")  =="Long"  ?  strategy.long    :  strategy.short
how_many_active  =  input.int(defval=1,  minval=1,  maxval=10,title="How  many  trades  are  active")
L1_entry_date      =  input.time(timestamp("1  Jan  2022  00:00"),  title="Entry  1  Date",  group="One")
L1_entry_shares  =  input.float(10,  title="Entry  1  shares")
L1_exit_date        =  input.time(timestamp("21  Jan  2022  00:00"),  title="Exit  1  Date",  group="One")
L1_exit_shares    =  input.float(10,  title="Exit  1  shares")
L2_entry_date      =  input.time(timestamp("01  Feb  2022  00:00"),  title="Entry  2  Date",  group="Two")
L2_entry_shares  =  input.float(10,  title="Entry  2  shares")
L2_exit_date        =  input.time(timestamp("21  Feb  2022  00:00"),  title="Exit  2  Date",  group="Two")
L2_exit_shares    =  input.float(10,  title="Exit  2  shares")
L3_entry_date      =  input.time(timestamp("01  Mar  2022  00:00"),  title="Entry  3  Date",  group="Tree")  //  or  a  shrubbery
L3_entry_shares  =  input.float(10,  title="Entry  3  shares")
L3_exit_date        =  input.time(timestamp("21  Mar  2022  00:00"),  title="Exit  3  Date",  group="Tree")
L3_exit_shares    =  input.float(10,  title="Exit  3  shares")
L4_entry_date      =  input.time(timestamp("01  Apr  2022  00:00"),  title="Entry  4  Date",  group="Four")
L4_entry_shares  =  input.float(10,  title="Entry  4  shares")
L4_exit_date        =  input.time(timestamp("21  Apr  2022  00:00"),  title="Exit  4  Date",  group="Four")
L4_exit_shares    =  input.float(10,  title="Exit  4  shares")
L5_entry_date      =  input.time(timestamp("01  May  2022  00:00"),  title="Entry  5  Date",  group="Wive")
L5_entry_shares  =  input.float(10,  title="Entry  5  shares")
L5_exit_date        =  input.time(timestamp("21  May  2022  00:00"),  title="Exit  5  Date",  group="Wive")
L5_exit_shares    =  input.float(10,  title="Exit  5  shares")
L6_entry_date      =  input.time(timestamp("01  Jun  2022  00:00"),  title="Entry  6  Date",  group="Sax")
L6_entry_shares  =  input.float(10,  title="Entry  6  shares")
L6_exit_date        =  input.time(timestamp("21  Jun  2022  00:00"),  title="Exit  6  Date",  group="Sax")
L6_exit_shares    =  input.float(10,  title="Exit  6  shares")
L7_entry_date      =  input.time(timestamp("01  Jul  2022  00:00"),  title="Entry  7  Date",  group="Se7en")
L7_entry_shares  =  input.float(10,  title="Entry  7  shares")
L7_exit_date        =  input.time(timestamp("21  Jul  2022  00:00"),  title="Exit  7  Date",  group="Se7en")
L7_exit_shares    =  input.float(10,  title="Exit  7  shares")
L8_entry_date      =  input.time(timestamp("01  Aug  2022  00:00"),  title="Entry  8  Date",  group="Aight")
L8_entry_shares  =  input.float(10,  title="Entry  8  shares")
L8_exit_date        =  input.time(timestamp("21  Aug  2022  00:00"),  title="Exit  8  Date",  group="Aight")
L8_exit_shares    =  input.float(10,  title="Exit  8  shares")
L9_entry_date      =  input.time(timestamp("01  Sep  2022  00:00"),  title="Entry  9  Date",  group="NEIN")
L9_entry_shares  =  input.float(10,  title="Entry  9  shares")
L9_exit_date        =  input.time(timestamp("21  Sep  2022  00:00"),  title="Exit  9  Date",  group="NEIN")
L9_exit_shares    =  input.float(10,  title="Exit  9  shares")
L10_entry_date    =  input.time(timestamp("01  Oct  2022  00:00"),  title="Entry  10  Date",  group="Deca")  //  the  jokes  are  unbearable  (poor  bear)
L10_entry_shares=  input.float(10,  title="Entry  10  shares")
L10_exit_date      =  input.time(timestamp("21  Oct  2022  00:00"),  title="Exit  10  Date",  group="Deca")
L10_exit_shares  =  input.float(10,  title="Exit  10  shares")
entryCondition1  =  L1_entry_date  ==  time  and  how_many_active>=1
entryCondition2  =  L2_entry_date  ==  time  and  how_many_active>=2
entryCondition3  =  L3_entry_date  ==  time  and  how_many_active>=3
entryCondition4  =  L4_entry_date  ==  time  and  how_many_active>=4
entryCondition5  =  L5_entry_date  ==  time  and  how_many_active>=5
entryCondition6  =  L6_entry_date  ==  time  and  how_many_active>=6
entryCondition7  =  L7_entry_date  ==  time  and  how_many_active>=7
entryCondition8  =  L8_entry_date  ==  time  and  how_many_active>=8
entryCondition9  =  L9_entry_date  ==  time  and  how_many_active>=9
entryCondition10=  L10_entry_date  ==  time  and  how_many_active>=10
if  (entryCondition1)
        strategy.entry("1",  direction=direction,  qty=L1_entry_shares)
if  (entryCondition2)
        strategy.entry("2",  direction=direction,  qty=L2_entry_shares)
if  (entryCondition3)
        strategy.entry("3",  direction=direction,  qty=L3_entry_shares)
if  (entryCondition4)
        strategy.entry("4",  direction=direction,  qty=L4_entry_shares)
if  (entryCondition5)
        strategy.entry("5",  direction=direction,  qty=L5_entry_shares)
if  (entryCondition6)
        strategy.entry("6",  direction=direction,  qty=L6_entry_shares)
if  (entryCondition7)
        strategy.entry("7",  direction=direction,  qty=L7_entry_shares)
if  (entryCondition8)
        strategy.entry("8",  direction=direction,  qty=L8_entry_shares)
if  (entryCondition9)
        strategy.entry("9",  direction=direction,  qty=L9_entry_shares)
if  (entryCondition10)
        strategy.entry("10",  direction=direction,  qty=L10_entry_shares)
closeCondition1  =  L1_exit_date  ==  time  and  how_many_active>=1
closeCondition2  =  L2_exit_date  ==  time  and  how_many_active>=2
closeCondition3  =  L3_exit_date  ==  time  and  how_many_active>=3
closeCondition4  =  L4_exit_date  ==  time  and  how_many_active>=4
closeCondition5  =  L5_exit_date  ==  time  and  how_many_active>=5
closeCondition6  =  L6_exit_date  ==  time  and  how_many_active>=6
closeCondition7  =  L7_exit_date  ==  time  and  how_many_active>=7
closeCondition8  =  L8_exit_date  ==  time  and  how_many_active>=8
closeCondition9  =  L9_exit_date  ==  time  and  how_many_active>=9
closeCondition10=  L10_exit_date  ==  time  and  how_many_active>=10
if  (closeCondition1)
        strategy.close("1",  "C1",  qty=L1_exit_shares)
if  (closeCondition2)
        strategy.close("2",  "C2",  qty=L2_exit_shares)
if  (closeCondition3)
        strategy.close("3",  "C3",  qty=L3_exit_shares)
if  (closeCondition4)
        strategy.close("4",  "C4",  qty=L4_exit_shares)
if  (closeCondition5)
        strategy.close("5",  "C5",  qty=L5_exit_shares)
if  (closeCondition6)
        strategy.close("6",  "C6",  qty=L6_exit_shares)
if  (closeCondition7)
        strategy.close("7",  "C7",  qty=L7_exit_shares)
if  (closeCondition8)
        strategy.close("8",  "C8",  qty=L8_exit_shares)
if  (closeCondition9)
        strategy.close("9",  "C9",  qty=L9_exit_shares)
if  (closeCondition10)
        strategy.close("10",  "C10",  qty=L10_exit_shares)
Simple_Entry_Table  =  table.new(position=position.top_right,  columns  =  2,  rows=4,  frame_width  =  1,  frame_color  =  color.gray)
table.cell(Simple_Entry_Table,  column  =  0,  row  =  0,  text="Je  Buurman  -  Simple  Manual  Entries",  text_color=color.rgb(0,255,0)),            table.cell(Simple_Entry_Table,  column  =  1,  row  =  0,  text="",  text_color=color.gray)
table.cell(Simple_Entry_Table,  column  =  0,  row  =  1,  text="Succesful  Trades",  text_color=color.gray,  text_halign  =  text.align_left),  table.cell(Simple_Entry_Table,  column  =  1,  row  =  1,  text=str.tostring(strategy.wintrades),  text_color=color.gray,  text_halign  =  text.align_left)
table.cell(Simple_Entry_Table,  column  =  0,  row  =  2,  text="Open  Trades",  text_color=color.gray,  text_halign  =  text.align_left),            table.cell(Simple_Entry_Table,  column  =  1,  row  =  2,  text=str.tostring(strategy.opentrades),  text_color=color.gray,  text_halign  =  text.align_left)
table.cell(Simple_Entry_Table,  column  =  0,  row  =  3,  text="Profit  or  Loss",  text_color=color.gray,  text_halign  =  text.align_left),      table.cell(Simple_Entry_Table,  column  =  1,  row  =  3,  text=syminfo.currency  +  "  "  +  str.tostring(strategy.netprofit,'#.##'),  text_color=strategy.netprofit>0?color.green:strategy.netprofit<0?color.red:color.gray,  text_halign  =  text.align_left)
table.merge_cells(Simple_Entry_Table,  start_column  =  0,  start_row  =  0,  end_column  =  1,  end_row  =  0)
Expand (129 lines)
