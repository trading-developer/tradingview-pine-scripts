Script Name: MTSPMAC + MBHB BTCUSDT 15m Strategy
Author: dannylimardi
Description: MTSPMAC by informanerd and MBHB by Jay Rogers in one strategy
PineScript code:

Pine Script™ strategy
MTSPMAC + MBHB BTCUSDT 15m Strategy
//  ©  informanerd
//@version=4
strategy("MultiType  Shifting  Predictive  MAs  Crossover",  shorttitle  =  "MTSPMAC  +  MBHB  Strategy",  overlay  =  true)
//inputs
predict  =  input(true,  "Show  MA  Prediction  Tails")
trendFill  =  input(true,  "Fill  Between  MAs  Based  on  Trend")
signal  =  input(true,  "Show  Cross  Direction  Signals")
showMA1  =  input(true,  "[  Show  Fast  Moving  Average  ]══════════")
type1  =  input("MAEMA  (Momentum  Adjusted  Exponential)",  "Fast  MA  Type",  options  =  ["MAEMA  (Momentum  Adjusted  Exponential)",  "DEMA  (Double  Exponential)",  "EMA  (Exponential)",  "HMA  (Hull)",  "LSMA  (Least  Squares)",  "RMA  (Adjusted  Exponential)",  "SMA  (Simple)",  "SWMA  (Symmetrically  Weighted)",  "TEMA  (Triple  Exponential)",  "TMA  (Triangular)",  "VMA  /  VIDYA  (Variable  Index  Dynamic  Average)",  "VWMA  (Volume  Weighted)",  "WMA  (Weighted)"])
src1  =  input(high,  "Fast  MA  Source")
len1  =  input(80,  "Fast  MA  Length",  minval  =  2)
shift1  =  input(0,  "Fast  MA  Shift")
maThickness1  =  input(2,  "Fast  MA  Thickness",  minval  =  1)
trendColor1  =  input(false,  "Color  Fast  MA  Based  on  Detected  Trend")
showBand1  =  input(false,  "Show  Fast  MA  Range  Band")
atrPer1  =  input(20,  "Fast  Band  ATR  Lookback  Period")
atrMult1  =  input(3,  "Fast  Band  ATR  Multiplier")
showMA2  =  input(true,  "[  Show  Slow  Moving  Average  ]══════════")
type2  =  input("MAEMA  (Momentum  Adjusted  Exponential)",  "Slow  MA  Type",  options  =  ["MAEMA  (Momentum  Adjusted  Exponential)",  "DEMA  (Double  Exponential)",  "EMA  (Exponential)",  "HMA  (Hull)",  "LSMA  (Least  Squares)",  "RMA  (Adjusted  Exponential)",  "SMA  (Simple)",  "SWMA  (Symmetrically  Weighted)",  "TEMA  (Triple  Exponential)",  "TMA  (Triangular)",  "VMA  /  VIDYA  (Variable  Index  Dynamic  Average)",  "VWMA  (Volume  Weighted)",  "WMA  (Weighted)"])
src2  =  input(close,  "Slow  MA  Source")
len2  =  input(144,  "Slow  MA  Length",  minval  =  2)
shift2  =  input(0,  "Slow  MA  Shift")
maThickness2  =  input(2,  "Slow  MA  Thickness",  minval  =  1)
trendColor2  =  input(false,  "Color  Slow  MA  Based  on  Detected  Trend")
showBand2  =  input(false,  "Show  Slow  MA  Range  Band")
atrPer2  =  input(20,  "Slow  Band  ATR  Lookback  Period")
atrMult2  =  input(3,  "Slow  Band  ATR  Multiplier")
//ma  calculations
ma(type,  src,  len)  =>
        if  type  ==  "MAEMA  (Momentum  Adjusted  Exponential)"
                goldenRatio  =  (1  +  sqrt(5))  /  2
                momentumLen  =  round(len  /  goldenRatio),  momentum  =  change(src,  momentumLen),  probabilityLen  =  len  /  goldenRatio  /  goldenRatio
                ema(src  +  (momentum  +  change(momentum,  momentumLen)  *  0.5)  *  sum(change(src)  >  0  ?  1  :  0,  round(probabilityLen))  /  probabilityLen,  len)
        else  if  type  ==  "DEMA  (Double  Exponential)"
                2  *  ema(src,  len)  -  ema(ema(src,  len),  len)
        else  if  type  ==  "EMA  (Exponential)"
                ema(src,  len)
        else  if  type  ==  "HMA  (Hull)"
                wma(2  *  wma(src,  len  /  2)  -  wma(src,  len),  round(sqrt(len)))
        else  if  type  ==  "LSMA  (Least  Squares)"
                3  *  wma(src,  len)  -  2  *  sma(src,  len)
        else  if  type  ==  "RMA  (Adjusted  Exponential)"
                rma(src,  len)
        else  if  type  ==  "SMA  (Simple)"
                sma(src,  len)
        else  if  type  ==  "SWMA  (Symmetrically  Weighted)"
                swma(src)
        else  if  type  ==  "TEMA  (Triple  Exponential)"
                3  *  ema(src,  len)  -  3  *  ema(ema(src,  len),  len)  +  ema(ema(ema(src,  len),  len),  len)
        else  if  type  ==  "TMA  (Triangular)"
                swma(wma(src,  len))
        else  if  type  ==  "VMA  /  VIDYA  (Variable  Index  Dynamic  Average)"
                smoothing  =  2  /  len,  volIndex  =  abs(cmo(src,  len)  /  100)
                vma  =  0.,  vma  :=  (smoothing  *  volIndex  *  src)  +  (1  -  smoothing  *  volIndex)  *  nz(vma[1])
        else  if  type  ==  "VWMA  (Volume  Weighted)"
                vwma(src,  len)
        else  if  type  ==  "WMA  (Weighted)"
                wma(src,  len)
ma1  =  ma(type1,  src1,  len1)
ma2  =  ma(type2,  src2,  len2)
//ma  predictions
pma11  =  len1  >  2  ?  (ma(type1,  src1,  len1  -  1)  *  (len1  -  1)  +  src1  *  1)  /  len1  :  na
pma12  =  len1  >  3  ?  (ma(type1,  src1,  len1  -  2)  *  (len1  -  2)  +  src1  *  2)  /  len1  :  na
pma13  =  len1  >  4  ?  (ma(type1,  src1,  len1  -  3)  *  (len1  -  3)  +  src1  *  3)  /  len1  :  na
pma21  =  len2  >  2  ?  (ma(type2,  src2,  len2  -  1)  *  (len2  -  1)  +  src2  *  1)  /  len2  :  na
pma22  =  len2  >  3  ?  (ma(type2,  src2,  len2  -  2)  *  (len2  -  2)  +  src2  *  2)  /  len2  :  na
pma23  =  len2  >  4  ?  (ma(type2,  src2,  len2  -  3)  *  (len2  -  3)  +  src2  *  3)  /  len2  :  na
//ma  range  bands
r1  =  atr(atrPer1)  *  atrMult1
hBand1  =  ma1  +  r1
lBand1  =  ma1  -  r1
r2  =  atr(atrPer2)  *  atrMult2
hBand2  =  ma2  +  r2
lBand2  =  ma2  -  r2
//drawings
ma1Plot  =  plot(showMA1  ?  ma1  :  na,  "Fast  MA",  trendColor1  and  ma1  >  src1  ?  color.maroon  :  trendColor1  and  ma1  <  src1  ?  color.lime  :  trendColor1  ?  color.gray  :  color.red,  maThickness1,  offset  =  shift1)
ma2Plot  =  plot(showMA2  ?  ma2  :  na,  "Slow  MA",  trendColor2  and  ma2  >  src2  ?  color.maroon  :  trendColor2  and  ma2  <  src2  ?  color.lime  :  trendColor2  ?  color.gray  :  color.green,  maThickness2,  offset  =  shift2)
fill(ma1Plot,  ma2Plot,  trendFill  and  ma1  >  ma2  ?  color.lime  :  trendFill  and  ma1  <  ma2  ?  color.maroon  :  na,  90)
plot(showMA1  and  predict  ?  pma11  :  na,  "PossibleMA1-1",  trendColor1  and  ma1  >  src1  ?  color.maroon  :  trendColor1  and  ma1  <  src1  ?  color.lime  :  trendColor1  ?  color.gray  :  color.red,  style  =  plot.style_circles,  offset  =  shift1  +  1,  show_last  =  1)
plot(showMA1  and  predict  ?  pma12  :  na,  "PossibleMA1-2",  trendColor1  and  ma1  >  src1  ?  color.maroon  :  trendColor1  and  ma1  <  src1  ?  color.lime  :trendColor1?color.gray:color.red,style=plot.style_circles,offset=shift1+2,show_last=1)
plot(showMA1andpredict?pma13:na,"PossibleMA1-3",trendColor1andma1>src1?color.maroon:trendColor1andma1<src1?color.lime:trendColor1?color.gray:color.red,style=plot.style_circles,offset=shift1+3,show_last=1)
plot(showMA2andpredict?pma21:na,"PossibleMA2-1",trendColor2andma2>src2?color.maroon:trendColor2andma2<src2?color.lime:trendColor2?color.gray:color.green,style=plot.style_circles,offset=shift2+1,show_last=1)
plot(showMA2andpredict?pma22:na,"PossibleMA2-2",trendColor2andma2>src2?color.maroon:trendColor2andma2<src2?color.lime:trendColor2?color.gray:color.green,style=plot.style_circles,offset=shift2+2,show_last=1)
plot(showMA2andpredict?pma23:na,"PossibleMA2-3",trendColor2andma2>src2?color.maroon:trendColor2andma2<src2?color.lime:trendColor2?color.gray:color.green,style=plot.style_circles,offset=shift2+3,show_last=1)
plot(showBand1?hBand1:na,"FastHigherBand",trendColor1andma1>src1?color.maroon:trendColor1andma1<src1?color.lime:trendColor1?color.gray:color.red,offset=shift1)
plot(showBand1?lBand1:na,"FastLowerBand",trendColor1andma1>src1?color.maroon:trendColor1andma1<src1?color.lime:trendColor1?color.gray:color.red,offset=shift1)
plot(showBand2?hBand2:na,"SlowHigherBand",trendColor2andma2>src2?color.maroon:trendColor2andma2<src2?color.lime:trendColor2?color.gray:color.green,offset=shift2)
plot(showBand2?lBand2:na,"SlowLowerBand",trendColor2andma2>src2?color.maroon:trendColor2andma2<src2?color.lime:trendColor2?color.gray:color.green,offset=shift2)
//crosses&alerts
up=crossover(ma1,ma2)
down=crossover(ma2,ma1)
plotshape(signal?up:na,"Buy",shape.triangleup,location.belowbar,color.green,offset=shift1,size=size.small)
plotshape(signal?down:na,"Sell",shape.triangledown,location.abovebar,color.red,offset=shift1,size=size.small)
alertcondition(up,"Buy","Buy")
alertcondition(down,"Sell","Sell")
//@version=1
//Title:"MultiBollingerHeatBands-EMA/Breakoutoptions".
//Author:JayRogers
//
//*Description*
//Short:It'syourBasicBollingerBands,but3ofthem,andsomepointythings.
//
//Long:ThreestackedsmabasedBollingerBandsdesignedjusttogiveyouaquickvisualonthe"heat"ofmovement.
//Setinnerbandasyouwouldexpect,thensetyourpreferredadditionalmultiplierincrementsfortheouter2bands.
//OptiontouseEMAasalternativebasis,ratherthanSMA.
//Breakoutindicationshapes,whichhavetheirownmultiplierseperatefromtheBB's;butstilltiedtosamelength/period.
//strategy(shorttitle="[JR]MBHB_EBO",title="[JR]MultiBollingerHeatBands-EMA/Breakoutoptions",overlay=true)
//BollingerBandsInputs
bb_use_ema=input(false,title="UseEMABasis?")
bb_length=input(80,minval=1,title="BollingerLength")
bb_source=input(close,title="BollingerSource")
bb_mult=input(1.0,title="BaseMultiplier",minval=0.001,maxval=50)
bb_mult_inc=input(1,title="MultiplierIncrement",minval=0.001,maxval=2)
//BreakoutIndicatorInputs
break_mult=input(3,title="BreakoutMultiplier",minval=0.001,maxval=50)
breakhigh_source=input(high,title="HighBreakSource")
breaklow_source=input(low,title="LowBreakSource")
bb_basis=bb_use_ema?ema(bb_source,bb_length):sma(bb_source,bb_length)
//Deviation
//*I'msurethere'sawayIcouldwritesomeofthiscleaner,butmeh.
dev=stdev(bb_source,bb_length)
bb_dev_inner=bb_mult*dev
bb_dev_mid=(bb_mult+bb_mult_inc)*dev
bb_dev_outer=(bb_mult+(bb_mult_inc*2))*dev
break_dev=break_mult*dev
//Upperbands
inner_high=bb_basis+bb_dev_inner
mid_high=bb_basis+bb_dev_mid
outer_high=bb_basis+bb_dev_outer
//LowerBands
inner_low=bb_basis-bb_dev_inner
mid_low=bb_basis-bb_dev_mid
outer_low=bb_basis-bb_dev_outer
//BreakoutDeviation
break_high=bb_basis+break_dev
break_low=bb_basis-break_dev
//plotbasis
plot(bb_basis,title="BasisLine",color=color.yellow,transp=50)
//plotandfillupperbands
ubi=plot(inner_high,title="UpperBandInner",color=color.red,transp=90)
ubm=plot(mid_high,title="UpperBandMiddle",color=color.red,transp=85)
ubo=plot(outer_high,title="UpperBandOuter",color=color.red,transp=80)
fill(ubi,ubm,title="UpperBandsInnerFill",color=color.red,transp=90)
fill(ubm,ubo,title="UpperBandsOuterFill",color=color.red,transp=80)
//plotandfilllowerbands
lbi=plot(inner_low,title="LowerBandInner",color=color.green,transp=90)
lbm=plot(mid_low,title="LowerBandMiddle",color=color.green,transp=85)
lbo=plot(outer_low,title="LowerBandOuter",color=color.green,transp=80)
fill(lbi,lbm,title="LowerBandsInnerFill",color=color.green,transp=90)
fill(lbm,lbo,title="LowerBandsOuterFill",color=color.green,transp=80)
//centerchannelfill
fill(ubi,lbi,title="CenterChannelFill",color=color.silver,transp=100)
//plotbreakouts
plotshape(breakhigh_source>=break_high,title="HighBreakout",style=shape.triangledown,location=location.abovebar,size=size.tiny,color=color.white,transp=0)
plotshape(breaklow_source<=break_low,title="LowBreakout",style=shape.triangleup,location=location.belowbar,size=size.tiny,color=color.white,transp=0)
High_Break=breakhigh_source>=break_high
Low_Break=breaklow_source<=break_low
//Conditions
Stop_Momentum=low<ma1
//StrategyTester
strategy.entry("long",strategy.long,when=(upand(hlc3<inner_high)))
strategy.close("long",when=down)
strategy.entry("longwickdown",strategy.long,when=Low_Break)
strategy.close("longwickdown",when=(high>ma1))
//truesignalstest
//varwinCount=0,varloseCount=0,testBarIndex=1
//if(up[testBarIndex]andclose>close[testBarIndex])or(down[testBarIndex]andclose<close[testBarIndex])
//label.new(bar_index,0,"W",yloc=yloc.abovebar,color=color.green)
//winCount:=winCount+1
//elseif(up[testBarIndex]andclose<close[testBarIndex])or(down[testBarIndex]andclose>close[testBarIndex])
//label.new(bar_index,0,"L",yloc=yloc.abovebar,color=color.red)
//loseCount:=loseCount+1
//winRate=label.new(time+(time-time[1])*2,ohlc4,tostring(round(winCount/(winCount+loseCount)*100))+"%",xloc=xloc.bar_time,color=color.orange,style=label.style_label_left)
//ifnotna(winRate[1])
//label.delete(winRate[1])
Expand (216 lines)
