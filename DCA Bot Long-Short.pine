Script Name: DCA Bot Long-Short
Author: fiddlah
Description: Thanks to @TheTradingParrot for the inspiration and knowledge shared.
 Thanks to @ericlin0122 for the original DCA Bot Emulator which is the backbone of this strategy.
 The script simulates DCA strategy with parameters used in 3commas DCA bots for futures trading. Experiment with parameters
 to find your trading setup.
 Beware how large your total leveraged...
PineScript code:

Pine Scriptâ„¢ strategy
DCA Bot Long/Short
//  Thanks  to  @TheTradingParrot  for  the  inspiration  and  knowledge  shared.
//  Thanks  to  @ericlin0122  for  the  original  DCA  Bot  Emulator  which  is  the  backbone  of  this  strategy.
//  The  script  simulates  DCA  strategy  with  parameters  used  in  3commas  DCA  bots  for  futures  trading.  Experiment  with  parameters
//  to  find  your  trading  setup.
//  Beware  how  large  your  total  leveraged  position  is  and  how  far  can  market  go  before  you  get  liquidated!
//  Do  that  with  the  help  of  futures  liquidation  calculators  you  can  find  online!
//
//                                                                            I`ve  added:
//
//  1)  an  internal  average  price  and  profit  calculating,  instead  of  TV`s  native  one,  which  is  subject  to  severe  slippage.
//  2)  I`ve  built  a  graphic  interface,  so  levels  are  clearly  visible  and  backtest  analyzing  made  easier.
//  3)  now  both  Long  &  Short  direction  of  the  strategy  exist.
//  4)  trailing  TP  which  was  featured  in  the  initial  script  has  been  removed  because  TV`s  execution  model  makes
//        it  impossible  to  know  how  the  real  world  trailing  would  have  unfolded.
//  5)  the  table  is  self  explanatory,  and  it  is  there  to  help  you  discover  what  happened  and  where.
//  6)  vertical  colored  lines  appear  when  the  new  maximum  deviation  from  the  original  price  has
//        been  reached
//        All  the  trading  happens  with  total  account  capital,  and  all  order  sizes  inputs  are  in  percents
//
//
//                                                                    Known  issues:
//
//  When  deviation  is  small,  and  the  same  candle  triggers  safety  AND  the  close  order,  the  initial  orders  are  closed,  but  a
//  new  one  opens  on  the  next  candle.  This  is  "resolved"  by  closing  the  unwanted  trade  forcefully  on  the  next  candle,  affecting
//  profit  calculating  minimally  and  guaranteeing  that  what  should  be  closed  has  been  closed.
//
//  The  code  could  be  improved  through  use  of  arrays,  making  the  table  flexible  so  the  number  of  rows  should  be  dynamic  depending
//  on  the  number  of  SOs.
//
//
//                                                                    !!!!!  IMPORTANT!!!!!
//
//  This  strategy  script  is  made  to  receieve  a  signal  from  an  exterior  study  script,  which  should  plot  +100  for  long  or  -100  for  short
//  entry  (that  is  by  default  -  values  can  be  changed  in  the  strategy  settings  menu).  That  plot  should  be  found  in  "Enter  Trigger"  input
//  dropdown  menu  at  the  bottom  of  strategy  settings  menu.  Removing  the  "and  trigger  ==  long/short_trigger"  condition  from  strategy  entry
//  conditions  makes  the  strategy  open  trades  ASAP.
//  Cheers!
//@version=4
strategy("DCA  Bot  L/S",  overlay=true,  pyramiding=999,  calc_on_every_tick=false,  default_qty_type=strategy.percent_of_equity,  default_qty_value=1,  initial_capital=5000,  commission_value  =  0.04,  slippage  =  2)
//  Date  Ranges
show_table  =  input(true,  title="Show  table",  type=input.bool)
text_size_switch  =  input(true,  title="Small  text  in  the  table",  type=input.bool)
direction  =  input(defval  =  "All",  title  =  "Trading  Direction",  options=["All",  "Long",  "Short"])
from_month  =  input(defval  =  5,  title  =  "From  Month",  minval  =  1,  maxval  =  12)
from_day      =  input(defval  =  1,  title  =  "From  Day",  minval  =  1,  maxval  =  31)
from_year    =  input(defval  =  2021,  title  =  "From  Year")
to_month      =  input(defval  =  12,  title  =  "To  Month",  minval  =  1,  maxval  =  12)
to_day          =  input(defval  =  1,  title  =  "To  Day",  minval  =  1,  maxval  =  31)
to_year        =  input(defval  =  2021,  title  =  "To  Year")
start    =  timestamp(from_year,  from_month,  from_day,  00,  00)    //backteststartwindow
finish=timestamp(to_year,to_month,to_day,23,59)//backtestfinishwindow
window=time>=startandtime<=finish?true:false//createfunction"withinwindowoftime"
source_type=input("Close","Source",options=["Close","Open","High","Low","HL2","HLC3","OHLC4","MedianBody","WeightedClose","TrendBiased","TrendBiasedExtreme"])
source_function(type)=>
iftype=="Close"
close
elseiftype=="Open"
open
elseiftype=="High"
high
elseiftype=="Low"
low
elseiftype=="HL2"
hl2
elseiftype=="HL3"
hlc3
elseiftype=="OHLC4"
ohlc4
elseiftype=="MedianBody"
(open+close)/2
elseiftype=="WeightedClose"
(high+low+2*close)/4
elseiftype=="TrendBiased"
close>open?(high+close)/2:(low+close)/2
elseiftype=="TrendBiasedExtreme"
close>open?high:low
truncate(number,decimals)=>
factor=pow(10,decimals)
int(number*factor)/factor
varlong=false
varshort=true
ifdirection=="All"
long:=true
short:=true
elseifdirection=="Long"
long:=true
short:=false
elseifdirection=="Short"
long:=false
short:=true
//StrategyInputs
price_deviation=input(1.1,type=input.float,title='Pricedeviationtoopensafetyorders(%)',step=0.1,minval=0.0)/100
take_profit=input(1.2,type=input.float,title='TargetTakeProfit(%)',step=0.1,minval=0.0)/100
base_order=input(4.2,type=input.float,title='baseorder')
safe_order=input(4.2,type=input.float,title='safeorder')
safe_order_volume_scale=input(2,type=input.float,step=0.1,title='Safetyordervolumescale')
safe_order_step_scale=input(1,type=input.float,step=0.1,title='Safetyorderstepscale')
max_safe_order=input(6,title='maxno.ofsafeorders')
price_S_deviation=input(1.0,type=input.float,title='Pricedeviationtoopenshortsafetyorders(%)',step=0.1,minval=0.0)/100
take_S_profit=input(1.0,type=input.float,title='ShortTargetTakeProfit(%)',step=0.1,minval=0.0)/100
base_S_order=input(4.2,type=input.float,title='basesellorder')
safe_S_order=input(4.2,type=input.float,title='safesellorder')
safe_S_order_volume_scale=input(2,type=input.float,step=0.1,title='Safetysellordervolumescale')
safe_S_order_step_scale=input(1.25,type=input.float,step=0.1,title='Safetysellorderstepscale')
max_S_safe_order=input(6,title='maxno.ofsellsafeorders')
//Triggers
long_trigger=input(title="Longtriggervalue",type=input.integer,defval=100)
short_trigger=input(title="Shorttriggervalue",type=input.integer,defval=-100)
trigger=input(title="Entertrigger",type=input.source,defval=close)
varcurrent_so=0
varcurrent_S_so=0
varinitial_order=0.0
varinitial_S_order=0.0
varoriginal_ttp_value=0.0
varquantity=0.0
varentry_price=0.0
varfirstBarTime=0.0
varmaxDiffDays=0.0
varsoCount=0
varSO1=0
varSO2=0
varSO3=0
varSO4=0
varSO5=0
varSO6=0
varSO7=0
varnoSO=0
varinitial_price=0.0
varinitial_S_price=0.0
varprice_drop=0.0
varprice_pump=0.0
varmax_drop=0.0
varmax_pump=0.0
varpump_date=0
varpump_month=0
vardrop_date=0
vardrop_month=0
varlongest_trade_day=0
varlongest_trade_month=0
vartake_profit_level=0.0
vartake_S_profit_level=0.0
vartp_plot=0.0
vartp_S_plot=0.0
varthreshold=0.0
varS_threshold=0.0
timeDiff=time-firstBarTime
maxDev=0.0
maxSDev=0.0
closedTrades=0
vartradeCount=0
vari=0
varavg_price=0.0
vartotal_funds_in_trade=0.0
vartotal_qty_in_trade=0.0
varcapital=100.0
//Turnthattimedifferenceintodays
diffDays=timeDiff/86400000
//CalculateourTPlevels
take_profit_level:=avg_price*(1+take_profit)
take_S_profit_level:=avg_price*(1-take_S_profit)
//FirstPosition
fori=0tomax_safe_order-1
maxDev:=int((maxDev+(price_deviation*100*pow(safe_order_step_scale,i)))*100)/100
fori=0tomax_S_safe_order-1
maxSDev:=int((maxSDev+(price_S_deviation*100*pow(safe_S_order_step_scale,i)))*100)/100
strategy.close_all(abs(strategy.position_size)!=0andcurrent_so[1]==0)

iflongand(strategy.position_size==0andsource_function(source_type)>0)andwindowandtrigger==long_trigger
strategy.entry("Long@"+tostring(source_function(source_type)),strategy.long,qty=(strategy.equity*base_order/100)/source_function(source_type))
initial_order:=source_function(source_type)
current_so:=1
initial_price:=close
price_drop:=close
original_ttp_value:=0
firstBarTime:=time
tradeCount:=tradeCount+1
avg_price:=close
total_funds_in_trade:=avg_price*base_order
total_qty_in_trade:=base_order
elseifshortand(strategy.position_size==0andsource_function(source_type)>0)andwindowandtrigger==short_trigger
strategy.entry("Short@"+tostring(source_function(source_type)),strategy.short,qty=(strategy.equity*base_S_order/100)/source_function(source_type))
initial_S_order:=source_function(source_type)
current_so:=1
firstBarTime:=time
tradeCount:=tradeCount+1
initial_S_price:=close
price_pump:=close
avg_price:=close
total_funds_in_trade:=avg_price*base_S_order
total_qty_in_trade:=base_S_order
//makestheredandgreenlineplotprettyatthepositionopening
ifstrategy.position_size==0
threshold:=low[1]
S_threshold:=high[1]
//Safetyorderlevels
//Long
ifstrategy.position_size>0andi==0
if(safe_order_step_scale==1.0)
threshold:=initial_order-(initial_order*price_deviation*safe_order_step_scale*current_so)
else
threshold:=initial_order-(initial_order*((price_deviation*(pow(safe_order_step_scale,current_so)-1))/(safe_order_step_scale-1)))
//Short
elseifstrategy.position_size<0andi==0
if(safe_S_order_step_scale==1.0)
S_threshold:=initial_S_order*(1+price_S_deviation*current_so)
else
S_threshold:=initial_S_order*(1+((price_S_deviation*(pow(safe_S_order_step_scale,current_so)-1))/(safe_S_order_step_scale-1)))
//AverageDown
ifcurrent_so>0andi==0andstrategy.position_size>0andlow<=thresholdandcurrent_so<=max_safe_order
strategy.entry("SO"+tostring(current_so)+"@"+tostring(source_function(source_type)),strategy.long,qty=strategy.equity*safe_order/100*pow(safe_order_volume_scale,(current_so-1))/source_function(source_type))
total_funds_in_trade:=total_funds_in_trade+threshold*safe_order*pow(safe_order_volume_scale,current_so-1)
total_qty_in_trade:=total_qty_in_trade+safe_order*pow(safe_order_volume_scale,current_so-1)
avg_price:=total_funds_in_trade/total_qty_in_trade
current_so:=current_so+1
tradeCount:=tradeCount+1
//ShortAverageUp
ifcurrent_so>0andi==0andstrategy.position_size<0andhigh>=S_thresholdandcurrent_so<=max_S_safe_order
strategy.entry("SSO"+tostring(current_so)+"@"+tostring(source_function(source_type)),strategy.short,qty=strategy.equity*safe_S_order/100*pow(safe_S_order_volume_scale,(current_so-1))/source_function(source_type))
total_funds_in_trade:=total_funds_in_trade+S_threshold*safe_S_order*pow(safe_S_order_volume_scale,current_so-1)
total_qty_in_trade:=total_qty_in_trade+safe_S_order*pow(safe_S_order_volume_scale,current_so-1)
avg_price:=total_funds_in_trade/total_qty_in_trade
current_so:=current_so+1
tradeCount:=tradeCount+1
//TakeProfit!
ifi==1
strategy.close_all()
i:=0
if(take_profit_level<=highandstrategy.position_size>0)
strategy.close_all(comment="Close@"+tostring(source_function(source_type)))
soCount:=current_so
current_so:=0
original_ttp_value:=0
price_drop:=na
initial_price:=na
diffDays:=(time-firstBarTime)
ifdiffDays>maxDiffDays
maxDiffDays:=diffDays
longest_trade_day:=dayofmonth
longest_trade_month:=month
i:=1
initial_order:=0.0
avg_price:=na
capital:=capital*(1+total_qty_in_trade*take_profit/100)

//TakeShortProfit!
if(take_S_profit_level>=lowandstrategy.position_size<0)
strategy.close_all(comment="CloseShort@"+tostring(source_function(source_type)))
soCount:=current_so
current_so:=0
price_pump:=na
initial_S_price:=na
diffDays:=(time-firstBarTime)
ifdiffDays>maxDiffDays
maxDiffDays:=diffDays
initial_S_order:=0.0
avg_price:=na
capital:=capital*(1+total_qty_in_trade*take_S_profit/100)
//Tablebuildingandcalculations
ifstrategy.position_size==0
ifsoCount==1
noSO:=noSO+1
elseifsoCount==2
SO1:=SO1+1
elseifsoCount==3
SO2:=SO2+1
elseifsoCount==4
SO3:=SO3+1
elseifsoCount==5
SO4:=SO4+1
elseifsoCount==6
SO5:=SO5+1
elseifsoCount==7
SO6:=SO6+1
elseifsoCount==8
SO7:=SO7+1
soCount:=0
closedTrades:=noSO+SO1*2+SO2*3+SO3*4+SO4*5+SO5*6+SO6*7+SO7*8
iflow<price_dropandwindowandstrategy.position_size>0
price_drop:=low
ifmax_drop<int((1-(price_drop/initial_price))*10000)/100
max_drop:=int((1-(price_drop/initial_price))*10000)/100
drop_date:=dayofmonth(time)
drop_month:=month(time)
bgcolor(max_drop[1]<max_drop?color.aqua:na,transp=50)
ifhigh>price_pumpandwindowandstrategy.position_size<0
price_pump:=high
ifmax_pump<int(((price_pump/initial_S_price)-1)*10000)/100
max_pump:=int(((price_pump/initial_S_price)-1)*10000)/100
pump_date:=dayofmonth(time)
pump_month:=month(time)
bgcolor(max_pump[1]<max_pump?color.purple:na,transp=70)
iftake_profit_level>0andstrategy.position_size>0
tp_plot:=take_profit_level
else
tp_plot:=close
iftake_S_profit_level>0andstrategy.position_size<0
tp_S_plot:=take_S_profit_level
else
tp_S_plot:=close
//Plottingthelevels
p1=plot(tp_plot,color=strategy.position_size<=0?na:#00ff00)
p2=plot(avg_price,color=strategy.position_size==0?na:color.white)
p3=plot(threshold,color=strategy.position_size<=0?na:#ff0000)
p4=plot(tp_S_plot,color=strategy.position_size>=0?na:#00ff00)
p5=plot(S_threshold,color=strategy.position_size>=0?na:#ff0000)
fill(p1,p2,color=strategy.position_size>0?color.green:na,transp=90)
fill(p2,p3,strategy.position_size>0?color.red:na,transp=90)
fill(p4,p2,color=strategy.position_size<0?color.green:na,transp=90)
fill(p5,p2,color=strategy.position_size<0?color.red:na,transp=90)
profit_color=strategy.openprofit<0?color.red:color.green
text_size=text_size_switch?size.small:size.normal
//plot(strategy.opentrades)
//plot(current_so,color=color.yellow)
//plot(abs(strategy.position_size),color=color.red)
//plot(quantity,color=color.purple)

//Tableformatting
ifshow_table
varTable=table.new(position.top_right,columns=2,rows=20,border_width=1,bgcolor=color.black,border_color=color.gray)
table.cell(table_id=Table,column=0,row=0,text_color=color.gray,text_size=text_size,text="NetProfit")
table.cell(table_id=Table,column=1,row=0,text=tostring(int((capital-100)*100)/100)+"%",text_size=text_size,text_color=color.lime)
table.cell(table_id=Table,column=0,row=1,text_color=color.gray,text_size=text_size,text="MaxDeviation")
table.cell(table_id=Table,column=1,row=1,text=tostring(maxDev)+"%",text_size=text_size,text_color=color.orange)
table.cell(table_id=Table,column=0,row=2,text_color=color.gray,text_size=text_size,text="MaxShortDev")
table.cell(table_id=Table,column=1,row=2,text=tostring(maxSDev)+"%",text_size=text_size,text_color=color.orange)
table.cell(table_id=Table,column=0,row=3,text="NoSO",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=3,text=tostring(noSO),text_size=text_size,text_color=color.olive)
table.cell(table_id=Table,column=0,row=4,text="SO1",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=4,text=tostring(SO1),text_size=text_size,text_color=color.olive)
table.cell(table_id=Table,column=0,row=5,text="SO2",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=5,text=tostring(SO2),text_size=text_size,text_color=color.olive)
table.cell(table_id=Table,column=0,row=6,text="SO3",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=6,text=tostring(SO3),text_size=text_size,text_color=color.olive)
table.cell(table_id=Table,column=0,row=7,text="SO4",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=7,text=tostring(SO4),text_size=text_size,text_color=color.olive)
table.cell(table_id=Table,column=0,row=8,text="SO5",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=8,text=tostring(SO5),text_size=text_size,text_color=color.olive)
table.cell(table_id=Table,column=0,row=9,text="SO6",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=9,text=tostring(SO6),text_size=text_size,text_color=color.olive)
table.cell(table_id=Table,column=0,row=10,text="SO7",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=10,text=tostring(SO7),text_size=text_size,text_color=color.olive)
table.cell(table_id=Table,column=0,row=11,text="Closed/Opentrades",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=11,text=tostring(strategy.closedtrades)+"/"+tostring(strategy.opentrades),text_size=text_size,text_color=color.olive)
table.cell(table_id=Table,column=0,row=12,text="CurrentDealTime",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=12,text=strategy.position_size!=0?tostring(int((time-firstBarTime)/8640000)/10)+"days":"0",text_size=text_size,text_color=color.green)
table.cell(table_id=Table,column=0,row=13,text="Unrealizedposition",text_size=text_size,text_color=color.gray)
table.cell(table_id=Table,column=1,row=13,text=tostring(int((strategy.openprofit/(strategy.initial_capital+strategy.netprofit))*10000)/100)+"%",text_size=text_size,text_color=profit_color)
table.cell(table_id=Table,column=0,row=14,text="Longestdeal:",text_size=text_size,text_color=color.orange)
table.cell(table_id=Table,column=1,row=14,text=tostring(int(maxDiffDays/8640000)/10)+"days,"+tostring(longest_trade_day)+"/"+tostring(longest_trade_month),text_size=text_size,text_color=color.red)
table.cell(table_id=Table,column=0,row=15,text="Maxpricedrop:",text_size=text_size,text_color=color.orange)
table.cell(table_id=Table,column=1,row=15,text=tostring(max_drop)+"%,"+tostring(drop_date)+"/"+tostring(drop_month),text_size=text_size,text_color=color.red)
table.cell(table_id=Table,column=0,row=16,text="Maxpricepump:",text_size=text_size,text_color=color.orange)
table.cell(table_id=Table,column=1,row=16,text=tostring(max_pump)+"%,"+tostring(pump_date)+"/"+tostring(pump_month),text_size=text_size,text_color=color.red)


Expand (388 lines)
