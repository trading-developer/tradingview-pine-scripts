Script Name: [fpemehd] Strategy Template
Author: DuDu95
Description: Hello Guys! Nice to meet you all!
This is my fourth script!
This is the Strategy Template for traders who wants to make their own strategy.
I made this based on the open source strategies by jason5480, kevinmck100, myncrypto. Thank you All!

### StopLoss
1. Can Choose Stop Loss Type: Percent, ATR, Previous Low / High.
2. Can Chosse inputs of each Stop Loss...
PineScript code:

Pine Script™ strategy
[fpemehd] Strategy Template
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  fpemehd
//  Thanks  to  myncrypto,  jason5480,  kevinmck100
//  @version=5
strategy(title                    =  '[fpemehd]  Strategy  Template',
            shorttitle                =  '[f]  Template',
            overlay                      =  true,
            pyramiding                =  0,
            currency                    =  currency.USD,
            default_qty_type    =  strategy.percent_of_equity,
            default_qty_value  =  100,
            commission_value    =  0.1,
            initial_capital      =  100000,
            max_bars_back          =  500,
            max_lines_count      =  150,
            max_labels_count    =  300)
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//                                            Time,  Direction,  Etc  -  Basic  Settings  Inputs
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//  1.  Time:  Based  on  UTC  +09:00
i_start                                  =  input.time  (defval  =  timestamp("20  Jan  1990  00:00  +0900"),  title  =  "Start  Date",  tooltip  =  "Choose  Backtest  Start  Date",  inline  =  "Start  Date",  group  =  "Time"  )
i_end                                      =  input.time  (defval  =  timestamp("20  Dec  2030  00:00  +0900"),  title  =  "End  Date",  tooltip  =  "Choose  Backtest  End  Date",  inline  =  "End  Date",  group  =  "Time"  )
inTime                                    =  time  >=  i_start  and  time  <=  i_end
//  2.  Inputs  for  direction:  Long?  Short?  Both?
i_longEnabled                      =  input.bool  (defval  =  true  ,  title  =  "Long?",  tooltip  =  "Enable  Long  Position  Trade?",  inline  =  "Long  /  Short",  group  =  "Long  /  Short"  )
i_shortEnabled                    =  input.bool  (defval  =  true  ,  title  =  "Short?",  tooltip  =  "Enable  Short  Position  Trade?",  inline  =  "Long  /  Short",  group  =  "Long  /  Short"  )
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//                                            Filter  -  Inputs,  Indicaotrs
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//  3.  Use  Filters?  What  Filters?
i_ATRFilterOn                      =  input.bool  (defval  =  false  ,  title  =  "ATR  Filter  On?",  tooltip  =  "ATR  Filter  On?  Order  will  not  be  made  unless  filter  condition  is  fulfilled",  inline  =  "1",  group  =    "Filters")
i_ATRFilterLen                    =  input.int    (defval  =  14  ,  title  =  "Length  for  ATR  Filter",  minval  =  1  ,  maxval  =  100  ,  step  =  1  ,  tooltip  =  "",  inline  =  "2",  group  =  "Filters")
i_ATRSMALen                          =  input.int    (defval  =  40  ,  title  =  "SMA  Length  for  ATR  SMA",  minval  =  1  ,  maxval  =  100000  ,  step  =  1  ,  tooltip  =  "ATR  should  be  bigger  than  this",  inline  =  "2",  group  =  "Filters")
bool  i_ATRFilter                =  ta.atr(i_ATRFilterLen)  >=  ta.sma(ta.atr(length  =  i_ATRFilterLen),  i_ATRSMALen)  ?  true  :  false
bool  filterFulfilled        =  not  i_ATRFilterOn  or  i_ATRFilter
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//                                            Strategy  Logic  (Entry  &  Exit  Condition)  -  Inputs,  Indicators  for  Strategy
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
////  Indicators
//  Inputs  for  Strategy  Indicators
i_fastMALen                          =  input.int    (defval  =  21,  title  =  'Fast  SMA  Length',  minval  =  1,  inline  =  'MA  Length',  group  =  'Strategy')
i_slowMALen                          =  input.int    (defval  =  49,  title  =  'Slow  SMA  Length',  minval  =  1,  tooltip  =  'How  many  candles  back  to  calculte  the  fast/slow  SMA.',  inline  =  'MA  Length',  group  =  'Strategy')
//  Calculate  Indicators
float  indicator1                =  ta.sma(source  =  close,  length  =  i_fastMALen)
float  indicator2                =  ta.sma(source  =  close,  length  =  i_slowMALen)
//  Plot:  Indicators
var  indicator1Color          =  color.new(color  =  color.yellow,  transp  =  0)
plot(series  =  indicator1,  title  =  'indicator1',  color  =  indicator1Color,  linewidth  =  1,  style  =  plot.style_line)
var  indicator2Color          =  color.new(color  =  color.orange,  transp  =  0)
plot(series  =  indicator2,  title  =  'indicator2',  color  =  indicator2Color,  linewidth  =  1,  style  =  plot.style_line)
//////  Entry,  Exit
//  Long,  Short  Logic  with  Indicator
bool  crossover                    =  ta.crossover  (indicator1,  indicator2)
bool  crossunder                  =  ta.crossunder  (indicator1,  indicator2)
//  Basic  Cond  +  Long,  Short  Entry  Condition
bool  longCond                      =  (i_longEnabled  and  inTime)  and  (crossover)
bool  shortCond                    =  (i_shortEnabled  and  inTime)  and  (crossunder)
//  Basic  Cond  +  Long,  Short  Exit  Condition
bool  closeLong                    =  (i_longEnabled)  and  (crossunder)
bool  closeShort                  =  (i_shortEnabled)  and  (crossover)
//  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//  PositionControl
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Long,ShortEntryCondition+NotenteredPositionYet
boolopenLong=longCondandnot(strategy.opentrades.size(strategy.opentrades-1)>0)andfilterFulfilled
boolopenShort=shortCondandnot(strategy.opentrades.size(strategy.opentrades-1)<0)andfilterFulfilled
boolenteringTrade=openLongoropenShort
floatentryBarIndex=bar_index
//Long,ShortEntryFulfilledorAlreadyEntered
boolinLong=openLongorstrategy.opentrades.size(strategy.opentrades-1)>0andnotcloseLong
boolinShort=openShortorstrategy.opentrades.size(strategy.opentrades-1)<0andnotcloseShort
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//StopLoss-Inputs,Indicaotrs
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
////UseSL?TSL?
i_useSLTP=input.bool(defval=true,title="EnableSL&TP?",tooltip="",inline="1",group="StopLoss")
i_tslEnabled=input.bool(defval=false,title="EnableTrailingSL?",tooltip="EnableStopLoss&TakeProfit?\n\EnableTrailingSL?",inline="1",group="StopLoss")
//i_breakEvenAfterTP=input.bool(defval=false,title='EnableBreakEvenAfterTP?',tooltip='WhenTakeProfitpricetargetishit,movetheStopLosstotheentryprice(ortoamorestrictpricedefinedbytheStopLoss%/ATRMultiplier).',inline='2',group='StopLoss/TakeProfit')
////SlOptions
i_slType=input.string(defval="ATR",title="StopLossType",options=["Percent","ATR","PreviousLL/HH"],tooltip="StopLossbasedon%?ATR?",inline="3",group="StopLoss")
i_slATRLen=input.int(defval=14,title="ATRLength",minval=1,maxval=200,step=1,inline="4",group="StopLoss")
i_slATRMult=input.float(defval=3,title="ATRMultiplier",minval=1,maxval=200,step=0.1,tooltip="",inline="4",group="StopLoss")
i_slPercent=input.float(defval=3,title="Percent",tooltip="",inline="5",group="StopLoss")
i_slLookBack=input.int(defval=30,title="LowestPriceBeforeEntry",group="StopLoss",inline="6",minval=30,step=1,tooltip="LookbacktofindtheLowestPrice.\nStopLossisdeterminedbytheLowestpriceofthelookbackperiod.TakeProfitisderivedfromthisalsobymultiplyingtheStopLossvaluebytheRisk:Rewardmultiplier.")
//FunctionsforStopLoss
floatopenAtr=ta.valuewhen(condition=enteringTrade,source=ta.atr(i_slATRLen),occurrence=0)
floatopenLowest=ta.valuewhen(condition=openLong,source=ta.lowest(low,i_slLookBack),occurrence=0)
floatopenHighest=ta.valuewhen(condition=openShort,source=ta.highest(high,i_slLookBack),occurrence=0)
f_getLongSLPrice(source)=>
switchi_slType
"Percent"=>source*(1-(i_slPercent/100))
"ATR"=>source-(i_slATRMult*openAtr)
"PreviousLL/HH"=>openLowest
=>na
f_getShortSLPrice(source)=>
switchi_slType
"Percent"=>source*(1+(i_slPercent/100))
"ATR"=>source+(i_slATRMult*openAtr)
"PreviousLL/HH"=>openHighest
=>na
//CalculateStopLoss
varfloatlongSLPrice=na
varfloatshortSLPrice=na
boollongTPExecuted=false
boolshortTPExecuted=false
longSLPrice:=if(inLongandi_useSLTP)
if(openLong)
f_getLongSLPrice(close)
else
//1.TrailingStopLoss
ifi_tslEnabled
stopLossPrice=f_getLongSLPrice(high)
math.max(stopLossPrice,nz(longSLPrice[1]))
//2.NormalStopLoss
else
nz(source=longSLPrice[1],replacement=0)
else
na
shortSLPrice:=if(inShortandi_useSLTP)
if(openShort)
f_getShortSLPrice(close)
else
//1.TrailingStopLoss
ifi_tslEnabled
stopLossPrice=f_getShortSLPrice(low)
math.min(stopLossPrice,nz(shortSLPrice[1]))
//2.NormalStopLoss
else
nz(source=shortSLPrice[1],replacement=999999.9)
else
na
//Plot:StopLossofLong,ShortEntry
varlongSLPriceColor=color.new(color.maroon,0)
plot(series=longSLPrice,title='LongStopLoss',color=longSLPriceColor,linewidth=1,style=plot.style_linebr,offset=1)
varshortSLPriceColor=color.new(color.maroon,0)
plot(series=shortSLPrice,title='ShortStopLoss',color=shortSLPriceColor,linewidth=1,style=plot.style_linebr,offset=1)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//TakeProfit-Inputs,Indicaotrs
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_useTPExit=input.bool(defval=true,title="UseTakeProfit?",tooltip="",inline="1",group="TakeProfit")
i_RRratio=input.float(defval=1.8,title="R:RRatio",minval=0.1,maxval=200,step=0.1,tooltip="R:RRatio>RiskRewardRatio?ItwillautomaticallysetTakeProfit%basedonStopLoss",inline="2",group="TakeProfit")
i_tpQuantityPerc=input.float(defval=50,title='TakeProfitQuantity%',minval=0.0,maxval=100,step=1.0,tooltip='%ofpositionclosedwhentptargetismet.',inline="34",group='TakeProfit')
varfloatlongTPPrice=na
varfloatshortTPPrice=na
f_getLongTPPrice()=>
close+i_RRratio*math.abs(close-f_getLongSLPrice(close))
f_getShortTPPrice()=>
close-i_RRratio*math.abs(close-f_getShortSLPrice(close))
longTPPrice:=if(inLongandi_useSLTP)
if(openLong)
f_getLongTPPrice()
else
nz(source=longTPPrice[1],replacement=f_getLongTPPrice())
else
na
shortTPPrice:=if(inShortandi_useSLTP)
if(openShort)
f_getShortTPPrice()
else
nz(source=shortTPPrice[1],replacement=f_getShortTPPrice())
else
na
//Plot:TakeProfitofLong,ShortEntry
varlongTPPriceColor=color.new(color.teal,0)
plot(series=longTPPrice,title='LongTakeProfit',color=longTPPriceColor,linewidth=1,style=plot.style_linebr,offset=1)
varshortTPPriceColor=color.new(color.teal,0)
plot(series=shortTPPrice,title='ShortTakeProfit',color=shortTPPriceColor,linewidth=1,style=plot.style_linebr,offset=1)
//Plot:EntryPrice
varposColor=color.new(color.white,0)
plot(series=strategy.opentrades.entry_price(strategy.opentrades-1),title='PositionEntryPrice',color=posColor,linewidth=1,style=plot.style_linebr)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Quantity-Inputs
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_useRiskManangement=input.bool(defval=true,title="UseRiskManangement?",tooltip="",inline="1",group="Quantity")
i_riskPerTrade=input.float(defval=3,title="RiskPerTrade(%)",minval=0,maxval=100,step=0.1,tooltip="UseRiskManangementbyQuantityControl?",inline="2",group="Quantity")
//i_leverage=input.float(defval=2,title="Leverage",minval=0,maxval=100,step=0.1,tooltip="Leverage",inline="3",group="Quantity")
floatqtyPercent=na
floatentryQuantity=na
f_calQtyPerc()=>
if(i_useRiskManangement)
riskPerTrade=(i_riskPerTrade)/100//1번거래시3%손실
stopLossPrice=openLong?f_getLongSLPrice(close):openShort?f_getShortSLPrice(close):na
riskExpected=math.abs((close-stopLossPrice)/close)//손절가랑6%차이
riskPerTrade/riskExpected//0~1
else
1
f_calQty(qtyPerc)=>
math.min(math.max(0.000001,strategy.equity/close*qtyPerc),1000000000)

//TPExecution
longTPExecuted:=strategy.opentrades.size(strategy.opentrades-1)>0and(longTPExecuted[1]orstrategy.opentrades.size(strategy.opentrades-1)<strategy.opentrades.size(strategy.opentrades-1)[1]orstrategy.opentrades.size(strategy.opentrades-1)[1]==0andhigh>=longTPPrice)
shortTPExecuted:=strategy.opentrades.size(strategy.opentrades-1)<0and(shortTPExecuted[1]orstrategy.opentrades.size(strategy.opentrades-1)>strategy.opentrades.size(strategy.opentrades-1)[1]orstrategy.opentrades.size(strategy.opentrades-1)[1]==0andlow<=shortTPPrice)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//PlotLabel,Boxes,Results,Etc
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
i_showSimpleLabel=input.bool(false,"ShowSimpleLabelforEntry?",group="Strategy:Drawings",inline="1",tooltip="")
i_showLabels=input.bool(true,"ShowTradeExitLabels",group="Strategy:Drawings",inline="1",tooltip="UsefullabelstoidentifyProfit/Lossandcumulativeportfoliocapitalaftereachtradecloses.\n\nAlsonotethatTradingViewlimitsthemaxnumberof'boxes'thatcanbedisplayedonachart(max500).ThismeanswhenyoulookbackfarenoughonthechartyouwillnotseetheTP/SLboxes.Howeveryoucancheckthisoptiontoidentifywheretradesexited.")
i_showDashboard=input.bool(true,"ShowDashboard",group="Strategy:Drawings",inline="2",tooltip="ShowBacktestResults.BacktestDates,Win/LoseRates,Etc.")
//Plot:LabelforLong,ShortEntry
varopenLongColor=color.new(#2962FF,0)
varopenShortColor=color.new(#FF1744,0)
varentryTextColor=color.new(color.white,0)
if(openLongandi_showSimpleLabel)
label.new(x=bar_index,y=na,text='Open',yloc=yloc.belowbar,color=openLongColor,style=label.style_label_up,textcolor=entryTextColor)
entryBarIndex:=bar_index
if(openShortandi_showSimpleLabel)
label.new(x=bar_index,y=na,text='Close',yloc=yloc.abovebar,color=openShortColor,style=label.style_label_down,textcolor=entryTextColor)
entryBarIndex:=bar_index
floatprevEntryPrice=strategy.closedtrades.entry_price(strategy.closedtrades-1)
floatpnl=strategy.closedtrades.profit(strategy.closedtrades-1)
floatprevExitPrice=strategy.closedtrades.exit_price(strategy.closedtrades-1)
f_enteringTradeLabel(x,y,qty,entryPrice,slPrice,tpPrice,rrRatio,direction)=>
ifi_showLabels
labelStr=("TradeStart"
+"\nDirection:"+direction
+"\nRiskPerTrade:"+str.tostring(i_useRiskManangement?i_riskPerTrade:100,"#.##")+"%"
+"\nExpectedRisk:"+str.tostring(math.abs((close-slPrice)/close)*100,"#.##")+"%"
+"\nEntryPositionQty:"+str.tostring(math.abs(qty*100),"#.##")+"%"
+"\nEntryPrice:"+str.tostring(entryPrice,"#.##"))
+"\nStopLossPrice:"+str.tostring(slPrice,"#.##")
+"\nTakeProfitPrice:"+str.tostring(tpPrice,"#.##")
+"\nRisk-RewardRatio:"+str.tostring(rrRatio,"#.##")
label.new(x=x,y=y,text=labelStr,color=color.new(color.blue,60),textcolor=color.white,style=label.style_label_up)
f_exitingTradeLabel(x,y,entryPrice,exitPrice,direction)=>
ifi_showLabels
labelStr=("TradeResult"
+"\nDirection:"+direction
+"\nEntryPrice:"+str.tostring(entryPrice,"#.##")
+"\nExitPrice:"+str.tostring(exitPrice,"#.##")
+"\nGain%:"+str.tostring(direction=='Long'?-(entryPrice-exitPrice)/entryPrice*100:(entryPrice-exitPrice)/entryPrice*100,"#.##")+"%")
label.new(x=x,y=y,text=labelStr,color=pnl>0?color.new(color.green,60):color.new(color.red,60),textcolor=color.white,style=label.style_label_down)
f_fillCell(_table,_column,_row,_title,_value,_bgcolor,_txtcolor)=>
_cellText=_title+""+_value
table.cell(_table,_column,_row,_cellText,bgcolor=_bgcolor,text_color=_txtcolor,text_size=size.auto)
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//Orders
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
if(inTime)
if(openLong)
qtyPercent:=f_calQtyPerc()
entryQuantity:=f_calQty(qtyPercent)
strategy.entry(id="Long",direction=strategy.long,qty=entryQuantity,comment='Long('+syminfo.ticker+'):Started',alert_message='Long('+syminfo.ticker+'):Started')
f_enteringTradeLabel(x=bar_index+1,y=close-3*ta.tr,entryPrice=close,qty=qtyPercent,slPrice=longSLPrice,tpPrice=longTPPrice,rrRatio=i_RRratio,direction="Long")
if(openShort)
qtyPercent:=f_calQtyPerc()
entryQuantity:=f_calQty(qtyPercent)
strategy.entry(id="Short",direction=strategy.short,qty=entryQuantity,comment='Short('+syminfo.ticker+'):Started',alert_message='Short('+syminfo.ticker+'):Started')
f_enteringTradeLabel(x=bar_index+1,y=close-3*ta.tr,entryPrice=close,qty=qtyPercent,slPrice=shortSLPrice,tpPrice=shortTPPrice,rrRatio=i_RRratio,direction="Short")
if(closeLong)
strategy.close(id='Long',comment='CloseLong',alert_message='Long:Closedatmarketprice')
strategy.position_size>0?f_exitingTradeLabel(x=bar_index,y=close+3*ta.tr,entryPrice=prevEntryPrice,exitPrice=prevExitPrice,direction='Long'):na
if(closeShort)
strategy.close(id='Short',comment='CloseShort',alert_message='Short:Closedatmarketprice')
strategy.position_size<0?f_exitingTradeLabel(x=bar_index,y=close+3*ta.tr,entryPrice=prevEntryPrice,exitPrice=prevExitPrice,direction='Short'):na
if(inLong)
strategy.exit(id='LongTP/SL',from_entry='Long',qty_percent=i_tpQuantityPerc,limit=longTPPrice,stop=longSLPrice,alert_message='Long('+syminfo.ticker+'):TakeProfitorStopLossexecuted')
strategy.exit(id='LongSL',from_entry='Long',stop=longSLPrice,alert_message='Long('+syminfo.ticker+'):StopLossexecuted')
if(inShort)
strategy.exit(id='ShortTP/SL',from_entry='Short',qty_percent=i_tpQuantityPerc,limit=shortTPPrice,stop=shortSLPrice,alert_message='Short('+syminfo.ticker+'):TakeProfitorStopLossexecuted')
strategy.exit(id='ShortSL',from_entry='Short',stop=shortSLPrice,alert_message='Short('+syminfo.ticker+'):StopLossexecuted')

ifstrategy.position_size[1]>0andstrategy.position_size==0
f_exitingTradeLabel(x=bar_index,y=close+3*ta.tr,entryPrice=prevEntryPrice,exitPrice=prevExitPrice,direction='Long')

ifstrategy.position_size[1]<0andstrategy.position_size==0
f_exitingTradeLabel(x=bar_index,y=close+3*ta.tr,entryPrice=prevEntryPrice,exitPrice=prevExitPrice,direction='Short')
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
//BacktestResultDashboard
//░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░
ifi_showDashboard
varbgcolor=color.new(color=color.black,transp=100)
vargreenColor=color.new(color=#02732A,transp=0)
varredColor=color.new(color=#D92332,transp=0)
varyellowColor=color.new(color=#F2E313,transp=0)
//KeeptrackofWins/Lossesstreaks
newWin=(strategy.wintrades>strategy.wintrades[1])and(strategy.losstrades==strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
newLoss=(strategy.wintrades==strategy.wintrades[1])and(strategy.losstrades>strategy.losstrades[1])and(strategy.eventrades==strategy.eventrades[1])
varipintwinRow=0
varipintlossRow=0
varipintmaxWinRow=0
varipintmaxLossRow=0
ifnewWin
lossRow:=0
winRow:=winRow+1
ifwinRow>maxWinRow
maxWinRow:=winRow

ifnewLoss
winRow:=0
lossRow:=lossRow+1
iflossRow>maxLossRow
maxLossRow:=lossRow
//Preparestatstable
vartabledashTable=table.new(position.top_right,1,15,border_width=1)


ifbarstate.islastconfirmedhistory
dollarReturn=strategy.netprofit
f_fillCell(dashTable,0,0,"Start:",str.format("{0,date,long}",strategy.closedtrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.closedtrades.entry_time(0))
f_fillCell(dashTable,0,1,"End:",str.format("{0,date,long}",strategy.opentrades.entry_time(0)),bgcolor,color.white)//+str.format("{0,time,HH:mm}",strategy.opentrades.entry_time(0))
_profit=(strategy.netprofit/strategy.initial_capital)*100
f_fillCell(dashTable,0,2,"NetProfit:",str.tostring(_profit,'##.##')+"%",_profit>0?greenColor:redColor,color.white)
_numOfDaysInStrategy=(strategy.opentrades.entry_time(0)-strategy.closedtrades.entry_time(0))/(1000*3600*24)
f_fillCell(dashTable,0,3,"PercentPerDay",str.tostring(_profit/_numOfDaysInStrategy,'#########################.#####')+"%",_profit>0?greenColor:redColor,color.white)
_winRate=(strategy.wintrades/strategy.closedtrades)*100
f_fillCell(dashTable,0,4,"PercentProfitable:",str.tostring(_winRate,'##.##')+"%",_winRate<50?redColor:_winRate<75?greenColor:yellowColor,color.white)
f_fillCell(dashTable,0,5,"ProfitFactor:",str.tostring(strategy.grossprofit/strategy.grossloss,'##.###'),strategy.grossprofit>strategy.grossloss?greenColor:redColor,color.white)
f_fillCell(dashTable,0,6,"TotalTrades:",str.tostring(strategy.closedtrades),bgcolor,color.white)
f_fillCell(dashTable,0,8,"MaxWinsInARow:",str.tostring(maxWinRow,'######'),bgcolor,color.white)
f_fillCell(dashTable,0,9,"MaxLossesInARow:",str.tostring(maxLossRow,'######'),bgcolor,color.white)
Expand (364 lines)
