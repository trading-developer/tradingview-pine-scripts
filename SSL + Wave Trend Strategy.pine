Script Name: SSL + Wave Trend Strategy
Author: kevinmck100
Description: Strategy incorporates the following features:

 Risk management:

 Configurable X% loss per stop loss
 Configurable R:R ratio


 Trade entry:

 Based on strategy conditions below


 Trade exit:

 Based on strategy conditions below


 Backtesting:

 Configurable backtesting range by date


 Trade drawings:

 Each entry condition indicator can be...
PineScript code:

Pine Script™ strategy
SSL + Wave Trend Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  kevinmck100
//  @credits
//            -  Wave  Trend:                              Indicator:  WaveTrend  Oscillator  [WT]  by  @LazyBear
//            -  SSL  Channel:                            SSL  channel  by  @ErwinBeckers
//            -  SSL  Hybrid:                              SSL  Hybrid  by  @Mihkel00
//            -  Keltner  Channels:                  Keltner  Channels  Bands  by  @ceyhun
//            -  Candle  Height:                        Candle  Height  in  Percentage  -  Columns  by  @FreeReveller
//            -  NNFX  ATR:                                  NNFX  ATR  by  @sueun123
//
//  Strategy:  Based  on  the  YouTube  video  "This  Unique  Strategy  Made  47%  Profit  in  2.5  Months  [SSL  +  Wave  Trend  Strategy  Tested  100  Times]"  by  TradeSmart.
//  @description
//
//  Strategy  incorporates  the  following  features:
//
//            -  Risk  management:    Configurable  X%  loss  per  stop  loss
//                                                    Configurable  R:R  ratio
//
//            -  Trade  entry:            Based  on  strategy  conditions  below
//
//            -  Trade  exit:              Based  on  strategy  conditions  below
//
//            -  Backtesting:            Configurable  backtesting  range  by  date
//
//            -  Chart  drawings:      Each  entry  condition  indicator  can  be  turned  on  and  off
//                                                    TP/SL  boxes  drawn  for  all  trades.  Can  be  turned  on  and  off
//                                                    Trade  exit  information  labels.  Can  be  turned  on  and  off
//                                                    NOTE:  Trade  drawings  will  only  be  applicable  when  using  overlay  strategies
//
//            -  Alerting:                  Alerts  on  LONG  and  SHORT  trade  entries
//
//            -  Debugging:                Includes  section  with  useful  debugging  techniques
//
//  Strategy  conditions:
//
//            -  Trade  entry:            LONG:      C1:  SSL  Hybrid  baseline  is  BLUE
//                                                                    C2:  SSL  Channel  crosses  up  (green  on  top)
//                                                                    C3:  Wave  Trend  crosses  up  (represented  by  pink  candle  body)
//                                                                    C4:  Entry  candle  height  is  not  greater  than  configured  threshold
//                                                                    C5:  Entry  candle  is  inside  Keltner  Channel  (wicks  or  body  depending  on  configuration)
//                                                                    C6:  Take  Profit  target  does  not  touch  EMA  (represents  resistance)
//
//                                                    SHORT:    C1:  SSL  Hybrid  baseline  is  RED
//                                                                    C2:  SSL  Channel  crosses  down  (red  on  top)
//                                                                    C3:  Wave  Trend  crosses  down  (represented  by  orange  candle  body)
//                                                                    C4:  Entry  candle  height  is  not  greater  than  configured  threshold
//                                                                    C5:  Entry  candle  is  inside  Keltner  Channel  (wicks  or  body  depending  on  configuration)
//                                                                    C6:  Take  Profit  target  does  not  touch  EMA  (represents  support)
//
//            -  Trade  exit:              Stop  Loss:  Size  configurable  with  NNFX  ATR  multiplier
//                                                    Take  Profit:  Calculated  from  Stop  Loss  using  R:R  ratio
//@version=5
INITIAL_CAPITAL  =  1000
DEFAULT_COMMISSION  =  0.02
MAX_DRAWINGS  =  500
IS_OVERLAY  =  true
strategy("SSL  +  Wave  Trend  Strategy",  overlay  =  IS_OVERLAY,  initial_capital  =  INITIAL_CAPITAL,  currency  =  currency.NONE,  max_labels_count  =  MAX_DRAWINGS,  max_boxes_count  =  MAX_DRAWINGS,  max_lines_count  =  MAX_DRAWINGS,  default_qty_type  =  strategy.cash,  commission_type  =  strategy.commission.percent,  commission_value  =  DEFAULT_COMMISSION)
//  =============================================================================
//  INPUTS
//  =============================================================================
//  ----------------------
//  Trade  Entry  Conditions
//  ----------------------
useSslHybrid                =  input.bool        (true,    "Use  SSL  Hybrid  Condition",                                          group  =  "Strategy:  Entry  Conditions",      inline  =  "SC1")
useKeltnerCh                =  input.bool        (true,    "Use  Keltner  Channel  Condition   ",                          group  =  "Strategy:  Entry  Conditions",      inline  =  "SC2")
keltnerChWicks            =  input.bool        (true,    "Keltner  Channel  Include  Wicks",                                group  =  "Strategy:  Entry  Conditions",      inline  ="SC2")
useEma=input.bool(true,"TargetnottouchEMACondition",group="Strategy:EntryConditions",inline="SC3")
useCandleHeight=input.bool(true,"UseCandleHeightCondition",group="Strategy:EntryConditions",inline="SC4")
candleHeight=input.float(1.0,"CandleHeightThreshold    ",group="Strategy:EntryConditions",inline="SC5",minval=0,step=0.1,tooltip="Percentagedifferencebetweenhighandlowofacandle.Expressedasadecimal.Loweringthisvaluewillfilterouttradesonvolatilecandles.")
//---------------------
//TradeExitConditions
//---------------------
slAtrMultiplier=input.float(1.7,"StopLossATRMultiplier    ",group="Strategy:ExitConditions",inline="EC1",minval=0,step=0.1,tooltip="SizeofStopLossisdeterminedbymultiplicationofATRvalue.TakeProfitisderivedfromthisalsobymultiplyingtheStopLossvaluebytheRisk:Rewardmultiplier.")
//---------------
//RiskManagement
//---------------
riskReward=input.float(2.5,"Risk:Reward        1:",group="Strategy:RiskManagement",inline="RM1",minval=0,step=0.1,tooltip="UsedtodetermineTakeProfitlevel.TakeProfitwillbeStopLossmultipliedbythisvalue.")
accountRiskPercent=input.float(1,"PortfolioRisk%        ",group="Strategy:RiskManagement",inline="RM2",minval=0,step=0.1,tooltip="PercentageofportfolioyouloseiftradehitsSL.\n\nYouthenstandtogain\nPortfolioRisk%*Risk:Reward\niftradehitsTP.")
//----------
//DateRange
//----------
startYear=input.int(2022,"StartDate     ",group="Strategy:DateRange",inline="DR1",minval=1900,maxval=2100)
startMonth=input.int(1,"",group="Strategy:DateRange",inline="DR1",options=[1,2,3,4,5,6,7,8,9,10,11,12])
startDate=input.int(1,"",group="Strategy:DateRange",inline="DR1",options=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31])
endYear=input.int(2100,"EndDate      ",group="Strategy:DateRange",inline="DR2",minval=1900,maxval=2100)
endMonth=input.int(1,"",group="Strategy:DateRange",inline="DR2",options=[1,2,3,4,5,6,7,8,9,10,11,12])
endDate=input.int(1,"",group="Strategy:DateRange",inline="DR2",options=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31])
//----------------
//DisplaySettings
//----------------
showTpSlBoxes=input.bool(true,"ShowTP/SLBoxes",group="Strategy:Drawings",inline="D1",tooltip="ShoworhideTPandSLpositionboxes.\n\nNote:TradingViewlimitsthemaximumnumberofboxesthatcanbedisplayedto500sotheymaynotappearforallpricedataundertest.")
showLabels=input.bool(false,"ShowTradeExitLabels",group="Strategy:Drawings",inline="D2",tooltip="UsefullabelstoidentifyProfit/Lossandcumulativeportfoliocapitalaftereachtradecloses.\n\nAlsonotethatTradingViewlimitsthemaxnumberof'boxes'thatcanbedisplayedonachart(max500).ThismeanswhenyoulookbackfarenoughonthechartyouwillnotseetheTP/SLboxes.Howeveryoucancheckthisoptiontoidentifywheretradesexited.")
//------------------
//IndicatorSettings
//------------------
//Indicatordisplayoptions
showSslHybrid=input.bool(true,"ShowSSLHybrid",group="Indicators:Drawings",inline="ID1")
showSslChannel=input.bool(true,"ShowSSLChannel",group="Indicators:Drawings",inline="ID2")
showEma=input.bool(true,"ShowEMA",group="Indicators:Drawings",inline="ID3")
showKeltner=input.bool(true,"ShowKeltnerChannel",group="Indicators:Drawings",inline="ID4")
showWaveTrend=input.bool(true,"ShowWaveTrendFlipCandles",group="Indicators:Drawings",inline="ID5")
showAtrSl=input.bool(true,"ShowATRStopLossBands",group="Indicators:Drawings",inline="ID6")
//WaveTrendSettings
n1=input.int(10,"ChannelLength        ",group="Indicators:WaveTrend",inline="WT1")
n2=input.int(21,"AverageLength        ",group="Indicators:WaveTrend",inline="WT2")
obLevel1=input.int(60,"OverBoughtLevel1      ",group="Indicators:WaveTrend",inline="WT3")
obLevel2=input.int(53,"OverBoughtLevel2      ",group="Indicators:WaveTrend",inline="WT4")
osLevel1=input.int(-60,"OverSoldLevel1       ",group="Indicators:WaveTrend",inline="WT5")
osLevel2=input.int(-53,"OverSoldLevel2       ",group="Indicators:WaveTrend",inline="WT6")
//SSLChannelSettings
sslChLen=input.int(10,"Period             ",group="Indicators:SSLChannel",inline="SC1")
//SSLHybridSettings
//Show/hideInputs
show_color_bar=input.bool(false,"ShowColorBars",group="Indicators:SSLHybrid",inline="SH2")
//BaselineInputs
maType=input.string("HMA","BaselineType                       ",group="Indicators:SSLHybrid",inline="SH3",options=["SMA","EMA","DEMA","TEMA","LSMA","WMA","MF","VAMA","TMA","HMA","JMA","Kijunv2","EDSMA","McGinley"])
len=input.int(60,"BaselineLength                      ",group="Indicators:SSLHybrid",inline="SH4")
src=input.source(close,"Source                         ",group="Indicators:SSLHybrid",inline="SH5")
kidiv=input.int(1,"KijunMODDivider                     ",group="Indicators:SSLHybrid",inline="SH6",maxval=4)
jurik_phase=input.int(3,"*Jurik(JMA)Only-Phase                 ",group="Indicators:SSLHybrid",inline="SH7")
jurik_power=input.int(1,"*Jurik(JMA)Only-Power                 ",group="Indicators:SSLHybrid",inline="SH8")
volatility_lookback=input.int(10,"*VolatilityAdjusted(VAMA)Only-Volatilitylookbacklength",group="Indicators:SSLHybrid",inline="SH9")
//ModularFilterInputs
beta=input.float(0.8,"ModularFilter,GeneralFilterOnly-Beta               ",group="Indicators:SSLHybrid",inline="SH10",minval=0,maxval=1,step=0.1)
feedback=input.bool(false,"ModularFilterOnly-Feedback",group="Indicators:SSLHybrid",inline="SH11")
z=input.float(0.5,"ModularFilterOnly-FeedbackWeighting               ",group="Indicators:SSLHybrid",inline="SH12",step=0.1,minval=0,maxval=1)
//EDSMAInputs
ssfLength=input.int(20,"EDSMA-SuperSmootherFilterLength               ",group="Indicators:SSLHybrid",inline="SH13",minval=1)
ssfPoles=input.int(2,"EDSMA-SuperSmootherFilterPoles               ",group="Indicators:SSLHybrid",inline="SH14",options=[2,3])
///KeltnerBaselineChannelInputs
useTrueRange=input.bool(true,"UseTrueRange?",group="Indicators:SSLHybrid",inline="SH15")
multy=input.float(0.2,"BaseChannelMultiplier                   ",group="Indicators:SSLHybrid",inline="SH16",step=0.05)
//EMASettings
emaLength=input.int(200,"EMALength          ",group="Indicators:EMA",inline="E1",minval=1)
//KeltnerChannelSettings
kcLength=input.int(20,"Length            ",group="Indicators:KeltnerChannel",inline="KC1",minval=1)
kcMult=input.float(1.5,"Multiplier           ",group="Indicators:KeltnerChannel",inline="KC2")
kcSrc=input.source(close,"Source            ",group="Indicators:KeltnerChannel",inline="KC3")
alen=input.int(10,"ATRLength          ",group="Indicators:KeltnerChannel",inline="KC4",minval=1)
//CandleHeightinPercentageSettings
chPeriod=input.int(20,"Period             ",group="Indicators:CandleHeight",inline="CH1")
//NNFXATRSettings
nnfxAtrLength=input.int(14,"Length            ",group="Indicators:NNFXATR(StopLossSettings)",inline="ATR1",minval=1)
nnfxSmoothing=input.string("RMA","Smoothing          ",group="Indicators:NNFXATR(StopLossSettings)",inline="ATR3",options=["RMA","SMA","EMA","WMA"])
//=============================================================================
//INDICATORS
//=============================================================================
//----------
//WaveTrend
//----------
ap=hlc3
esa=ta.ema(ap,n1)
d=ta.ema(math.abs(ap-esa),n1)
ci=(ap-esa)/(0.015*d)
tci=ta.ema(ci,n2)
wt1=tci
wt2=ta.sma(wt1,4)
//ShowWaveTrendcrossesonchartascolourchanges(pinkbullish,orangebearish)
wtBreakUp=ta.crossover(wt1,wt2)
wtBreakDown=ta.crossunder(wt1,wt2)
barColour=showWaveTrend?wtBreakUp?color.fuchsia:wtBreakDown?color.orange:na:na
barcolor(color=barColour)
//-----------
//SSLChannel
//-----------
smaHigh=ta.sma(high,sslChLen)
smaLow=ta.sma(low,sslChLen)
varintsslChHlv=na
sslChHlv:=close>smaHigh?1:close<smaLow?-1:sslChHlv[1]
sslChDown=sslChHlv<0?smaHigh:smaLow
sslChUp=sslChHlv<0?smaLow:smaHigh
plot(showSslChannel?sslChDown:na,"SSLChannelDown",linewidth=1,color=color.new(color.red,30))
plot(showSslChannel?sslChUp:na,"SSLChannelUp",linewidth=1,color=color.new(color.lime,30))
//----------
//SSLHybrid
//----------
//EDSMA
get2PoleSSF(src,length)=>
PI=2*math.asin(1)
arg=math.sqrt(2)*PI/length
a1=math.exp(-arg)
b1=2*a1*math.cos(arg)
c2=b1
c3=-math.pow(a1,2)
c1=1-c2-c3
ssf=0.0
ssf:=c1*src+c2*nz(ssf[1])+c3*nz(ssf[2])
ssf
get3PoleSSF(src,length)=>
PI=2*math.asin(1)
arg=PI/length
a1=math.exp(-arg)
b1=2*a1*math.cos(1.738*arg)
c1=math.pow(a1,2)
coef2=b1+c1
coef3=-(c1+b1*c1)
coef4=math.pow(c1,2)
coef1=1-coef2-coef3-coef4
ssf=0.0
ssf:=coef1*src+coef2*nz(ssf[1])+coef3*nz(ssf[2])+coef4*nz(ssf[3])
ssf
ma(type,src,len)=>
floatresult=0
iftype=="TMA"
result:=ta.sma(ta.sma(src,math.ceil(len/2)),math.floor(len/2)+1)
result
iftype=="MF"
ts=0.
b=0.
c=0.
os=0.
//----
alpha=2/(len+1)
a=feedback?z*src+(1-z)*nz(ts[1],src):src
//----
b:=a>alpha*a+(1-alpha)*nz(b[1],a)?a:alpha*a+(1-alpha)*nz(b[1],a)
c:=a<alpha*a+(1-alpha)*nz(c[1],a)?a:alpha*a+(1-alpha)*nz(c[1],a)
os:=a==b?1:a==c?0:os[1]
//----
upper=beta*b+(1-beta)*c
lower=beta*c+(1-beta)*b
ts:=os*upper+(1-os)*lower
result:=ts
result
iftype=="LSMA"
result:=ta.linreg(src,len,0)
result
iftype=="SMA"//Simple
result:=ta.sma(src,len)
result
iftype=="EMA"//Exponential
result:=ta.ema(src,len)
result
iftype=="DEMA"//DoubleExponential
e=ta.ema(src,len)
result:=2*e-ta.ema(e,len)
result
iftype=="TEMA"//TripleExponential
e=ta.ema(src,len)
result:=3*(e-ta.ema(e,len))+ta.ema(ta.ema(e,len),len)
result
iftype=="WMA"//Weighted
result:=ta.wma(src,len)
result
iftype=="VAMA"//VolatilityAdjusted
///Copyright©2019topresent,JorisDuyck(JD)
mid=ta.ema(src,len)
dev=src-mid
vol_up=ta.highest(dev,volatility_lookback)
vol_down=ta.lowest(dev,volatility_lookback)
result:=mid+math.avg(vol_up,vol_down)
result
iftype=="HMA"//Hull
result:=ta.wma(2*ta.wma(src,len/2)-ta.wma(src,len),math.round(math.sqrt(len)))
result
iftype=="JMA"//Jurik
///Copyright©2018AlexOrekhov(everget)
///Copyright©2017JurikResearchandConsulting.
phaseRatio=jurik_phase<-100?0.5:jurik_phase>100?2.5:jurik_phase/100+1.5
beta=0.45*(len-1)/(0.45*(len-1)+2)
alpha=math.pow(beta,jurik_power)
jma=0.0
e0=0.0
e0:=(1-alpha)*src+alpha*nz(e0[1])
e1=0.0
e1:=(src-e0)*(1-beta)+beta*nz(e1[1])
e2=0.0
e2:=(e0+phaseRatio*e1-nz(jma[1]))*math.pow(1-alpha,2)+math.pow(alpha,2)*nz(e2[1])
jma:=e2+nz(jma[1])
result:=jma
result
iftype=="Kijunv2"
kijun=math.avg(ta.lowest(len),ta.highest(len))//,(open+close)/2)
conversionLine=math.avg(ta.lowest(len/kidiv),ta.highest(len/kidiv))
delta=(kijun+conversionLine)/2
result:=delta
result
iftype=="McGinley"
mg=0.0
mg:=na(mg[1])?ta.ema(src,len):mg[1]+(src-mg[1])/(len*math.pow(src/mg[1],4))
result:=mg
result
iftype=="EDSMA"
zeros=src-nz(src[2])
avgZeros=(zeros+zeros[1])/2
//EhlersSuperSmootherFilter
ssf=ssfPoles==2?get2PoleSSF(avgZeros,ssfLength):get3PoleSSF(avgZeros,ssfLength)
//RescalefilterintermsofStandardDeviations
stdev=ta.stdev(ssf,len)
scaledFilter=stdev!=0?ssf/stdev:0
alpha=5*math.abs(scaledFilter)/len
edsma=0.0
edsma:=alpha*src+(1-alpha)*nz(edsma[1])
result:=edsma
result
result
///KeltnerBaselineChannel
BBMC=ma(maType,close,len)
Keltma=ma(maType,src,len)
range_1=useTrueRange?ta.tr:high-low
rangema=ta.ema(range_1,len)
upperk=Keltma+rangema*multy
lowerk=Keltma-rangema*multy
//COLORS
color_bar=close>upperk?#00c3ff:close<lowerk?#ff0062:color.gray
//PLOTS
p1=plot(showSslHybrid?BBMC:na,color=color.new(color_bar,0),linewidth=4,title="MABaseline")
barcolor(show_color_bar?color_bar:na)
//---
//EMA
//---
ema=ta.ema(close,emaLength)
plot(showEma?ema:na,"EMATrendLine",color.white)
//----------------
//KeltnerChannels
//----------------
kcMa=ta.ema(kcSrc,kcLength)
KTop2=kcMa+kcMult*ta.atr(alen)
KBot2=kcMa-kcMult*ta.atr(alen)
upperPlot=plot(showKeltner?KTop2:na,color=color.new(color.blue,0),title="Upper",style=plot.style_stepline)
lowerPlot=plot(showKeltner?KBot2:na,color=color.new(color.blue,0),title="Lower",style=plot.style_stepline)
//---------------------------
//CandleHeightinPercentage
//---------------------------
percentHL=(high-low)/low*100
percentRed=open>close?(open-close)/close*100:0
percentGreen=open<close?(close-open)/open*100:0
//--------
//NNFXATR
//--------
function(source,length)=>
ifnnfxSmoothing=="RMA"
ta.rma(source,nnfxAtrLength)
else
ifnnfxSmoothing=="SMA"
ta.sma(source,nnfxAtrLength)
else
ifnnfxSmoothing=="EMA"
ta.ema(source,nnfxAtrLength)
else
ta.wma(source,nnfxAtrLength)
formula(number,decimals)=>
factor=math.pow(10,decimals)
int(number*factor)/factor
nnfxAtr=formula(function(ta.tr(true),nnfxAtrLength),5)*slAtrMultiplier
//Sell
longSlAtr=nnfxAtrLength?close-nnfxAtr:close+nnfxAtr
shortSlAtr=nnfxAtrLength?close+nnfxAtr:close-nnfxAtr
plot(showAtrSl?longSlAtr:na,"LongSL",color=color.new(color.red,35),linewidth=1,trackprice=true,editable=true,style=plot.style_stepline)
plot(showAtrSl?shortSlAtr:na,"ShortSL",color=color.new(color.red,35),linewidth=1,trackprice=true,editable=true,style=plot.style_stepline)
//=============================================================================
//FUNCTIONS
//=============================================================================
percentAsPoints(pcnt)=>
math.round(pcnt/100*close/syminfo.mintick)

calcStopLossPrice(pointsOffset,isLong)=>
priceOffset=pointsOffset*syminfo.mintick
ifisLong
close-priceOffset
else
close+priceOffset
calcProfitTrgtPrice(pointsOffset,isLong)=>
calcStopLossPrice(-pointsOffset,isLong)


printLabel(barIndex,msg)=>label.new(barIndex,close,msg)
printTpSlHitBox(left,right,slHit,tpHit,entryPrice,slPrice,tpPrice)=>
ifshowTpSlBoxes
box.new(left=left,top=entryPrice,right=right,bottom=slPrice,bgcolor=slHit?color.new(color.red,60):color.new(color.gray,90),border_width=0)
box.new(left=left,top=entryPrice,right=right,bottom=tpPrice,bgcolor=tpHit?color.new(color.green,60):color.new(color.gray,90),border_width=0)
line.new(x1=left,y1=entryPrice,x2=right,y2=entryPrice,color=color.new(color.yellow,20))
line.new(x1=left,y1=slPrice,x2=right,y2=slPrice,color=color.new(color.red,20))
line.new(x1=left,y1=tpPrice,x2=right,y2=tpPrice,color=color.new(color.green,20))

printTpSlNotHitBox(left,right,entryPrice,slPrice,tpPrice)=>
ifshowTpSlBoxes
box.new(left=left,top=entryPrice,right=right,bottom=slPrice,bgcolor=color.new(color.gray,90),border_width=0)
box.new(left=left,top=entryPrice,right=right,bottom=tpPrice,bgcolor=color.new(color.gray,90),border_width=0)
line.new(x1=left,y1=entryPrice,x2=right,y2=entryPrice,color=color.new(color.yellow,20))
line.new(x1=left,y1=slPrice,x2=right,y2=slPrice,color=color.new(color.red,20))
line.new(x1=left,y1=tpPrice,x2=right,y2=tpPrice,color=color.new(color.green,20))

printTradeExitLabel(x,y,posSize,entryPrice,pnl)=>
ifshowLabels
labelStr="PositionSize:"+str.tostring(math.abs(posSize),"#.##")+"\nPNL:"+str.tostring(pnl,"#.##")+"\nCapital:"+str.tostring(strategy.equity,"#.##")+"\nEntryPrice:"+str.tostring(entryPrice,"#.##")
label.new(x=x,y=y,text=labelStr,color=pnl>0?color.new(color.green,60):color.new(color.red,60),textcolor=color.white,style=label.style_label_down)
//=============================================================================
//STRATEGYLOGIC
//=============================================================================
//Seestrategydescriptionattopfordetailsontradeentry/exitlogis
//----------
//CONDITIONS
//----------
//Tradeentryandexitvariables
vartradeEntryBar=bar_index
varprofitPoints=0.
varlossPoints=0.
varslPrice=0.
vartpPrice=0.
varinLong=false
varinShort=false
//Exitcalculations
slAmount=nnfxAtr
slPercent=math.abs((1-(close-slAmount)/close)*100)
tpPercent=slPercent*riskReward
tpPoints=percentAsPoints(tpPercent)
tpTarget=calcProfitTrgtPrice(tpPoints,wtBreakUp)
inDateRange=time>=timestamp(syminfo.timezone,startYear,startMonth,startDate,0,0)andtime<timestamp(syminfo.timezone,endYear,endMonth,endDate,0,0)
//Condition1:SSLHybridblueforlongorredforshort
bullSslHybrid=useSslHybrid?close>upperk:true
bearSslHybrid=useSslHybrid?close<lowerk:true
//Condition2:SSLChannelcrossesupforlongordownforshort
bullSslChannel=ta.crossover(sslChUp,sslChDown)
bearSslChannel=ta.crossover(sslChDown,sslChUp)
//Condition3:WaveTrendcrossesupforlongordownforshort
bullWaveTrend=wtBreakUp
bearWaveTrend=wtBreakDown
//Condition4:Entrycandleheignt<=0.6onCandleHeightinPercentage
candleHeightValid=useCandleHeight?percentGreen<=candleHeightandpercentRed<=candleHeight:true
//Condition5:EntrycandleisinsideKeltnerChannel
withinCh=keltnerChWicks?high<KTop2andlow>KBot2:open<KTop2andclose<KTop2andopen>KBot2andclose>KBot2
insideKeltnerCh=useKeltnerCh?withinCh:true
//Condition6:TPtargetdoesnottouch200EMA
bullTpValid=useEma?not(close<emaandtpTarget>ema):true
bearTpValid=useEma?not(close>emaandtpTarget<ema):true
//Combineallentryconditions
goLong=inDateRangeandbullSslHybridandbullSslChannelandbullWaveTrendandcandleHeightValidandinsideKeltnerChandbullTpValid
goShort=inDateRangeandbearSslHybridandbearSslChannelandbearWaveTrendandcandleHeightValidandinsideKeltnerChandbearTpValid
//Entrydecisions
openLong=(goLongandnotinLong)
openShort=(goShortandnotinShort)
flippingSides=(goLongandinShort)or(goShortandinLong)
enteringTrade=openLongoropenShort
inTrade=inLongorinShort
//Riskcalculations
riskAmt=strategy.equity*accountRiskPercent/100
entryQty=math.abs(riskAmt/slPercent*100)/close
ifopenLong
ifstrategy.position_size<0
printTpSlNotHitBox(tradeEntryBar+1,bar_index+1,strategy.position_avg_price,slPrice,tpPrice)
printTradeExitLabel(bar_index+1,math.max(tpPrice,slPrice),strategy.position_size,strategy.position_avg_price,strategy.openprofit)
strategy.entry("Long",strategy.long,qty=entryQty,alert_message="LongEntry")
enteringTrade:=true
inLong:=true
inShort:=false
alert(message="BUYTradeEntryAlert",freq=alert.freq_once_per_bar_close)
ifopenShort
ifstrategy.position_size>0
printTpSlNotHitBox(tradeEntryBar+1,bar_index+1,strategy.position_avg_price,slPrice,tpPrice)
printTradeExitLabel(bar_index+1,math.max(tpPrice,slPrice),strategy.position_size,strategy.position_avg_price,strategy.openprofit)
strategy.entry("Short",strategy.short,qty=entryQty,alert_message="ShortEntry")
enteringTrade:=true
inShort:=true
inLong:=false
alert(message="SELLTradeEntryAlert",freq=alert.freq_once_per_bar_close)
ifenteringTrade
profitPoints:=percentAsPoints(tpPercent)
lossPoints:=percentAsPoints(slPercent)
slPrice:=calcStopLossPrice(lossPoints,openLong)
tpPrice:=calcProfitTrgtPrice(profitPoints,openLong)
tradeEntryBar:=bar_index
strategy.exit("TP/SL",profit=profitPoints,loss=lossPoints,comment_profit="TPHit",comment_loss="SLHit",alert_profit="TPHitAlert",alert_loss="SLHitAlert")
//=============================================================================
//DRAWINGS
//=============================================================================
//-----------
//TP/SLBoxes
//-----------
slHit=(inShortandhigh>=slPrice)or(inLongandlow<=slPrice)
tpHit=(inLongandhigh>=tpPrice)or(inShortandlow<=tpPrice)
exitTriggered=slHitortpHit
entryPrice=strategy.closedtrades.entry_price(strategy.closedtrades-1)
pnl=strategy.closedtrades.profit(strategy.closedtrades-1)
posSize=strategy.closedtrades.size(strategy.closedtrades-1)
//Printboxesfortradesclosedatprofitorloss
if(inTradeandexitTriggered)
inShort:=false
inLong:=false
printTpSlHitBox(tradeEntryBar+1,bar_index,slHit,tpHit,entryPrice,slPrice,tpPrice)
printTradeExitLabel(bar_index,math.max(tpPrice,slPrice),posSize,entryPrice,pnl)
//PrintTP/SLboxforcurrentopentrade
ifbarstate.islastconfirmedhistoryandstrategy.position_size!=0
printTpSlNotHitBox(tradeEntryBar+1,bar_index+1,strategy.position_avg_price,slPrice,tpPrice)

//=============================================================================
//DEBUGGING
//=============================================================================
//Datawindowplots
plotchar(goLong,"EnterLong","")
plotchar(goShort,"EnterShort","")
Expand (569 lines)
