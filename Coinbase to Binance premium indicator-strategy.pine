Script Name: Coinbase to Binance premium indicator-strategy
Author: LowSkiII
Description: 1) Offers bar/ma chart of premium
2) Offers different trading strats based on premium(ma cross, premium value cross, smoothed premium value cross)
supersmoother code credited to someone else from tradingview
PineScript code:

Pine Scriptâ„¢ strategy
Coinbase to Binance premium indicator/strategy
//@version=4
strategy("Coinbase  to  Binance  premium",  pyramiding=1,  default_qty_type=strategy.cash,  default_qty_value=1000,  initial_capital=1000,overlay=false,  currency=currency.USD,  commission_type=strategy.commission.percent,  commission_value=0.07)
fastLen  =  input(title="Fast  Ma  lenght",  type=input.integer,  defval=8)
slowLen  =  input(title="Slow  Ma  lenght",  type=input.integer,  defval=22)
premVal  =  input(title="Premium  Value",  type=input.float,  defval=0)
doTrades  =  input(title="Trades?",  type=input.bool,  defval=false)
onlyLong  =  input(title="Only  long?",  type=input.bool,  defval=true)
smoothStrat  =  input(title="Smooth  strat?",  type=input.bool,  defval=false)
diffStrat  =  input(title="Diff  strat?",  type=input.bool,  defval=false)
maStrat  =  input(title="MA  strat?",  type=input.bool,  defval=false)
timeRestr  =  input(title="Time  restrictions?",  type=input.bool,  defval=true)
asset  =  input(title="Pair",  type  =  input.string,  defval  =  "btc")
coinbase  =  "coinbase:"+asset+"usd"
binance  =  "binance:"+asset+"usdt"
inDateRange  =  (time  >=  timestamp(syminfo.timezone,  2021,
                  01,  29,  0,  0)  and  time<=timestamp(syminfo.timezone,  2021,
                  04,  20,  0,  0))  or  not  timeRestr
A  =  security(coinbase,timeframe.period,close)
B  =  security(binance,timeframe.period,close)
premium  =  A-B
supersmoother(_src,  _length)  =>
        pi            =  2  *  asin(1)
        s_a1        =  exp(-sqrt(2)  *  pi  /  _length)
        s_b1        =  2  *  s_a1  *  cos(sqrt(2)  *  pi  /  _length)
        s_c3        =  -pow(s_a1,  2)
        s_c2        =  s_b1
        s_c1        =  1  -  s_c2  -  s_c3
        ss            =  0.0
        ss          :=  s_c1  *  _src  +  s_c2  *  nz(ss[1],  _src[1])  +  s_c3  *  nz(ss[2],  _src[2])

premiumSmooth  =  supersmoother(wma(premium,fastLen),  fastLen*1.5)
hline(0,  title="0",  linewidth  =  2,  color  =  color.red,  linestyle  =  hline.style_solid)
mainSeries  =  (diffStrat)  ?  premium  :  wma(premium,fastLen)
plot(mainSeries,  linewidth  =  2,  color  =  color.white,  style  =  (diffStrat)  ?  plot.style_histogram  :  plot.style_line)
series  =  (smoothStrat)  ?  premiumSmooth  :  na
series  :=  (maStrat)  ?  wma(premium,slowLen)  :  na
plot(series,  linewidth  =  2,  color  =  color.green)
wmaFast  =  wma(premium,fastLen)
buySignal  =  false
sellSignal  =  false
if  (doTrades)
        buySignal  :=  (smoothStrat)  ?  crossover(premiumSmooth,premVal)  :  crossover(wmaFast,premVal)
        sellSignal  :=  (smoothStrat)  ?  crossunder(premiumSmooth,premVal)  :  crossunder(wmaFast,premVal)
        buySignal  :=  (diffStrat)  ?  crossover(premium,premVal)  :  buySignal
        sellSignal  :=  (diffStrat)  ?  crossunder(premium,premVal)  :  sellSignal
        buySignal  :=  (maStrat)  ?  crossover(wmaFast,wma(premium,slowLen))  :  buySignal
        sellSignal  :=  (maStrat)  ?  crossunder(wmaFast,wma(premium,slowLen))  :  sellSignal
strategy.entry("long",  strategy.long,  when  =  buySignal  and  inDateRange)
strategy.entry("short",  strategy.short,  when  =  sellSignal  and  not  onlyLong  and  inDateRange)
strategy.close_all(when  =  sellSignal  and  onlyLong)
Expand (71 lines)
