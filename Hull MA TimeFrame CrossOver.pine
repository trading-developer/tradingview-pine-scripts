Script Name: Hull MA TimeFrame CrossOver
Author: SeaSide420
Description: Hello traders,
Although this strategy is configured on  BTCUSDT , with a changing of settings, it can be used on any trading instrument.
Here it is seen, on the 2 hour chart. With Trading Fees included in result (adjust to suit your exchange fees).
The candle crossover is set to Daily timeframe.
That means that the Candle crossover is going to see if todays price...
PineScript code:

Pine Script™ strategy
Hull MA TimeFrame CrossOver
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//                          ©  @SeaSide420
//@version=5
strategy('HullTimeFrameCrossOver',  shorttitle='H&TF',  overlay=true,  currency="BTC",initial_capital=1,  default_qty_type=strategy.percent_of_equity,  default_qty_value=100,  commission_value=0.1,  commission_type=strategy.commission.percent)
stfu  =  "Select  Time  Frame  for  Candle  crossover  (close>close[1]=buy  else  sell)"
ptt  =  "Recommended  to  use  OPEN  as  source  to  avoid  repainting  (OPEN  is  a  set  value  each  candle,  where  as  a  CLOSE  value  changes  with  each  tick  for  the  duration  of  the  candle)"
masmthng  =  "Select  type  of  Moving  Average"
prdtt  =  "Amount  of  candles  back  to  use  with  calculation"
atrsnstt  =  "Basicly,  adjusts  ATR  SL  distance  from  candles"
tph  =  "Close  order  when  user  set  %  in  Profit"
slh  =  "Close  order  when  user  set  %  in  Loss"
btt  =  "If  selected,  Buying  is  allowed"
stt  =  "If  selected,  Selling  is  allowed"
res  =  input.timeframe(title='Candle  X  Resolution',  defval='D',  tooltip=stfu)
price  =input(title='SourceofPrice',defval=open,tooltip=ptt)
smoothing=input.string(title="MovingAverageType",defval="HMA",options=["ALMA","SMA","EMA","WMA","HMA"],tooltip=masmthng)
MA_Period=input.int(title='MovingAveragePeriod',defval=1000,minval=3,tooltip=prdtt)
atrsens=input.float(14,title='ATRsensitivity',tooltip=atrsnstt)
atrperiod=input.int(14,title='ATRPeriod',tooltip=prdtt)
TakeProfit=input(title='TakeProfit(%)',defval=1000,tooltip=tph)
StopLoss=input(title='StopLoss(%)',defval=1000,tooltip=slh)
uatrh="Ifselected,StopLosswillbetheATRline"
UseATRSL=input.bool(defval=false,title='UseATRSL?',tooltip=uatrh)
AllowBuy=input.bool(defval=true,title='AllowBuy?',tooltip=btt)
AllowSell=input.bool(defval=true,title='AllowSell?',tooltip=stt)
balance=strategy.initial_capital+strategy.netprofit
TP=TakeProfit/100*balance
SL=StopLoss/100*balance-StopLoss/100*balance*2
ma_function(price,MA_Period)=>
switchsmoothing
"ALMA"=>ta.alma(price,MA_Period,0.85,6)
"SMA"=>ta.sma(price,MA_Period)
"EMA"=>ta.ema(price,MA_Period)
"WMA"=>ta.wma(price,MA_Period)
=>ta.hma(price,MA_Period)
ma=ma_function(price,MA_Period)
ma0=ma_function(price,2)
ma1=ma_function(price,MA_Period)
ma2=ma_function(price[1],MA_Period)
D1=request.security(syminfo.tickerid,res,price,barmerge.gaps_off,barmerge.lookahead_off)
xATR=ta.atr(atrperiod)
nLoss=atrsens*xATR
xATRTrailingStop=0.0
iff_1=price>nz(xATRTrailingStop[1],0)?price-nLoss:price+nLoss
iff_2=price<nz(xATRTrailingStop[1],0)andprice[1]<nz(xATRTrailingStop[1],0)?math.min(nz(xATRTrailingStop[1]),price+nLoss):iff_1
xATRTrailingStop:=price>nz(xATRTrailingStop[1],0)andprice[1]>nz(xATRTrailingStop[1],0)?math.max(nz(xATRTrailingStop[1]),price-nLoss):iff_2
pos=0
iff_3=price[1]>nz(xATRTrailingStop[1],0)andprice<nz(xATRTrailingStop[1],0)?-1:nz(pos[1],0)
pos:=price[1]<nz(xATRTrailingStop[1],0)andprice>nz(xATRTrailingStop[1],0)?1:iff_3
above=ta.crossover(ma,xATRTrailingStop)
below=ta.crossover(xATRTrailingStop,ma)
longCondition=ma1>ma2andma0>D1andma0>ma1
shortCondition=ma1<ma2andma0<D1andma0<ma1
clr1=price>D1?color.green:color.red
clr2=ma1>ma2?color.red:color.green
plot(ta.cross(ma1,ma2)?ma1:na,label.style_cross,color=clr2,linewidth=3)
plot(ta.cross(ma1,D1)?ma1:na,label.style_cross,color=clr1,linewidth=3)
plot(D1,color=clr1,title='C_X',linewidth=2)
plot(xATRTrailingStop,color=color.black,title='ATRSL',linewidth=3)
strategy.close('buy',when=strategy.openprofit>TP,comment='buyTP',alert_message='buyTP')
strategy.close('buy',when=strategy.openprofit<SL,comment='buySL',alert_message='buySL')
strategy.close('sell',when=strategy.openprofit>TP,comment='sellTP',alert_message='sellTP')
strategy.close('sell',when=strategy.openprofit<SL,comment='sellSL',alert_message='sellSL')
ifUseATRSL
strategy.close_all(when=(price>xATRTrailingStopandabove)or(price<xATRTrailingStopandbelow),comment='ATRSL',alert_message='ATRSL')
ifAllowBuyandlongConditionandabove
strategy.entry('buy',strategy.long,comment='buy',alert_message='buy')
ifAllowSellandshortConditionandbelow
strategy.entry('sell',strategy.short,comment='sell',alert_message='sell')
Expand (69 lines)
