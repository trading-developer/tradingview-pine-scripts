Script Name: Delayed RSI Strategy
Author: tweakerID
Description: This strategy uses a 21 period RSI with an overbought (RSI indicator
is greater than) level of 60 (user defined) to determines long entries and an oversold
(RSI indicator is less than) level of 40 (user defined) for shorts. It introduces a bar delay that starts
counting when the RSI < Oversold or RSI > Overbought conditions are true, delaying the entry with
the...
PineScript code:

Pine Script™ strategy
Delayed RSI Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  tweakerID  and  ©  BacktestRookies
//  This  strategy  uses  a  21  period  RSI  with  an  overbought  (RSI  indicator
//  is  greater  than)  level  of  60  (user  defined)  to  determines  long  entries  and  an  oversold
//  (RSI  indicator  is  less  than)  level  of  40  (user  defined)  for  shorts.  It  introduces  a  bar  delay  that  starts
//  counting  when  the  RSI  <  Oversold  or  RSI  >  Overbought  conditions  are  true,  delaying  the  entry  with
//  the  amount  of  bars  determined  by  the  user.  The  trading  logic  can  be  reversed,  which  seems  to  work  better.
//@version=4
strategy("Delayed  RSI  Strategy",
          overlay=false,
          default_qty_type=strategy.percent_of_equity,
          default_qty_value=100,
          initial_capital=10000,
          commission_value=0.04,
          calc_on_every_tick=false,
          slippage=0)

direction  =  input(0,  title  =  "Strategy  Direction",  type=input.integer,  minval=-1,  maxval=1)
strategy.risk.allow_entry_in(direction  ==  0  ?  strategy.direction.all  :
  (direction  <  0  ?  strategy.direction.short  :  strategy.direction.long))
//  Bought  and  Sold  Boolean  Signal
bought  =  strategy.position_size  >  strategy.position_size[1]
  or  strategy.position_size  <  strategy.position_size[1]
///////////////////////  STRATEGY  INPUTS  ////////////////////////////////////////
title1=input(true,  "-----------------Strategy  Inputs-------------------")
rsiLen=input(21,  title="RSI  Length")
i_OB  =  input(60,  title="Overbought")
i_OS  =  input(40,  title="Oversold")
i_delay  =  input(15,  title="Entry  Delay  (#  of  Bars)")
i_Close=  input(false,  title="Use  Strategy  Close")
///////////////////////  BACKTESTER  /////////////////////////////////////////////
title2=input(true,  "-----------------General  Inputs-------------------")
//  Backtester  General  Inputs
i_SL=input(true,  title="Use  Stop  Loss  and  Take  Profit")
TS=input(false,  title="Use  Trailing  Stop")
i_SLType=input(defval="ATR  Stop",  title="Type  Of  Stop",  options=["Strategy  Stop",  "Swing  Lo/Hi",  "ATR  Stop"])
i_SPL=input(defval=10,  title="Swing  Point  Lookback")
i_PercIncrement=input(defval=3,  step=.1,  title="Swing  Point  SL  Perc  Increment")*0.01
i_ATR  =  input(14,  title="ATR  Length")
i_ATRMult  =  input(3,  step=.1,  title="ATR  Multiple")
i_TPRRR  =  input(2,  step=.1,  title="Take  Profit  Risk  Reward  Ratio")
DPR=input(false,  "Allow  Direct  Position  Reverse")
reverse=input(true,  "Reverse  Trades")
//  Swing  Points  Stop  and  Take  Profit
SwingStopProfit()  =>
        LL=(lowest(i_SPL))*(1-i_PercIncrement)
        HH=(highest(i_SPL))*(1+i_PercIncrement)
        LL_price  =  valuewhen(bought,  LL,  0)
        HH_price  =  valuewhen(bought,  HH,  0)
        entry_LL_price  =  strategy.position_size  >  0  ?  LL_price  :  na
        entry_HH_price  =  strategy.position_size  <  0  ?  HH_price  :  na
        tp=strategy.position_avg_price  +  (strategy.position_avg_price  -  entry_LL_price)*i_TPRRR
        stp=strategy.position_avg_price  -  (entry_HH_price  -  strategy.position_avg_price)*i_TPRRR
        [entry_LL_price,  entry_HH_price,  tp,  stp]
//  ATR  Stop
ATRStop()  =>
        ATR=atr(i_ATR)*i_ATRMult
        ATRLong  =  ohlc4  -  ATR
        ATRShort  =  ohlc4  +  ATR
        ATRLongStop  =  valuewhen(bought,  ATRLong,  0)
        ATRShortStop  =  valuewhen(bought,  ATRShort,  0)
        LongSL_ATR_price  =  strategy.position_size  >  0  ?  ATRLongStop  :  na
        ShortSL_ATR_price  =  strategy.position_size  <  0  ?  ATRShortStop  :  na
        ATRtp=strategy.position_avg_price  +  (strategy.position_avg_price  -  LongSL_ATR_price)*i_TPRRR
        ATRstp=strategy.position_avg_price  -  (ShortSL_ATR_price  -  strategy.position_avg_price)*i_TPRRR
        [LongSL_ATR_price,  ShortSL_ATR_price,  ATRtp,  ATRstp]

//  Strategy  Stop
StrategyStop(bought)  =>
        float  LongStop  =  na
        float  ShortStop  =  na
        float  StratTP  =  na
        float  StratSTP  =  na
        [LongStop,  ShortStop,  StratTP,  StratSTP]
//TrailingStop
TrailingStop(SL,SSL)  =>
        dif=(valuewhen(strategy.position_size>0  and  strategy.position_size[1]<=0,  high,0))
          -strategy.position_avg_price
        trailOffset          =  strategy.position_avg_price  -  SL
        var  tstop  =  float(na)
        if  strategy.position_size  >  0
                tstop  :=  high-  trailOffset  -  dif
                if  tstop<tstop[1]
                        tstop:=tstop[1]
        else
                tstop  :=  na
        StrailOffset          =  SSL-strategy.position_avg_price
varStstop=float(na)
Sdif=strategy.position_avg_price-(valuewhen(strategy.position_size<0
andstrategy.position_size[1]>=0,low,0))
ifstrategy.position_size<0
Ststop:=low+StrailOffset+Sdif
ifStstop>Ststop[1]
Ststop:=Ststop[1]
else
Ststop:=na
[tstop,Ststop]

//StopLoss&TakeProfitSwitches
SLTPLogic(LongStop,ShortStop,StratTP,StratSTP,LongSL_ATR_price,ShortSL_ATR_price,ATRtp,ATRstp,
entry_LL_price,entry_HH_price,tp,stp)=>
SL=i_SLType=="SwingLo/Hi"?entry_LL_price:i_SLType=="ATRStop"?LongSL_ATR_price:LongStop
SSL=i_SLType=="SwingLo/Hi"?entry_HH_price:i_SLType=="ATRStop"?ShortSL_ATR_price:ShortStop
TP=i_SLType=="SwingLo/Hi"?tp:i_SLType=="ATRStop"?ATRtp:StratTP
STP=i_SLType=="SwingLo/Hi"?stp:i_SLType=="ATRStop"?ATRstp:StratSTP
[SL,SSL,TP,STP]
///////////////////////STRATEGYLOGIC/////////////////////////////////////////
rsi=rsi(close,rsiLen)
isOB=rsi>i_OB
isOS=rsi<i_OS
BarsSinceOB=barssince(notisOB)
BarsSinceOS=barssince(notisOS)
BUY=BarsSinceOS==i_delay
SELL=BarsSinceOB==i_delay
///////////////////////FUNCTIONCALLS/////////////////////////////////////////
//StopsandProfits
[entry_LL_price,entry_HH_price,tp,stp]=SwingStopProfit()
[LongSL_ATR_price,ShortSL_ATR_price,ATRtp,ATRstp]=ATRStop()
[LongStop,ShortStop,StratTP,StratSTP]=StrategyStop(bought)
[SL,SSL,TP,STP]=SLTPLogic(LongStop,ShortStop,StratTP,StratSTP,
LongSL_ATR_price,ShortSL_ATR_price,ATRtp,ATRstp,entry_LL_price,entry_HH_price,tp,stp)
[tstop,Ststop]=TrailingStop(SL,SSL)
//Entries
ifreverse
ifnotDPR
strategy.entry("long",strategy.long,when=SELLandstrategy.position_size==0)
strategy.entry("short",strategy.short,when=BUYandstrategy.position_size==0)
else
strategy.entry("long",strategy.long,when=SELL)
strategy.entry("short",strategy.short,when=BUY)
else
ifnotDPR
strategy.entry("long",strategy.long,when=BUYandstrategy.position_size==0)
strategy.entry("short",strategy.short,when=SELLandstrategy.position_size==0)
else
strategy.entry("long",strategy.long,when=BUY)
strategy.entry("short",strategy.short,when=SELL)
//Exits
ifi_SL
strategy.exit("TP&SL","long",limit=TP,stop=TS?tstop:SL)
strategy.exit("TP&SL","short",limit=STP,stop=TS?Ststop:SSL)

ifi_Close
strategy.close_all(when=cross(rsi,50))
///////////////////////PLOTS//////////////////////////////////////////////////
//Plots
rsiplot=plot(rsi,"RSI",color=#7E57C2)
band1=hline(i_OB,"UpperBand",color=#787B86)
bandm=hline(50,"MiddleBand",color=color.new(#787B86,50))
band0=hline(i_OS,"LowerBand",color=#787B86)
fill(band1,band0,color=color.rgb(126,87,194,90),title="Background")
plot(rsi,"RSI",color=#7E57C2)
OSOBCount=plot(isOB?BarsSinceOB:isOS?BarsSinceOS:na,transp=100)
OSOBColor=color.from_gradient(isOB?BarsSinceOB:BarsSinceOS,0,20,color.black,isOB?color.red:isOS?color.green:na)
OBP=plot(rsi>i_OB?rsi:na,color=color.white,display=display.none)
fill(plot(i_OB,display=display.none),OBP,color=OSOBColor,transp=0,fillgaps=false)
OSP=plot(rsi<i_OS?rsi:na,color=color.white,display=display.none)
fill(plot(i_OS,display=display.none),OSP,color=OSOBColor,transp=0,fillgaps=false)
plotshape(BUY?1:na,style=shape.arrowdown,location=location.bottom,
color=color.green,title="BullishSetup",size=size.normal)
plotshape(SELL?1:na,style=shape.arrowup,location=location.top,
color=color.red,title="BearishSetup",size=size.normal)
Expand (184 lines)
