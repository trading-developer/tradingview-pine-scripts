Script Name: MA Bollinger Bands + RSI
Author: LucasVivien
Description: This script uses the standard deviation of a given moving average along with an RSI direction.
When: rsi crossover neutral line + price crossover lower deviation boundary => long
When: rsi crossunder neutral line + price crossunder upper deviation boundary => short
PineScript code:

Pine Script™ strategy
MA Bollinger Bands + RSI
//  This  close  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  Special  credits:  ChartArt  /  Matthew  J.  Slabosz  /  Zen  &  The  Art  of  Trading
//  Scipt  Author:  ©  LucasVivien
//@version=5
strategy('MA  Bollinger  Bands  +  RSI  (Strategy)',  shorttitle='MABB+RSI  (Strat)',  calc_on_order_fills=true,    overlay=true,  initial_capital=10000,  default_qty_type=strategy.cash,  default_qty_value=10000,  commission_value=0.1)
//==============================================================================
//================================      INPUTS      ==================================
//==============================================================================
var  g_trades  =  '       Trade  Parameters'
longTradesON          =  input.bool  (title='Long  trades'                  ,  defval=true  ,  group=g_trades,  inline='a',  tooltip='')
shortTradesON        =  input.bool  (title='Short  trades'                ,  defval=true  ,  group=g_trades,  inline='a',  tooltip='Switch  on/off  long  and  short  trades')
useTP                        =  input.bool  (title='Use  Take  Profit'          ,  defval=false,  group=g_trades,  inline=''  ,  tooltip='Fixed  Take  Profit  value')
useSL                        =  input.bool  (title='Use  Stop  Loss'              ,  defval=false,  group=g_trades,  inline=''  ,  tooltip='Fixed  Stop  Loss  value')
useTSL                      =  input.bool  (title='Use  Trailing  Stop'      ,  defval=true  ,  group=g_trades,  inline=''  ,  tooltip='ATR  Trailing  Stop  Loss  value  ')
reEnterAfterSLTP  =  input.bool  (title='Re-Entry  after  SL/TP',  defval=true  ,  group=g_trades,  inline=''  ,  tooltip='Allows  to  re-enter  trades  in  the  same  direction  as  previous  trade  if  previous  trade\'s  stop  loss  or  take  profit  was  hit')
TSLlookback            =  input.int    (title='Trailing  lookback'      ,  defval=2        ,  group=g_trades,  inline=''  ,  tooltip='How  many  bars  back  will  trailing  stops  look  for  a  swing  low  (longs)  or  sing  high  (short)  to  get  a  starting  point',  minval=0,  maxval=1000,  step=1)
atrMult                    =  input.float(title='ATR  Mult'                        ,  defval=9.0    ,  group=g_trades,  inline=''  ,  tooltip='Increase/decrease  to  set  stops  and/or  targets  further/closer  to  trade  entry  price',  minval=0.1)
atrLen                      =  input.int    (title='ATR  Length'                    ,  defval=14      ,  group=g_trades,  inline=''  ,  tooltip='Average  of  the  \'True  Range\'  over  x  past  bars',  minval=0)
rr                              =  input.float(title='Risk:Reward'                  ,  defval=1        ,  group=g_trades,  inline=''  ,  tooltip='Multiplies  the  take  profit  distance  by  this  number  ',  minval=0,  maxval=100,  step=0.1)
var  g_volatility  =  '       Volatility  Filters'
UseVolHigh  =  input.bool  (title='High  Volatility'      ,  defval=true  ,  group=g_volatility,  inline='b',  tooltip='')
UseVolLow    =  input.bool  (title='Low  Volatility'        ,  defval=true  ,  group=g_volatility,  inline='b',  tooltip='Filters  out  trade  signals  during  high  volatility  /  low  volatility  or  both.')
BBvolX          =  input.float(title='Volatility  Factor'  ,  defval=5.0    ,  group=g_volatility,  inline=''  ,  tooltip='Lower  this  number  to  filter  out  more  trades  when  volatility  at  extremes',  maxval=10,  minval=0.1,  step=0.1)
AddVol          =  input.bool  (title='Volatility  Visuals',  defval=false,  group=g_volatility,  inline=''  ,  tooltip='Plots  additionnal  graphs  on  the  chart  to  illustrate  how  extreme  levels  of  volatility  are  defined  (how  Bollinger  Bands  are  colored)')
var  g_MABB  =  '       Moving  Average  &  Bollinger  Bands'
MAtype  =  input.string(title='MA  Type',  defval='SMA',  group=g_MABB,  inline='c',  tooltip='Type  of  moving  average  used  for  standard  deviation',  options=['SMA',  'EMA',  'WMA',  'VWMA',  'HMA'])
MAlen    =  input.int      (title='MA  Length',  defval=200,  group=g_MABB,  inline='c',  tooltip='Moving  average  lookback')
BBX        =  input.float  (title=' BB  Mult',  defval=2.0  ,  group=g_MABB,  inline='d',  tooltip='Set  upper  &  lower  bands  closer  /  appart',  step=0.01,  minval=0.001)
BBlen    =  input.int      (title='BB  Length',  defval=200,  group=g_MABB,  inline='d',  tooltip='Bollinger  bands,  standard  deviation  lookback')
var  g_RSI  =  '       Relative  Strength  Index'
RSINlen  =  input.int(title='RSI  Cross  Loockback  ',  defval=10,  group=g_RSI,  tooltip='How  many  bars  back  (from  price  crossing-over  lower  bound  or  crossing-under  upper  bound)  to  look  for  corresponding  RSI  neutral  crossover/under',  minval=0,  maxval=1000)
RSIN        =  input.int(title='RSI  Neutral'                  ,  defval=50,  group=g_RSI,  tooltip='Defines  the  value  at  wich  RSI  neutral  crossover  or  crossunder  occurs')
RSIlen    =  input.int(title='RSI  Length'                    ,  defval=6  ,  group=g_RSI,  tooltip='Relative  Strenght  Index  lookback')
var  g_datetime  =  '       Date  &  Time  Filters'
UseDateFilter    =  input.bool      (title='Enable  Date  Filter'      ,  defval=false                                                            ,  group=g_datetime,  tooltip='Turns  on/off  date  filter')
StartDate            =  input.time  (title='StartDateFilter',defval=timestamp('1Jan202200:00+0000'),group=g_datetime,tooltip='Date&timetostartexcludingtrades')
EndDate=input.time(title='EndDateFilter',defval=timestamp('1Jan202300:00+0000'),group=g_datetime,tooltip='Date&timetostopexcludingtrades')
UseTimeFilter=input.bool(title='EnableSessionFilter',defval=false,group=g_datetime,tooltip='Turnson/offtimesessionfilter')
TradingSession=input.session(title='TradingSession',defval='1000-2200:1234567',group=g_datetime,tooltip='Notradeswillbetakenoutsideofthisrange')
varg_messages='   AlertMessages'
openLongAlertMessage=input.string(title='OpenLong',defval='',group=g_messages,inline='e',tooltip='Ifyouuse3Commas,Paste\'\'Messagefordealstartsignal\'\'(inOpenLong)&\'\'MessagetocloseorderatMarketPrice\'\'(inCloseLong)fromyour3Commaslongbot.\n\nOtherwise,youcandynamicallychangethealerttextyouwroteherebyusingPinescript{{placeholders}}(Google:\'\'variablesinalertstradingview\'\'formoredetails)')
closeLongAlertMessage=input.string(title='CloseLong',defval='',group=g_messages,inline='e',tooltip='')
openShortAlertMessage=input.string(title='OpenShort',defval='',group=g_messages,inline='f',tooltip='Ifyouuse3Commas,Paste\'\'Messagefordealstartsignal\'\'(inOpenShort)&\'\'MessagetocloseorderatMarketPrice\'\'(inCloseShort)fromyour3Commasshortbot.\n\nOtherwise,youcandynamicallychangethealerttextyouwroteherebyusingPinescript{{placeholders}}(Google:\'\'variablesinalertstradingview\'\'formoredetails)')
closeShortAlertMessage=input.string(title='CloseShort',defval='',group=g_messages,inline='f',tooltip='')
//==============================================================================
//================================SIGNALS=================================
//==============================================================================
//----------------------------BOLLINGERBANDS-----------------------------
BBdev=ta.stdev(close,BBlen)*BBX
MA=ta.sma(close,MAlen)
ifMAtype=='HMA'
MA:=ta.hma(close,MAlen)
ifMAtype=='WMA'
MA:=ta.wma(close,MAlen)
ifMAtype=='EMA'
MA:=ta.ema(close,MAlen)
ifMAtype=='VWMA'
MA:=ta.vwma(close,MAlen)
BBupper=MA+BBdev
BBlower=MA-BBdev
BBbull=open<BBlowerandclose>BBlower
BBbear=open>BBupperandclose<BBupper
//----------------------------------RSI-----------------------------------
RSI=ta.rsi(close,RSIlen)
RSIcrossover=ta.crossover(RSI,RSIN)
RSIcrossunder=ta.crossunder(RSI,RSIN)
RSIbull=false
fori=0toRSINlenby1
ifRSIcrossover[i]==true
RSIbull:=true
RSIbull
RSIbear=false
fori=0toRSINlenby1
ifRSIcrossunder[i]==true
RSIbear:=true
RSIbear
//------------------------------VOLATILITY--------------------------------
BBvol=BBupper-BBlower
SignalLine=ta.sma(BBvol,50)
BaseLine=ta.sma(BBvol,2000)
HighVolLvl=BaseLine+BaseLine*BBvolX/10
LowVolLvl=BaseLine-BaseLine*BBvolX/10
varvolExtrmHigh=false
ifBBvol>HighVolLvlandUseVolHigh
volExtrmHigh:=true
volExtrmHigh
else
volExtrmHigh:=false
volExtrmHigh
varvolExtrmLow=false
ifBBvol<LowVolLvlandUseVolLow
volExtrmLow:=true
volExtrmLow
else
volExtrmLow:=false
volExtrmLow
//---------------------------DATE/TIMEFILTER-----------------------------
In(t)=>na(time(timeframe.period,t))==false
TimeFilter=UseTimeFilterandnotIn(TradingSession)ornotUseTimeFilter
DateFilter=time>=StartDateandtime<=EndDate
DateTime=(UseDateFilter?notDateFilter:true)and(UseTimeFilter?In(TradingSession):true)
//--------------------------SIGNALSVALIDATION----------------------------
validLong=BBbullandRSIbullandnotvolExtrmHighandnotvolExtrmLowandDateTimeandbarstate.isconfirmed
validShort=BBbearandRSIbearandnotvolExtrmHighandnotvolExtrmLowandDateTimeandbarstate.isconfirmed
//==============================================================================
//========================STOPLOSS&TAKEPROFIT=========================
//==============================================================================
//------------------------TRADEDIRECTIONCHANGE--------------------------
varlastsignalislong=false
varlastsignalisshort=false
varnewTradeDirection=false
ifvalidLong
lastsignalislong:=true
lastsignalisshort:=false
lastsignalisshort
ifvalidShort
lastsignalislong:=false
lastsignalisshort:=true
lastsignalisshort
iflastsignalislong==trueandlastsignalislong[1]==false
orlastsignalisshort==trueandlastsignalisshort[1]==false
newTradeDirection:=true
newTradeDirection
else
newTradeDirection:=false
newTradeDirection
//---------------------------DATA&VARIABLES-----------------------------
SPS=strategy.position_size
atr=ta.atr(atrLen)
varSLsaved=0.0
varTPsaved=0.0
varfloatTSLsaved=na
varfloatentryPrice=na
//----------------------------STRAIGHTSTOPS------------------------------
SLdist=atr*atrMult
longSL=close-SLdist
longSLDist=close-longSL
longTP=close+longSLDist*rr
shortSL=close+SLdist
shortSLDist=shortSL-close
shortTP=close-shortSLDist*rr
ifvalidLongandSPS[1]<=0orvalidShortandSPS[1]>=0
or(validLongorvalidShort)andSPS[1]==0andreEnterAfterSLTP
SLsaved:=validLong?longSL:validShort?shortSL:na
TPsaved:=validLong?longTP:validShort?shortTP:na
TPsaved
//----------------------------TRAILINGSTOPS------------------------------
longTrailStart=ta.lowest(low,TSLlookback)-atr*atrMult
shortTrailStart=ta.highest(high,TSLlookback)+atr*atrMult
ifvalidLongandSPS[1]<=0orvalidShortandSPS[1]>=0
or(validLongorvalidShort)andSPS[1]==0andreEnterAfterSLTP
TSLsaved:=validLong?longTrailStart:validShort?shortTrailStart:na
entryPrice:=close
ifSPS>0
TSLsaved:=math.max(longTrailStart,TSLsaved,TSLsaved[1])
ifSPS<0
TSLsaved:=math.min(shortTrailStart,TSLsaved,TSLsaved[1])
ifSPS[1]!=0andSPS==0
TSLsaved:=na
//------------------------------SLTPHITS--------------------------------
varlongSLTPhit=false
ifSPS[1]>0and((useTP?high>=TPsaved[1]:false)
or(useSL?low<=SLsaved[1]:false)
or(useTSL?low<=TSLsaved[1]:false))
longSLTPhit:=true
else
longSLTPhit:=false
varshortSLTPhit=false
ifSPS[1]<0and((useTP?low<=TPsaved[1]:false)
or(useSL?high>=SLsaved[1]:false)
or(useTSL?high>=TSLsaved[1]:false))
shortSLTPhit:=true
else
shortSLTPhit:=false
//==============================================================================
//=================================PLOTS==================================
//==============================================================================
//--------------------------------SIGNALS---------------------------------
plotchar(validLong,title='LongSignal',char='⬆',
location=location.belowbar,size=size.tiny,color=color.new(#3064fc,0))
plotchar(validShort,title='ShortSignal',char='⬇',
location=location.abovebar,size=size.tiny,color=color.new(#fc1049,0))
//----------------------------STRAIGHTSTOPS------------------------------
plot(useTPandSPS!=0andnotnewTradeDirection?TPsaved:na,
color=color.new(color.green,0),style=plot.style_linebr)
plot(useSLandSPS!=0andnotnewTradeDirection?SLsaved:na,
color=color.new(color.red,0),style=plot.style_linebr)
//----------------------------TRAILINGSTOPS------------------------------
TSLcolor=SPS>0andentryPrice>TSLsaved?color.red:SPS>0andentryPrice<TSLsaved?color.green:
SPS<0andentryPrice<TSLsaved?color.red:SPS<0andentryPrice>TSLsaved?color.green:na
plot(useTSLandSPS!=0andnotnewTradeDirection?TSLsaved:na,color=TSLcolor,style=plot.style_linebr)
//----------------------------BOLLINGERBANDS-----------------------------
plot(MA,title='MovingAverage',color=color.new(color.white,50))
PriceUpperLine=plot(BBupper,title='BBpriceUpper',color=color.new(color.gray,transp=60))
PriceLowerLine=plot(BBlower,title='BBpriceLower',color=color.new(color.gray,transp=60))
fill(PriceUpperLine,PriceLowerLine,title='BBpriceFill',color=
volExtrmHighandBBvol>BBvol[1]?color.new(#ff1010,70):
volExtrmHighandBBvol<BBvol[1]?color.new(#ff1010,75):
volExtrmLowandBBvol<BBvol[1]?color.new(#10ff10,70):
volExtrmLowandBBvol>BBvol[1]?color.new(#10ff10,75):
color.new(color.white,90))
//------------------------------VOLATILITY--------------------------------
plot((UseVolHighorUseVolLow)andAddVol?BBvol:na,title='BBvol',color=color.new(color.blue,10))
plot((UseVolHighorUseVolLow)andAddVol?SignalLine:na,title='SignalLine',color=color.new(color.fuchsia,10))
plot((UseVolHighorUseVolLow)andAddVol?BaseLine:na,title='BaseLine',color=color.new(color.yellow,10))
VolUpperLine=plot((UseVolHighorUseVolLow)andAddVol?HighVolLvl:na,title='BBvolUpper',color=color.new(color.yellow,70))
VolLowerLine=plot((UseVolHighorUseVolLow)andAddVol?LowVolLvl:na,title='BBvolLower',color=color.new(color.yellow,70))
fill(VolUpperLine,VolLowerLine,title='BBvolFill',color=color.new(color.yellow,98))
//---------------------------DATE/TIMEFILTER-----------------------------
bgcolor(DateFilterandUseDateFilter?color.rgb(255,70,70,85):na,title='DateFilter')
bgcolor(TimeFilterandUseTimeFilter?color.rgb(255,70,70,85):na,title='TimeFilter')
//==============================================================================
//===========================STRATEGY&ALERTS===========================
//==============================================================================
//---------------------------------LONGS----------------------------------
iflongTradesONandvalidLongandnewTradeDirection
orlongTradesONandvalidLongandSPS[1]==0andreEnterAfterSLTP
andnot(validLongandlongSLTPhit)
strategy.entry(id='Long',direction=strategy.long)
alert(openLongAlertMessage,alert.freq_once_per_bar_close)
strategy.exit(id='Longexit',from_entry='Long',
stop=useSL?SLsaved:useTSL?TSLsaved:newTradeDirection?BBupper:na,
limit=useTP?TPsaved:na,
when=SPS>0)
iflongSLTPhitor(shortTradesONandvalidShortandnewTradeDirection)
alert(closeLongAlertMessage,alert.freq_once_per_bar)
//--------------------------------SHORTS----------------------------------
ifshortTradesONandvalidShortandnewTradeDirection
orshortTradesONandvalidShortandSPS[1]==0andreEnterAfterSLTP
andnot(validShortandshortSLTPhit)
strategy.entry(id='Short',direction=strategy.short)
alert(openShortAlertMessage,alert.freq_once_per_bar_close)
strategy.exit(id='Shortexit',from_entry='Short',
stop=useSL?SLsaved:useTSL?TSLsaved:newTradeDirection?BBlower:na,
limit=useTP?TPsaved:na,
when=SPS<0)
ifshortSLTPhitor(longTradesONandvalidLongandnewTradeDirection)
alert(closeShortAlertMessage,alert.freq_once_per_bar)
Expand (302 lines)
