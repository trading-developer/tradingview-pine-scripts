Script Name: MA Emperor insiliconot Strategy
Author: shawnteoh
Description: Converted EmperorBTC's EMA crossover indicator for easy backtesting and added ability to:

  Specify time period for backtesting
  Specify order quantity
  Toggle original indicators (default off)


Quoting EmperorBTC:
Entry is to be made when the
1. Cross over gives a P(Positive Sign) and the candle completely closes above the cross-over
2. When the Heikin...
PineScript code:

Pine Scriptâ„¢ strategy
MA Emperor insiliconot Strategy
//@version=4
//Converted  to  strategy  by  shawnteoh
//study(title  =  "MA  Emperor  insiliconot  Alert",  overlay=true,  precision=8)  //Uncomment  for  alert
strategy(title  =  "MA  Emperor  insiliconot  Strategy"  ,  overlay=true,  precision=8)  //Comment  for  alert
strat_dir_input  =  input(title="Strategy  Direction",  defval="long",  options=["long",  "short",  "all"])
strat_dir_value  =  strat_dir_input  ==  "long"  ?  strategy.direction.long  :  strat_dir_input  ==  "short"  ?  strategy.direction.short  :  strategy.direction.all
strategy.risk.allow_entry_in(strat_dir_value)  //Comment  for  alert
//  Testing  start  date
testPeriodStart  =  input(timestamp("1  January  2020"),  "Backtest  Start",  type=input.time)
//Stop  date  if  you  want  to  use  a  specific  range
testPeriodStop  =  input(timestamp("31  December  2030"),  "Backtest  Stop",  type=input.time)
testPeriod()  =>
        time  >=  testPeriodStart  and  time  <=  testPeriodStop  ?  true  :  false
haClose  =  close
haOpen    =  open
haHigh    =  high
haLow      =  low
haOpen  :=  security(heikinashi(syminfo.tickerid),  timeframe.period,  open)
haHigh  :=  security(heikinashi(syminfo.tickerid),  timeframe.period,  high)
haLow  :=  security(heikinashi(syminfo.tickerid),  timeframe.period,  low)
haClose  :=  security(heikinashi(syminfo.tickerid),  timeframe.period,  close)
ssrc  =  close
ha  =  false
o  =  ha  ?  haOpen  :  open
c  =  ha  ?  haClose  :  close
h  =  ha  ?  haHigh  :  high
l  =  ha  ?  haLow  :  low
ssrc  :=  ssrc  ==  close  ?  ha  ?  haClose  :  c  :  ssrc
ssrc  :=  ssrc  ==  open  ?  ha  ?  haOpen  :  o  :  ssrc
ssrc  :=  ssrc  ==  high  ?  ha  ?  haHigh  :  h  :  ssrc
ssrc  :=  ssrc  ==  low  ?  ha  ?  haLow  :  l  :  ssrc
ssrc  :=  ssrc  ==  hl2  ?  ha  ?  (haHigh  +  haLow)  /  2  :  hl2  :  ssrc
ssrc  :=  ssrc  ==  hlc3  ?  ha  ?  (haHigh  +  haLow  +  haClose)  /  3  :  hlc3  :  ssrc
ssrc  :=  ssrc  ==  ohlc4  ?  ha  ?  (haHigh  +  haLow  +  haClose+  haOpen)  /  4  :  ohlc4  :  ssrc
type  =  input(defval  =  "EMA",  title  =  "Type",  options  =  ["Butterworth_2Pole",  "DEMA",  "EMA",  "Gaussian",  "Geometric_Mean",  "LowPass",  "McGuinley",  "SMA",  "Sine_WMA",  "Smoothed_MA",  "Super_Smoother",    "Triangular_MA",  "Wilders",  "Zero_Lag"])
len1=input(8,  title  ="MA  1")
len2=input(13,  title  =  "MA  2")
len3=input(21,  title="MA3")
len4=input(55,title="MA4")
len5=input(89,title="MA5")
lenrib=input(120,title="IB")
lenrib2=input(121,title="2B")
lenrib3=input(200,title="21b")
lenrib4=input(221,title="22b")
onOff1=input(defval=false,title="Enable1")
onOff2=input(defval=true,title="Enable2")
onOff3=input(defval=true,title="Enable3")
onOff4=input(defval=false,title="Enable4")
onOff5=input(defval=false,title="Enable5")
onOff6=input(defval=false,title="Enable6")
onOff7=input(defval=false,title="Enable7")
onOff8=input(defval=false,title="Enablex")
onOff9=input(defval=false,title="Enablex")
gauss_poles=input(3,"***Gaussianpoles***",minval=1,maxval=14)
linew=2
shapes=false
variant_supersmoother(src,len)=>
Pi=2*asin(1)
a1=exp(-1.414*Pi/len)
b1=2*a1*cos(1.414*Pi/len)
c2=b1
c3=(-a1)*a1
c1=1-c2-c3
v9=0.0
v9:=c1*(src+nz(src[1]))/2+c2*nz(v9[1])+c3*nz(v9[2])
v9
variant_smoothed(src,len)=>
v5=0.0
v5:=na(v5[1])?sma(src,len):(v5[1]*(len-1)+src)/len
v5
variant_zerolagema(src,len)=>
price=src
l=(len-1)/2
d=(price+(price-price[l]))
z=ema(d,len)
z
variant_doubleema(src,len)=>
v2=ema(src,len)
v6=2*v2-ema(v2,len)
v6
variant_WiMA(src,length)=>
MA_s=nz(src)
MA_s:=(src+nz(MA_s[1]*(length-1)))/length
MA_s
fact(num)=>
a=1
nn=num<=1?1:num
fori=1tonn
a:=a*i
a
getPoles(f,Poles,alfa)=>
filt=f
sign=1
floatresults=0+bar_index//tvseriesspoofing
forr=1tomax(min(Poles,bar_index),1)
mult=fact(Poles)/(fact(Poles-r)*fact(r))
matPo=pow(1-alfa,r)
prev=nz(filt[r-1],0)
sum=sign*mult*matPo*prev
results:=results+sum
sign:=sign*-1
results:=results-bar_index
results
variant_gauss(Price,Lag,Poles)=>
Pi=2*asin(1)
beta=(1-cos(2*Pi/Lag))/(pow(sqrt(2),2.0/Poles)-1)
alfa=-beta+sqrt(beta*beta+2*beta)
pre=nz(Price,0)*pow(alfa,Poles)
filter=pre
result=bar_index>0?getPoles(nz(filter[1]),Poles,alfa):0
filter:=pre+result
variant_mg(src,len)=>
mg=0.0
mg:=na(mg[1])?ema(src,len):mg[1]+(src-mg[1])/(len*pow(src/mg[1],4))
mg
variant_sinewma(src,length)=>
PI=2*asin(1)
sum=0.0
weightSum=0.0
fori=0tolength-1
weight=sin(i*PI/(length+1))
sum:=sum+nz(src[i])*weight
weightSum:=weightSum+weight
sinewma=sum/weightSum
sinewma
variant_geoMean(price,per)=>
gmean=pow(price,1.0/per)
gx=fori=1toper-1
gmean:=gmean*pow(price[i],1.0/per)
gmean
ggx=bar_index>per?gx:price
ggx
variant_butt2pole(pr,p1)=>
Pi=2*asin(1)
DTR=Pi/180
a1=exp(-sqrt(2)*Pi/p1)
b1=2*a1*cos(DTR*(sqrt(2)*180/p1))
cf1=(1-b1+a1*a1)/4
cf2=b1
cf3=-a1*a1
butt_filt=pr
butt_filt:=cf1*(pr+2*nz(pr[1])+nz(pr[2]))+cf2*nz(butt_filt[1])+cf3*nz(butt_filt[2])
variant_lowPass(src,len)=>
LP=src
sr=src
a=2.0/(1.0+len)
LP:=(a-0.25*a*a)*sr+0.5*a*a*nz(sr[1])-(a-0.75*a*a)*nz(sr[2])+2.0*(1.0-a)*nz(LP[1])-(1.0-a)*(1.0-a)*nz(LP[2])
LP
variant_sma(src,len)=>
sum=0.0
fori=0tolen-1
sum:=sum+src[i]/len
sum
variant_trima(src,length)=>
len=ceil((length+1)*0.5)
trima=sum(sma(src,len),len)/len
trima
variant(type,src,len)=>
type=="EMA"?ema(src,len):
type=="LowPass"?variant_lowPass(src,len):
type=="Linreg"?linreg(src,len,0):
type=="Gaussian"?variant_gauss(src,len,gauss_poles):
type=="Sine_WMA"?variant_sinewma(src,len):
type=="Geometric_Mean"?variant_geoMean(src,len):
type=="Butterworth_2Pole"?variant_butt2pole(src,len):
type=="Smoothed_MA"?variant_smoothed(src,len):
type=="Triangular_MA"?variant_trima(src,len):
type=="McGuinley"?variant_mg(src,len):
type=="DEMA"?variant_doubleema(src,len):
type=="Super_Smoother"?variant_supersmoother(src,len):
type=="Zero_Lag"?variant_zerolagema(src,len):
type=="Wilders"?variant_WiMA(src,len):variant_sma(src,len)
c1=#44E2D6
c2=#DDD10D
c3=#0AA368
c4=#E0670E
c5=#AB40B2
cRed=#F93A00
ma1=variant(type,ssrc,len1)
ma2=variant(type,ssrc,len2)
ma3=variant(type,ssrc,len3)
ma4=variant(type,ssrc,len4)
ma5=variant(type,ssrc,len5)
ma6=variant(type,ssrc,lenrib)
ma7=variant(type,ssrc,lenrib2)
ma8=variant(type,ssrc,lenrib3)
ma9=variant(type,ssrc,lenrib4)
col1=c1
col2=c2
col3=c3
col4=c4
col5=c5
p1=plot(onOff1?ma1:na,title="MA1",color=col1,linewidth=linew,style=plot.style_linebr)
p2=plot(onOff2?ma2:na,title="MA2",color=col2,linewidth=linew,style=plot.style_linebr)
p3=plot(onOff3?ma3:na,title="MA3",color=col3,linewidth=linew,style=plot.style_linebr)
p4=plot(onOff4?ma4:na,title="MA4",color=col4,linewidth=linew,style=plot.style_linebr)
p5=plot(onOff5?ma5:na,title="MA5",color=col5,linewidth=linew,style=plot.style_linebr)
p6=plot(onOff6?ma6:na,title="MA6",color=col5,linewidth=linew,style=plot.style_linebr)
p7=plot(onOff7?ma7:na,title="MA7",color=col5,linewidth=linew,style=plot.style_linebr)
p8=plot(onOff8?ma8:na,title="MA8",color=col5,linewidth=linew,style=plot.style_linebr)
p9=plot(onOff9?ma9:na,title="MA9",color=col5,linewidth=linew,style=plot.style_linebr)
lb=input(7,title="LeftBars")
rb=input(3,title="RightBars")
pv=input(false,title="Plotlocalswinghigh/low?",type=input.bool)
varfloatlh=0
varfloatll=0
lh:=iff(na(pivothigh(high,lb,rb)),lh,pivothigh(high,lb,rb))
plot(iff(pv,lh,na),title="LocalHigh",color=color.red)
ll:=iff(na(pivotlow(low,lb,rb)),ll,pivotlow(low,lb,rb))
plot(iff(pv,ll,na),title="LocalLow",color=color.blue)
varlongCond1=false
varlongCond2=false
longCond=crossover(ma2,ma3)
iflongCond1
longCond2:=haClose>haClose[1]
ifnotlongCond2
longCond1:=false
else
longCond1:=longCondandclose>ma2andclose>ll+(lh-ll)*0.236
//alertcondition(longCond1andlongCond2,"BuyCondition","Buy{{exchange}}:{{ticker}},price={{close}}")//Uncommentforalert
iflongCond1andlongCond2andtestPeriod()
strategy.entry("buy",strategy.long)//Commentforalert
longCond1:=false
longCond2:=false
varshortCond1=false
varshortCond2=false
shortCond=crossunder(ma2,ma3)
ifshortCond1
shortCond2:=haClose<=haClose[1]
ifnotshortCond2
shortCond1:=false
else
shortCond1:=shortCondandclose<ma2andclose<ll+(lh-ll)*0.764
//alertcondition(shortCond1andshortCond2,"SellCondition","Sell{{exchange}}:{{ticker}},price={{close}}")//Uncommentforalert
ifshortCond1andshortCond2andtestPeriod()
strategy.entry("sell",strategy.short)//Commentforalert
shortCond1:=false
shortCond2:=false
crossUpColor=longCond?color.new(color.green,70):na
bgcolor(crossUpColor,title="P")
crossDownColor=shortCond?color.new(color.red,70):na
bgcolor(crossDownColor,title="N")
//plotshape(longCond,title="P",style=shape.triangleup,location=location.belowbar,color=color.green,text="P",size=size.small)
//plotshape(shortCond,title="N",style=shape.triangledown,location=location.abovebar,color=color.red,text="N",size=size.small)
Expand (291 lines)
