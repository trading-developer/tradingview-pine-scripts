Script Name: TradingGroundhog - Strategy & Wavetrend V2
Author: UnknownUnicorn27666852
Description: #-- Public Strategy - No Repaint - Fractals - Wavetrend --

Here I come with another script, a nice and simple strategy based on fractals and Wavetrends.

 #-- Synopsis --

A simple idea, on a small time frame (15 min) we buy when the opening price goes below a Bottom fractals and sell when it goes over a Top fractals, but in order to avoid bad and evil...
PineScript code:

Pine Script™ strategy
TradingGroundhog - Strategy & Wavetrend V2
//  @version  =  5
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  TradingGroundhog
//  ========================  CASH  &  DATE  ============================
cash_amout  =  10000
pyramid_val  =  1
cash_given_per_lot  =  cash_amout/pyramid_val
startDate  =  input(title="Start  Date",defval=13)
startMonth  =  input(title="Start  Month",defval=1)
startYear  =  input(title="Start  Year",defval=2021)
afterStartDate  =  (time  >=  timestamp(syminfo.timezone,startYear,  startMonth,  startDate,  0,  0))
//====================================
//  ========================  STRATEGY  ============================
strategy(title="TradingGroundhog  -  Strategy  &  Wavetrend  V1",  overlay=true,  max_bars_back  =  4000,  overlay  =  false,  max_labels_count=500,  commission_type=strategy.commission.percent,  commission_value=0.00,default_qty_type=strategy.cash,  default_qty_value=  cash_given_per_lot,  pyramiding=pyramid_val)
//====================================
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////plotshape(filteredtopf,  style=shape.triangledown,  location=location.abovebar,  color=color.red,  text="•",  offset=0)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////plotshape(filteredbotf,  style=shape.triangleup,  location=location.belowbar,  color=color.lime,  text="•",  offset=0)
//  ========================  FUNCTIONS  ============================
f_LazyLine(_data,  _length)  =>
        w1  =  0,  w2  =  0,  w3  =  0
        L1  =  0.0,  L2  =  0.0,  L3  =  0.0
        w  =  _length  /  3

        if  _length  >  2
                w2  :=  math.round(w)
                w1  :=  math.round((_length-w2)/2)
                w3  :=      int((_length-w2)/2)

                L1  :=  ta.wma(_data,  w1)
                L2  :=  ta.wma(L1,  w2)
                L3  :=  ta.wma(L2,  w3)
        else
                L3  :=  _data
        L3
//====================================
choice_transp(top_val)  =>
        bool  c_val  =  false
        if  top_val  ==  0.0
                c_val  :=  false
        else
                c_val  :=  true
        c_val
//====================================
f_Top_Bottom_Lazy(alpha,  limit_candle)  =>
        price  =  request.security(syminfo.tickerid,  "D",open)
        low_day  =  request.security(syminfo.tickerid,  "D",low)
        LL  =  f_LazyLine(price,  alpha)
        uptrend          =  LL  >  LL[1]
        bool  reverse  =  false
        float  reversed_price  =  0.0
        float  reversed_price_low  =  0.0
        float  limit_to_pass  =  0.0
        float  limit_to_pass_down  =  0.0
        prices_top  =  array.new_float(0)
        prices_start  =  array.new_float(0)
        prices_bottom  =  array.new_float(0)
        prices_top_v  =  array.new_float(0)
        if  uptrend[1]  and  not  uptrend
                reversed_price  :=  LL[1]  //  Max  de  close  sur  period  donne  en  wavetrend
        else
                reversed_price  :=0.0

        if  uptrend  and  not  uptrend[1]
                reversed_price_low  :=  LL[1]
        else
                reversed_price_low  :=1000000
        ///  SHOW  Actual  OPEN
        limit_to_pass  :=  price
        limit_to_pass_down  :=  price
        ///
        float  bottom_1  =  0.0
        float  bottom_2  =  0.0
        float  bottom_3  =  0.0
        float  bottom_4  =  0.0
        float  bottom_5  =  0.0
        int  bottom_count  =  0
        float  top_1  =  10000000.0
        float  top_2  =  10000000.0
        float  top_3  =  10000000.0
        float  top_4  =  10000000.0
        float  top_5  =  10000000.0
        int  top_count  =  0
        ///  SHOW  PAST  TOP  BOTTOM
        for  i  =  0  to  limit_candle
                if  reversed_price[i]  >  limit_to_pass  //and  ((reversed_price[i]-limit_to_pass)/reversed_price[i])*100  >  per_cent_space_up
                        limit_to_pass  :=  reversed_price[i]
                        if  top_count  ==  0
                                top_1  :=  limit_to_pass
                        if  top_count  ==  1
                                top_2  :=  limit_to_pass
                        if  top_count  ==  2
                                top_3  :=  limit_to_pass
                        if  top_count  ==  3
                                top_4  :=  limit_to_pass
                        if  top_count  ==  4
                                top_5  :=  limit_to_pass
                        top_count  :=  top_count  +1
        for  i  =  0  to  limit_candle
                if  reversed_price_low[i]  <  limit_to_pass_down  //and  ((limit_to_pass_down-reversed_price_low[i])/limit_to_pass_down)*100  >  per_cent_space_down  and  array.size(prices_bottom)  <  2
                        limit_to_pass_down  :=  reversed_price_low[i]
                        if  bottom_count  ==  0
                                bottom_1  :=  limit_to_pass_down
                        if  bottom_count  ==  1
                                bottom_2  :=  limit_to_pass_down
                        if  bottom_count  ==  2
                                bottom_3  :=  limit_to_pass_down
                        if  bottom_count  ==  3
                                bottom_4  :=  limit_to_pass_down
                        if  bottom_count  ==  4
                                bottom_5  :=  limit_to_pass_down
                        bottom_count  :=  bottom_count  +1
        bool  c_top_1        =  false
        bool  c_top_2        =  false
        bool  c_top_3        =  false
        bool  c_top_4        =  false
        bool  c_top_5        =  false
        bool  c_bottom_1  =  false
        bool  c_bottom_2  =  false
        bool  c_bottom_3  =  false
        bool  c_bottom_4  =  false
        bool  c_bottom_5  =  false
        c_top_1      :=choice_transp(top_1)
c_top_2:=choice_transp(top_2)
c_top_3:=choice_transp(top_3)
c_top_4:=choice_transp(top_3)
c_top_5:=choice_transp(top_3)
c_bottom_1:=choice_transp(bottom_1)
c_bottom_2:=choice_transp(bottom_2)
c_bottom_3:=choice_transp(bottom_3)
c_bottom_4:=choice_transp(bottom_3)
c_bottom_5:=choice_transp(bottom_3)
boolgo_above=false
ifprice>top_1[2]andprice[2]<top_1[2]andnotgo_above[1]andnotgo_above[2]
go_above:=true
vargo_down=false
iflow_day[1]<bottom_1[1]
go_down:=true
ifgo_downanduptrendandnotuptrend[1]
go_down:=false
[top_1,top_2,top_3,top_4,top_5,bottom_1,bottom_2,bottom_3,bottom_4,bottom_5,go_above,go_down,LL,uptrend,c_top_1,c_top_2,c_top_3,c_top_4,c_top_5,c_bottom_1,c_bottom_2,c_bottom_3,c_bottom_4,c_bottom_5]
//---------------------------------------------------------------------------------------------------------
//========================USERINPUT============================
//per_cent_space_up=input(title="per_cent_space_up",defval=0.0,group="SellDirectiveInputsUSER")
//per_cent_space_down=input(title="per_cent_space_down",defval=0.0,group="SellDirectiveInputsUSER")
limit_candle=input(title="limit_candletolookon",defval=4000,group="SellDirectiveInputsUSER")
draw_step=input(title="lengthtopbottomdrawn",defval=1,group="SellDirectiveInputsUSER")
longLossPerc=input(title="LongStopLoss(%)",defval=0.01)*0.01
price=input(title="Source",defval=open)
alpha=input(title="CombinedSmoothness",defval=9)
vamp=input(title="VolumeMA",defval=2)
showZigZag=input(false)
showchannel=input(false)
filterBW=input(false,title="filterBillWilliamsFractals:")
filterFractals=input(false,title="Filterfractalsusingextrememethod:")
length=input(2,title="ExtremeWindow:")
//---------------------------------------------------------------------------------------------------------
//========================EXECUTIONANDSORTING============================
//||---FractalRecognition:
regulartopfractal=high[4]<high[3]andhigh[3]<high[2]andhigh[2]>high[1]andhigh[1]>high[0]
regularbotfractal=low[4]>low[3]andlow[3]>low[2]andlow[2]<low[1]andlow[1]<low[0]
billwtopfractal=filterBW?false:(high[4]<high[2]andhigh[3]<high[2]andhigh[2]>high[1]andhigh[2]>high[0]?true:false)
billwbotfractal=filterBW?false:(low[4]>low[2]andlow[3]>low[2]andlow[2]<low[1]andlow[2]<low[0]?true:false)
ftop=filterBW?regulartopfractal:regulartopfractalorbillwtopfractal
fbot=filterBW?regularbotfractal:regularbotfractalorbillwbotfractal
topf=ftop?high[2]>=ta.highest(high,length)?true:false:false
botf=fbot?low[2]<=ta.lowest(low,length)?true:false:false
filteredtopf=filterFractals?topf:ftop
filteredbotf=filterFractals?botf:fbot
//---------------------------------------------------------------------------------------------------------
//||---AddedSwingHigh/LowOption
ShowSwingsHL=input(true)
highswings=filteredtopf==false?na:ta.valuewhen(filteredtopf==true,high[2],2)<ta.valuewhen(filteredtopf==true,high[2],1)andta.valuewhen(filteredtopf==true,high[2],1)>ta.valuewhen(filteredtopf==true,high[2],0)
lowswings=filteredbotf==false?na:ta.valuewhen(filteredbotf==true,low[2],2)>ta.valuewhen(filteredbotf==true,low[2],1)andta.valuewhen(filteredbotf==true,low[2],1)<ta.valuewhen(filteredbotf==true,low[2],0)
//---------------------------------------------------------------------------------------------------------
//||---ZigZag:
istop=filteredtopf?true:false
isbot=filteredbotf?true:false
topcount=ta.barssince(istop)
botcount=ta.barssince(isbot)
//---------------------------------------------------------------------------------------------------------
//||---FractalsUpDown:
vam=ta.sma(volume,vamp)
fractalup=0.0
fractaldown=0.0
up=high[3]>high[4]andhigh[4]>high[5]andhigh[2]<high[3]andhigh[1]<high[2]andvolume[3]>vam[3]
down=low[3]<low[4]andlow[4]<low[5]andlow[2]>low[3]andlow[1]>low[2]andvolume[3]>vam[3]
fractalup:=up?high[3]:fractalup[1]
fractaldown:=down?low[3]:fractaldown[1]
//---------------------------------------------------------------------------------------------------------
//||---FractalsPatternandSignalrecognition:
fractaldown_save=array.new_float(0)
fori=0tolimit_candle
ifarray.size(fractaldown_save)<3
ifarray.size(fractaldown_save)==0
array.push(fractaldown_save,fractaldown[i])
else
iffractaldown[i]!=array.get(fractaldown_save,array.size(fractaldown_save)-1)
array.push(fractaldown_save,fractaldown[i])
ifarray.size(fractaldown_save)<3
array.push(fractaldown_save,fractaldown)
array.push(fractaldown_save,fractaldown)
fractalup_save=array.new_float(0)
fori=0tolimit_candle
ifarray.size(fractalup_save)<3
ifarray.size(fractalup_save)==0
array.push(fractalup_save,fractalup[i])
else
iffractalup[i]!=array.get(fractalup_save,array.size(fractalup_save)-1)
array.push(fractalup_save,fractalup[i])
ifarray.size(fractalup_save)<3
array.push(fractalup_save,fractalup)
array.push(fractalup_save,fractalup)
//---------------------------------------------------------------------------------------------------------
//||---Top/BottomFractals:
Bottom_1=array.get(fractaldown_save,0)
Bottom_2=array.get(fractaldown_save,1)
Bottom_3=array.get(fractaldown_save,2)
Top_1=array.get(fractalup_save,0)
Top_2=array.get(fractalup_save,1)
Top_3=array.get(fractalup_save,2)
boolSignal_Test=false
boolSignal_Test_OUT_TEMP=false
varSignal_Test_TEMP=false
//---------------------------------------------------------------------------------------------------------
//||---WavetrendTop/Bottom:
[top_1,top_2,top_3,top_4,top_5,bottom_1,bottom_2,bottom_3,bottom_4,bottom_5,go_above,go_down,LL,uptrend,c_top_1,c_top_2,c_top_3,c_top_4,c_top_5,c_bottom_1,c_bottom_2,c_bottom_3,c_bottom_4,c_bottom_5]=request.security(syminfo.tickerid,"D",f_Top_Bottom_Lazy(alpha,limit_candle))
//---------------------------------------------------------------------------------------------------------
//||---NoBuySignal:
Kill_signal=go_aboveorgo_down
//---------------------------------------------------------------------------------------------------------
//||---IFStatementforBuyandSell:
iffilteredbotfandopen<Bottom_1and(Bottom_1-open)/Bottom_1>=longLossPercandnotKill_signal
Signal_Test:=true
iffilteredtopfandopen>Top_1andnotKill_signal
Signal_Test_TEMP:=true
iffilteredtopfandSignal_Test_TEMPorKill_signalandnotKill_signal[1]
Signal_Test_TEMP:=false
Signal_Test_OUT_TEMP:=true
//---------------------------------------------------------------------------------------------------------
//========================PLOTTING============================
//PlotWavetrend
c_up=color.new(#33ff00,0)
c_dn=color.new(#ff1111,0)
//plot(LL,"SS_WMALine",color=uptrend?c_up:c_dn,linewidth=3)
//---------------------------------------------------------------------------------------------------------
//PlotTops
plot(top_1,style=plot.style_circles,linewidth=1,color=color.rgb(102,204,255,c_top_1?0:100))
plot(top_2,style=plot.style_circles,linewidth=1,color=color.rgb(51,153,255,c_top_2?0:100))
plot(top_3,style=plot.style_circles,linewidth=1,color=color.rgb(0,102,255,c_top_3?0:100))
plot(top_4,style=plot.style_circles,linewidth=1,color=color.rgb(0,0,255,c_top_4?0:100))
plot(top_5,style=plot.style_circles,linewidth=1,color=color.rgb(0,0,204,c_top_5?0:100))
//---------------------------------------------------------------------------------------------------------
//PlotBottoms
plot(bottom_1,style=plot.style_circles,linewidth=1,color=color.rgb(255,204,153,c_bottom_1?0:100))
plot(bottom_2,style=plot.style_circles,linewidth=1,color=color.rgb(255,153,102,c_bottom_2?0:100))
plot(bottom_3,style=plot.style_circles,linewidth=1,color=color.rgb(255,102,0,c_bottom_3?0:100))
plot(bottom_4,style=plot.style_circles,linewidth=1,color=color.rgb(255,0,0,c_bottom_4?0:100))
plot(bottom_5,style=plot.style_circles,linewidth=1,color=color.rgb(128,0,0,c_bottom_5?0:100))
//---------------------------------------------------------------------------------------------------------
//PlotNoBuyPatterns
plotshape(go_above,style=shape.diamond,location=location.abovebar,color=color.red,offset=0)
plotshape(go_down,style=shape.square,location=location.belowbar,color=color.red,offset=0)
//---------------------------------------------------------------------------------------------------------
//PlotBUYSignal
plotshape(Signal_Test,style=shape.flag,location=location.belowbar,color=color.yellow,offset=0)
//---------------------------------------------------------------------------------------------------------
//PlotSELLSignal
plotshape(Signal_Test_OUT_TEMP,style=shape.flag,location=location.abovebar,color=color.white,offset=0)
//---------------------------------------------------------------------------------------------------------
//ShowNO-BUYPeriodpresentingNoBuyPatterns
cl_Kill_signal=Kill_signal?color.rgb(128,0,0,85):na
bgcolor(cl_Kill_signal)
//---------------------------------------------------------------------------------------------------------
//||---PlotLinesbasedonthefractals.
plot(showchannel?(filteredtopf?high[2]:na):na,color=color.black,offset=0)
plot(showchannel?(filteredbotf?low[2]:na):na,color=color.black,offset=0)
//---------------------------------------------------------------------------------------------------------
//||---HLswingschannel:unabletooffsetvalues
plot(showchannel?(highswings?high[2]:na):na,color=color.black,offset=-2)
plot(showchannel?(lowswings?low[2]:na):na,color=color.black,offset=-2)
//----------------------------------------------------------------------------------------------------------
//StrategyBuyandSell
ifSignal_TestandafterStartDate
strategy.entry("SL",strategy.long)
ifSignal_Test_OUT_TEMPandafterStartDate
strategy.close_all()
//---------------------------------------------------------------------------------------------------------
Expand (334 lines)
