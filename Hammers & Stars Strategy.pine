Script Name: Hammers & Stars Strategy
Author: ZenAndTheArtOfTrading
Description: Overview

This script trades basic hammer and shooting star candlestick patterns.

It's an extremely simple strategy with minimal filters, and according to my personal manual backtesting and automated trading results, performs best on the Daily chart on certain forex pairs.

It is intended to be traded on the forex markets but theoretically should work on all...
PineScript code:

Pine Script™ strategy
Hammers & Stars Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  ZenAndTheArtOfTrading  /  PineScriptMastery
//  Last  Updated:  5th  October,  2021
//  @version=4
strategy("Hammers  &  Stars  Strategy  [v1.1]",  shorttitle="HSS[v1.1]",  overlay=true)
//  Strategy  Settings
var  g_strategy            =  "Strategy  Settings"
atrMinFilterSize        =  input(title=">=  ATR  Filter",  type=input.float,  defval=0.0,  minval=0.0,  group=g_strategy,  tooltip="Minimum  size  of  entry  candle  compared  to  ATR")
atrMaxFilterSize        =  input(title="<=  ATR  Filter",  type=input.float,  defval=3.0,  minval=0.0,  group=g_strategy,  tooltip="Maximum  size  of  entry  candle  compared  to  ATR")
stopMultiplier            =  input(title="Stop  Loss  ATR",  type=input.float,  defval=1.0,  group=g_strategy,  tooltip="Stop  loss  multiplier  (x  ATR)")
rr                                    =  input(title="R:R",  type=input.float,  defval=1.0,  group=g_strategy,  tooltip="Risk:Reward  profile")
fibLevel                        =  input(title="Fib  Level",  type=input.float,  defval=0.333,  group=g_strategy,  tooltip="Used  to  calculate  upper/lower  third  of  candle.  (For  example,  setting  it  to  0.5  will  mean  hammers  must  close  >=  50%  mark  of  the  total  candle  size)")
//  Filter  Settings
var  g_filter                =  "Filter  Settings"
emaFilter                      =  input(title="EMA  Filter",  type=input.integer,  defval=0,  group=g_filter,  tooltip="EMA  length  to  filter  trades  -  set  to  zero  to  disable")
i_startTime                  =  input(title="Start  Date  Filter",  defval=timestamp("01  Jan  2000  13:30  +0000"),  type=input.time,  group=g_filter,  tooltip="Date  &  time  to  begin  trading  from")
i_endTime                      =  input(title="End  Date  Filter",  defval=timestamp("1  Jan  2099  19:30  +0000"),  type=input.time,  group=g_filter,  tooltip="Date  &  time  to  stop  trading")
//  Backtester  Settings
var  g_tester                =  "Backtester  Settings"
startBalance                =  input(title="Starting  Balance",  type=input.float,  defval=10000.0,  group=g_tester,  tooltip="Your  starting  balance  for  the  custom  inbuilt  tester  system")
riskPerTrade                =  input(title="Risk  Per  Trade",  type=input.float,  defval=1.0,  group=g_tester,  tooltip="Your  desired  %  risk  per  trade  (as  a  whole  number)")
drawTester                    =  input(title="Draw  Backtester",  type=input.bool,  defval=true,  group=g_tester,  tooltip="Turn  on/off  inbuilt  backtester  display")
//  AutoView  Settings
var  g_av                        =  "AutoView  Settings  [OANDA]"
av_use                            =  input(title="Use  AutoView?",  type=input.bool,  defval=false,  group=g_av,  tooltip="If  turned  on  then  the  alerts  this  script  generates  will  use  AutoView  syntax  for  auto-trading  (WARNING:  USE  AT  OWN  RISK!  RESEARCH  THE  DANGERS)")
av_oandaDemo                =  input(title="Use  Oanda  Demo?",  type=input.bool,  defval=false,  group=g_av,  tooltip="If  turned  on  then  oandapractice  broker  prefix  will  be  used  for  AutoView  alerts  (demo  account).  If  turned  off  then  live  account  will  be  used")
av_limitOrder              =  input(title="Use  Limit  Order?",  type=input.bool,  defval=true,  group=g_av,  tooltip="If  turned  on  then  AutoView  will  use  limit  orders.  If  turned  off  then  market  orders  will  be  used")
av_gtdOrder                  =  input(title="Days  To  Leave  Limit  Order",  type=input.integer,  minval=0,  defval=2,  group=g_av,  tooltip="This  is  your  GTD  setting  (good  til  day)")
av_accountBalance      =  input(title="Account  Balance",  type=input.float,  defval=1000.0,  step=100,  group=g_av,  tooltip="Your  account  balance  (used  for  calculating  position  size)")
av_accountCurrency    =  input(title="Account  Currency",  type=input.string,  defval="USD",  options=["AUD",  "CAD",  "CHF",  "EUR",  "GBP",  "JPY",  "NZD",  "USD"],  group=g_av,  tooltip="Your  account  balance  currency  (used  for  calculating  position  size)")
av_riskPerTrade          =  input(title="Risk  Per  Trade  %",  type=input.float,  defval=2.0,  step=0.5,  group=g_av,  tooltip="Your  risk  per  trade  as  a  %  of  your  account  balance")
//  PineConnector  Settings
var  g_pc                        =  "PineConnector  Settings"
pc_use                            =  input(title="Use  PineConnector?",  type=input.bool,  defval=false,  group=g_pc,  tooltip="Use  PineConnector  Alerts?  (WARNING:  USE  AT  OWN  RISK!  RESEARCH  THE  DANGERS)")
pc_id                              =  input(title="License  ID",  type=input.string,  defval="ID",  group=g_pc,  tooltip="This  is  your  PineConnector  license  ID")
pc_spread                      =  input(title="Spread",  type=input.float,  defval=0.5,  group=g_pc,  tooltip="Enter  your  average  spread  for  this  pair  (used  for  offsetting  entry  limit  order  from  closing  price)")
pc_risk                          =  input(title="Risk  Per  Trade",  type=input.float,  defval=1,  step=0.5,  group=g_pc,  tooltip="This  is  how  much  to  risk  per  trade  (%  of  balance  or  lots  -  based  on  PC  settings)")
pc_prefix                      =  input(title="MetaTrader  Prefix",  type=input.string,  defval="",  group=g_pc,  tooltip="This  is  your  broker's  MetaTrader  symbol  prefix  (leave  blank  if  there  is  none)")
pc_suffix                      =  input(title="MetaTrader  Suffix",  type=input.string,  defval="",  group=g_pc,  tooltip="This  is  your  broker's  MetaTrader  symbol  suffix  (leave  blank  if  there  is  none)")
pc_limit                        =  input(title="Use  Limit  Order?",  type=input.bool,  defval=true,  group=g_pc,  tooltip="If  true  a  limit  order  will  be  used,  if  false  a  market  order  will  be  used")
//  Generate  PineConnector  alert  string  &  prepare  OANDA  broker  string
var  broker  =  av_oandaDemo  ?  "oandapractice"  :  "oanda"
var  symbol  =  pc_prefix  +  syminfo.ticker  +  pc_suffix
var  limit  =  pc_limit  ?  "limit"  :  ""
var  spread  =  syminfo.mintick  *  10  *  pc_spread
pc_entry_alert(direction,  sl,  tp)  =>
        limit_price  =  direction  ==  "buy"  ?  close  -  spread  :  close  +  spread
        price  =  pc_limit  ?  "price="  +  tostring(limit_price)  +  ","  :  ""
        pc_id  +  ","  +  direction  +  limit  +  ","+symbol+","+price+"sl="+tostring(sl)+",tp="+tostring(tp)+",risk="+tostring(pc_risk)
//Seeifthisbar'stimehappenedwithindatefilter
dateFilter=time>=i_startTimeandtime<=i_endTime
//Getindicatorvalues
atr=atr(14)
ema=ema(close,emaFilter==0?1:emaFilter)
//Customfunctiontoconvertpipsintowholenumbers
toWhole(number)=>
return=atr<1.0?(number/syminfo.mintick)/(10/syminfo.pointvalue):number
return:=atr>=1.0andatr<100.0andsyminfo.currency=="JPY"?return*100:return

//Customfunctiontoconvertwholenumbersbackintopips
toPips(number)=>
return=atr>=1.0?number:(number*syminfo.mintick)*(10/syminfo.pointvalue)
return:=atr>=1.0andatr<100.0andsyminfo.currency=="JPY"?return/100:return

//Customfunctiontotruncate(cut)excessdecimalplaces
truncate(_number,_decimalPlaces)=>
_factor=pow(10,_decimalPlaces)
int(_number*_factor)/_factor

//CheckEMAFilter
emaFilterLong=emaFilter==0orclose>ema
emaFilterShort=emaFilter==0orclose<ema
//CheckATRfilter
atrMinFilter=abs(high-low)>=(atrMinFilterSize*atr)oratrMinFilterSize==0.0
atrMaxFilter=abs(high-low)<=(atrMaxFilterSize*atr)oratrMaxFilterSize==0.0
atrFilter=atrMinFilterandatrMaxFilter
//Calculate33.3%fibonaccilevelforcurrentcandle
bullFib=(low-high)*fibLevel+high
bearFib=(high-low)*fibLevel+low
//Determinewhichpricesourceclosesoropenshighest/lowest
lowestBody=close<open?close:open
highestBody=close>open?close:open
//Determineifwehaveavalidsetup
validHammer=lowestBody>=bullFibandatrFilterandclose!=openandnotna(atr)andemaFilterLong
validStar=highestBody<=bearFibandatrFilterandclose!=openandnotna(atr)andemaFilterShort
//Checkifwehaveconfirmationforoursetup
validLong=validHammerandstrategy.position_size==0anddateFilterandbarstate.isconfirmed
validShort=validStarandstrategy.position_size==0anddateFilterandbarstate.isconfirmed
//-------------DETERMINEPOSITIONSIZE-------------//
//Getaccountinputs
vartradePositionSize=0.0
varpair=syminfo.basecurrency+"/"+syminfo.currency
//Checkifouraccountcurrencyisthesameasthebaseorquotecurrency(forrisk$conversionpurposes)
accountSameAsCounterCurrency=av_accountCurrency==syminfo.currency
accountSameAsBaseCurrency=av_accountCurrency==syminfo.basecurrency
//Checkifouraccountcurrencyisneitherthebaseorquotecurrency(forrisk$conversionpurposes)
accountNeitherCurrency=notaccountSameAsCounterCurrencyandnotaccountSameAsBaseCurrency
//Getcurrencyconversionratesifapplicable
conversionCurrencyPair=accountSameAsCounterCurrency?syminfo.tickerid:accountNeitherCurrency?av_accountCurrency+syminfo.currency:av_accountCurrency+syminfo.currency
conversionCurrencyRate=security(symbol=syminfo.type=="forex"?conversionCurrencyPair:"AUDUSD",resolution="D",expression=close)
//Calculatepositionsize
getPositionSize(stopLossSizePoints)=>
riskAmount=(av_accountBalance*(av_riskPerTrade/100))*(accountSameAsBaseCurrencyoraccountNeitherCurrency?conversionCurrencyRate:1.0)
riskPerPoint=(stopLossSizePoints*syminfo.pointvalue)
positionSize=(riskAmount/riskPerPoint)/syminfo.mintick
round(positionSize)

//SetupourGTD(good-til-day)orderinfo
gtdTime=time+(av_gtdOrder*1440*60*1000)//86,400,000msperday
gtdYear=year(gtdTime)
gtdMonth=month(gtdTime)
gtdDay=dayofmonth(gtdTime)
gtdString="dt="+tostring(gtdYear)+"-"+tostring(gtdMonth)+"-"+tostring(gtdDay)
//-------------ENDPOSITIONSIZECODE-------------//
//Calculateourstopdistance&sizeforthecurrentbar
stopSize=atr*stopMultiplier
longStopPrice=low<low[1]?low-stopSize:low[1]-stopSize
longStopDistance=close-longStopPrice
longTargetPrice=close+(longStopDistance*rr)
shortStopPrice=high>high[1]?high+stopSize:high[1]+stopSize
shortStopDistance=shortStopPrice-close
shortTargetPrice=close-(shortStopDistance*rr)
//Savetradestop&target&positionsizeifavalidsetupisdetected
vart_entry=0.0
vart_stop=0.0
vart_target=0.0
vart_direction=0
//Detectvalidlongsetups&triggeralert
ifvalidLong
t_entry:=close
t_stop:=longStopPrice
t_target:=longTargetPrice
t_direction:=1
tradePositionSize:=getPositionSize(toWhole(longStopDistance)*10)
strategy.entry(id="Long",long=strategy.long,when=validLong,comment="(SL="+tostring(truncate(toWhole(longStopDistance),2))+"pips)")
//Firealerts
ifnotav_useandnotpc_use
alert(message="BullishHammerDetected!",freq=alert.freq_once_per_bar_close)
//TriggerPineConnectorlongalert
ifpc_use
alertString=pc_entry_alert("buy",t_stop,t_target)
alert(alertString,alert.freq_once_per_bar_close)
//TriggerAutoViewlongalert
ifav_use
alert(message="e="+broker+"b=longq="
+tostring(tradePositionSize)
+"s="+pair
+"t="+(av_limitOrder?"limitfp="+tostring(close):"market")
+"fsl="+tostring(t_stop)
+"ftp="+tostring(t_target)
+(av_gtdOrder!=0andav_limitOrder?gtdString:""),
freq=alert.freq_once_per_bar_close)

//Detectvalidshortsetups&triggeralert
ifvalidShort
t_entry:=close
t_stop:=shortStopPrice
t_target:=shortTargetPrice
t_direction:=-1
tradePositionSize:=getPositionSize(toWhole(shortStopDistance)*10)
strategy.entry(id="Short",long=strategy.short,when=validShort,comment="(SL="+tostring(truncate(toWhole(shortStopDistance),2))+"pips)")
//Firealerts
ifnotav_useandnotpc_use
alert(message="BearishHammerDetected!",freq=alert.freq_once_per_bar_close)
//TriggerPineConnectorshortalert
ifpc_use
alertString=pc_entry_alert("sell",t_stop,t_target)
alert(alertString,alert.freq_once_per_bar_close)
//TriggerAutoViewshortalert
ifav_use
alert(message="e="+broker+"b=shortq="
+tostring(tradePositionSize)
+"s="+pair
+"t="+(av_limitOrder?"limitfp="+tostring(close):"market")
+"fsl="+tostring(t_stop)
+"ftp="+tostring(t_target)
+(av_gtdOrder!=0andav_limitOrder?gtdString:""),
freq=alert.freq_once_per_bar_close)

//Checkifpricehashitlongstoplossortarget
ift_direction==1and(low<=t_stoporhigh>=t_target)
t_direction:=0
//Cancellimitorderifithasn'tbeenfilledyet
ifpc_limitandpc_use
alert(pc_id+",cancellong,"+symbol)

//Checkifpricehashitshortstoplossortarget
ift_direction==-1and(high>=t_stoporlow<=t_target)
t_direction:=0
//Cancellimitorderifithasn'tbeenfilledyet
ifpc_limitandpc_use
alert(pc_id+",cancelshort,"+symbol)
//Exittradeswheneverourstoportargetishit
strategy.exit(id="LongExit",from_entry="Long",limit=t_target,stop=t_stop,when=strategy.position_size>0)
strategy.exit(id="ShortExit",from_entry="Short",limit=t_target,stop=t_stop,when=strategy.position_size<0)
//Drawtradedata
plot(strategy.position_size!=0orvalidLongorvalidShort?t_stop:na,title="TradeStopPrice",color=color.red,style=plot.style_linebr)
plot(strategy.position_size!=0orvalidLongorvalidShort?t_target:na,title="TradeTargetPrice",color=color.green,style=plot.style_linebr)
plot(strategy.position_size!=0orvalidLongorvalidShort?tradePositionSize:na,color=color.purple,display=display.none,title="AutoViewPositionSize")
//DrawEMAifit'senabled
plot(emaFilter==0?na:ema,color=emaFilterLong?color.green:color.red,linewidth=2,title="EMA")
//Drawpriceactionsetuparrows
plotshape(validLong?1:na,style=shape.triangleup,location=location.belowbar,color=color.green,title="BullishSetup")
plotshape(validShort?1:na,style=shape.triangledown,location=location.abovebar,color=color.red,title="BearishSetup")
//---BEGINTESTERCODE---//
//Declareperformancetrackingvariables
varbalance=startBalance
vardrawdown=0.0
varmaxDrawdown=0.0
varmaxBalance=0.0
vartotalPips=0.0
vartotalWins=0
vartotalLoss=0
//Detectwinningtrades
ifstrategy.wintrades!=strategy.wintrades[1]
balance:=balance+((riskPerTrade/100)*balance)*rr
totalPips:=totalPips+abs(t_entry-t_target)
totalWins:=totalWins+1
ifbalance>maxBalance
maxBalance:=balance

//Detectlosingtrades
ifstrategy.losstrades!=strategy.losstrades[1]
balance:=balance-((riskPerTrade/100)*balance)
totalPips:=totalPips-abs(t_entry-t_stop)
totalLoss:=totalLoss+1
//Updatedrawdown
drawdown:=(balance/maxBalance)-1
ifdrawdown<maxDrawdown
maxDrawdown:=drawdown

//Preparestatstable
vartabletestTable=table.new(position.top_right,5,2,border_width=1)
f_fillCell(_table,_column,_row,_title,_value,_bgcolor,_txtcolor)=>
_cellText=_title+"\n"+_value
table.cell(_table,_column,_row,_cellText,bgcolor=_bgcolor,text_color=_txtcolor)

//Drawstatstable
varbgcolor=color.new(color.black,0)
ifdrawTester
ifbarstate.islastconfirmedhistory
//Updatetable
dollarReturn=balance-startBalance
f_fillCell(testTable,0,0,"TotalTrades:",tostring(strategy.closedtrades),bgcolor,color.white)
f_fillCell(testTable,0,1,"WinRate:",tostring(truncate((strategy.wintrades/strategy.closedtrades)*100,2))+"%",bgcolor,color.white)
f_fillCell(testTable,1,0,"Starting:","$"+tostring(startBalance),bgcolor,color.white)
f_fillCell(testTable,1,1,"Ending:","$"+tostring(truncate(balance,2)),bgcolor,color.white)
f_fillCell(testTable,2,0,"Return:","$"+tostring(truncate(dollarReturn,2)),dollarReturn>0?color.green:color.red,color.white)
f_fillCell(testTable,2,1,"Pips:",(totalPips>0?"+":"")+tostring(truncate(toWhole(totalPips),2)),bgcolor,color.white)
f_fillCell(testTable,3,0,"Return:",(dollarReturn>0?"+":"")+tostring(truncate((dollarReturn/startBalance)*100,2))+"%",dollarReturn>0?color.green:color.red,color.white)
f_fillCell(testTable,3,1,"MaxDD:",tostring(truncate(maxDrawdown*100,2))+"%",color.red,color.white)
//---ENDTESTERCODE---//
Expand (276 lines)
