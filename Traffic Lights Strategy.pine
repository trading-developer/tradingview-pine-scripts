Script Name: Traffic Lights Strategy
Author: Trading_Solutions_
Description: 4HS Crypto Market Strategy
This strategy uses 4 ema to get Long or Short Signals
Length are: 4, 9, 18, 100
We take long positions when the order of the emas is the following:
green > yellow > red (As the color of Traffic Lights) and they are above white ema (Used as a filter for long positions)

We take short positions when the order of the emas is the...
PineScript code:

Pine Script™ strategy
Traffic Lights Strategy
//  This  source  code  is  subject  to  the  terms  of  the  Mozilla  Public  License  2.0  at  https://mozilla.org/MPL/2.0/
//  ©  maxits
//  4HS  Crypto  Market  Strategy
//  This  strategy  uses  4  ema  to  get  Long  or  Short  Signals
//  Length  are:  8,  14,  16,  100
//  We  take  long  positions  when  the  order  of  the  emas  is  the  following:
//  green  >  yellow  >  red  (As  the  color  of  Traffic  Lights)  and  they  are  above  white  ema  (Used  as  a  filter  for  long  positions)

//  We  take  short  positions  when  the  order  of  the  emas  is  the  following:
//  green  <  yellow  <  red  (As  the  color  of  inverse  Traffic  Lights)  and  they  are  below  white  ema  (Used  as  a  filter  for  short  positions)
//@version=4
strategy(title="Trafic  Lights  Strategy",
                  shorttitle="TLS",
                  overlay=true,
                  initial_capital=1000,
                  default_qty_value=20,
                  default_qty_type=strategy.percent_of_equity,
                  commission_value=0.1,
                  pyramiding=0
                  )
//  User  Inputs
i_time                  =  input(defval  =  timestamp("28  May  2017  13:30  +0000"),  title  =  "Start  Time",  type  =  input.time)  //Starting  time  for  Backtesting
sep1                      =  input(title="============  System  Conditions  ============",  type=input.bool,  defval=false)
enable_Long        =  input(true,  title="Enable  Long  Positions")      //  Enable  long    Positions
enable_Short      =  input(true,  title="Enable  Short  Positions")  //  Enable  short  Positions
sep2                      =  input(title="============  Indicator  Parameters  ============",  type=input.bool,  defval=false)
f_length              =  input(title="Fast  EMA  Length",      type=input.integer,  defval=8,      minval=1)
m_length              =  input(title="Medium  EMA  Length",  type=input.integer,  defval=14,      minval=1)
s_length              =  input(title="Slow  EMA  Length",      type=input.integer,  defval=16,    minval=1)
filter_L=input(title="EMAFilter",type=input.integer,defval=100,minval=1)
filterRes=input(title="FilterResolution",type=input.resolution,defval="D")//emaFilterTimeFrame
sep3=input(title="============LONGProfit-LossParameters============",type=input.bool,defval=false)
e_Long_TP=input(true,title="EnableaProfitLevel?")
e_Long_SL=input(false,title="EnableaS.LossLevel?")
e_Long_TS=input(true,title="EnableaTrailingStop?")
long_TP_Input=input(40.0,title='TakeProfit%',type=input.float,minval=0)/100
long_SL_Input=input(1.0,title='StopLoss%',type=input.float,minval=0)/100
atrLongMultip=input(2.0,title='ATRMultiplier',type=input.float,minval=0.1)//ParameterstocalculateTrailingStopLoss
atrLongLength=input(14,title='ATRLength',type=input.integer,minval=1)
sep4=input(title="============SHORTProfit-LossParameters============",type=input.bool,defval=false)
e_Short_TP=input(true,title="EnableaProfitLevel?")
e_Short_SL=input(false,title="EnableaS.LossLevel?")
e_Short_TS=input(true,title="EnableaTrailingStop?")
short_TP_Input=input(30.0,title='TakeProfit%',type=input.float,minval=0)/100
short_SL_Input=input(1.0,title='StopLoss%',type=input.float,minval=0)/100
atrShortMultip=input(2.0,title='ATRMultiplier',type=input.float,minval=0.1)
atrShortLength=input(14,title='ATRLength',type=input.integer,minval=1)
//Indicators
fema=ema(close,f_length)
mema=ema(close,m_length)
sema=ema(close,s_length)
filter=security(syminfo.tickerid,filterRes,ema(close,filter_L))
plot(fema,title="FastEMA",color=color.new(color.green,0))
plot(mema,title="MediEMA",color=color.new(color.yellow,0))
plot(sema,title="SlowEMA",color=color.new(color.red,0))
plot(filter,title="EMAFilter",color=color.new(color.white,0))
//EntryConditions
longTrade=strategy.position_size>0
shortTrade=strategy.position_size<0
notInTrade=strategy.position_size==0
inTrade=strategy.position_size!=0
priceEntry=strategy.position_avg_price
goLong=fema>memaandmema>semaandfema>filterandtime>i_timeandenable_Longand(crossover(fema,mema)orcrossover(mema,sema)orcrossover(sema,filter))
goShort=fema<memaandmema<semaandfema<filterandtime>i_timeandenable_Shortand(crossunder(fema,mema)orcrossunder(mema,sema)orcrossunder(sema,filter))
close_L=crossunder(fema,mema)
close_S=crossover(fema,mema)
//ProfitandLossconditions
//Long

long_TP=priceEntry*(1+long_TP_Input)//LongPositionTakeProfitCalculation
long_SL=priceEntry*(1-long_SL_Input)//LongPositionStopLossCalculation
atrLong=atr(atrLongLength)//LongPositionATRCalculation
long_TS=low-atrLong*atrLongMultip
long_T_stop=0.0//CodeforcalculatingLongPositionsTrailingStopLoss/
long_T_stop:=if(longTrade)
longStop=long_TS
max(long_T_stop[1],longStop)
else
0

//Short
short_TP=priceEntry*(1-short_TP_Input)//LongPositionTakeProfitCalculation
short_SL=priceEntry*(1+short_SL_Input)//ShortPositionStopLossCalculation
atrShort=atr(atrShortLength)//ShortPositionATRCalculation
short_TS=high+atrShort*atrShortMultip
short_T_stop=0.0//CodeforcalculatingShortPositionsTrailingStopLoss/
short_T_stop:=ifshortTrade
shortStop=short_TS
min(short_T_stop[1],shortStop)
else
9999999
//StrategyLongEntry
ifgoLongandnotInTrade
strategy.entry("GoLong",long=strategy.long,comment="GoLong",alert_message="OpenLongPosition")
iflongTradeandclose_L
strategy.close("GoLong",when=close_L,comment="CloseLong",alert_message="CloseLongPosition")

ife_Long_TP//AlgorithmforEnabledLongPositionProfitLossParameters
if(e_Long_TSandnote_Long_SL)
strategy.exit("LongTP&TS","GoLong",limit=long_TP,stop=long_T_stop)
else
if(e_Long_SLandnote_Long_TS)
strategy.exit("LongTP&TS","GoLong",limit=long_TP,stop=long_SL)
else
strategy.exit("LongTP&TS","GoLong",limit=long_TP)
else
ifnote_Long_TP
if(e_Long_TSandnote_Long_SL)
strategy.exit("LongTP&TS","GoLong",stop=long_T_stop)
else
if(e_Long_SLandnote_Long_TS)
strategy.exit("LongTP&TS","GoLong",stop=long_SL)

//StrategyShortEntry
ifgoShortandnotInTrade
strategy.entry("GoShort",long=strategy.short,comment="GoShort",alert_message="OpenShortPosition")
ifshortTradeandclose_S
strategy.close("GoShort",comment="CloseShort",alert_message="CloseShortPosition")
ife_Short_TP//AlgorithmforEnabledShortPositionProfitLossParameters
if(e_Short_TSandnote_Short_SL)
strategy.exit("ShortTP&TS","GoShort",limit=short_TP,stop=short_T_stop)
else
if(e_Short_SLandnote_Short_TS)
strategy.exit("ShortTP&SL","GoShort",limit=short_TP,stop=short_SL)
else
strategy.exit("ShortTP&TS","GoShort",limit=short_TP)
else
ifnote_Short_TP
if(e_Short_TSandnote_Short_SL)
strategy.exit("ShortTS","GoShort",stop=short_T_stop)
else
if(e_Short_SLandnote_Short_TS)
strategy.exit("ShortSL","GoShort",stop=short_SL)
//LongPositionProfitandLossPlotting
plot(longTradeande_Long_TPandlong_TP?long_TP:na,title="TPLevel",color=color.green,style=plot.style_linebr,linewidth=2)
plot(longTradeande_Long_SLandlong_SLandnote_Long_TS?long_SL:na,title="SLLevel",color=color.red,style=plot.style_linebr,linewidth=2)
plot(longTradeande_Long_TSandlong_T_stopandnote_Long_SL?long_T_stop:na,title="TSLevel",color=color.red,style=plot.style_linebr,linewidth=2)
//ShortPositionProfitandLossPlotting
plot(shortTradeande_Short_TPandshort_TP?short_TP:na,title="TPLevel",color=color.green,style=plot.style_linebr,linewidth=2)
plot(shortTradeande_Short_SLandshort_SLandnote_Short_TS?short_SL:na,title="SLLevel",color=color.red,style=plot.style_linebr,linewidth=2)
plot(shortTradeande_Short_TSandshort_T_stopandnote_Short_SL?short_T_stop:na,title="TSLevel",color=color.red,style=plot.style_linebr,linewidth=2)
Expand (184 lines)
